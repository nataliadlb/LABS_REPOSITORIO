

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 08 23:15:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  008F                     	;# 
   367  0090                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  009F                     	;# 
   385  0105                     	;# 
   386  0107                     	;# 
   387  0108                     	;# 
   388  0109                     	;# 
   389  010C                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  010E                     	;# 
   393  010F                     	;# 
   394  0185                     	;# 
   395  0187                     	;# 
   396  0188                     	;# 
   397  0189                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000D                     	;# 
   414  000E                     	;# 
   415  000E                     	;# 
   416  000F                     	;# 
   417  0010                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0013                     	;# 
   421  0014                     	;# 
   422  0015                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0017                     	;# 
   426  0018                     	;# 
   427  0019                     	;# 
   428  001A                     	;# 
   429  001B                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001D                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  0081                     	;# 
   436  0085                     	;# 
   437  0086                     	;# 
   438  0087                     	;# 
   439  0088                     	;# 
   440  0089                     	;# 
   441  008C                     	;# 
   442  008D                     	;# 
   443  008E                     	;# 
   444  008F                     	;# 
   445  0090                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0094                     	;# 
   452  0095                     	;# 
   453  0096                     	;# 
   454  0097                     	;# 
   455  0098                     	;# 
   456  0099                     	;# 
   457  009A                     	;# 
   458  009B                     	;# 
   459  009C                     	;# 
   460  009D                     	;# 
   461  009E                     	;# 
   462  009F                     	;# 
   463  0105                     	;# 
   464  0107                     	;# 
   465  0108                     	;# 
   466  0109                     	;# 
   467  010C                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  0185                     	;# 
   473  0187                     	;# 
   474  0188                     	;# 
   475  0189                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  0000                     	;# 
   479  0001                     	;# 
   480  0002                     	;# 
   481  0003                     	;# 
   482  0004                     	;# 
   483  0005                     	;# 
   484  0006                     	;# 
   485  0007                     	;# 
   486  0008                     	;# 
   487  0009                     	;# 
   488  000A                     	;# 
   489  000B                     	;# 
   490  000C                     	;# 
   491  000D                     	;# 
   492  000E                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001D                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  0081                     	;# 
   514  0085                     	;# 
   515  0086                     	;# 
   516  0087                     	;# 
   517  0088                     	;# 
   518  0089                     	;# 
   519  008C                     	;# 
   520  008D                     	;# 
   521  008E                     	;# 
   522  008F                     	;# 
   523  0090                     	;# 
   524  0091                     	;# 
   525  0092                     	;# 
   526  0093                     	;# 
   527  0093                     	;# 
   528  0093                     	;# 
   529  0094                     	;# 
   530  0095                     	;# 
   531  0096                     	;# 
   532  0097                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009A                     	;# 
   536  009B                     	;# 
   537  009C                     	;# 
   538  009D                     	;# 
   539  009E                     	;# 
   540  009F                     	;# 
   541  0105                     	;# 
   542  0107                     	;# 
   543  0108                     	;# 
   544  0109                     	;# 
   545  010C                     	;# 
   546  010C                     	;# 
   547  010D                     	;# 
   548  010E                     	;# 
   549  010F                     	;# 
   550  0185                     	;# 
   551  0187                     	;# 
   552  0188                     	;# 
   553  0189                     	;# 
   554  018C                     	;# 
   555  018D                     	;# 
   556                           
   557                           	psect	idataBANK0
   558  0F6E                     __pidataBANK0:
   559                           
   560                           ;initializer for _Date
   561  0F6E  3444               	retlw	68
   562  0F6F  3441               	retlw	65
   563  0F70  3454               	retlw	84
   564  0F71  3445               	retlw	69
   565  0F72  343A               	retlw	58
   566  0F73  3420               	retlw	32
   567  0F74  3430               	retlw	48
   568  0F75  3430               	retlw	48
   569  0F76  342F               	retlw	47
   570  0F77  3430               	retlw	48
   571  0F78  3430               	retlw	48
   572  0F79  342F               	retlw	47
   573  0F7A  3430               	retlw	48
   574  0F7B  3430               	retlw	48
   575  0F7C  3400               	retlw	0
   576                           
   577                           	psect	idataBANK1
   578  0F5F                     __pidataBANK1:
   579                           
   580                           ;initializer for _Time
   581  0F5F  3454               	retlw	84
   582  0F60  3449               	retlw	73
   583  0F61  344D               	retlw	77
   584  0F62  3445               	retlw	69
   585  0F63  343A               	retlw	58
   586  0F64  3420               	retlw	32
   587  0F65  3430               	retlw	48
   588  0F66  3430               	retlw	48
   589  0F67  343A               	retlw	58
   590  0F68  3430               	retlw	48
   591  0F69  3430               	retlw	48
   592  0F6A  343A               	retlw	58
   593  0F6B  3430               	retlw	48
   594  0F6C  3430               	retlw	48
   595  0F6D  3400               	retlw	0
   596                           
   597                           	psect	strings
   598  079B                     __pstrings:
   599  079B                     stringtab:
   600  079B                     __stringtab:
   601                           
   602                           ;	String table - string pointers are 1 byte each
   603  079B  1BFF               	btfsc	btemp+1,7
   604  079C  2FA5               	ljmp	stringcode
   605  079D  1383               	bcf	3,7
   606  079E  187F               	btfsc	btemp+1,0
   607  079F  1783               	bsf	3,7
   608  07A0  0800               	movf	0,w
   609  07A1  0A84               	incf	4,f
   610  07A2  1903               	skipnz
   611  07A3  0AFF               	incf	btemp+1,f
   612  07A4  0008               	return
   613  07A5                     stringcode:
   614  07A5                     stringdir:
   615  07A5  3007               	movlw	high stringdir
   616  07A6  008A               	movwf	10
   617  07A7  0804               	movf	4,w
   618  07A8  0A84               	incf	4,f
   619  07A9  0782               	addwf	2,f
   620  07AA                     __stringbase:
   621  07AA  3400               	retlw	0
   622  07AB                     __end_of__stringtab:
   623  07AB                     _dpowers:
   624  07AB  3401               	retlw	1
   625  07AC  3400               	retlw	0
   626  07AD  340A               	retlw	10
   627  07AE  3400               	retlw	0
   628  07AF  3464               	retlw	100
   629  07B0  3400               	retlw	0
   630  07B1  34E8               	retlw	232
   631  07B2  3403               	retlw	3
   632  07B3  3410               	retlw	16
   633  07B4  3427               	retlw	39
   634  07B5                     __end_of_dpowers:
   635  0019                     _TXREG	set	25
   636  000B                     _INTCONbits	set	11
   637  0018                     _RCSTAbits	set	24
   638  0008                     _PORTDbits	set	8
   639  0009                     _PORTEbits	set	9
   640  0013                     _SSPBUF	set	19
   641  0014                     _SSPCON	set	20
   642  0009                     _PORTE	set	9
   643  0008                     _PORTD	set	8
   644  0007                     _PORTC	set	7
   645  0006                     _PORTB	set	6
   646  0005                     _PORTA	set	5
   647  0005                     _PORTAbits	set	5
   648  001A                     _RCREG	set	26
   649  000C                     _PIR1bits	set	12
   650  0065                     _RCIF	set	101
   651  0063                     _SSPIF	set	99
   652  005E                     _PEIE	set	94
   653  005F                     _GIE	set	95
   654  008C                     _PIE1bits	set	140
   655  0099                     _SPBRG	set	153
   656  009A                     _SPBRGH	set	154
   657  0098                     _TXSTAbits	set	152
   658  008F                     _OSCCONbits	set	143
   659  0091                     _SSPCON2bits	set	145
   660  0094                     _SSPSTAT	set	148
   661  0093                     _SSPADD	set	147
   662  0091                     _SSPCON2	set	145
   663  0089                     _TRISE	set	137
   664  0087                     _TRISCbits	set	135
   665  0086                     _TRISB	set	134
   666  0085                     _TRISA	set	133
   667  0088                     _TRISD	set	136
   668  04C1                     _TRMT	set	1217
   669  0463                     _SSPIE	set	1123
   670  043C                     _TRISC4	set	1084
   671  043B                     _TRISC3	set	1083
   672  0189                     _ANSELH	set	393
   673  0188                     _ANSEL	set	392
   674  07B5                     STR_1:
   675  07B5  3454               	retlw	84	;'T'
   676  07B6  3449               	retlw	73	;'I'
   677  07B7  344D               	retlw	77	;'M'
   678  07B8  3445               	retlw	69	;'E'
   679  07B9  343A               	retlw	58	;':'
   680  07BA  3400               	retlw	0
   681  07BB                     STR_2:
   682  07BB  3420               	retlw	32	;' '
   683  07BC  3420               	retlw	32	;' '
   684  07BD  3400               	retlw	0
   685  07BE                     STR_6:
   686  07BE  3425               	retlw	37	;'%'
   687  07BF  3464               	retlw	100	;'d'
   688  07C0  3400               	retlw	0
   689  07BB                     
   690                           	psect	cinit
   691  000F                     start_initialization:	
   692                           ; #config settings
   693                           
   694  000F                     __initialization:
   695                           
   696                           ; Initialize objects allocated to BANK1
   697  000F  1383               	bcf	3,7	;select IRP bank0
   698  0010  30DB               	movlw	low (__pdataBANK1+15)
   699  0011  00FD               	movwf	btemp+-1
   700  0012  300F               	movlw	high __pidataBANK1
   701  0013  00FE               	movwf	btemp
   702  0014  305F               	movlw	low __pidataBANK1
   703  0015  00FF               	movwf	btemp+1
   704  0016  30CC               	movlw	low __pdataBANK1
   705  0017  0084               	movwf	4
   706  0018  120A  158A  2781  120A  118A  	fcall	init_ram0
   707                           
   708                           ; Initialize objects allocated to BANK0
   709  001D  306E               	movlw	low (__pdataBANK0+15)
   710  001E  00FD               	movwf	btemp+-1
   711  001F  300F               	movlw	high __pidataBANK0
   712  0020  00FE               	movwf	btemp
   713  0021  306E               	movlw	low __pidataBANK0
   714  0022  00FF               	movwf	btemp+1
   715  0023  305F               	movlw	low __pdataBANK0
   716  0024  0084               	movwf	4
   717  0025  120A  158A  2781  120A  118A  	fcall	init_ram0
   718                           
   719                           ; Clear objects allocated to BANK1
   720  002A  30A0               	movlw	low __pbssBANK1
   721  002B  0084               	movwf	4
   722  002C  30CC               	movlw	low (__pbssBANK1+44)
   723  002D  120A  158A  2700  120A  118A  	fcall	clear_ram0
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0032  3020               	movlw	low __pbssBANK0
   727  0033  0084               	movwf	4
   728  0034  3046               	movlw	low (__pbssBANK0+38)
   729  0035  120A  158A  2700  120A  118A  	fcall	clear_ram0
   730                           
   731                           ; Clear objects allocated to COMMON
   732  003A  01F8               	clrf	__pbssCOMMON& (0+127)
   733  003B  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   734  003C  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   735  003D                     end_of_initialization:	
   736                           ;End of C runtime variable initialization code
   737                           
   738  003D                     __end_of__initialization:
   739  003D  0183               	clrf	3
   740  003E  120A  118A  2A3E   	ljmp	_main	;jump to C main() function
   741                           
   742                           	psect	bssCOMMON
   743  0078                     __pbssCOMMON:
   744  0078                     _data_recive:
   745  0078                     	ds	1
   746  0079                     _cont:
   747  0079                     	ds	1
   748  007A                     _i:
   749  007A                     	ds	1
   750                           
   751                           	psect	bssBANK0
   752  0020                     __pbssBANK0:
   753  0020                     _year:
   754  0020                     	ds	1
   755  0021                     _month:
   756  0021                     	ds	1
   757  0022                     _m_day:
   758  0022                     	ds	1
   759  0023                     _hour:
   760  0023                     	ds	1
   761  0024                     _minute:
   762  0024                     	ds	1
   763  0025                     _second:
   764  0025                     	ds	1
   765  0026                     _day_send:
   766  0026                     	ds	8
   767  002E                     _hour_send:
   768  002E                     	ds	8
   769  0036                     _min_send:
   770  0036                     	ds	8
   771  003E                     _sec_send:
   772  003E                     	ds	8
   773                           
   774                           	psect	dataBANK0
   775  005F                     __pdataBANK0:
   776  005F                     _Date:
   777  005F                     	ds	15
   778                           
   779                           	psect	bssBANK1
   780  00A0                     __pbssBANK1:
   781  00A0                     _data_total:
   782  00A0                     	ds	20
   783  00B4                     _cont_send:
   784  00B4                     	ds	8
   785  00BC                     _year_send:
   786  00BC                     	ds	8
   787  00C4                     _month_send:
   788  00C4                     	ds	8
   789                           
   790                           	psect	dataBANK1
   791  00CC                     __pdataBANK1:
   792  00CC                     _Time:
   793  00CC                     	ds	15
   794                           
   795                           	psect	inittext
   796  0F7D                     init_fetch0:	
   797                           ;	Called with low address in FSR and high address in W
   798                           
   799  0F7D  087E               	movf	btemp,w
   800  0F7E  008A               	movwf	10
   801  0F7F  087F               	movf	btemp+1,w
   802  0F80  0082               	movwf	2
   803  0F81                     init_ram0:	
   804                           ;Called with:
   805                           ;	high address of idata address in btemp 
   806                           ;	low address of idata address in btemp+1 
   807                           ;	low address of data in FSR
   808                           ;	high address + 1 of data in btemp-1
   809                           
   810  0F81  120A  158A  277D  120A  158A  	fcall	init_fetch0
   811  0F86  0080               	movwf	0
   812  0F87  0A84               	incf	4,f
   813  0F88  0804               	movf	4,w
   814  0F89  067D               	xorwf	btemp+-1,w
   815  0F8A  1903               	btfsc	3,2
   816  0F8B  3400               	retlw	0
   817  0F8C  0AFF               	incf	btemp+1,f
   818  0F8D  1903               	btfsc	3,2
   819  0F8E  0AFE               	incf	btemp,f
   820  0F8F  2F81               	goto	init_ram0
   821                           
   822                           	psect	clrtext
   823  0F00                     clear_ram0:	
   824                           ;	Called with FSR containing the base address, and
   825                           ;	W with the last address+1
   826                           
   827  0F00  0064               	clrwdt	;clear the watchdog before getting into this loop
   828  0F01                     clrloop0:
   829  0F01  0180               	clrf	0	;clear RAM location pointed to by FSR
   830  0F02  0A84               	incf	4,f	;increment pointer
   831  0F03  0604               	xorwf	4,w	;XOR with final address
   832  0F04  1903               	btfsc	3,2	;have we reached the end yet?
   833  0F05  3400               	retlw	0	;all done for this memory range, return
   834  0F06  0604               	xorwf	4,w	;XOR again to restore value
   835  0F07  2F01               	goto	clrloop0	;do the next byte
   836                           
   837                           	psect	cstackBANK1
   838  00DB                     __pcstackBANK1:
   839  00DB                     ??_main:
   840                           
   841                           ; 1 bytes @ 0x0
   842  00DB                     	ds	3
   843                           
   844                           	psect	cstackCOMMON
   845  0070                     __pcstackCOMMON:
   846  0070                     ?_setup:
   847  0070                     ?_Lcd_Init:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_Lcd_Clear:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_Write_to_RTC:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_I2C_Master_Start:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_I2C_Master_RepeatedStart:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_I2C_Master_Stop:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_RTC_display:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_Write_USART:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_Lcd_Write_String:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_USART_Init_BaudRate:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_USART_Init:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_USART_INTERRUPT:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_Lcd_Port:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_Lcd_Cmd:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_ISR:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ??_ISR:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_main:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_bcd_to_decimal:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_I2C_Master_Wait:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_Lcd_Write_Char:	
   905                           ; 1 bytes @ 0x0
   906                           
   907                           
   908                           ; 1 bytes @ 0x0
   909  0070                     	ds	3
   910  0073                     ??_I2C_Master_Start:
   911  0073                     ?_I2C_Master_Write:	
   912                           ; 1 bytes @ 0x3
   913                           
   914  0073                     ??_I2C_Master_RepeatedStart:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     ??_I2C_Master_Stop:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     ??_Write_USART:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0073                     ??_USART_Init_BaudRate:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0073                     ??_USART_Init:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0073                     ??_USART_INTERRUPT:	
   930                           ; 1 bytes @ 0x3
   931                           
   932  0073                     ??_Lcd_Port:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0073                     ??_I2C_Master_Wait:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0073                     ?___bmul:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0073                     ??___lldiv:	
   942                           ; 1 bytes @ 0x3
   943                           
   944  0073                     ?_I2C_Master_Read:	
   945                           ; 1 bytes @ 0x3
   946                           
   947  0073                     ?___awdiv:	
   948                           ; 2 bytes @ 0x3
   949                           
   950  0073                     ?___awmod:	
   951                           ; 2 bytes @ 0x3
   952                           
   953  0073                     ?___lwdiv:	
   954                           ; 2 bytes @ 0x3
   955                           
   956  0073                     Lcd_Port@a:	
   957                           ; 2 bytes @ 0x3
   958                           
   959  0073                     Write_USART@a:	
   960                           ; 1 bytes @ 0x3
   961                           
   962  0073                     ___bmul@multiplicand:	
   963                           ; 1 bytes @ 0x3
   964                           
   965  0073                     I2C_Master_Write@d:	
   966                           ; 1 bytes @ 0x3
   967                           
   968  0073                     I2C_Master_Read@a:	
   969                           ; 2 bytes @ 0x3
   970                           
   971  0073                     ___awdiv@divisor:	
   972                           ; 2 bytes @ 0x3
   973                           
   974  0073                     ___awmod@divisor:	
   975                           ; 2 bytes @ 0x3
   976                           
   977  0073                     ___lwdiv@divisor:	
   978                           ; 2 bytes @ 0x3
   979                           
   980                           
   981                           ; 2 bytes @ 0x3
   982  0073                     	ds	1
   983  0074                     ?_Write_USART_String:
   984  0074                     ??_I2C_Master_Init:	
   985                           ; 1 bytes @ 0x4
   986                           
   987  0074                     ??_Lcd_Cmd:	
   988                           ; 1 bytes @ 0x4
   989                           
   990  0074                     ??_Lcd_Write_Char:	
   991                           ; 1 bytes @ 0x4
   992                           
   993  0074                     ??___bmul:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  0074                     Write_USART_String@a:	
   997                           ; 1 bytes @ 0x4
   998                           
   999                           
  1000                           ; 2 bytes @ 0x4
  1001  0074                     	ds	1
  1002  0075                     ??_Write_to_RTC:
  1003  0075                     ??_I2C_Master_Write:	
  1004                           ; 1 bytes @ 0x5
  1005                           
  1006  0075                     ??_I2C_Master_Read:	
  1007                           ; 1 bytes @ 0x5
  1008                           
  1009  0075                     Lcd_Write_Char@a:	
  1010                           ; 1 bytes @ 0x5
  1011                           
  1012  0075                     ___bmul@product:	
  1013                           ; 1 bytes @ 0x5
  1014                           
  1015  0075                     ___awdiv@dividend:	
  1016                           ; 1 bytes @ 0x5
  1017                           
  1018  0075                     ___awmod@dividend:	
  1019                           ; 2 bytes @ 0x5
  1020                           
  1021  0075                     ___lwdiv@dividend:	
  1022                           ; 2 bytes @ 0x5
  1023                           
  1024                           
  1025                           ; 2 bytes @ 0x5
  1026  0075                     	ds	1
  1027  0076                     ??_Write_USART_String:
  1028  0076                     ??_Lcd_Write_String:	
  1029                           ; 1 bytes @ 0x6
  1030                           
  1031  0076                     Lcd_Cmd@a:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  0076                     ___bmul@multiplier:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037                           
  1038                           ; 1 bytes @ 0x6
  1039  0076                     	ds	1
  1040  0077                     ??_Lcd_Clear:
  1041  0077                     ?_Lcd_Set_Cursor:	
  1042                           ; 1 bytes @ 0x7
  1043                           
  1044  0077                     ??___awdiv:	
  1045                           ; 1 bytes @ 0x7
  1046                           
  1047  0077                     ??___awmod:	
  1048                           ; 1 bytes @ 0x7
  1049                           
  1050  0077                     ??___lwdiv:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053  0077                     bcd_to_decimal@number:	
  1054                           ; 1 bytes @ 0x7
  1055                           
  1056  0077                     Lcd_Set_Cursor@b:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  0077                     Write_USART_String@i:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x7
  1064  0077                     	ds	1
  1065  0078                     ??_setup:
  1066                           
  1067                           	psect	cstackBANK0
  1068  0046                     __pcstackBANK0:	
  1069                           ; 1 bytes @ 0x8
  1070                           
  1071  0046                     ??_Lcd_Init:
  1072  0046                     ??_Lcd_Set_Cursor:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0046                     ??_bcd_to_decimal:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0046                     ?___lldiv:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0046                     ___awdiv@counter:	
  1082                           ; 4 bytes @ 0x0
  1083                           
  1084  0046                     ___awmod@counter:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0046                     ___lwdiv@counter:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090  0046                     I2C_Master_Read@temp:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093  0046                     Lcd_Write_String@i:	
  1094                           ; 2 bytes @ 0x0
  1095                           
  1096  0046                     ___lldiv@divisor:	
  1097                           ; 2 bytes @ 0x0
  1098                           
  1099                           
  1100                           ; 4 bytes @ 0x0
  1101  0046                     	ds	1
  1102  0047                     Lcd_Set_Cursor@a:
  1103  0047                     ___awdiv@sign:	
  1104                           ; 1 bytes @ 0x1
  1105                           
  1106  0047                     ___awmod@sign:	
  1107                           ; 1 bytes @ 0x1
  1108                           
  1109  0047                     ___lwdiv@quotient:	
  1110                           ; 1 bytes @ 0x1
  1111                           
  1112                           
  1113                           ; 2 bytes @ 0x1
  1114  0047                     	ds	1
  1115  0048                     Lcd_Set_Cursor@temp:
  1116  0048                     Lcd_Write_String@a:	
  1117                           ; 1 bytes @ 0x2
  1118                           
  1119  0048                     ___awdiv@quotient:	
  1120                           ; 1 bytes @ 0x2
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x2
  1124  0048                     	ds	1
  1125  0049                     ?___lwmod:
  1126  0049                     ___lwmod@divisor:	
  1127                           ; 2 bytes @ 0x3
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0x3
  1131  0049                     	ds	1
  1132  004A                     ___lldiv@dividend:
  1133                           
  1134                           ; 4 bytes @ 0x4
  1135  004A                     	ds	1
  1136  004B                     ___lwmod@dividend:
  1137                           
  1138                           ; 2 bytes @ 0x5
  1139  004B                     	ds	2
  1140  004D                     ??___lwmod:
  1141                           
  1142                           ; 1 bytes @ 0x7
  1143  004D                     	ds	1
  1144  004E                     ___lwmod@counter:
  1145  004E                     ___lldiv@quotient:	
  1146                           ; 1 bytes @ 0x8
  1147                           
  1148                           
  1149                           ; 4 bytes @ 0x8
  1150  004E                     	ds	1
  1151  004F                     ?_sprintf:
  1152  004F                     sprintf@f:	
  1153                           ; 2 bytes @ 0x9
  1154                           
  1155                           
  1156                           ; 1 bytes @ 0x9
  1157  004F                     	ds	3
  1158  0052                     ??_sprintf:
  1159  0052                     ___lldiv@counter:	
  1160                           ; 1 bytes @ 0xC
  1161                           
  1162                           
  1163                           ; 1 bytes @ 0xC
  1164  0052                     	ds	1
  1165  0053                     ?_I2C_Master_Init:
  1166  0053                     I2C_Master_Init@c:	
  1167                           ; 1 bytes @ 0xD
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0xD
  1171  0053                     	ds	2
  1172  0055                     sprintf@ap:
  1173                           
  1174                           ; 1 bytes @ 0xF
  1175  0055                     	ds	1
  1176  0056                     sprintf@flag:
  1177                           
  1178                           ; 1 bytes @ 0x10
  1179  0056                     	ds	1
  1180  0057                     sprintf@prec:
  1181                           
  1182                           ; 1 bytes @ 0x11
  1183  0057                     	ds	1
  1184  0058                     sprintf@val:
  1185                           
  1186                           ; 2 bytes @ 0x12
  1187  0058                     	ds	2
  1188  005A                     sprintf@sp:
  1189                           
  1190                           ; 1 bytes @ 0x14
  1191  005A                     	ds	1
  1192  005B                     sprintf@c:
  1193                           
  1194                           ; 1 bytes @ 0x15
  1195  005B                     	ds	1
  1196  005C                     ??_RTC_display:
  1197                           
  1198                           ; 1 bytes @ 0x16
  1199  005C                     	ds	3
  1200                           
  1201                           	psect	maintext
  1202  023E                     __pmaintext:	
  1203 ;;
  1204 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1205 ;;
  1206 ;; *************** function _main *****************
  1207 ;; Defined at:
  1208 ;;		line 120 in file "main_prueba3_mini2.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : B00/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          0       0       3       0       0
  1225 ;;      Totals:         0       0       3       0       0
  1226 ;;Total ram usage:        3 bytes
  1227 ;; Hardware stack levels required when called:    5
  1228 ;; This function calls:
  1229 ;;		_I2C_Master_Read
  1230 ;;		_I2C_Master_RepeatedStart
  1231 ;;		_I2C_Master_Start
  1232 ;;		_I2C_Master_Stop
  1233 ;;		_I2C_Master_Write
  1234 ;;		_Lcd_Clear
  1235 ;;		_Lcd_Init
  1236 ;;		_RTC_display
  1237 ;;		_Write_USART
  1238 ;;		_Write_USART_String
  1239 ;;		_Write_to_RTC
  1240 ;;		_setup
  1241 ;; This function is called by:
  1242 ;;		Startup code after reset
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _main
  1248  023E                     _main:
  1249  023E                     l2301:	
  1250                           ;incstack = 0
  1251                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1252                           
  1253                           
  1254                           ;main_prueba3_mini2.c: 121:     setup();
  1255  023E  120A  118A  270F  120A  118A  	fcall	_setup
  1256  0243                     l2303:
  1257                           
  1258                           ;main_prueba3_mini2.c: 122:     TRISD = 0x00;
  1259  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0245  0188               	clrf	8	;volatile
  1262  0246                     l2305:
  1263                           
  1264                           ;main_prueba3_mini2.c: 123:     Lcd_Init();
  1265  0246  120A  118A  25D1  120A  118A  	fcall	_Lcd_Init
  1266  024B                     l2307:
  1267                           
  1268                           ;main_prueba3_mini2.c: 124:     Lcd_Clear();
  1269  024B  120A  158A  2752  120A  118A  	fcall	_Lcd_Clear
  1270  0250                     l2309:
  1271                           
  1272                           ;main_prueba3_mini2.c: 125:     Write_to_RTC();
  1273  0250  120A  118A  2577  120A  118A  	fcall	_Write_to_RTC
  1274  0255                     l2311:
  1275                           
  1276                           ;main_prueba3_mini2.c: 131:         I2C_Master_Start();
  1277  0255  120A  158A  2711  120A  118A  	fcall	_I2C_Master_Start
  1278  025A                     l2313:
  1279                           
  1280                           ;main_prueba3_mini2.c: 132:         I2C_Master_Write(0xD0);
  1281  025A  30D0               	movlw	208
  1282  025B  00F3               	movwf	I2C_Master_Write@d
  1283  025C  3000               	movlw	0
  1284  025D  00F4               	movwf	I2C_Master_Write@d+1
  1285  025E  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  1286  0263                     l2315:
  1287                           
  1288                           ;main_prueba3_mini2.c: 133:         I2C_Master_Write(0);
  1289  0263  3000               	movlw	0
  1290  0264  00F3               	movwf	I2C_Master_Write@d
  1291  0265  00F4               	movwf	I2C_Master_Write@d+1
  1292  0266  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  1293  026B                     l2317:
  1294                           
  1295                           ;main_prueba3_mini2.c: 134:         I2C_Master_RepeatedStart();
  1296  026B  120A  158A  2708  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1297  0270                     l2319:
  1298                           
  1299                           ;main_prueba3_mini2.c: 135:         I2C_Master_Write(0xD1);
  1300  0270  30D1               	movlw	209
  1301  0271  00F3               	movwf	I2C_Master_Write@d
  1302  0272  3000               	movlw	0
  1303  0273  00F4               	movwf	I2C_Master_Write@d+1
  1304  0274  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  1305  0279                     l2321:
  1306                           
  1307                           ;main_prueba3_mini2.c: 136:         second = I2C_Master_Read(1);
  1308  0279  3001               	movlw	1
  1309  027A  00F3               	movwf	I2C_Master_Read@a
  1310  027B  3000               	movlw	0
  1311  027C  00F4               	movwf	I2C_Master_Read@a+1
  1312  027D  120A  118A  2740  120A  118A  	fcall	_I2C_Master_Read
  1313  0282  0873               	movf	?_I2C_Master_Read,w
  1314  0283  1683               	bsf	3,5	;RP0=1, select bank1
  1315  0284  1303               	bcf	3,6	;RP1=0, select bank1
  1316  0285  00DB               	movwf	??_main^(0+128)
  1317  0286  085B               	movf	??_main^(0+128),w
  1318  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0289  00A5               	movwf	_second
  1321  028A                     l2323:
  1322                           
  1323                           ;main_prueba3_mini2.c: 137:         minute = I2C_Master_Read(1);
  1324  028A  3001               	movlw	1
  1325  028B  00F3               	movwf	I2C_Master_Read@a
  1326  028C  3000               	movlw	0
  1327  028D  00F4               	movwf	I2C_Master_Read@a+1
  1328  028E  120A  118A  2740  120A  118A  	fcall	_I2C_Master_Read
  1329  0293  0873               	movf	?_I2C_Master_Read,w
  1330  0294  1683               	bsf	3,5	;RP0=1, select bank1
  1331  0295  1303               	bcf	3,6	;RP1=0, select bank1
  1332  0296  00DB               	movwf	??_main^(0+128)
  1333  0297  085B               	movf	??_main^(0+128),w
  1334  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1336  029A  00A4               	movwf	_minute
  1337  029B                     l2325:
  1338                           
  1339                           ;main_prueba3_mini2.c: 138:         hour = I2C_Master_Read(1);
  1340  029B  3001               	movlw	1
  1341  029C  00F3               	movwf	I2C_Master_Read@a
  1342  029D  3000               	movlw	0
  1343  029E  00F4               	movwf	I2C_Master_Read@a+1
  1344  029F  120A  118A  2740  120A  118A  	fcall	_I2C_Master_Read
  1345  02A4  0873               	movf	?_I2C_Master_Read,w
  1346  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  1347  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  1348  02A7  00DB               	movwf	??_main^(0+128)
  1349  02A8  085B               	movf	??_main^(0+128),w
  1350  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1351  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1352  02AB  00A3               	movwf	_hour
  1353  02AC                     l2327:
  1354                           
  1355                           ;main_prueba3_mini2.c: 139:         I2C_Master_Read(1);
  1356  02AC  3001               	movlw	1
  1357  02AD  00F3               	movwf	I2C_Master_Read@a
  1358  02AE  3000               	movlw	0
  1359  02AF  00F4               	movwf	I2C_Master_Read@a+1
  1360  02B0  120A  118A  2740  120A  118A  	fcall	_I2C_Master_Read
  1361  02B5                     l2329:
  1362                           
  1363                           ;main_prueba3_mini2.c: 140:         m_day = I2C_Master_Read(1);
  1364  02B5  3001               	movlw	1
  1365  02B6  00F3               	movwf	I2C_Master_Read@a
  1366  02B7  3000               	movlw	0
  1367  02B8  00F4               	movwf	I2C_Master_Read@a+1
  1368  02B9  120A  118A  2740  120A  118A  	fcall	_I2C_Master_Read
  1369  02BE  0873               	movf	?_I2C_Master_Read,w
  1370  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1371  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1372  02C1  00DB               	movwf	??_main^(0+128)
  1373  02C2  085B               	movf	??_main^(0+128),w
  1374  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1375  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1376  02C5  00A2               	movwf	_m_day
  1377  02C6                     l2331:
  1378                           
  1379                           ;main_prueba3_mini2.c: 141:         month = I2C_Master_Read(1);
  1380  02C6  3001               	movlw	1
  1381  02C7  00F3               	movwf	I2C_Master_Read@a
  1382  02C8  3000               	movlw	0
  1383  02C9  00F4               	movwf	I2C_Master_Read@a+1
  1384  02CA  120A  118A  2740  120A  118A  	fcall	_I2C_Master_Read
  1385  02CF  0873               	movf	?_I2C_Master_Read,w
  1386  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1387  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  1388  02D2  00DB               	movwf	??_main^(0+128)
  1389  02D3  085B               	movf	??_main^(0+128),w
  1390  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1391  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1392  02D6  00A1               	movwf	_month
  1393  02D7                     l2333:
  1394                           
  1395                           ;main_prueba3_mini2.c: 142:         year = I2C_Master_Read(0);
  1396  02D7  3000               	movlw	0
  1397  02D8  00F3               	movwf	I2C_Master_Read@a
  1398  02D9  00F4               	movwf	I2C_Master_Read@a+1
  1399  02DA  120A  118A  2740  120A  118A  	fcall	_I2C_Master_Read
  1400  02DF  0873               	movf	?_I2C_Master_Read,w
  1401  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  1402  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  1403  02E2  00DB               	movwf	??_main^(0+128)
  1404  02E3  085B               	movf	??_main^(0+128),w
  1405  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1406  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1407  02E6  00A0               	movwf	_year
  1408  02E7                     l2335:
  1409                           
  1410                           ;main_prueba3_mini2.c: 143:         I2C_Master_Stop();
  1411  02E7  120A  158A  271A  120A  118A  	fcall	_I2C_Master_Stop
  1412  02EC                     l2337:
  1413                           
  1414                           ;main_prueba3_mini2.c: 145:         RTC_display();
  1415  02EC  120A  118A  2041  120A  118A  	fcall	_RTC_display
  1416  02F1                     l2339:
  1417                           
  1418                           ;main_prueba3_mini2.c: 152:         Write_USART_String("TIME:");
  1419  02F1  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1420  02F2  00F4               	movwf	Write_USART_String@a
  1421  02F3  3080               	movlw	128
  1422  02F4  00F5               	movwf	Write_USART_String@a+1
  1423  02F5  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1424  02FA                     l2341:
  1425                           
  1426                           ;main_prueba3_mini2.c: 153:         Write_USART_String("  ");
  1427  02FA  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1428  02FB  00F4               	movwf	Write_USART_String@a
  1429  02FC  3080               	movlw	128
  1430  02FD  00F5               	movwf	Write_USART_String@a+1
  1431  02FE  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1432  0303                     l2343:
  1433                           
  1434                           ;main_prueba3_mini2.c: 154:         Write_USART_String(hour_send);
  1435  0303  302E               	movlw	(low (_hour_send| 0))& (0+255)
  1436  0304  00F4               	movwf	Write_USART_String@a
  1437  0305  3000               	movlw	0
  1438  0306  00F5               	movwf	Write_USART_String@a+1
  1439  0307  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1440  030C                     l2345:
  1441                           
  1442                           ;main_prueba3_mini2.c: 155:         Write_USART_String(":");
  1443  030C  300F               	movlw	(low (((STR_1+4)-__stringbase)| (0+32768)))& (0+255)
  1444  030D  00F4               	movwf	Write_USART_String@a
  1445  030E  3080               	movlw	128
  1446  030F  00F5               	movwf	Write_USART_String@a+1
  1447  0310  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1448  0315                     l2347:
  1449                           
  1450                           ;main_prueba3_mini2.c: 156:         Write_USART_String(min_send);
  1451  0315  3036               	movlw	(low (_min_send| 0))& (0+255)
  1452  0316  00F4               	movwf	Write_USART_String@a
  1453  0317  3000               	movlw	0
  1454  0318  00F5               	movwf	Write_USART_String@a+1
  1455  0319  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1456  031E                     l2349:
  1457                           
  1458                           ;main_prueba3_mini2.c: 157:         Write_USART_String(":");
  1459  031E  300F               	movlw	(low (((STR_1+4)-__stringbase)| (0+32768)))& (0+255)
  1460  031F  00F4               	movwf	Write_USART_String@a
  1461  0320  3080               	movlw	128
  1462  0321  00F5               	movwf	Write_USART_String@a+1
  1463  0322  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1464  0327                     l2351:
  1465                           
  1466                           ;main_prueba3_mini2.c: 158:         Write_USART_String(sec_send);
  1467  0327  303E               	movlw	(low (_sec_send| 0))& (0+255)
  1468  0328  00F4               	movwf	Write_USART_String@a
  1469  0329  3000               	movlw	0
  1470  032A  00F5               	movwf	Write_USART_String@a+1
  1471  032B  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1472  0330                     l2353:
  1473                           
  1474                           ;main_prueba3_mini2.c: 159:         Write_USART_String("  ");
  1475  0330  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1476  0331  00F4               	movwf	Write_USART_String@a
  1477  0332  3080               	movlw	128
  1478  0333  00F5               	movwf	Write_USART_String@a+1
  1479  0334  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1480  0339                     l2355:
  1481                           
  1482                           ;main_prueba3_mini2.c: 160:         Write_USART_String(Date);
  1483  0339  305F               	movlw	(low (_Date| 0))& (0+255)
  1484  033A  00F4               	movwf	Write_USART_String@a
  1485  033B  3000               	movlw	0
  1486  033C  00F5               	movwf	Write_USART_String@a+1
  1487  033D  120A  118A  2770  120A  118A  	fcall	_Write_USART_String
  1488  0342                     l2357:
  1489                           
  1490                           ;main_prueba3_mini2.c: 161:         Write_USART(13);
  1491  0342  300D               	movlw	13
  1492  0343  120A  158A  272D  120A  118A  	fcall	_Write_USART
  1493  0348                     l2359:
  1494                           
  1495                           ;main_prueba3_mini2.c: 162:         Write_USART(10);
  1496  0348  300A               	movlw	10
  1497  0349  120A  158A  272D  120A  118A  	fcall	_Write_USART
  1498  034E                     l2361:
  1499                           
  1500                           ;main_prueba3_mini2.c: 174:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1501  034E  3002               	movlw	2
  1502  034F  1683               	bsf	3,5	;RP0=1, select bank1
  1503  0350  1303               	bcf	3,6	;RP1=0, select bank1
  1504  0351  00DD               	movwf	(??_main^(0+128)+2)
  1505  0352  3004               	movlw	4
  1506  0353  00DC               	movwf	(??_main^(0+128)+1)
  1507  0354  30B9               	movlw	185
  1508  0355  00DB               	movwf	??_main^(0+128)
  1509  0356                     u1667:
  1510  0356  0BDB               	decfsz	??_main^(0+128),f
  1511  0357  2B56               	goto	u1667
  1512  0358  0BDC               	decfsz	(??_main^(0+128)+1),f
  1513  0359  2B56               	goto	u1667
  1514  035A  0BDD               	decfsz	(??_main^(0+128)+2),f
  1515  035B  2B56               	goto	u1667
  1516  035C  2B5D               	nop2
  1517  035D  2A55               	goto	l2311
  1518  035E  120A  118A  280C   	ljmp	start
  1519  0361                     __end_of_main:
  1520                           
  1521                           	psect	text1
  1522  070F                     __ptext1:	
  1523 ;; *************** function _setup *****************
  1524 ;; Defined at:
  1525 ;;		line 248 in file "main_prueba3_mini2.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, pclath, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0
  1542 ;;      Totals:         0       0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    3
  1546 ;; This function calls:
  1547 ;;		_I2C_Master_Init
  1548 ;;		_USART_INTERRUPT
  1549 ;;		_USART_Init
  1550 ;;		_USART_Init_BaudRate
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _setup
  1558  070F                     _setup:
  1559  070F                     l2219:	
  1560                           ;incstack = 0
  1561                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1562                           
  1563                           
  1564                           ;main_prueba3_mini2.c: 250:     ANSEL = 0;
  1565  070F  1683               	bsf	3,5	;RP0=1, select bank3
  1566  0710  1703               	bsf	3,6	;RP1=1, select bank3
  1567  0711  0188               	clrf	8	;volatile
  1568                           
  1569                           ;main_prueba3_mini2.c: 251:     ANSELH = 0;
  1570  0712  0189               	clrf	9	;volatile
  1571                           
  1572                           ;main_prueba3_mini2.c: 252:     TRISA = 0;
  1573  0713  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0714  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0715  0185               	clrf	5	;volatile
  1576  0716                     l2221:
  1577                           
  1578                           ;main_prueba3_mini2.c: 253:     TRISB = 0b00000011;
  1579  0716  3003               	movlw	3
  1580  0717  0086               	movwf	6	;volatile
  1581  0718                     l2223:
  1582                           
  1583                           ;main_prueba3_mini2.c: 254:     TRISCbits.TRISC6 = 0;
  1584  0718  1307               	bcf	7,6	;volatile
  1585  0719                     l2225:
  1586                           
  1587                           ;main_prueba3_mini2.c: 255:     TRISCbits.TRISC7 = 1;
  1588  0719  1787               	bsf	7,7	;volatile
  1589  071A                     l2227:
  1590                           
  1591                           ;main_prueba3_mini2.c: 256:     TRISD = 0;
  1592  071A  0188               	clrf	8	;volatile
  1593  071B                     l2229:
  1594                           
  1595                           ;main_prueba3_mini2.c: 257:     TRISE = 0;
  1596  071B  0189               	clrf	9	;volatile
  1597  071C                     l2231:
  1598                           
  1599                           ;main_prueba3_mini2.c: 258:     PORTA = 0;
  1600  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1601  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1602  071E  0185               	clrf	5	;volatile
  1603  071F                     l2233:
  1604                           
  1605                           ;main_prueba3_mini2.c: 259:     PORTB = 0;
  1606  071F  0186               	clrf	6	;volatile
  1607  0720                     l2235:
  1608                           
  1609                           ;main_prueba3_mini2.c: 260:     PORTC = 0;
  1610  0720  0187               	clrf	7	;volatile
  1611  0721                     l2237:
  1612                           
  1613                           ;main_prueba3_mini2.c: 261:     PORTD = 0;
  1614  0721  0188               	clrf	8	;volatile
  1615  0722                     l2239:
  1616                           
  1617                           ;main_prueba3_mini2.c: 262:     PORTE = 0;
  1618  0722  0189               	clrf	9	;volatile
  1619  0723                     l2241:
  1620                           
  1621                           ;main_prueba3_mini2.c: 263:     I2C_Master_Init(100000);
  1622  0723  3000               	movlw	0
  1623  0724  00D6               	movwf	I2C_Master_Init@c+3
  1624  0725  3001               	movlw	1
  1625  0726  00D5               	movwf	I2C_Master_Init@c+2
  1626  0727  3086               	movlw	134
  1627  0728  00D4               	movwf	I2C_Master_Init@c+1
  1628  0729  30A0               	movlw	160
  1629  072A  00D3               	movwf	I2C_Master_Init@c
  1630  072B  120A  118A  26A3  120A  118A  	fcall	_I2C_Master_Init
  1631  0730                     l2243:
  1632                           
  1633                           ;main_prueba3_mini2.c: 264:     USART_Init_BaudRate();
  1634  0730  120A  158A  26FA  120A  118A  	fcall	_USART_Init_BaudRate
  1635  0735                     l2245:
  1636                           
  1637                           ;main_prueba3_mini2.c: 265:     USART_Init();
  1638  0735  120A  158A  2739  120A  118A  	fcall	_USART_Init
  1639  073A                     l2247:
  1640                           
  1641                           ;main_prueba3_mini2.c: 266:     USART_INTERRUPT();
  1642  073A  120A  158A  26F4  120A  118A  	fcall	_USART_INTERRUPT
  1643  073F                     l144:
  1644  073F  0008               	return
  1645  0740                     __end_of_setup:
  1646                           
  1647                           	psect	text2
  1648  0EFA                     __ptext2:	
  1649 ;; *************** function _USART_Init_BaudRate *****************
  1650 ;; Defined at:
  1651 ;;		line 19 in file "USART.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_setup
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _USART_Init_BaudRate
  1681  0EFA                     _USART_Init_BaudRate:
  1682  0EFA                     l1727:	
  1683                           ;incstack = 0
  1684                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1685                           
  1686                           
  1687                           ;USART.c: 20:     SPBRGH = 0;
  1688  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0EFC  019A               	clrf	26	;volatile
  1691  0EFD                     l1729:
  1692                           
  1693                           ;USART.c: 21:     SPBRG = 12;
  1694  0EFD  300C               	movlw	12
  1695  0EFE  0099               	movwf	25	;volatile
  1696  0EFF                     l292:
  1697  0EFF  0008               	return
  1698  0F00                     __end_of_USART_Init_BaudRate:
  1699                           
  1700                           	psect	text3
  1701  0F39                     __ptext3:	
  1702 ;; *************** function _USART_Init *****************
  1703 ;; Defined at:
  1704 ;;		line 8 in file "USART.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		status,2
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    1
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_setup
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _USART_Init
  1734  0F39                     _USART_Init:
  1735  0F39                     l1731:	
  1736                           ;incstack = 0
  1737                           ; Regs used in _USART_Init: [status,2]
  1738                           
  1739                           
  1740                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1741  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0F3B  1798               	bsf	24,7	;volatile
  1744                           
  1745                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  1746  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0F3E  1218               	bcf	24,4	;volatile
  1749                           
  1750                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  1751  0F3F  1698               	bsf	24,5	;volatile
  1752                           
  1753                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1754  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0F42  1618               	bsf	24,4	;volatile
  1757  0F43                     l1733:
  1758                           
  1759                           ;USART.c: 16:     RCREG = 0;
  1760  0F43  019A               	clrf	26	;volatile
  1761  0F44                     l289:
  1762  0F44  0008               	return
  1763  0F45                     __end_of_USART_Init:
  1764                           
  1765                           	psect	text4
  1766  0EF4                     __ptext4:	
  1767 ;; *************** function _USART_INTERRUPT *****************
  1768 ;; Defined at:
  1769 ;;		line 24 in file "USART.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_setup
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _USART_INTERRUPT
  1799  0EF4                     _USART_INTERRUPT:
  1800  0EF4                     l1735:	
  1801                           ;incstack = 0
  1802                           ; Regs used in _USART_INTERRUPT: []
  1803                           
  1804                           
  1805                           ;USART.c: 25:     INTCONbits.GIE = 1;
  1806  0EF4  178B               	bsf	11,7	;volatile
  1807                           
  1808                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  1809  0EF5  170B               	bsf	11,6	;volatile
  1810                           
  1811                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  1812  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  1813  0EF7  1303               	bcf	3,6	;RP1=0, select bank1
  1814  0EF8  168C               	bsf	12,5	;volatile
  1815  0EF9                     l295:
  1816  0EF9  0008               	return
  1817  0EFA                     __end_of_USART_INTERRUPT:
  1818                           
  1819                           	psect	text5
  1820  06A3                     __ptext5:	
  1821 ;; *************** function _I2C_Master_Init *****************
  1822 ;; Defined at:
  1823 ;;		line 21 in file "I2C.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  c               4   13[BANK0 ] const unsigned long 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       4       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          4       0       0       0       0
  1840 ;;      Totals:         4       4       0       0       0
  1841 ;;Total ram usage:        8 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    2
  1844 ;; This function calls:
  1845 ;;		___lldiv
  1846 ;; This function is called by:
  1847 ;;		_setup
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _I2C_Master_Init
  1853  06A3                     _I2C_Master_Init:
  1854  06A3                     l2169:	
  1855                           ;incstack = 0
  1856                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1857                           
  1858                           
  1859                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1860  06A3  3028               	movlw	40
  1861  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1862  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1863  06A6  0094               	movwf	20	;volatile
  1864  06A7                     l2171:
  1865                           
  1866                           ;I2C.c: 28:     SSPCON2 = 0;
  1867  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  1868  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  1869  06A9  0191               	clrf	17	;volatile
  1870  06AA                     l2173:
  1871                           
  1872                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1873  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1874  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1875  06AC  0853               	movf	I2C_Master_Init@c,w
  1876  06AD  00F4               	movwf	??_I2C_Master_Init
  1877  06AE  0854               	movf	I2C_Master_Init@c+1,w
  1878  06AF  00F5               	movwf	??_I2C_Master_Init+1
  1879  06B0  0855               	movf	I2C_Master_Init@c+2,w
  1880  06B1  00F6               	movwf	??_I2C_Master_Init+2
  1881  06B2  0856               	movf	I2C_Master_Init@c+3,w
  1882  06B3  00F7               	movwf	??_I2C_Master_Init+3
  1883  06B4  3002               	movlw	2
  1884  06B5                     u1555:
  1885  06B5  1003               	clrc
  1886  06B6  0DF4               	rlf	??_I2C_Master_Init,f
  1887  06B7  0DF5               	rlf	??_I2C_Master_Init+1,f
  1888  06B8  0DF6               	rlf	??_I2C_Master_Init+2,f
  1889  06B9  0DF7               	rlf	??_I2C_Master_Init+3,f
  1890  06BA                     u1550:
  1891  06BA  3EFF               	addlw	-1
  1892  06BB  1D03               	skipz
  1893  06BC  2EB5               	goto	u1555
  1894  06BD  0877               	movf	??_I2C_Master_Init+3,w
  1895  06BE  00C9               	movwf	___lldiv@divisor+3
  1896  06BF  0876               	movf	??_I2C_Master_Init+2,w
  1897  06C0  00C8               	movwf	___lldiv@divisor+2
  1898  06C1  0875               	movf	??_I2C_Master_Init+1,w
  1899  06C2  00C7               	movwf	___lldiv@divisor+1
  1900  06C3  0874               	movf	??_I2C_Master_Init,w
  1901  06C4  00C6               	movwf	___lldiv@divisor
  1902  06C5  3000               	movlw	0
  1903  06C6  00CD               	movwf	___lldiv@dividend+3
  1904  06C7  307A               	movlw	122
  1905  06C8  00CC               	movwf	___lldiv@dividend+2
  1906  06C9  3012               	movlw	18
  1907  06CA  00CB               	movwf	___lldiv@dividend+1
  1908  06CB  3000               	movlw	0
  1909  06CC  00CA               	movwf	___lldiv@dividend
  1910  06CD  120A  118A  24B4  120A  118A  	fcall	___lldiv
  1911  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1912  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1913  06D4  0846               	movf	?___lldiv,w
  1914  06D5  3EFF               	addlw	255
  1915  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  1916  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  1917  06D8  0093               	movwf	19	;volatile
  1918  06D9                     l2175:
  1919                           
  1920                           ;I2C.c: 36:     SSPSTAT = 0;
  1921  06D9  0194               	clrf	20	;volatile
  1922  06DA                     l2177:
  1923                           
  1924                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1925  06DA  1587               	bsf	7,3	;volatile
  1926  06DB                     l2179:
  1927                           
  1928                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1929  06DB  1607               	bsf	7,4	;volatile
  1930  06DC                     l173:
  1931  06DC  0008               	return
  1932  06DD                     __end_of_I2C_Master_Init:
  1933                           
  1934                           	psect	text6
  1935  04B4                     __ptext6:	
  1936 ;; *************** function ___lldiv *****************
  1937 ;; Defined at:
  1938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  divisor         4    0[BANK0 ] unsigned long 
  1941 ;;  dividend        4    4[BANK0 ] unsigned long 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  quotient        4    8[BANK0 ] unsigned long 
  1944 ;;  counter         1   12[BANK0 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  4    0[BANK0 ] unsigned long 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       8       0       0       0
  1955 ;;      Locals:         0       5       0       0       0
  1956 ;;      Temps:          1       0       0       0       0
  1957 ;;      Totals:         1      13       0       0       0
  1958 ;;Total ram usage:       14 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_I2C_Master_Init
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function ___lldiv
  1970  04B4                     ___lldiv:
  1971  04B4                     l2021:	
  1972                           ;incstack = 0
  1973                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1974                           
  1975  04B4  3000               	movlw	0
  1976  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1977  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1978  04B7  00D1               	movwf	___lldiv@quotient+3
  1979  04B8  3000               	movlw	0
  1980  04B9  00D0               	movwf	___lldiv@quotient+2
  1981  04BA  3000               	movlw	0
  1982  04BB  00CF               	movwf	___lldiv@quotient+1
  1983  04BC  3000               	movlw	0
  1984  04BD  00CE               	movwf	___lldiv@quotient
  1985  04BE  0849               	movf	___lldiv@divisor+3,w
  1986  04BF  0448               	iorwf	___lldiv@divisor+2,w
  1987  04C0  0447               	iorwf	___lldiv@divisor+1,w
  1988  04C1  0446               	iorwf	___lldiv@divisor,w
  1989  04C2  1903               	skipnz
  1990  04C3  2CC5               	goto	u1301
  1991  04C4  2CC6               	goto	u1300
  1992  04C5                     u1301:
  1993  04C5  2D13               	goto	l2041
  1994  04C6                     u1300:
  1995  04C6                     l2023:
  1996  04C6  01D2               	clrf	___lldiv@counter
  1997  04C7  0AD2               	incf	___lldiv@counter,f
  1998  04C8  2CD6               	goto	l2027
  1999  04C9                     l2025:
  2000  04C9  3001               	movlw	1
  2001  04CA  00F3               	movwf	??___lldiv
  2002  04CB                     u1315:
  2003  04CB  1003               	clrc
  2004  04CC  0DC6               	rlf	___lldiv@divisor,f
  2005  04CD  0DC7               	rlf	___lldiv@divisor+1,f
  2006  04CE  0DC8               	rlf	___lldiv@divisor+2,f
  2007  04CF  0DC9               	rlf	___lldiv@divisor+3,f
  2008  04D0  0BF3               	decfsz	??___lldiv,f
  2009  04D1  2CCB               	goto	u1315
  2010  04D2  3001               	movlw	1
  2011  04D3  00F3               	movwf	??___lldiv
  2012  04D4  0873               	movf	??___lldiv,w
  2013  04D5  07D2               	addwf	___lldiv@counter,f
  2014  04D6                     l2027:
  2015  04D6  1FC9               	btfss	___lldiv@divisor+3,7
  2016  04D7  2CD9               	goto	u1321
  2017  04D8  2CDA               	goto	u1320
  2018  04D9                     u1321:
  2019  04D9  2CC9               	goto	l2025
  2020  04DA                     u1320:
  2021  04DA                     l2029:
  2022  04DA  3001               	movlw	1
  2023  04DB  00F3               	movwf	??___lldiv
  2024  04DC                     u1335:
  2025  04DC  1003               	clrc
  2026  04DD  0DCE               	rlf	___lldiv@quotient,f
  2027  04DE  0DCF               	rlf	___lldiv@quotient+1,f
  2028  04DF  0DD0               	rlf	___lldiv@quotient+2,f
  2029  04E0  0DD1               	rlf	___lldiv@quotient+3,f
  2030  04E1  0BF3               	decfsz	??___lldiv,f
  2031  04E2  2CDC               	goto	u1335
  2032  04E3                     l2031:
  2033  04E3  0849               	movf	___lldiv@divisor+3,w
  2034  04E4  024D               	subwf	___lldiv@dividend+3,w
  2035  04E5  1D03               	skipz
  2036  04E6  2CF1               	goto	u1345
  2037  04E7  0848               	movf	___lldiv@divisor+2,w
  2038  04E8  024C               	subwf	___lldiv@dividend+2,w
  2039  04E9  1D03               	skipz
  2040  04EA  2CF1               	goto	u1345
  2041  04EB  0847               	movf	___lldiv@divisor+1,w
  2042  04EC  024B               	subwf	___lldiv@dividend+1,w
  2043  04ED  1D03               	skipz
  2044  04EE  2CF1               	goto	u1345
  2045  04EF  0846               	movf	___lldiv@divisor,w
  2046  04F0  024A               	subwf	___lldiv@dividend,w
  2047  04F1                     u1345:
  2048  04F1  1C03               	skipc
  2049  04F2  2CF4               	goto	u1341
  2050  04F3  2CF5               	goto	u1340
  2051  04F4                     u1341:
  2052  04F4  2D04               	goto	l2037
  2053  04F5                     u1340:
  2054  04F5                     l2033:
  2055  04F5  0846               	movf	___lldiv@divisor,w
  2056  04F6  02CA               	subwf	___lldiv@dividend,f
  2057  04F7  0847               	movf	___lldiv@divisor+1,w
  2058  04F8  1C03               	skipc
  2059  04F9  0F47               	incfsz	___lldiv@divisor+1,w
  2060  04FA  02CB               	subwf	___lldiv@dividend+1,f
  2061  04FB  0848               	movf	___lldiv@divisor+2,w
  2062  04FC  1C03               	skipc
  2063  04FD  0F48               	incfsz	___lldiv@divisor+2,w
  2064  04FE  02CC               	subwf	___lldiv@dividend+2,f
  2065  04FF  0849               	movf	___lldiv@divisor+3,w
  2066  0500  1C03               	skipc
  2067  0501  0F49               	incfsz	___lldiv@divisor+3,w
  2068  0502  02CD               	subwf	___lldiv@dividend+3,f
  2069  0503                     l2035:
  2070  0503  144E               	bsf	___lldiv@quotient,0
  2071  0504                     l2037:
  2072  0504  3001               	movlw	1
  2073  0505                     u1355:
  2074  0505  1003               	clrc
  2075  0506  0CC9               	rrf	___lldiv@divisor+3,f
  2076  0507  0CC8               	rrf	___lldiv@divisor+2,f
  2077  0508  0CC7               	rrf	___lldiv@divisor+1,f
  2078  0509  0CC6               	rrf	___lldiv@divisor,f
  2079  050A  3EFF               	addlw	-1
  2080  050B  1D03               	skipz
  2081  050C  2D05               	goto	u1355
  2082  050D                     l2039:
  2083  050D  3001               	movlw	1
  2084  050E  02D2               	subwf	___lldiv@counter,f
  2085  050F  1D03               	btfss	3,2
  2086  0510  2D12               	goto	u1361
  2087  0511  2D13               	goto	u1360
  2088  0512                     u1361:
  2089  0512  2CDA               	goto	l2029
  2090  0513                     u1360:
  2091  0513                     l2041:
  2092  0513  0851               	movf	___lldiv@quotient+3,w
  2093  0514  00C9               	movwf	?___lldiv+3
  2094  0515  0850               	movf	___lldiv@quotient+2,w
  2095  0516  00C8               	movwf	?___lldiv+2
  2096  0517  084F               	movf	___lldiv@quotient+1,w
  2097  0518  00C7               	movwf	?___lldiv+1
  2098  0519  084E               	movf	___lldiv@quotient,w
  2099  051A  00C6               	movwf	?___lldiv
  2100  051B                     l463:
  2101  051B  0008               	return
  2102  051C                     __end_of___lldiv:
  2103                           
  2104                           	psect	text7
  2105  0577                     __ptext7:	
  2106 ;; *************** function _Write_to_RTC *****************
  2107 ;; Defined at:
  2108 ;;		line 233 in file "main_prueba3_mini2.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0, pclath, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2122 ;;      Params:         0       0       0       0       0
  2123 ;;      Locals:         0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0
  2125 ;;      Totals:         0       0       0       0       0
  2126 ;;Total ram usage:        0 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		_I2C_Master_Start
  2131 ;;		_I2C_Master_Stop
  2132 ;;		_I2C_Master_Write
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _Write_to_RTC
  2140  0577                     _Write_to_RTC:
  2141  0577                     l2261:	
  2142                           ;incstack = 0
  2143                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  2144                           
  2145                           
  2146                           ;main_prueba3_mini2.c: 234:     I2C_Master_Start();
  2147  0577  120A  158A  2711  120A  118A  	fcall	_I2C_Master_Start
  2148                           
  2149                           ;main_prueba3_mini2.c: 235:     I2C_Master_Write(0xD0);
  2150  057C  30D0               	movlw	208
  2151  057D  00F3               	movwf	I2C_Master_Write@d
  2152  057E  3000               	movlw	0
  2153  057F  00F4               	movwf	I2C_Master_Write@d+1
  2154  0580  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2155                           
  2156                           ;main_prueba3_mini2.c: 236:     I2C_Master_Write(0);
  2157  0585  3000               	movlw	0
  2158  0586  00F3               	movwf	I2C_Master_Write@d
  2159  0587  00F4               	movwf	I2C_Master_Write@d+1
  2160  0588  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2161                           
  2162                           ;main_prueba3_mini2.c: 237:     I2C_Master_Write(0);
  2163  058D  3000               	movlw	0
  2164  058E  00F3               	movwf	I2C_Master_Write@d
  2165  058F  00F4               	movwf	I2C_Master_Write@d+1
  2166  0590  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2167                           
  2168                           ;main_prueba3_mini2.c: 238:     I2C_Master_Write(48);
  2169  0595  3030               	movlw	48
  2170  0596  00F3               	movwf	I2C_Master_Write@d
  2171  0597  3000               	movlw	0
  2172  0598  00F4               	movwf	I2C_Master_Write@d+1
  2173  0599  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2174                           
  2175                           ;main_prueba3_mini2.c: 239:     I2C_Master_Write(6);
  2176  059E  3006               	movlw	6
  2177  059F  00F3               	movwf	I2C_Master_Write@d
  2178  05A0  3000               	movlw	0
  2179  05A1  00F4               	movwf	I2C_Master_Write@d+1
  2180  05A2  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2181                           
  2182                           ;main_prueba3_mini2.c: 240:     I2C_Master_Write(1);
  2183  05A7  3001               	movlw	1
  2184  05A8  00F3               	movwf	I2C_Master_Write@d
  2185  05A9  3000               	movlw	0
  2186  05AA  00F4               	movwf	I2C_Master_Write@d+1
  2187  05AB  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2188                           
  2189                           ;main_prueba3_mini2.c: 241:     I2C_Master_Write(8);
  2190  05B0  3008               	movlw	8
  2191  05B1  00F3               	movwf	I2C_Master_Write@d
  2192  05B2  3000               	movlw	0
  2193  05B3  00F4               	movwf	I2C_Master_Write@d+1
  2194  05B4  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2195                           
  2196                           ;main_prueba3_mini2.c: 242:     I2C_Master_Write(3);
  2197  05B9  3003               	movlw	3
  2198  05BA  00F3               	movwf	I2C_Master_Write@d
  2199  05BB  3000               	movlw	0
  2200  05BC  00F4               	movwf	I2C_Master_Write@d+1
  2201  05BD  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2202                           
  2203                           ;main_prueba3_mini2.c: 243:     I2C_Master_Write(27);
  2204  05C2  301B               	movlw	27
  2205  05C3  00F3               	movwf	I2C_Master_Write@d
  2206  05C4  3000               	movlw	0
  2207  05C5  00F4               	movwf	I2C_Master_Write@d+1
  2208  05C6  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Write
  2209                           
  2210                           ;main_prueba3_mini2.c: 244:     I2C_Master_Stop();
  2211  05CB  120A  158A  271A  120A  118A  	fcall	_I2C_Master_Stop
  2212  05D0                     l141:
  2213  05D0  0008               	return
  2214  05D1                     __end_of_Write_to_RTC:
  2215                           
  2216                           	psect	text8
  2217  0F23                     __ptext8:	
  2218 ;; *************** function _I2C_Master_Write *****************
  2219 ;; Defined at:
  2220 ;;		line 84 in file "I2C.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  d               2    3[COMMON] unsigned int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         2       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0
  2237 ;;      Totals:         2       0       0       0       0
  2238 ;;Total ram usage:        2 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		_I2C_Master_Wait
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;;		_Write_to_RTC
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _I2C_Master_Write
  2251  0F23                     _I2C_Master_Write:
  2252  0F23                     l2075:	
  2253                           ;incstack = 0
  2254                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2255                           
  2256                           
  2257                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2258  0F23  120A  158A  2745  120A  158A  	fcall	_I2C_Master_Wait
  2259  0F28                     l2077:
  2260                           
  2261                           ;I2C.c: 87:     SSPBUF = d;
  2262  0F28  0873               	movf	I2C_Master_Write@d,w
  2263  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0F2B  0093               	movwf	19	;volatile
  2266  0F2C                     l191:
  2267  0F2C  0008               	return
  2268  0F2D                     __end_of_I2C_Master_Write:
  2269                           
  2270                           	psect	text9
  2271  0F1A                     __ptext9:	
  2272 ;; *************** function _I2C_Master_Stop *****************
  2273 ;; Defined at:
  2274 ;;		line 73 in file "I2C.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    2
  2295 ;; This function calls:
  2296 ;;		_I2C_Master_Wait
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;;		_Write_to_RTC
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _I2C_Master_Stop
  2305  0F1A                     _I2C_Master_Stop:
  2306  0F1A                     l2079:	
  2307                           ;incstack = 0
  2308                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2309                           
  2310                           
  2311                           ;I2C.c: 75:     I2C_Master_Wait();
  2312  0F1A  120A  158A  2745  120A  158A  	fcall	_I2C_Master_Wait
  2313  0F1F                     l2081:
  2314                           
  2315                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2316  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  2317  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  2318  0F21  1511               	bsf	17,2	;volatile
  2319  0F22                     l188:
  2320  0F22  0008               	return
  2321  0F23                     __end_of_I2C_Master_Stop:
  2322                           
  2323                           	psect	text10
  2324  0F11                     __ptext10:	
  2325 ;; *************** function _I2C_Master_Start *****************
  2326 ;; Defined at:
  2327 ;;		line 56 in file "I2C.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0
  2344 ;;      Totals:         0       0       0       0       0
  2345 ;;Total ram usage:        0 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    2
  2348 ;; This function calls:
  2349 ;;		_I2C_Master_Wait
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;;		_Write_to_RTC
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _I2C_Master_Start
  2358  0F11                     _I2C_Master_Start:
  2359  0F11                     l2071:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2362                           
  2363                           
  2364                           ;I2C.c: 57:     I2C_Master_Wait();
  2365  0F11  120A  158A  2745  120A  158A  	fcall	_I2C_Master_Wait
  2366  0F16                     l2073:
  2367                           
  2368                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  2369  0F16  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0F17  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0F18  1411               	bsf	17,0	;volatile
  2372  0F19                     l182:
  2373  0F19  0008               	return
  2374  0F1A                     __end_of_I2C_Master_Start:
  2375                           
  2376                           	psect	text11
  2377  0770                     __ptext11:	
  2378 ;; *************** function _Write_USART_String *****************
  2379 ;; Defined at:
  2380 ;;		line 37 in file "USART.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  a               2    4[COMMON] PTR unsigned char 
  2383 ;;		 -> Date(15), STR_5(3), sec_send(8), STR_4(2), 
  2384 ;;		 -> min_send(8), STR_3(2), hour_send(8), STR_2(3), 
  2385 ;;		 -> STR_1(6), 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  i               1    7[COMMON] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2397 ;;      Params:         2       0       0       0       0
  2398 ;;      Locals:         1       0       0       0       0
  2399 ;;      Temps:          1       0       0       0       0
  2400 ;;      Totals:         4       0       0       0       0
  2401 ;;Total ram usage:        4 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    2
  2404 ;; This function calls:
  2405 ;;		_Write_USART
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function _Write_USART_String
  2413  0770                     _Write_USART_String:
  2414  0770                     l1901:	
  2415                           ;incstack = 0
  2416                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2417                           
  2418                           
  2419                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2420  0770  01F7               	clrf	Write_USART_String@i
  2421  0771  2F87               	goto	l1907
  2422  0772                     l1903:
  2423                           
  2424                           ;USART.c: 40:         Write_USART(a[i]);
  2425  0772  0877               	movf	Write_USART_String@i,w
  2426  0773  0774               	addwf	Write_USART_String@a,w
  2427  0774  0084               	movwf	4
  2428  0775  0875               	movf	Write_USART_String@a+1,w
  2429  0776  1803               	skipnc
  2430  0777  0A75               	incf	Write_USART_String@a+1,w
  2431  0778  00FF               	movwf	btemp+1
  2432  0779  120A  118A  279B  120A  118A  	fcall	stringtab
  2433  077E  120A  158A  272D  120A  118A  	fcall	_Write_USART
  2434  0783                     l1905:
  2435                           
  2436                           ;USART.c: 41:     }
  2437  0783  3001               	movlw	1
  2438  0784  00F6               	movwf	??_Write_USART_String
  2439  0785  0876               	movf	??_Write_USART_String,w
  2440  0786  07F7               	addwf	Write_USART_String@i,f
  2441  0787                     l1907:
  2442  0787  0877               	movf	Write_USART_String@i,w
  2443  0788  0774               	addwf	Write_USART_String@a,w
  2444  0789  0084               	movwf	4
  2445  078A  0875               	movf	Write_USART_String@a+1,w
  2446  078B  1803               	skipnc
  2447  078C  0A75               	incf	Write_USART_String@a+1,w
  2448  078D  1283               	bcf	3,5	;RP0=0, select bank0
  2449  078E  1303               	bcf	3,6	;RP1=0, select bank0
  2450  078F  00FF               	movwf	btemp+1
  2451  0790  120A  118A  279B  120A  118A  	fcall	stringtab
  2452  0795  3A00               	xorlw	0
  2453  0796  1D03               	skipz
  2454  0797  2F99               	goto	u1271
  2455  0798  2F9A               	goto	u1270
  2456  0799                     u1271:
  2457  0799  2F72               	goto	l1903
  2458  079A                     u1270:
  2459  079A                     l307:
  2460  079A  0008               	return
  2461  079B                     __end_of_Write_USART_String:
  2462                           
  2463                           	psect	text12
  2464  0F2D                     __ptext12:	
  2465 ;; *************** function _Write_USART *****************
  2466 ;; Defined at:
  2467 ;;		line 33 in file "USART.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  a               1    wreg     unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  a               1    3[COMMON] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       0       0       0       0
  2482 ;;      Locals:         1       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0
  2484 ;;      Totals:         1       0       0       0       0
  2485 ;;Total ram usage:        1 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;;		_Write_USART_String
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function _Write_USART
  2498  0F2D                     _Write_USART:
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in _Write_USART: [wreg]
  2502                           ;Write_USART@a stored from wreg
  2503  0F2D  00F3               	movwf	Write_USART@a
  2504  0F2E                     l1625:
  2505  0F2E                     l298:	
  2506                           ;USART.c: 34:     while(!TRMT);
  2507                           
  2508  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2509  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2510  0F30  1C98               	btfss	24,1	;volatile
  2511  0F31  2F33               	goto	u941
  2512  0F32  2F34               	goto	u940
  2513  0F33                     u941:
  2514  0F33  2F2E               	goto	l298
  2515  0F34                     u940:
  2516  0F34                     l1627:
  2517                           
  2518                           ;USART.c: 35:     TXREG=a;
  2519  0F34  0873               	movf	Write_USART@a,w
  2520  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0F37  0099               	movwf	25	;volatile
  2523  0F38                     l301:
  2524  0F38  0008               	return
  2525  0F39                     __end_of_Write_USART:
  2526                           
  2527                           	psect	text13
  2528  0041                     __ptext13:	
  2529 ;; *************** function _RTC_display *****************
  2530 ;; Defined at:
  2531 ;;		line 192 in file "main_prueba3_mini2.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          0       3       0       0       0
  2548 ;;      Totals:         0       3       0       0       0
  2549 ;;Total ram usage:        3 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    4
  2552 ;; This function calls:
  2553 ;;		_Lcd_Set_Cursor
  2554 ;;		_Lcd_Write_String
  2555 ;;		___awdiv
  2556 ;;		___awmod
  2557 ;;		_bcd_to_decimal
  2558 ;;		_sprintf
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _RTC_display
  2566  0041                     _RTC_display:
  2567  0041                     l2283:	
  2568                           ;incstack = 0
  2569                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2570                           
  2571                           
  2572                           ;main_prueba3_mini2.c: 194:     second = bcd_to_decimal(second);
  2573  0041  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0042  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0043  0825               	movf	_second,w
  2576  0044  120A  158A  27BF  120A  118A  	fcall	_bcd_to_decimal
  2577  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2578  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2579  004B  00DC               	movwf	??_RTC_display
  2580  004C  085C               	movf	??_RTC_display,w
  2581  004D  00A5               	movwf	_second
  2582                           
  2583                           ;main_prueba3_mini2.c: 195:     minute = bcd_to_decimal(minute);
  2584  004E  0824               	movf	_minute,w
  2585  004F  120A  158A  27BF  120A  118A  	fcall	_bcd_to_decimal
  2586  0054  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0055  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0056  00DC               	movwf	??_RTC_display
  2589  0057  085C               	movf	??_RTC_display,w
  2590  0058  00A4               	movwf	_minute
  2591                           
  2592                           ;main_prueba3_mini2.c: 196:     hour = bcd_to_decimal(hour);
  2593  0059  0823               	movf	_hour,w
  2594  005A  120A  158A  27BF  120A  118A  	fcall	_bcd_to_decimal
  2595  005F  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0060  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0061  00DC               	movwf	??_RTC_display
  2598  0062  085C               	movf	??_RTC_display,w
  2599  0063  00A3               	movwf	_hour
  2600                           
  2601                           ;main_prueba3_mini2.c: 197:     m_day = bcd_to_decimal(m_day);
  2602  0064  0822               	movf	_m_day,w
  2603  0065  120A  158A  27BF  120A  118A  	fcall	_bcd_to_decimal
  2604  006A  1283               	bcf	3,5	;RP0=0, select bank0
  2605  006B  1303               	bcf	3,6	;RP1=0, select bank0
  2606  006C  00DC               	movwf	??_RTC_display
  2607  006D  085C               	movf	??_RTC_display,w
  2608  006E  00A2               	movwf	_m_day
  2609                           
  2610                           ;main_prueba3_mini2.c: 198:     month = bcd_to_decimal(month);
  2611  006F  0821               	movf	_month,w
  2612  0070  120A  158A  27BF  120A  118A  	fcall	_bcd_to_decimal
  2613  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0077  00DC               	movwf	??_RTC_display
  2616  0078  085C               	movf	??_RTC_display,w
  2617  0079  00A1               	movwf	_month
  2618                           
  2619                           ;main_prueba3_mini2.c: 199:     year = bcd_to_decimal(year);
  2620  007A  0820               	movf	_year,w
  2621  007B  120A  158A  27BF  120A  118A  	fcall	_bcd_to_decimal
  2622  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0082  00DC               	movwf	??_RTC_display
  2625  0083  085C               	movf	??_RTC_display,w
  2626  0084  00A0               	movwf	_year
  2627                           
  2628                           ;main_prueba3_mini2.c: 203:     Time[6] = hour / 10 + '0';
  2629  0085  300A               	movlw	10
  2630  0086  00F3               	movwf	___awdiv@divisor
  2631  0087  3000               	movlw	0
  2632  0088  00F4               	movwf	___awdiv@divisor+1
  2633  0089  0823               	movf	_hour,w
  2634  008A  00DC               	movwf	??_RTC_display
  2635  008B  01DD               	clrf	??_RTC_display+1
  2636  008C  085C               	movf	??_RTC_display,w
  2637  008D  00F5               	movwf	___awdiv@dividend
  2638  008E  085D               	movf	??_RTC_display+1,w
  2639  008F  00F6               	movwf	___awdiv@dividend+1
  2640  0090  120A  118A  244B  120A  118A  	fcall	___awdiv
  2641  0095  0873               	movf	?___awdiv,w
  2642  0096  3E30               	addlw	48
  2643  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0099  00DE               	movwf	??_RTC_display+2
  2646  009A  085E               	movf	??_RTC_display+2,w
  2647  009B  1683               	bsf	3,5	;RP0=1, select bank1
  2648  009C  1303               	bcf	3,6	;RP1=0, select bank1
  2649  009D  00D2               	movwf	(_Time^(0+128)+6)
  2650                           
  2651                           ;main_prueba3_mini2.c: 204:     Time[7] = hour % 10 + '0';
  2652  009E  300A               	movlw	10
  2653  009F  00F3               	movwf	___awmod@divisor
  2654  00A0  3000               	movlw	0
  2655  00A1  00F4               	movwf	___awmod@divisor+1
  2656  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2657  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2658  00A4  0823               	movf	_hour,w
  2659  00A5  00DC               	movwf	??_RTC_display
  2660  00A6  01DD               	clrf	??_RTC_display+1
  2661  00A7  085C               	movf	??_RTC_display,w
  2662  00A8  00F5               	movwf	___awmod@dividend
  2663  00A9  085D               	movf	??_RTC_display+1,w
  2664  00AA  00F6               	movwf	___awmod@dividend+1
  2665  00AB  120A  118A  251C  120A  118A  	fcall	___awmod
  2666  00B0  0873               	movf	?___awmod,w
  2667  00B1  3E30               	addlw	48
  2668  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2669  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2670  00B4  00DE               	movwf	??_RTC_display+2
  2671  00B5  085E               	movf	??_RTC_display+2,w
  2672  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  2673  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  2674  00B8  00D3               	movwf	(_Time^(0+128)+7)
  2675                           
  2676                           ;main_prueba3_mini2.c: 205:     Time[9] = minute / 10 + '0';
  2677  00B9  300A               	movlw	10
  2678  00BA  00F3               	movwf	___awdiv@divisor
  2679  00BB  3000               	movlw	0
  2680  00BC  00F4               	movwf	___awdiv@divisor+1
  2681  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2682  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2683  00BF  0824               	movf	_minute,w
  2684  00C0  00DC               	movwf	??_RTC_display
  2685  00C1  01DD               	clrf	??_RTC_display+1
  2686  00C2  085C               	movf	??_RTC_display,w
  2687  00C3  00F5               	movwf	___awdiv@dividend
  2688  00C4  085D               	movf	??_RTC_display+1,w
  2689  00C5  00F6               	movwf	___awdiv@dividend+1
  2690  00C6  120A  118A  244B  120A  118A  	fcall	___awdiv
  2691  00CB  0873               	movf	?___awdiv,w
  2692  00CC  3E30               	addlw	48
  2693  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2694  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2695  00CF  00DE               	movwf	??_RTC_display+2
  2696  00D0  085E               	movf	??_RTC_display+2,w
  2697  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  2698  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  2699  00D3  00D5               	movwf	(_Time^(0+128)+9)
  2700                           
  2701                           ;main_prueba3_mini2.c: 206:     Time[10] = minute % 10 + '0';
  2702  00D4  300A               	movlw	10
  2703  00D5  00F3               	movwf	___awmod@divisor
  2704  00D6  3000               	movlw	0
  2705  00D7  00F4               	movwf	___awmod@divisor+1
  2706  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2707  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2708  00DA  0824               	movf	_minute,w
  2709  00DB  00DC               	movwf	??_RTC_display
  2710  00DC  01DD               	clrf	??_RTC_display+1
  2711  00DD  085C               	movf	??_RTC_display,w
  2712  00DE  00F5               	movwf	___awmod@dividend
  2713  00DF  085D               	movf	??_RTC_display+1,w
  2714  00E0  00F6               	movwf	___awmod@dividend+1
  2715  00E1  120A  118A  251C  120A  118A  	fcall	___awmod
  2716  00E6  0873               	movf	?___awmod,w
  2717  00E7  3E30               	addlw	48
  2718  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2719  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2720  00EA  00DE               	movwf	??_RTC_display+2
  2721  00EB  085E               	movf	??_RTC_display+2,w
  2722  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2723  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  2724  00EE  00D6               	movwf	(_Time^(0+128)+10)
  2725                           
  2726                           ;main_prueba3_mini2.c: 207:     Time[12] = second / 10 + '0';
  2727  00EF  300A               	movlw	10
  2728  00F0  00F3               	movwf	___awdiv@divisor
  2729  00F1  3000               	movlw	0
  2730  00F2  00F4               	movwf	___awdiv@divisor+1
  2731  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2732  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2733  00F5  0825               	movf	_second,w
  2734  00F6  00DC               	movwf	??_RTC_display
  2735  00F7  01DD               	clrf	??_RTC_display+1
  2736  00F8  085C               	movf	??_RTC_display,w
  2737  00F9  00F5               	movwf	___awdiv@dividend
  2738  00FA  085D               	movf	??_RTC_display+1,w
  2739  00FB  00F6               	movwf	___awdiv@dividend+1
  2740  00FC  120A  118A  244B  120A  118A  	fcall	___awdiv
  2741  0101  0873               	movf	?___awdiv,w
  2742  0102  3E30               	addlw	48
  2743  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0104  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0105  00DE               	movwf	??_RTC_display+2
  2746  0106  085E               	movf	??_RTC_display+2,w
  2747  0107  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0108  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0109  00D8               	movwf	(_Time^(0+128)+12)
  2750                           
  2751                           ;main_prueba3_mini2.c: 208:     Time[13] = second % 10 + '0';
  2752  010A  300A               	movlw	10
  2753  010B  00F3               	movwf	___awmod@divisor
  2754  010C  3000               	movlw	0
  2755  010D  00F4               	movwf	___awmod@divisor+1
  2756  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2757  010F  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0110  0825               	movf	_second,w
  2759  0111  00DC               	movwf	??_RTC_display
  2760  0112  01DD               	clrf	??_RTC_display+1
  2761  0113  085C               	movf	??_RTC_display,w
  2762  0114  00F5               	movwf	___awmod@dividend
  2763  0115  085D               	movf	??_RTC_display+1,w
  2764  0116  00F6               	movwf	___awmod@dividend+1
  2765  0117  120A  118A  251C  120A  118A  	fcall	___awmod
  2766  011C  0873               	movf	?___awmod,w
  2767  011D  3E30               	addlw	48
  2768  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2769  011F  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0120  00DE               	movwf	??_RTC_display+2
  2771  0121  085E               	movf	??_RTC_display+2,w
  2772  0122  1683               	bsf	3,5	;RP0=1, select bank1
  2773  0123  1303               	bcf	3,6	;RP1=0, select bank1
  2774  0124  00D9               	movwf	(_Time^(0+128)+13)
  2775                           
  2776                           ;main_prueba3_mini2.c: 211:     Date[6] = m_day / 10 + '0';
  2777  0125  300A               	movlw	10
  2778  0126  00F3               	movwf	___awdiv@divisor
  2779  0127  3000               	movlw	0
  2780  0128  00F4               	movwf	___awdiv@divisor+1
  2781  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2782  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2783  012B  0822               	movf	_m_day,w
  2784  012C  00DC               	movwf	??_RTC_display
  2785  012D  01DD               	clrf	??_RTC_display+1
  2786  012E  085C               	movf	??_RTC_display,w
  2787  012F  00F5               	movwf	___awdiv@dividend
  2788  0130  085D               	movf	??_RTC_display+1,w
  2789  0131  00F6               	movwf	___awdiv@dividend+1
  2790  0132  120A  118A  244B  120A  118A  	fcall	___awdiv
  2791  0137  0873               	movf	?___awdiv,w
  2792  0138  3E30               	addlw	48
  2793  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2794  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2795  013B  00DE               	movwf	??_RTC_display+2
  2796  013C  085E               	movf	??_RTC_display+2,w
  2797  013D  00E5               	movwf	_Date+6
  2798                           
  2799                           ;main_prueba3_mini2.c: 212:     Date[7] = m_day % 10 + '0';
  2800  013E  300A               	movlw	10
  2801  013F  00F3               	movwf	___awmod@divisor
  2802  0140  3000               	movlw	0
  2803  0141  00F4               	movwf	___awmod@divisor+1
  2804  0142  0822               	movf	_m_day,w
  2805  0143  00DC               	movwf	??_RTC_display
  2806  0144  01DD               	clrf	??_RTC_display+1
  2807  0145  085C               	movf	??_RTC_display,w
  2808  0146  00F5               	movwf	___awmod@dividend
  2809  0147  085D               	movf	??_RTC_display+1,w
  2810  0148  00F6               	movwf	___awmod@dividend+1
  2811  0149  120A  118A  251C  120A  118A  	fcall	___awmod
  2812  014E  0873               	movf	?___awmod,w
  2813  014F  3E30               	addlw	48
  2814  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0152  00DE               	movwf	??_RTC_display+2
  2817  0153  085E               	movf	??_RTC_display+2,w
  2818  0154  00E6               	movwf	_Date+7
  2819                           
  2820                           ;main_prueba3_mini2.c: 213:     Date[9] = month / 10 + '0';
  2821  0155  300A               	movlw	10
  2822  0156  00F3               	movwf	___awdiv@divisor
  2823  0157  3000               	movlw	0
  2824  0158  00F4               	movwf	___awdiv@divisor+1
  2825  0159  0821               	movf	_month,w
  2826  015A  00DC               	movwf	??_RTC_display
  2827  015B  01DD               	clrf	??_RTC_display+1
  2828  015C  085C               	movf	??_RTC_display,w
  2829  015D  00F5               	movwf	___awdiv@dividend
  2830  015E  085D               	movf	??_RTC_display+1,w
  2831  015F  00F6               	movwf	___awdiv@dividend+1
  2832  0160  120A  118A  244B  120A  118A  	fcall	___awdiv
  2833  0165  0873               	movf	?___awdiv,w
  2834  0166  3E30               	addlw	48
  2835  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2836  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2837  0169  00DE               	movwf	??_RTC_display+2
  2838  016A  085E               	movf	??_RTC_display+2,w
  2839  016B  00E8               	movwf	_Date+9
  2840                           
  2841                           ;main_prueba3_mini2.c: 214:     Date[10] = month % 10 + '0';
  2842  016C  300A               	movlw	10
  2843  016D  00F3               	movwf	___awmod@divisor
  2844  016E  3000               	movlw	0
  2845  016F  00F4               	movwf	___awmod@divisor+1
  2846  0170  0821               	movf	_month,w
  2847  0171  00DC               	movwf	??_RTC_display
  2848  0172  01DD               	clrf	??_RTC_display+1
  2849  0173  085C               	movf	??_RTC_display,w
  2850  0174  00F5               	movwf	___awmod@dividend
  2851  0175  085D               	movf	??_RTC_display+1,w
  2852  0176  00F6               	movwf	___awmod@dividend+1
  2853  0177  120A  118A  251C  120A  118A  	fcall	___awmod
  2854  017C  0873               	movf	?___awmod,w
  2855  017D  3E30               	addlw	48
  2856  017E  1283               	bcf	3,5	;RP0=0, select bank0
  2857  017F  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0180  00DE               	movwf	??_RTC_display+2
  2859  0181  085E               	movf	??_RTC_display+2,w
  2860  0182  00E9               	movwf	_Date+10
  2861                           
  2862                           ;main_prueba3_mini2.c: 215:     Date[12] = year / 10 + '0';
  2863  0183  300A               	movlw	10
  2864  0184  00F3               	movwf	___awdiv@divisor
  2865  0185  3000               	movlw	0
  2866  0186  00F4               	movwf	___awdiv@divisor+1
  2867  0187  0820               	movf	_year,w
  2868  0188  00DC               	movwf	??_RTC_display
  2869  0189  01DD               	clrf	??_RTC_display+1
  2870  018A  085C               	movf	??_RTC_display,w
  2871  018B  00F5               	movwf	___awdiv@dividend
  2872  018C  085D               	movf	??_RTC_display+1,w
  2873  018D  00F6               	movwf	___awdiv@dividend+1
  2874  018E  120A  118A  244B  120A  118A  	fcall	___awdiv
  2875  0193  0873               	movf	?___awdiv,w
  2876  0194  3E30               	addlw	48
  2877  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0197  00DE               	movwf	??_RTC_display+2
  2880  0198  085E               	movf	??_RTC_display+2,w
  2881  0199  00EB               	movwf	_Date+12
  2882                           
  2883                           ;main_prueba3_mini2.c: 216:     Date[13] = year % 10 + '0';
  2884  019A  300A               	movlw	10
  2885  019B  00F3               	movwf	___awmod@divisor
  2886  019C  3000               	movlw	0
  2887  019D  00F4               	movwf	___awmod@divisor+1
  2888  019E  0820               	movf	_year,w
  2889  019F  00DC               	movwf	??_RTC_display
  2890  01A0  01DD               	clrf	??_RTC_display+1
  2891  01A1  085C               	movf	??_RTC_display,w
  2892  01A2  00F5               	movwf	___awmod@dividend
  2893  01A3  085D               	movf	??_RTC_display+1,w
  2894  01A4  00F6               	movwf	___awmod@dividend+1
  2895  01A5  120A  118A  251C  120A  118A  	fcall	___awmod
  2896  01AA  0873               	movf	?___awmod,w
  2897  01AB  3E30               	addlw	48
  2898  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2899  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2900  01AE  00DE               	movwf	??_RTC_display+2
  2901  01AF  085E               	movf	??_RTC_display+2,w
  2902  01B0  00EC               	movwf	_Date+13
  2903  01B1                     l2285:
  2904                           
  2905                           ;main_prueba3_mini2.c: 219:     sprintf(sec_send, "%d", second);
  2906  01B1  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2907  01B2  00DC               	movwf	??_RTC_display
  2908  01B3  085C               	movf	??_RTC_display,w
  2909  01B4  00CF               	movwf	sprintf@f
  2910  01B5  0825               	movf	_second,w
  2911  01B6  00DD               	movwf	??_RTC_display+1
  2912  01B7  01DE               	clrf	??_RTC_display+2
  2913  01B8  085D               	movf	??_RTC_display+1,w
  2914  01B9  00D0               	movwf	?_sprintf+1
  2915  01BA  085E               	movf	??_RTC_display+2,w
  2916  01BB  00D1               	movwf	?_sprintf+2
  2917  01BC  303E               	movlw	(low (_sec_send| 0))& (0+255)
  2918  01BD  120A  118A  2361  120A  118A  	fcall	_sprintf
  2919  01C2                     l2287:
  2920                           
  2921                           ;main_prueba3_mini2.c: 220:     sprintf(min_send, "%d", minute);
  2922  01C2  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2923  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2924  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2925  01C5  00DC               	movwf	??_RTC_display
  2926  01C6  085C               	movf	??_RTC_display,w
  2927  01C7  00CF               	movwf	sprintf@f
  2928  01C8  0824               	movf	_minute,w
  2929  01C9  00DD               	movwf	??_RTC_display+1
  2930  01CA  01DE               	clrf	??_RTC_display+2
  2931  01CB  085D               	movf	??_RTC_display+1,w
  2932  01CC  00D0               	movwf	?_sprintf+1
  2933  01CD  085E               	movf	??_RTC_display+2,w
  2934  01CE  00D1               	movwf	?_sprintf+2
  2935  01CF  3036               	movlw	(low (_min_send| 0))& (0+255)
  2936  01D0  120A  118A  2361  120A  118A  	fcall	_sprintf
  2937  01D5                     l2289:
  2938                           
  2939                           ;main_prueba3_mini2.c: 221:     sprintf(hour_send, "%d", hour);
  2940  01D5  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2941  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2942  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2943  01D8  00DC               	movwf	??_RTC_display
  2944  01D9  085C               	movf	??_RTC_display,w
  2945  01DA  00CF               	movwf	sprintf@f
  2946  01DB  0823               	movf	_hour,w
  2947  01DC  00DD               	movwf	??_RTC_display+1
  2948  01DD  01DE               	clrf	??_RTC_display+2
  2949  01DE  085D               	movf	??_RTC_display+1,w
  2950  01DF  00D0               	movwf	?_sprintf+1
  2951  01E0  085E               	movf	??_RTC_display+2,w
  2952  01E1  00D1               	movwf	?_sprintf+2
  2953  01E2  302E               	movlw	(low (_hour_send| 0))& (0+255)
  2954  01E3  120A  118A  2361  120A  118A  	fcall	_sprintf
  2955  01E8                     l2291:
  2956                           
  2957                           ;main_prueba3_mini2.c: 222:     sprintf(day_send, "%d", m_day);
  2958  01E8  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2959  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2960  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2961  01EB  00DC               	movwf	??_RTC_display
  2962  01EC  085C               	movf	??_RTC_display,w
  2963  01ED  00CF               	movwf	sprintf@f
  2964  01EE  0822               	movf	_m_day,w
  2965  01EF  00DD               	movwf	??_RTC_display+1
  2966  01F0  01DE               	clrf	??_RTC_display+2
  2967  01F1  085D               	movf	??_RTC_display+1,w
  2968  01F2  00D0               	movwf	?_sprintf+1
  2969  01F3  085E               	movf	??_RTC_display+2,w
  2970  01F4  00D1               	movwf	?_sprintf+2
  2971  01F5  3026               	movlw	(low (_day_send| 0))& (0+255)
  2972  01F6  120A  118A  2361  120A  118A  	fcall	_sprintf
  2973  01FB                     l2293:
  2974                           
  2975                           ;main_prueba3_mini2.c: 223:     sprintf(month_send, "%d", month);
  2976  01FB  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2977  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2978  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2979  01FE  00DC               	movwf	??_RTC_display
  2980  01FF  085C               	movf	??_RTC_display,w
  2981  0200  00CF               	movwf	sprintf@f
  2982  0201  0821               	movf	_month,w
  2983  0202  00DD               	movwf	??_RTC_display+1
  2984  0203  01DE               	clrf	??_RTC_display+2
  2985  0204  085D               	movf	??_RTC_display+1,w
  2986  0205  00D0               	movwf	?_sprintf+1
  2987  0206  085E               	movf	??_RTC_display+2,w
  2988  0207  00D1               	movwf	?_sprintf+2
  2989  0208  30C4               	movlw	(low (_month_send| 0))& (0+255)
  2990  0209  120A  118A  2361  120A  118A  	fcall	_sprintf
  2991  020E                     l2295:
  2992                           
  2993                           ;main_prueba3_mini2.c: 224:     sprintf(year_send, "%d", year);
  2994  020E  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2995  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2997  0211  00DC               	movwf	??_RTC_display
  2998  0212  085C               	movf	??_RTC_display,w
  2999  0213  00CF               	movwf	sprintf@f
  3000  0214  0820               	movf	_year,w
  3001  0215  00DD               	movwf	??_RTC_display+1
  3002  0216  01DE               	clrf	??_RTC_display+2
  3003  0217  085D               	movf	??_RTC_display+1,w
  3004  0218  00D0               	movwf	?_sprintf+1
  3005  0219  085E               	movf	??_RTC_display+2,w
  3006  021A  00D1               	movwf	?_sprintf+2
  3007  021B  30BC               	movlw	(low (_year_send| 0))& (0+255)
  3008  021C  120A  118A  2361  120A  118A  	fcall	_sprintf
  3009                           
  3010                           ;main_prueba3_mini2.c: 226:     Lcd_Set_Cursor(1,1);
  3011  0221  01F7               	clrf	Lcd_Set_Cursor@b
  3012  0222  0AF7               	incf	Lcd_Set_Cursor@b,f
  3013  0223  3001               	movlw	1
  3014  0224  120A  118A  27C1  120A  118A  	fcall	_Lcd_Set_Cursor
  3015  0229                     l2297:
  3016                           
  3017                           ;main_prueba3_mini2.c: 227:     Lcd_Write_String(Time);
  3018  0229  30CC               	movlw	(low (_Time| 0))& (0+255)
  3019  022A  120A  158A  27DB  120A  118A  	fcall	_Lcd_Write_String
  3020  022F                     l2299:
  3021                           
  3022                           ;main_prueba3_mini2.c: 228:     Lcd_Set_Cursor(2,1);
  3023  022F  01F7               	clrf	Lcd_Set_Cursor@b
  3024  0230  0AF7               	incf	Lcd_Set_Cursor@b,f
  3025  0231  3002               	movlw	2
  3026  0232  120A  118A  27C1  120A  118A  	fcall	_Lcd_Set_Cursor
  3027                           
  3028                           ;main_prueba3_mini2.c: 229:     Lcd_Write_String(Date);
  3029  0237  305F               	movlw	(low (_Date| 0))& (0+255)
  3030  0238  120A  158A  27DB  120A  118A  	fcall	_Lcd_Write_String
  3031  023D                     l138:
  3032  023D  0008               	return
  3033  023E                     __end_of_RTC_display:
  3034                           
  3035                           	psect	text14
  3036  0361                     __ptext14:	
  3037 ;; *************** function _sprintf *****************
  3038 ;; Defined at:
  3039 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  sp              1    wreg     PTR unsigned char 
  3042 ;;		 -> year_send(8), month_send(8), day_send(8), sec_send(8), 
  3043 ;;		 -> min_send(8), hour_send(8), 
  3044 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  3045 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(3), 
  3046 ;;		 -> STR_7(3), STR_6(3), 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  3049 ;;		 -> year_send(8), month_send(8), day_send(8), sec_send(8), 
  3050 ;;		 -> min_send(8), hour_send(8), 
  3051 ;;  tmpval          4    0        struct .
  3052 ;;  val             2   18[BANK0 ] unsigned int 
  3053 ;;  cp              2    0        PTR const unsigned char 
  3054 ;;  len             2    0        unsigned int 
  3055 ;;  c               1   21[BANK0 ] unsigned char 
  3056 ;;  prec            1   17[BANK0 ] char 
  3057 ;;  flag            1   16[BANK0 ] unsigned char 
  3058 ;;  ap              1   15[BANK0 ] PTR void [1]
  3059 ;;		 -> ?_sprintf(2), 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    9[BANK0 ] int 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       3       0       0       0
  3070 ;;      Locals:         0       7       0       0       0
  3071 ;;      Temps:          0       3       0       0       0
  3072 ;;      Totals:         0      13       0       0       0
  3073 ;;Total ram usage:       13 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    2
  3076 ;; This function calls:
  3077 ;;		___lwdiv
  3078 ;;		___lwmod
  3079 ;; This function is called by:
  3080 ;;		_RTC_display
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _sprintf
  3086  0361                     _sprintf:
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3090                           ;sprintf@sp stored from wreg
  3091  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0363  00DA               	movwf	sprintf@sp
  3094  0364                     l2087:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3097  0364  3050               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3098  0365  00D2               	movwf	??_sprintf
  3099  0366  0852               	movf	??_sprintf,w
  3100  0367  00D5               	movwf	sprintf@ap
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3103  0368  2C34               	goto	l2139
  3104  0369                     l2089:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3107  0369  3025               	movlw	37
  3108  036A  065B               	xorwf	sprintf@c,w
  3109  036B  1903               	btfsc	3,2
  3110  036C  2B6E               	goto	u1451
  3111  036D  2B6F               	goto	u1450
  3112  036E                     u1451:
  3113  036E  2B7B               	goto	l2095
  3114  036F                     u1450:
  3115  036F                     l2091:
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3118  036F  085B               	movf	sprintf@c,w
  3119  0370  00D2               	movwf	??_sprintf
  3120  0371  085A               	movf	sprintf@sp,w
  3121  0372  0084               	movwf	4
  3122  0373  0852               	movf	??_sprintf,w
  3123  0374  1383               	bcf	3,7	;select IRP bank0
  3124  0375  0080               	movwf	0
  3125  0376                     l2093:
  3126  0376  3001               	movlw	1
  3127  0377  00D2               	movwf	??_sprintf
  3128  0378  0852               	movf	??_sprintf,w
  3129  0379  07DA               	addwf	sprintf@sp,f
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3132  037A  2C34               	goto	l2139
  3133  037B                     l2095:
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3136  037B  01D6               	clrf	sprintf@flag
  3137  037C                     l2099:	
  3138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3139                           
  3140  037C  3001               	movlw	1
  3141  037D  07CF               	addwf	sprintf@f,f
  3142  037E  30FF               	movlw	-1
  3143  037F  074F               	addwf	sprintf@f,w
  3144  0380  0084               	movwf	4
  3145  0381  120A  118A  27A5  120A  118A  	fcall	stringdir
  3146  0386  00DB               	movwf	sprintf@c
  3147  0387  00D2               	movwf	??_sprintf
  3148  0388  01D3               	clrf	??_sprintf+1
  3149                           
  3150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3151                           ; Switch size 1, requested type "simple"
  3152                           ; Number of cases is 1, Range of values is 0 to 0
  3153                           ; switch strategies available:
  3154                           ; Name         Instructions Cycles
  3155                           ; simple_byte            4     3 (average)
  3156                           ; direct_byte           11     8 (fixed)
  3157                           ; jumptable            260     6 (fixed)
  3158                           ;	Chosen strategy is simple_byte
  3159  0389  0853               	movf	??_sprintf+1,w
  3160  038A  3A00               	xorlw	0	; case 0
  3161  038B  1903               	skipnz
  3162  038C  2B8E               	goto	l2387
  3163  038D  2C34               	goto	l2139
  3164  038E                     l2387:
  3165                           
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 3, Range of values is 0 to 105
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte           10     6 (average)
  3171                           ; jumptable            260     6 (fixed)
  3172                           ;	Chosen strategy is simple_byte
  3173  038E  0852               	movf	??_sprintf,w
  3174  038F  3A00               	xorlw	0	; case 0
  3175  0390  1903               	skipnz
  3176  0391  2C46               	goto	l2141
  3177  0392  3A64               	xorlw	100	; case 100
  3178  0393  1903               	skipnz
  3179  0394  2B99               	goto	l2101
  3180  0395  3A0D               	xorlw	13	; case 105
  3181  0396  1903               	skipnz
  3182  0397  2B99               	goto	l2101
  3183  0398  2C34               	goto	l2139
  3184  0399                     l2101:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3187  0399  0855               	movf	sprintf@ap,w
  3188  039A  0084               	movwf	4
  3189  039B  1383               	bcf	3,7	;select IRP bank0
  3190  039C  0800               	movf	0,w
  3191  039D  00D8               	movwf	sprintf@val
  3192  039E  0A84               	incf	4,f
  3193  039F  0800               	movf	0,w
  3194  03A0  00D9               	movwf	sprintf@val+1
  3195  03A1                     l2103:
  3196  03A1  3002               	movlw	2
  3197  03A2  00D2               	movwf	??_sprintf
  3198  03A3  0852               	movf	??_sprintf,w
  3199  03A4  07D5               	addwf	sprintf@ap,f
  3200  03A5                     l2105:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3203  03A5  1FD9               	btfss	sprintf@val+1,7
  3204  03A6  2BA8               	goto	u1461
  3205  03A7  2BA9               	goto	u1460
  3206  03A8                     u1461:
  3207  03A8  2BB2               	goto	l2111
  3208  03A9                     u1460:
  3209  03A9                     l2107:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3212  03A9  3003               	movlw	3
  3213  03AA  00D2               	movwf	??_sprintf
  3214  03AB  0852               	movf	??_sprintf,w
  3215  03AC  04D6               	iorwf	sprintf@flag,f
  3216  03AD                     l2109:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3219  03AD  09D8               	comf	sprintf@val,f
  3220  03AE  09D9               	comf	sprintf@val+1,f
  3221  03AF  0AD8               	incf	sprintf@val,f
  3222  03B0  1903               	skipnz
  3223  03B1  0AD9               	incf	sprintf@val+1,f
  3224  03B2                     l2111:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3227  03B2  01DB               	clrf	sprintf@c
  3228  03B3  0ADB               	incf	sprintf@c,f
  3229  03B4                     l2117:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3232  03B4  085B               	movf	sprintf@c,w
  3233  03B5  00D2               	movwf	??_sprintf
  3234  03B6  0752               	addwf	??_sprintf,w
  3235  03B7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3236  03B8  0084               	movwf	4
  3237  03B9  120A  118A  27A5  120A  118A  	fcall	stringdir
  3238  03BE  00D3               	movwf	??_sprintf+1
  3239  03BF  120A  118A  27A5  120A  118A  	fcall	stringdir
  3240  03C4  00D4               	movwf	??_sprintf+2
  3241  03C5  0854               	movf	??_sprintf+2,w
  3242  03C6  0259               	subwf	sprintf@val+1,w
  3243  03C7  1D03               	skipz
  3244  03C8  2BCB               	goto	u1475
  3245  03C9  0853               	movf	??_sprintf+1,w
  3246  03CA  0258               	subwf	sprintf@val,w
  3247  03CB                     u1475:
  3248  03CB  1803               	skipnc
  3249  03CC  2BCE               	goto	u1471
  3250  03CD  2BCF               	goto	u1470
  3251  03CE                     u1471:
  3252  03CE  2BD0               	goto	l2121
  3253  03CF                     u1470:
  3254  03CF  2BDA               	goto	l2123
  3255  03D0                     l2121:
  3256  03D0  3001               	movlw	1
  3257  03D1  00D2               	movwf	??_sprintf
  3258  03D2  0852               	movf	??_sprintf,w
  3259  03D3  07DB               	addwf	sprintf@c,f
  3260  03D4  3005               	movlw	5
  3261  03D5  065B               	xorwf	sprintf@c,w
  3262  03D6  1D03               	btfss	3,2
  3263  03D7  2BD9               	goto	u1481
  3264  03D8  2BDA               	goto	u1480
  3265  03D9                     u1481:
  3266  03D9  2BB4               	goto	l2117
  3267  03DA                     u1480:
  3268  03DA                     l2123:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3271  03DA  0856               	movf	sprintf@flag,w
  3272  03DB  3903               	andlw	3
  3273  03DC  1903               	btfsc	3,2
  3274  03DD  2BDF               	goto	u1491
  3275  03DE  2BE0               	goto	u1490
  3276  03DF                     u1491:
  3277  03DF  2BEB               	goto	l2129
  3278  03E0                     u1490:
  3279  03E0                     l2125:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3282  03E0  302D               	movlw	45
  3283  03E1  00D2               	movwf	??_sprintf
  3284  03E2  085A               	movf	sprintf@sp,w
  3285  03E3  0084               	movwf	4
  3286  03E4  0852               	movf	??_sprintf,w
  3287  03E5  1383               	bcf	3,7	;select IRP bank0
  3288  03E6  0080               	movwf	0
  3289  03E7                     l2127:
  3290  03E7  3001               	movlw	1
  3291  03E8  00D2               	movwf	??_sprintf
  3292  03E9  0852               	movf	??_sprintf,w
  3293  03EA  07DA               	addwf	sprintf@sp,f
  3294  03EB                     l2129:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3297  03EB  085B               	movf	sprintf@c,w
  3298  03EC  00D2               	movwf	??_sprintf
  3299  03ED  0852               	movf	??_sprintf,w
  3300  03EE  00D7               	movwf	sprintf@prec
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3303  03EF  2C2B               	goto	l2137
  3304  03F0                     l2131:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3307  03F0  300A               	movlw	10
  3308  03F1  00C9               	movwf	___lwmod@divisor
  3309  03F2  3000               	movlw	0
  3310  03F3  00CA               	movwf	___lwmod@divisor+1
  3311  03F4  0857               	movf	sprintf@prec,w
  3312  03F5  00D2               	movwf	??_sprintf
  3313  03F6  0752               	addwf	??_sprintf,w
  3314  03F7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3315  03F8  0084               	movwf	4
  3316  03F9  120A  118A  27A5  120A  118A  	fcall	stringdir
  3317  03FE  00F3               	movwf	___lwdiv@divisor
  3318  03FF  120A  118A  27A5  120A  118A  	fcall	stringdir
  3319  0404  00F4               	movwf	___lwdiv@divisor+1
  3320  0405  0859               	movf	sprintf@val+1,w
  3321  0406  00F6               	movwf	___lwdiv@dividend+1
  3322  0407  0858               	movf	sprintf@val,w
  3323  0408  00F5               	movwf	___lwdiv@dividend
  3324  0409  120A  118A  2621  120A  118A  	fcall	___lwdiv
  3325  040E  0874               	movf	?___lwdiv+1,w
  3326  040F  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0410  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0411  00CC               	movwf	___lwmod@dividend+1
  3329  0412  0873               	movf	?___lwdiv,w
  3330  0413  00CB               	movwf	___lwmod@dividend
  3331  0414  120A  118A  2667  120A  118A  	fcall	___lwmod
  3332  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3333  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3334  041B  0849               	movf	?___lwmod,w
  3335  041C  3E30               	addlw	48
  3336  041D  00D3               	movwf	??_sprintf+1
  3337  041E  0853               	movf	??_sprintf+1,w
  3338  041F  00DB               	movwf	sprintf@c
  3339  0420                     l2133:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3342  0420  085B               	movf	sprintf@c,w
  3343  0421  00D2               	movwf	??_sprintf
  3344  0422  085A               	movf	sprintf@sp,w
  3345  0423  0084               	movwf	4
  3346  0424  0852               	movf	??_sprintf,w
  3347  0425  1383               	bcf	3,7	;select IRP bank0
  3348  0426  0080               	movwf	0
  3349  0427                     l2135:
  3350  0427  3001               	movlw	1
  3351  0428  00D2               	movwf	??_sprintf
  3352  0429  0852               	movf	??_sprintf,w
  3353  042A  07DA               	addwf	sprintf@sp,f
  3354  042B                     l2137:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3357  042B  30FF               	movlw	255
  3358  042C  00D2               	movwf	??_sprintf
  3359  042D  0852               	movf	??_sprintf,w
  3360  042E  07D7               	addwf	sprintf@prec,f
  3361  042F  0A57               	incf	sprintf@prec,w
  3362  0430  1D03               	btfss	3,2
  3363  0431  2C33               	goto	u1501
  3364  0432  2C34               	goto	u1500
  3365  0433                     u1501:
  3366  0433  2BF0               	goto	l2131
  3367  0434                     u1500:
  3368  0434                     l2139:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3371  0434  3001               	movlw	1
  3372  0435  07CF               	addwf	sprintf@f,f
  3373  0436  30FF               	movlw	-1
  3374  0437  074F               	addwf	sprintf@f,w
  3375  0438  0084               	movwf	4
  3376  0439  120A  118A  27A5  120A  118A  	fcall	stringdir
  3377  043E  00D2               	movwf	??_sprintf
  3378  043F  0852               	movf	??_sprintf,w
  3379  0440  00DB               	movwf	sprintf@c
  3380  0441  085B               	movf	sprintf@c,w
  3381  0442  1D03               	btfss	3,2
  3382  0443  2C45               	goto	u1511
  3383  0444  2C46               	goto	u1510
  3384  0445                     u1511:
  3385  0445  2B69               	goto	l2089
  3386  0446                     u1510:
  3387  0446                     l2141:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3390  0446  085A               	movf	sprintf@sp,w
  3391  0447  0084               	movwf	4
  3392  0448  1383               	bcf	3,7	;select IRP bank0
  3393  0449  0180               	clrf	0
  3394  044A                     l423:
  3395  044A  0008               	return
  3396  044B                     __end_of_sprintf:
  3397                           
  3398                           	psect	text15
  3399  0667                     __ptext15:	
  3400 ;; *************** function ___lwmod *****************
  3401 ;; Defined at:
  3402 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  divisor         2    3[BANK0 ] unsigned int 
  3405 ;;  dividend        2    5[BANK0 ] unsigned int 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  counter         1    8[BANK0 ] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  2    3[BANK0 ] unsigned int 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       4       0       0       0
  3418 ;;      Locals:         0       1       0       0       0
  3419 ;;      Temps:          0       1       0       0       0
  3420 ;;      Totals:         0       6       0       0       0
  3421 ;;Total ram usage:        6 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    1
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_sprintf
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function ___lwmod
  3433  0667                     ___lwmod:
  3434  0667                     l1591:	
  3435                           ;incstack = 0
  3436                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3437                           
  3438  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0669  0849               	movf	___lwmod@divisor,w
  3441  066A  044A               	iorwf	___lwmod@divisor+1,w
  3442  066B  1903               	btfsc	3,2
  3443  066C  2E6E               	goto	u881
  3444  066D  2E6F               	goto	u880
  3445  066E                     u881:
  3446  066E  2E9E               	goto	l1609
  3447  066F                     u880:
  3448  066F                     l1593:
  3449  066F  01CE               	clrf	___lwmod@counter
  3450  0670  0ACE               	incf	___lwmod@counter,f
  3451  0671  2E7D               	goto	l1599
  3452  0672                     l1595:
  3453  0672  3001               	movlw	1
  3454  0673                     u895:
  3455  0673  1003               	clrc
  3456  0674  0DC9               	rlf	___lwmod@divisor,f
  3457  0675  0DCA               	rlf	___lwmod@divisor+1,f
  3458  0676  3EFF               	addlw	-1
  3459  0677  1D03               	skipz
  3460  0678  2E73               	goto	u895
  3461  0679                     l1597:
  3462  0679  3001               	movlw	1
  3463  067A  00CD               	movwf	??___lwmod
  3464  067B  084D               	movf	??___lwmod,w
  3465  067C  07CE               	addwf	___lwmod@counter,f
  3466  067D                     l1599:
  3467  067D  1FCA               	btfss	___lwmod@divisor+1,7
  3468  067E  2E80               	goto	u901
  3469  067F  2E81               	goto	u900
  3470  0680                     u901:
  3471  0680  2E72               	goto	l1595
  3472  0681                     u900:
  3473  0681                     l1601:
  3474  0681  084A               	movf	___lwmod@divisor+1,w
  3475  0682  024C               	subwf	___lwmod@dividend+1,w
  3476  0683  1D03               	skipz
  3477  0684  2E87               	goto	u915
  3478  0685  0849               	movf	___lwmod@divisor,w
  3479  0686  024B               	subwf	___lwmod@dividend,w
  3480  0687                     u915:
  3481  0687  1C03               	skipc
  3482  0688  2E8A               	goto	u911
  3483  0689  2E8B               	goto	u910
  3484  068A                     u911:
  3485  068A  2E91               	goto	l1605
  3486  068B                     u910:
  3487  068B                     l1603:
  3488  068B  0849               	movf	___lwmod@divisor,w
  3489  068C  02CB               	subwf	___lwmod@dividend,f
  3490  068D  084A               	movf	___lwmod@divisor+1,w
  3491  068E  1C03               	skipc
  3492  068F  03CC               	decf	___lwmod@dividend+1,f
  3493  0690  02CC               	subwf	___lwmod@dividend+1,f
  3494  0691                     l1605:
  3495  0691  3001               	movlw	1
  3496  0692                     u925:
  3497  0692  1003               	clrc
  3498  0693  0CCA               	rrf	___lwmod@divisor+1,f
  3499  0694  0CC9               	rrf	___lwmod@divisor,f
  3500  0695  3EFF               	addlw	-1
  3501  0696  1D03               	skipz
  3502  0697  2E92               	goto	u925
  3503  0698                     l1607:
  3504  0698  3001               	movlw	1
  3505  0699  02CE               	subwf	___lwmod@counter,f
  3506  069A  1D03               	btfss	3,2
  3507  069B  2E9D               	goto	u931
  3508  069C  2E9E               	goto	u930
  3509  069D                     u931:
  3510  069D  2E81               	goto	l1601
  3511  069E                     u930:
  3512  069E                     l1609:
  3513  069E  084C               	movf	___lwmod@dividend+1,w
  3514  069F  00CA               	movwf	?___lwmod+1
  3515  06A0  084B               	movf	___lwmod@dividend,w
  3516  06A1  00C9               	movwf	?___lwmod
  3517  06A2                     l709:
  3518  06A2  0008               	return
  3519  06A3                     __end_of___lwmod:
  3520                           
  3521                           	psect	text16
  3522  0621                     __ptext16:	
  3523 ;; *************** function ___lwdiv *****************
  3524 ;; Defined at:
  3525 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  divisor         2    3[COMMON] unsigned int 
  3528 ;;  dividend        2    5[COMMON] unsigned int 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  quotient        2    1[BANK0 ] unsigned int 
  3531 ;;  counter         1    0[BANK0 ] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    3[COMMON] unsigned int 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3541 ;;      Params:         4       0       0       0       0
  3542 ;;      Locals:         0       3       0       0       0
  3543 ;;      Temps:          1       0       0       0       0
  3544 ;;      Totals:         5       3       0       0       0
  3545 ;;Total ram usage:        8 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_sprintf
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           
  3556                           ;psect for function ___lwdiv
  3557  0621                     ___lwdiv:
  3558  0621                     l2045:	
  3559                           ;incstack = 0
  3560                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3561                           
  3562  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0623  01C7               	clrf	___lwdiv@quotient
  3565  0624  01C8               	clrf	___lwdiv@quotient+1
  3566  0625                     l2047:
  3567  0625  0873               	movf	___lwdiv@divisor,w
  3568  0626  0474               	iorwf	___lwdiv@divisor+1,w
  3569  0627  1903               	btfsc	3,2
  3570  0628  2E2A               	goto	u1371
  3571  0629  2E2B               	goto	u1370
  3572  062A                     u1371:
  3573  062A  2E62               	goto	l2067
  3574  062B                     u1370:
  3575  062B                     l2049:
  3576  062B  01C6               	clrf	___lwdiv@counter
  3577  062C  0AC6               	incf	___lwdiv@counter,f
  3578  062D  2E39               	goto	l2055
  3579  062E                     l2051:
  3580  062E  3001               	movlw	1
  3581  062F                     u1385:
  3582  062F  1003               	clrc
  3583  0630  0DF3               	rlf	___lwdiv@divisor,f
  3584  0631  0DF4               	rlf	___lwdiv@divisor+1,f
  3585  0632  3EFF               	addlw	-1
  3586  0633  1D03               	skipz
  3587  0634  2E2F               	goto	u1385
  3588  0635                     l2053:
  3589  0635  3001               	movlw	1
  3590  0636  00F7               	movwf	??___lwdiv
  3591  0637  0877               	movf	??___lwdiv,w
  3592  0638  07C6               	addwf	___lwdiv@counter,f
  3593  0639                     l2055:
  3594  0639  1FF4               	btfss	___lwdiv@divisor+1,7
  3595  063A  2E3C               	goto	u1391
  3596  063B  2E3D               	goto	u1390
  3597  063C                     u1391:
  3598  063C  2E2E               	goto	l2051
  3599  063D                     u1390:
  3600  063D                     l2057:
  3601  063D  3001               	movlw	1
  3602  063E                     u1405:
  3603  063E  1003               	clrc
  3604  063F  0DC7               	rlf	___lwdiv@quotient,f
  3605  0640  0DC8               	rlf	___lwdiv@quotient+1,f
  3606  0641  3EFF               	addlw	-1
  3607  0642  1D03               	skipz
  3608  0643  2E3E               	goto	u1405
  3609  0644  0874               	movf	___lwdiv@divisor+1,w
  3610  0645  0276               	subwf	___lwdiv@dividend+1,w
  3611  0646  1D03               	skipz
  3612  0647  2E4A               	goto	u1415
  3613  0648  0873               	movf	___lwdiv@divisor,w
  3614  0649  0275               	subwf	___lwdiv@dividend,w
  3615  064A                     u1415:
  3616  064A  1C03               	skipc
  3617  064B  2E4D               	goto	u1411
  3618  064C  2E4E               	goto	u1410
  3619  064D                     u1411:
  3620  064D  2E55               	goto	l2063
  3621  064E                     u1410:
  3622  064E                     l2059:
  3623  064E  0873               	movf	___lwdiv@divisor,w
  3624  064F  02F5               	subwf	___lwdiv@dividend,f
  3625  0650  0874               	movf	___lwdiv@divisor+1,w
  3626  0651  1C03               	skipc
  3627  0652  03F6               	decf	___lwdiv@dividend+1,f
  3628  0653  02F6               	subwf	___lwdiv@dividend+1,f
  3629  0654                     l2061:
  3630  0654  1447               	bsf	___lwdiv@quotient,0
  3631  0655                     l2063:
  3632  0655  3001               	movlw	1
  3633  0656                     u1425:
  3634  0656  1003               	clrc
  3635  0657  0CF4               	rrf	___lwdiv@divisor+1,f
  3636  0658  0CF3               	rrf	___lwdiv@divisor,f
  3637  0659  3EFF               	addlw	-1
  3638  065A  1D03               	skipz
  3639  065B  2E56               	goto	u1425
  3640  065C                     l2065:
  3641  065C  3001               	movlw	1
  3642  065D  02C6               	subwf	___lwdiv@counter,f
  3643  065E  1D03               	btfss	3,2
  3644  065F  2E61               	goto	u1431
  3645  0660  2E62               	goto	u1430
  3646  0661                     u1431:
  3647  0661  2E3D               	goto	l2057
  3648  0662                     u1430:
  3649  0662                     l2067:
  3650  0662  0848               	movf	___lwdiv@quotient+1,w
  3651  0663  00F4               	movwf	?___lwdiv+1
  3652  0664  0847               	movf	___lwdiv@quotient,w
  3653  0665  00F3               	movwf	?___lwdiv
  3654  0666                     l699:
  3655  0666  0008               	return
  3656  0667                     __end_of___lwdiv:
  3657                           
  3658                           	psect	text17
  3659  0FBF                     __ptext17:	
  3660 ;; *************** function _bcd_to_decimal *****************
  3661 ;; Defined at:
  3662 ;;		line 183 in file "main_prueba3_mini2.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  number          1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  number          1    7[COMMON] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      unsigned char 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         1       0       0       0       0
  3678 ;;      Temps:          0       3       0       0       0
  3679 ;;      Totals:         1       3       0       0       0
  3680 ;;Total ram usage:        4 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    2
  3683 ;; This function calls:
  3684 ;;		___bmul
  3685 ;; This function is called by:
  3686 ;;		_RTC_display
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _bcd_to_decimal
  3692  0FBF                     _bcd_to_decimal:
  3693                           
  3694                           ;incstack = 0
  3695                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  3696                           ;bcd_to_decimal@number stored from wreg
  3697  0FBF  00F7               	movwf	bcd_to_decimal@number
  3698  0FC0                     l2083:
  3699                           
  3700                           ;main_prueba3_mini2.c: 184:   return((number >> 4) * 10 + (number & 0x0F));
  3701  0FC0  300F               	movlw	15
  3702  0FC1  0577               	andwf	bcd_to_decimal@number,w
  3703  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  3705  0FC4  00C6               	movwf	??_bcd_to_decimal
  3706  0FC5  300A               	movlw	10
  3707  0FC6  00C7               	movwf	??_bcd_to_decimal+1
  3708  0FC7  0847               	movf	??_bcd_to_decimal+1,w
  3709  0FC8  00F3               	movwf	___bmul@multiplicand
  3710  0FC9  0877               	movf	bcd_to_decimal@number,w
  3711  0FCA  00C8               	movwf	??_bcd_to_decimal+2
  3712  0FCB  3004               	movlw	4
  3713  0FCC                     u1445:
  3714  0FCC  1003               	clrc
  3715  0FCD  0CC8               	rrf	??_bcd_to_decimal+2,f
  3716  0FCE  3EFF               	addlw	-1
  3717  0FCF  1D03               	skipz
  3718  0FD0  2FCC               	goto	u1445
  3719  0FD1  0848               	movf	??_bcd_to_decimal+2,w
  3720  0FD2  120A  158A  2790  120A  158A  	fcall	___bmul
  3721  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0FD9  0746               	addwf	??_bcd_to_decimal,w
  3724  0FDA                     l132:
  3725  0FDA  0008               	return
  3726  0FDB                     __end_of_bcd_to_decimal:
  3727                           
  3728                           	psect	text18
  3729  0F90                     __ptext18:	
  3730 ;; *************** function ___bmul *****************
  3731 ;; Defined at:
  3732 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  multiplier      1    wreg     unsigned char 
  3735 ;;  multiplicand    1    3[COMMON] unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  multiplier      1    6[COMMON] unsigned char 
  3738 ;;  product         1    5[COMMON] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      unsigned char 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         1       0       0       0       0
  3749 ;;      Locals:         2       0       0       0       0
  3750 ;;      Temps:          1       0       0       0       0
  3751 ;;      Totals:         4       0       0       0       0
  3752 ;;Total ram usage:        4 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    1
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_bcd_to_decimal
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           
  3763                           ;psect for function ___bmul
  3764  0F90                     ___bmul:
  3765                           
  3766                           ;incstack = 0
  3767                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3768                           ;___bmul@multiplier stored from wreg
  3769  0F90  00F6               	movwf	___bmul@multiplier
  3770  0F91                     l1527:
  3771  0F91  01F5               	clrf	___bmul@product
  3772  0F92                     l1529:
  3773  0F92  1C76               	btfss	___bmul@multiplier,0
  3774  0F93  2F95               	goto	u721
  3775  0F94  2F96               	goto	u720
  3776  0F95                     u721:
  3777  0F95  2F9A               	goto	l1533
  3778  0F96                     u720:
  3779  0F96                     l1531:
  3780  0F96  0873               	movf	___bmul@multiplicand,w
  3781  0F97  00F4               	movwf	??___bmul
  3782  0F98  0874               	movf	??___bmul,w
  3783  0F99  07F5               	addwf	___bmul@product,f
  3784  0F9A                     l1533:
  3785  0F9A  1003               	clrc
  3786  0F9B  0DF3               	rlf	___bmul@multiplicand,f
  3787  0F9C                     l1535:
  3788  0F9C  1003               	clrc
  3789  0F9D  0CF6               	rrf	___bmul@multiplier,f
  3790  0F9E  0876               	movf	___bmul@multiplier,w
  3791  0F9F  1D03               	btfss	3,2
  3792  0FA0  2FA2               	goto	u731
  3793  0FA1  2FA3               	goto	u730
  3794  0FA2                     u731:
  3795  0FA2  2F92               	goto	l1529
  3796  0FA3                     u730:
  3797  0FA3                     l1537:
  3798  0FA3  0875               	movf	___bmul@product,w
  3799  0FA4                     l453:
  3800  0FA4  0008               	return
  3801  0FA5                     __end_of___bmul:
  3802                           
  3803                           	psect	text19
  3804  051C                     __ptext19:	
  3805 ;; *************** function ___awmod *****************
  3806 ;; Defined at:
  3807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  divisor         2    3[COMMON] int 
  3810 ;;  dividend        2    5[COMMON] int 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  sign            1    1[BANK0 ] unsigned char 
  3813 ;;  counter         1    0[BANK0 ] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  2    3[COMMON] int 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         4       0       0       0       0
  3824 ;;      Locals:         0       2       0       0       0
  3825 ;;      Temps:          1       0       0       0       0
  3826 ;;      Totals:         5       2       0       0       0
  3827 ;;Total ram usage:        7 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_RTC_display
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function ___awmod
  3839  051C                     ___awmod:
  3840  051C                     l2181:	
  3841                           ;incstack = 0
  3842                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3843                           
  3844  051C  1283               	bcf	3,5	;RP0=0, select bank0
  3845  051D  1303               	bcf	3,6	;RP1=0, select bank0
  3846  051E  01C7               	clrf	___awmod@sign
  3847  051F                     l2183:
  3848  051F  1FF6               	btfss	___awmod@dividend+1,7
  3849  0520  2D22               	goto	u1561
  3850  0521  2D23               	goto	u1560
  3851  0522                     u1561:
  3852  0522  2D2A               	goto	l2189
  3853  0523                     u1560:
  3854  0523                     l2185:
  3855  0523  09F5               	comf	___awmod@dividend,f
  3856  0524  09F6               	comf	___awmod@dividend+1,f
  3857  0525  0AF5               	incf	___awmod@dividend,f
  3858  0526  1903               	skipnz
  3859  0527  0AF6               	incf	___awmod@dividend+1,f
  3860  0528                     l2187:
  3861  0528  01C7               	clrf	___awmod@sign
  3862  0529  0AC7               	incf	___awmod@sign,f
  3863  052A                     l2189:
  3864  052A  1FF4               	btfss	___awmod@divisor+1,7
  3865  052B  2D2D               	goto	u1571
  3866  052C  2D2E               	goto	u1570
  3867  052D                     u1571:
  3868  052D  2D33               	goto	l2193
  3869  052E                     u1570:
  3870  052E                     l2191:
  3871  052E  09F3               	comf	___awmod@divisor,f
  3872  052F  09F4               	comf	___awmod@divisor+1,f
  3873  0530  0AF3               	incf	___awmod@divisor,f
  3874  0531  1903               	skipnz
  3875  0532  0AF4               	incf	___awmod@divisor+1,f
  3876  0533                     l2193:
  3877  0533  0873               	movf	___awmod@divisor,w
  3878  0534  0474               	iorwf	___awmod@divisor+1,w
  3879  0535  1903               	btfsc	3,2
  3880  0536  2D38               	goto	u1581
  3881  0537  2D39               	goto	u1580
  3882  0538                     u1581:
  3883  0538  2D68               	goto	l2211
  3884  0539                     u1580:
  3885  0539                     l2195:
  3886  0539  01C6               	clrf	___awmod@counter
  3887  053A  0AC6               	incf	___awmod@counter,f
  3888  053B  2D47               	goto	l2201
  3889  053C                     l2197:
  3890  053C  3001               	movlw	1
  3891  053D                     u1595:
  3892  053D  1003               	clrc
  3893  053E  0DF3               	rlf	___awmod@divisor,f
  3894  053F  0DF4               	rlf	___awmod@divisor+1,f
  3895  0540  3EFF               	addlw	-1
  3896  0541  1D03               	skipz
  3897  0542  2D3D               	goto	u1595
  3898  0543                     l2199:
  3899  0543  3001               	movlw	1
  3900  0544  00F7               	movwf	??___awmod
  3901  0545  0877               	movf	??___awmod,w
  3902  0546  07C6               	addwf	___awmod@counter,f
  3903  0547                     l2201:
  3904  0547  1FF4               	btfss	___awmod@divisor+1,7
  3905  0548  2D4A               	goto	u1601
  3906  0549  2D4B               	goto	u1600
  3907  054A                     u1601:
  3908  054A  2D3C               	goto	l2197
  3909  054B                     u1600:
  3910  054B                     l2203:
  3911  054B  0874               	movf	___awmod@divisor+1,w
  3912  054C  0276               	subwf	___awmod@dividend+1,w
  3913  054D  1D03               	skipz
  3914  054E  2D51               	goto	u1615
  3915  054F  0873               	movf	___awmod@divisor,w
  3916  0550  0275               	subwf	___awmod@dividend,w
  3917  0551                     u1615:
  3918  0551  1C03               	skipc
  3919  0552  2D54               	goto	u1611
  3920  0553  2D55               	goto	u1610
  3921  0554                     u1611:
  3922  0554  2D5B               	goto	l2207
  3923  0555                     u1610:
  3924  0555                     l2205:
  3925  0555  0873               	movf	___awmod@divisor,w
  3926  0556  02F5               	subwf	___awmod@dividend,f
  3927  0557  0874               	movf	___awmod@divisor+1,w
  3928  0558  1C03               	skipc
  3929  0559  03F6               	decf	___awmod@dividend+1,f
  3930  055A  02F6               	subwf	___awmod@dividend+1,f
  3931  055B                     l2207:
  3932  055B  3001               	movlw	1
  3933  055C                     u1625:
  3934  055C  1003               	clrc
  3935  055D  0CF4               	rrf	___awmod@divisor+1,f
  3936  055E  0CF3               	rrf	___awmod@divisor,f
  3937  055F  3EFF               	addlw	-1
  3938  0560  1D03               	skipz
  3939  0561  2D5C               	goto	u1625
  3940  0562                     l2209:
  3941  0562  3001               	movlw	1
  3942  0563  02C6               	subwf	___awmod@counter,f
  3943  0564  1D03               	btfss	3,2
  3944  0565  2D67               	goto	u1631
  3945  0566  2D68               	goto	u1630
  3946  0567                     u1631:
  3947  0567  2D4B               	goto	l2203
  3948  0568                     u1630:
  3949  0568                     l2211:
  3950  0568  0847               	movf	___awmod@sign,w
  3951  0569  1903               	btfsc	3,2
  3952  056A  2D6C               	goto	u1641
  3953  056B  2D6D               	goto	u1640
  3954  056C                     u1641:
  3955  056C  2D72               	goto	l2215
  3956  056D                     u1640:
  3957  056D                     l2213:
  3958  056D  09F5               	comf	___awmod@dividend,f
  3959  056E  09F6               	comf	___awmod@dividend+1,f
  3960  056F  0AF5               	incf	___awmod@dividend,f
  3961  0570  1903               	skipnz
  3962  0571  0AF6               	incf	___awmod@dividend+1,f
  3963  0572                     l2215:
  3964  0572  0876               	movf	___awmod@dividend+1,w
  3965  0573  00F4               	movwf	?___awmod+1
  3966  0574  0875               	movf	___awmod@dividend,w
  3967  0575  00F3               	movwf	?___awmod
  3968  0576                     l593:
  3969  0576  0008               	return
  3970  0577                     __end_of___awmod:
  3971                           
  3972                           	psect	text20
  3973  044B                     __ptext20:	
  3974 ;; *************** function ___awdiv *****************
  3975 ;; Defined at:
  3976 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  divisor         2    3[COMMON] int 
  3979 ;;  dividend        2    5[COMMON] int 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  quotient        2    2[BANK0 ] int 
  3982 ;;  sign            1    1[BANK0 ] unsigned char 
  3983 ;;  counter         1    0[BANK0 ] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  2    3[COMMON] int 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         4       0       0       0       0
  3994 ;;      Locals:         0       4       0       0       0
  3995 ;;      Temps:          1       0       0       0       0
  3996 ;;      Totals:         5       4       0       0       0
  3997 ;;Total ram usage:        9 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    1
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_RTC_display
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function ___awdiv
  4009  044B                     ___awdiv:
  4010  044B                     l1737:	
  4011                           ;incstack = 0
  4012                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4013                           
  4014  044B  1283               	bcf	3,5	;RP0=0, select bank0
  4015  044C  1303               	bcf	3,6	;RP1=0, select bank0
  4016  044D  01C7               	clrf	___awdiv@sign
  4017  044E                     l1739:
  4018  044E  1FF4               	btfss	___awdiv@divisor+1,7
  4019  044F  2C51               	goto	u1071
  4020  0450  2C52               	goto	u1070
  4021  0451                     u1071:
  4022  0451  2C59               	goto	l1745
  4023  0452                     u1070:
  4024  0452                     l1741:
  4025  0452  09F3               	comf	___awdiv@divisor,f
  4026  0453  09F4               	comf	___awdiv@divisor+1,f
  4027  0454  0AF3               	incf	___awdiv@divisor,f
  4028  0455  1903               	skipnz
  4029  0456  0AF4               	incf	___awdiv@divisor+1,f
  4030  0457                     l1743:
  4031  0457  01C7               	clrf	___awdiv@sign
  4032  0458  0AC7               	incf	___awdiv@sign,f
  4033  0459                     l1745:
  4034  0459  1FF6               	btfss	___awdiv@dividend+1,7
  4035  045A  2C5C               	goto	u1081
  4036  045B  2C5D               	goto	u1080
  4037  045C                     u1081:
  4038  045C  2C66               	goto	l1751
  4039  045D                     u1080:
  4040  045D                     l1747:
  4041  045D  09F5               	comf	___awdiv@dividend,f
  4042  045E  09F6               	comf	___awdiv@dividend+1,f
  4043  045F  0AF5               	incf	___awdiv@dividend,f
  4044  0460  1903               	skipnz
  4045  0461  0AF6               	incf	___awdiv@dividend+1,f
  4046  0462                     l1749:
  4047  0462  3001               	movlw	1
  4048  0463  00F7               	movwf	??___awdiv
  4049  0464  0877               	movf	??___awdiv,w
  4050  0465  06C7               	xorwf	___awdiv@sign,f
  4051  0466                     l1751:
  4052  0466  01C8               	clrf	___awdiv@quotient
  4053  0467  01C9               	clrf	___awdiv@quotient+1
  4054  0468                     l1753:
  4055  0468  0873               	movf	___awdiv@divisor,w
  4056  0469  0474               	iorwf	___awdiv@divisor+1,w
  4057  046A  1903               	btfsc	3,2
  4058  046B  2C6D               	goto	u1091
  4059  046C  2C6E               	goto	u1090
  4060  046D                     u1091:
  4061  046D  2CA5               	goto	l1773
  4062  046E                     u1090:
  4063  046E                     l1755:
  4064  046E  01C6               	clrf	___awdiv@counter
  4065  046F  0AC6               	incf	___awdiv@counter,f
  4066  0470  2C7C               	goto	l1761
  4067  0471                     l1757:
  4068  0471  3001               	movlw	1
  4069  0472                     u1105:
  4070  0472  1003               	clrc
  4071  0473  0DF3               	rlf	___awdiv@divisor,f
  4072  0474  0DF4               	rlf	___awdiv@divisor+1,f
  4073  0475  3EFF               	addlw	-1
  4074  0476  1D03               	skipz
  4075  0477  2C72               	goto	u1105
  4076  0478                     l1759:
  4077  0478  3001               	movlw	1
  4078  0479  00F7               	movwf	??___awdiv
  4079  047A  0877               	movf	??___awdiv,w
  4080  047B  07C6               	addwf	___awdiv@counter,f
  4081  047C                     l1761:
  4082  047C  1FF4               	btfss	___awdiv@divisor+1,7
  4083  047D  2C7F               	goto	u1111
  4084  047E  2C80               	goto	u1110
  4085  047F                     u1111:
  4086  047F  2C71               	goto	l1757
  4087  0480                     u1110:
  4088  0480                     l1763:
  4089  0480  3001               	movlw	1
  4090  0481                     u1125:
  4091  0481  1003               	clrc
  4092  0482  0DC8               	rlf	___awdiv@quotient,f
  4093  0483  0DC9               	rlf	___awdiv@quotient+1,f
  4094  0484  3EFF               	addlw	-1
  4095  0485  1D03               	skipz
  4096  0486  2C81               	goto	u1125
  4097  0487  0874               	movf	___awdiv@divisor+1,w
  4098  0488  0276               	subwf	___awdiv@dividend+1,w
  4099  0489  1D03               	skipz
  4100  048A  2C8D               	goto	u1135
  4101  048B  0873               	movf	___awdiv@divisor,w
  4102  048C  0275               	subwf	___awdiv@dividend,w
  4103  048D                     u1135:
  4104  048D  1C03               	skipc
  4105  048E  2C90               	goto	u1131
  4106  048F  2C91               	goto	u1130
  4107  0490                     u1131:
  4108  0490  2C98               	goto	l1769
  4109  0491                     u1130:
  4110  0491                     l1765:
  4111  0491  0873               	movf	___awdiv@divisor,w
  4112  0492  02F5               	subwf	___awdiv@dividend,f
  4113  0493  0874               	movf	___awdiv@divisor+1,w
  4114  0494  1C03               	skipc
  4115  0495  03F6               	decf	___awdiv@dividend+1,f
  4116  0496  02F6               	subwf	___awdiv@dividend+1,f
  4117  0497                     l1767:
  4118  0497  1448               	bsf	___awdiv@quotient,0
  4119  0498                     l1769:
  4120  0498  3001               	movlw	1
  4121  0499                     u1145:
  4122  0499  1003               	clrc
  4123  049A  0CF4               	rrf	___awdiv@divisor+1,f
  4124  049B  0CF3               	rrf	___awdiv@divisor,f
  4125  049C  3EFF               	addlw	-1
  4126  049D  1D03               	skipz
  4127  049E  2C99               	goto	u1145
  4128  049F                     l1771:
  4129  049F  3001               	movlw	1
  4130  04A0  02C6               	subwf	___awdiv@counter,f
  4131  04A1  1D03               	btfss	3,2
  4132  04A2  2CA4               	goto	u1151
  4133  04A3  2CA5               	goto	u1150
  4134  04A4                     u1151:
  4135  04A4  2C80               	goto	l1763
  4136  04A5                     u1150:
  4137  04A5                     l1773:
  4138  04A5  0847               	movf	___awdiv@sign,w
  4139  04A6  1903               	btfsc	3,2
  4140  04A7  2CA9               	goto	u1161
  4141  04A8  2CAA               	goto	u1160
  4142  04A9                     u1161:
  4143  04A9  2CAF               	goto	l1777
  4144  04AA                     u1160:
  4145  04AA                     l1775:
  4146  04AA  09C8               	comf	___awdiv@quotient,f
  4147  04AB  09C9               	comf	___awdiv@quotient+1,f
  4148  04AC  0AC8               	incf	___awdiv@quotient,f
  4149  04AD  1903               	skipnz
  4150  04AE  0AC9               	incf	___awdiv@quotient+1,f
  4151  04AF                     l1777:
  4152  04AF  0849               	movf	___awdiv@quotient+1,w
  4153  04B0  00F4               	movwf	?___awdiv+1
  4154  04B1  0848               	movf	___awdiv@quotient,w
  4155  04B2  00F3               	movwf	?___awdiv
  4156  04B3                     l580:
  4157  04B3  0008               	return
  4158  04B4                     __end_of___awdiv:
  4159                           
  4160                           	psect	text21
  4161  0FDB                     __ptext21:	
  4162 ;; *************** function _Lcd_Write_String *****************
  4163 ;; Defined at:
  4164 ;;		line 71 in file "LCD.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  a               1    wreg     PTR unsigned char 
  4167 ;;		 -> Time(15), Date(15), 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  a               1    2[BANK0 ] PTR unsigned char 
  4170 ;;		 -> Time(15), Date(15), 
  4171 ;;  i               2    0[BANK0 ] int 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4181 ;;      Params:         0       0       0       0       0
  4182 ;;      Locals:         0       3       0       0       0
  4183 ;;      Temps:          1       0       0       0       0
  4184 ;;      Totals:         1       3       0       0       0
  4185 ;;Total ram usage:        4 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    3
  4188 ;; This function calls:
  4189 ;;		_Lcd_Write_Char
  4190 ;; This function is called by:
  4191 ;;		_RTC_display
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _Lcd_Write_String
  4197  0FDB                     _Lcd_Write_String:
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4201                           ;Lcd_Write_String@a stored from wreg
  4202  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4203  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0FDD  00C8               	movwf	Lcd_Write_String@a
  4205  0FDE                     l2161:
  4206                           
  4207                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  4208  0FDE  01C6               	clrf	Lcd_Write_String@i
  4209  0FDF  01C7               	clrf	Lcd_Write_String@i+1
  4210  0FE0  2FF4               	goto	l2167
  4211  0FE1                     l2163:
  4212                           
  4213                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  4214  0FE1  0846               	movf	Lcd_Write_String@i,w
  4215  0FE2  0748               	addwf	Lcd_Write_String@a,w
  4216  0FE3  00F6               	movwf	??_Lcd_Write_String
  4217  0FE4  0876               	movf	??_Lcd_Write_String,w
  4218  0FE5  0084               	movwf	4
  4219  0FE6  0800               	movf	0,w
  4220  0FE7  120A  118A  27E7  120A  158A  	fcall	_Lcd_Write_Char
  4221  0FEC                     l2165:
  4222  0FEC  3001               	movlw	1
  4223  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0FEF  07C6               	addwf	Lcd_Write_String@i,f
  4226  0FF0  1803               	skipnc
  4227  0FF1  0AC7               	incf	Lcd_Write_String@i+1,f
  4228  0FF2  3000               	movlw	0
  4229  0FF3  07C7               	addwf	Lcd_Write_String@i+1,f
  4230  0FF4                     l2167:
  4231  0FF4  0846               	movf	Lcd_Write_String@i,w
  4232  0FF5  0748               	addwf	Lcd_Write_String@a,w
  4233  0FF6  00F6               	movwf	??_Lcd_Write_String
  4234  0FF7  0876               	movf	??_Lcd_Write_String,w
  4235  0FF8  0084               	movwf	4
  4236  0FF9  1383               	bcf	3,7	;select IRP bank0
  4237  0FFA  0800               	movf	0,w
  4238  0FFB  1D03               	btfss	3,2
  4239  0FFC  2FFE               	goto	u1541
  4240  0FFD  2FFF               	goto	u1540
  4241  0FFE                     u1541:
  4242  0FFE  2FE1               	goto	l2163
  4243  0FFF                     u1540:
  4244  0FFF                     l238:
  4245  0FFF  0008               	return
  4246  1000                     __end_of_Lcd_Write_String:
  4247                           
  4248                           	psect	text22
  4249  07E7                     __ptext22:	
  4250 ;; *************** function _Lcd_Write_Char *****************
  4251 ;; Defined at:
  4252 ;;		line 62 in file "LCD.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  a               1    wreg     unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  a               1    5[COMMON] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, pclath, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         1       0       0       0       0
  4268 ;;      Temps:          1       0       0       0       0
  4269 ;;      Totals:         2       0       0       0       0
  4270 ;;Total ram usage:        2 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    2
  4273 ;; This function calls:
  4274 ;;		_Lcd_Port
  4275 ;; This function is called by:
  4276 ;;		_Lcd_Write_String
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _Lcd_Write_Char
  4282  07E7                     _Lcd_Write_Char:
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4286                           ;Lcd_Write_Char@a stored from wreg
  4287  07E7  00F5               	movwf	Lcd_Write_Char@a
  4288  07E8                     l2011:
  4289                           
  4290                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  4291  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  4292  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  4293  07EA  1409               	bsf	9,0	;volatile
  4294  07EB                     l2013:
  4295                           
  4296                           ;LCD.c: 64:    Lcd_Port(a);
  4297  07EB  0875               	movf	Lcd_Write_Char@a,w
  4298  07EC  120A  158A  26EE  120A  118A  	fcall	_Lcd_Port
  4299  07F1                     l2015:
  4300                           
  4301                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  4302  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4303  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  4304  07F3  1509               	bsf	9,2	;volatile
  4305  07F4                     l2017:
  4306                           
  4307                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  4308  07F4  301A               	movlw	26
  4309  07F5  00F4               	movwf	??_Lcd_Write_Char
  4310  07F6                     u1677:
  4311  07F6  0BF4               	decfsz	??_Lcd_Write_Char,f
  4312  07F7  2FF6               	goto	u1677
  4313  07F8  0000               	nop
  4314  07F9                     l2019:
  4315                           
  4316                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  4317  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  4318  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  4319  07FB  1109               	bcf	9,2	;volatile
  4320  07FC                     l232:
  4321  07FC  0008               	return
  4322  07FD                     __end_of_Lcd_Write_Char:
  4323                           
  4324                           	psect	text23
  4325  07C1                     __ptext23:	
  4326 ;; *************** function _Lcd_Set_Cursor *****************
  4327 ;; Defined at:
  4328 ;;		line 49 in file "LCD.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  a               1    wreg     unsigned char 
  4331 ;;  b               1    7[COMMON] unsigned char 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  a               1    1[BANK0 ] unsigned char 
  4334 ;;  temp            1    2[BANK0 ] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, pclath, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4344 ;;      Params:         1       0       0       0       0
  4345 ;;      Locals:         0       2       0       0       0
  4346 ;;      Temps:          0       1       0       0       0
  4347 ;;      Totals:         1       3       0       0       0
  4348 ;;Total ram usage:        4 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    3
  4351 ;; This function calls:
  4352 ;;		_Lcd_Cmd
  4353 ;; This function is called by:
  4354 ;;		_RTC_display
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _Lcd_Set_Cursor
  4360  07C1                     _Lcd_Set_Cursor:
  4361                           
  4362                           ;incstack = 0
  4363                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4364                           ;Lcd_Set_Cursor@a stored from wreg
  4365  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  4366  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  4367  07C3  00C7               	movwf	Lcd_Set_Cursor@a
  4368  07C4                     l2149:
  4369                           
  4370                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  4371  07C4  0347               	decf	Lcd_Set_Cursor@a,w
  4372  07C5  1D03               	btfss	3,2
  4373  07C6  2FC8               	goto	u1521
  4374  07C7  2FC9               	goto	u1520
  4375  07C8                     u1521:
  4376  07C8  2FD5               	goto	l2155
  4377  07C9                     u1520:
  4378  07C9                     l2151:
  4379                           
  4380                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  4381  07C9  0877               	movf	Lcd_Set_Cursor@b,w
  4382  07CA  3E7F               	addlw	127
  4383  07CB  00C6               	movwf	??_Lcd_Set_Cursor
  4384  07CC  0846               	movf	??_Lcd_Set_Cursor,w
  4385  07CD  00C8               	movwf	Lcd_Set_Cursor@temp
  4386  07CE                     l2153:
  4387                           
  4388                           ;LCD.c: 53:         Lcd_Cmd(temp);
  4389  07CE  0848               	movf	Lcd_Set_Cursor@temp,w
  4390  07CF  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4391                           
  4392                           ;LCD.c: 54:  }
  4393  07D4  2FE6               	goto	l229
  4394  07D5                     l2155:
  4395  07D5  3002               	movlw	2
  4396  07D6  0647               	xorwf	Lcd_Set_Cursor@a,w
  4397  07D7  1D03               	btfss	3,2
  4398  07D8  2FDA               	goto	u1531
  4399  07D9  2FDB               	goto	u1530
  4400  07DA                     u1531:
  4401  07DA  2FE6               	goto	l229
  4402  07DB                     u1530:
  4403  07DB                     l2157:
  4404                           
  4405                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  4406  07DB  0877               	movf	Lcd_Set_Cursor@b,w
  4407  07DC  3EBF               	addlw	191
  4408  07DD  00C6               	movwf	??_Lcd_Set_Cursor
  4409  07DE  0846               	movf	??_Lcd_Set_Cursor,w
  4410  07DF  00C8               	movwf	Lcd_Set_Cursor@temp
  4411  07E0                     l2159:
  4412                           
  4413                           ;LCD.c: 57:   Lcd_Cmd(temp);
  4414  07E0  0848               	movf	Lcd_Set_Cursor@temp,w
  4415  07E1  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4416  07E6                     l229:
  4417  07E6  0008               	return
  4418  07E7                     __end_of_Lcd_Set_Cursor:
  4419                           
  4420                           	psect	text24
  4421  05D1                     __ptext24:	
  4422 ;; *************** function _Lcd_Init *****************
  4423 ;; Defined at:
  4424 ;;		line 15 in file "LCD.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0, pclath, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4438 ;;      Params:         0       0       0       0       0
  4439 ;;      Locals:         0       0       0       0       0
  4440 ;;      Temps:          0       2       0       0       0
  4441 ;;      Totals:         0       2       0       0       0
  4442 ;;Total ram usage:        2 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    3
  4445 ;; This function calls:
  4446 ;;		_Lcd_Cmd
  4447 ;;		_Lcd_Port
  4448 ;; This function is called by:
  4449 ;;		_main
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function _Lcd_Init
  4455  05D1                     _Lcd_Init:
  4456  05D1                     l2249:	
  4457                           ;incstack = 0
  4458                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4459                           
  4460                           
  4461                           ;LCD.c: 16:   Lcd_Port(0x00);
  4462  05D1  3000               	movlw	0
  4463  05D2  120A  158A  26EE  120A  118A  	fcall	_Lcd_Port
  4464  05D7                     l2251:
  4465                           
  4466                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  4467  05D7  3034               	movlw	52
  4468  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  4469  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  4470  05DA  00C7               	movwf	??_Lcd_Init+1
  4471  05DB  30F1               	movlw	241
  4472  05DC  00C6               	movwf	??_Lcd_Init
  4473  05DD                     u1687:
  4474  05DD  0BC6               	decfsz	??_Lcd_Init,f
  4475  05DE  2DDD               	goto	u1687
  4476  05DF  0BC7               	decfsz	??_Lcd_Init+1,f
  4477  05E0  2DDD               	goto	u1687
  4478  05E1                     l2253:
  4479                           
  4480                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  4481  05E1  3030               	movlw	48
  4482  05E2  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4483                           
  4484                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4485  05E7  300D               	movlw	13
  4486  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  4487  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  4488  05EA  00C7               	movwf	??_Lcd_Init+1
  4489  05EB  30FB               	movlw	251
  4490  05EC  00C6               	movwf	??_Lcd_Init
  4491  05ED                     u1697:
  4492  05ED  0BC6               	decfsz	??_Lcd_Init,f
  4493  05EE  2DED               	goto	u1697
  4494  05EF  0BC7               	decfsz	??_Lcd_Init+1,f
  4495  05F0  2DED               	goto	u1697
  4496  05F1                     l2255:
  4497                           
  4498                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  4499  05F1  3030               	movlw	48
  4500  05F2  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4501  05F7                     l2257:
  4502                           
  4503                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4504  05F7  301D               	movlw	29
  4505  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  4506  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  4507  05FA  00C7               	movwf	??_Lcd_Init+1
  4508  05FB  3090               	movlw	144
  4509  05FC  00C6               	movwf	??_Lcd_Init
  4510  05FD                     u1707:
  4511  05FD  0BC6               	decfsz	??_Lcd_Init,f
  4512  05FE  2DFD               	goto	u1707
  4513  05FF  0BC7               	decfsz	??_Lcd_Init+1,f
  4514  0600  2DFD               	goto	u1707
  4515  0601  0000               	nop
  4516                           
  4517                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  4518  0602  3030               	movlw	48
  4519  0603  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4520                           
  4521                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  4522  0608  3038               	movlw	56
  4523  0609  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4524                           
  4525                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  4526  060E  300C               	movlw	12
  4527  060F  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4528                           
  4529                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  4530  0614  3001               	movlw	1
  4531  0615  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4532                           
  4533                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  4534  061A  3006               	movlw	6
  4535  061B  120A  158A  27A5  120A  118A  	fcall	_Lcd_Cmd
  4536  0620                     l214:
  4537  0620  0008               	return
  4538  0621                     __end_of_Lcd_Init:
  4539                           
  4540                           	psect	text25
  4541  0F52                     __ptext25:	
  4542 ;; *************** function _Lcd_Clear *****************
  4543 ;; Defined at:
  4544 ;;		line 43 in file "LCD.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    3
  4565 ;; This function calls:
  4566 ;;		_Lcd_Cmd
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function _Lcd_Clear
  4574  0F52                     _Lcd_Clear:
  4575  0F52                     l2259:	
  4576                           ;incstack = 0
  4577                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4578                           
  4579                           
  4580                           ;LCD.c: 44:  Lcd_Cmd(0);
  4581  0F52  3000               	movlw	0
  4582  0F53  120A  158A  27A5  120A  158A  	fcall	_Lcd_Cmd
  4583                           
  4584                           ;LCD.c: 45:  Lcd_Cmd(1);
  4585  0F58  3001               	movlw	1
  4586  0F59  120A  158A  27A5  120A  158A  	fcall	_Lcd_Cmd
  4587  0F5E                     l223:
  4588  0F5E  0008               	return
  4589  0F5F                     __end_of_Lcd_Clear:
  4590                           
  4591                           	psect	text26
  4592  0FA5                     __ptext26:	
  4593 ;; *************** function _Lcd_Cmd *****************
  4594 ;; Defined at:
  4595 ;;		line 34 in file "LCD.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  a               1    wreg     unsigned char 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  a               1    6[COMMON] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0, pclath, cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4609 ;;      Params:         0       0       0       0       0
  4610 ;;      Locals:         1       0       0       0       0
  4611 ;;      Temps:          2       0       0       0       0
  4612 ;;      Totals:         3       0       0       0       0
  4613 ;;Total ram usage:        3 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    2
  4616 ;; This function calls:
  4617 ;;		_Lcd_Port
  4618 ;; This function is called by:
  4619 ;;		_Lcd_Init
  4620 ;;		_Lcd_Clear
  4621 ;;		_Lcd_Set_Cursor
  4622 ;;		_Lcd_Shift_Right
  4623 ;;		_Lcd_Shift_Left
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function _Lcd_Cmd
  4629  0FA5                     _Lcd_Cmd:
  4630                           
  4631                           ;incstack = 0
  4632                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4633                           ;Lcd_Cmd@a stored from wreg
  4634  0FA5  00F6               	movwf	Lcd_Cmd@a
  4635  0FA6                     l2001:
  4636                           
  4637                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  4638  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0FA8  1009               	bcf	9,0	;volatile
  4641  0FA9                     l2003:
  4642                           
  4643                           ;LCD.c: 36:  Lcd_Port(a);
  4644  0FA9  0876               	movf	Lcd_Cmd@a,w
  4645  0FAA  120A  158A  26EE  120A  158A  	fcall	_Lcd_Port
  4646  0FAF                     l2005:
  4647                           
  4648                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  4649  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4650  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4651  0FB1  1509               	bsf	9,2	;volatile
  4652  0FB2                     l2007:
  4653                           
  4654                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  4655  0FB2  300B               	movlw	11
  4656  0FB3  00F5               	movwf	??_Lcd_Cmd+1
  4657  0FB4  3062               	movlw	98
  4658  0FB5  00F4               	movwf	??_Lcd_Cmd
  4659  0FB6                     u1717:
  4660  0FB6  0BF4               	decfsz	??_Lcd_Cmd,f
  4661  0FB7  2FB6               	goto	u1717
  4662  0FB8  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4663  0FB9  2FB6               	goto	u1717
  4664  0FBA  0000               	nop
  4665  0FBB                     l2009:
  4666                           
  4667                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  4668  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  4669  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  4670  0FBD  1109               	bcf	9,2	;volatile
  4671  0FBE                     l220:
  4672  0FBE  0008               	return
  4673  0FBF                     __end_of_Lcd_Cmd:
  4674                           
  4675                           	psect	text27
  4676  0EEE                     __ptext27:	
  4677 ;; *************** function _Lcd_Port *****************
  4678 ;; Defined at:
  4679 ;;		line 30 in file "LCD.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  a               1    wreg     unsigned char 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  a               1    3[COMMON] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4693 ;;      Params:         0       0       0       0       0
  4694 ;;      Locals:         1       0       0       0       0
  4695 ;;      Temps:          0       0       0       0       0
  4696 ;;      Totals:         1       0       0       0       0
  4697 ;;Total ram usage:        1 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    1
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_Lcd_Init
  4704 ;;		_Lcd_Cmd
  4705 ;;		_Lcd_Write_Char
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _Lcd_Port
  4711  0EEE                     _Lcd_Port:
  4712                           
  4713                           ;incstack = 0
  4714                           ; Regs used in _Lcd_Port: [wreg]
  4715                           ;Lcd_Port@a stored from wreg
  4716  0EEE  00F3               	movwf	Lcd_Port@a
  4717  0EEF                     l1995:
  4718                           
  4719                           ;LCD.c: 31:     PORTD = a;
  4720  0EEF  0873               	movf	Lcd_Port@a,w
  4721  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0EF2  0088               	movwf	8	;volatile
  4724  0EF3                     l217:
  4725  0EF3  0008               	return
  4726  0EF4                     __end_of_Lcd_Port:
  4727                           
  4728                           	psect	text28
  4729  0F08                     __ptext28:	
  4730 ;; *************** function _I2C_Master_RepeatedStart *****************
  4731 ;; Defined at:
  4732 ;;		line 64 in file "I2C.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         0       0       0       0       0
  4747 ;;      Locals:         0       0       0       0       0
  4748 ;;      Temps:          0       0       0       0       0
  4749 ;;      Totals:         0       0       0       0       0
  4750 ;;Total ram usage:        0 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    2
  4753 ;; This function calls:
  4754 ;;		_I2C_Master_Wait
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           
  4761                           ;psect for function _I2C_Master_RepeatedStart
  4762  0F08                     _I2C_Master_RepeatedStart:
  4763  0F08                     l2263:	
  4764                           ;incstack = 0
  4765                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4766                           
  4767                           
  4768                           ;I2C.c: 66:     I2C_Master_Wait();
  4769  0F08  120A  158A  2745  120A  158A  	fcall	_I2C_Master_Wait
  4770  0F0D                     l2265:
  4771                           
  4772                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  4773  0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  4774  0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  4775  0F0F  1491               	bsf	17,1	;volatile
  4776  0F10                     l185:
  4777  0F10  0008               	return
  4778  0F11                     __end_of_I2C_Master_RepeatedStart:
  4779                           
  4780                           	psect	text29
  4781  0740                     __ptext29:	
  4782 ;; *************** function _I2C_Master_Read *****************
  4783 ;; Defined at:
  4784 ;;		line 94 in file "I2C.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  a               2    3[COMMON] unsigned short 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  temp            2    0[BANK0 ] unsigned short 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2    3[COMMON] unsigned short 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, pclath, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4798 ;;      Params:         2       0       0       0       0
  4799 ;;      Locals:         0       2       0       0       0
  4800 ;;      Temps:          2       0       0       0       0
  4801 ;;      Totals:         4       2       0       0       0
  4802 ;;Total ram usage:        6 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    2
  4805 ;; This function calls:
  4806 ;;		_I2C_Master_Wait
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _I2C_Master_Read
  4814  0740                     _I2C_Master_Read:
  4815  0740                     l2267:	
  4816                           ;incstack = 0
  4817                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4818                           
  4819                           
  4820                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  4821  0740  120A  158A  2745  120A  118A  	fcall	_I2C_Master_Wait
  4822  0745                     l2269:
  4823                           
  4824                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  4825  0745  1683               	bsf	3,5	;RP0=1, select bank1
  4826  0746  1303               	bcf	3,6	;RP1=0, select bank1
  4827  0747  1591               	bsf	17,3	;volatile
  4828                           
  4829                           ;I2C.c: 99:     I2C_Master_Wait();
  4830  0748  120A  158A  2745  120A  118A  	fcall	_I2C_Master_Wait
  4831  074D                     l2271:
  4832                           
  4833                           ;I2C.c: 100:     temp = SSPBUF;
  4834  074D  1283               	bcf	3,5	;RP0=0, select bank0
  4835  074E  1303               	bcf	3,6	;RP1=0, select bank0
  4836  074F  0813               	movf	19,w	;volatile
  4837  0750  00F5               	movwf	??_I2C_Master_Read
  4838  0751  01F6               	clrf	??_I2C_Master_Read+1
  4839  0752  0875               	movf	??_I2C_Master_Read,w
  4840  0753  00C6               	movwf	I2C_Master_Read@temp
  4841  0754  0876               	movf	??_I2C_Master_Read+1,w
  4842  0755  00C7               	movwf	I2C_Master_Read@temp+1
  4843  0756                     l2273:
  4844                           
  4845                           ;I2C.c: 101:     I2C_Master_Wait();
  4846  0756  120A  158A  2745  120A  118A  	fcall	_I2C_Master_Wait
  4847  075B                     l2275:
  4848                           
  4849                           ;I2C.c: 102:     if(a == 1){
  4850  075B  0373               	decf	I2C_Master_Read@a,w
  4851  075C  0474               	iorwf	I2C_Master_Read@a+1,w
  4852  075D  1D03               	btfss	3,2
  4853  075E  2F60               	goto	u1651
  4854  075F  2F61               	goto	u1650
  4855  0760                     u1651:
  4856  0760  2F65               	goto	l194
  4857  0761                     u1650:
  4858  0761                     l2277:
  4859                           
  4860                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  4861  0761  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0762  1303               	bcf	3,6	;RP1=0, select bank1
  4863  0763  1291               	bcf	17,5	;volatile
  4864                           
  4865                           ;I2C.c: 104:     }else{
  4866  0764  2F68               	goto	l195
  4867  0765                     l194:
  4868                           
  4869                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  4870  0765  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0766  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0767  1691               	bsf	17,5	;volatile
  4873  0768                     l195:	
  4874                           ;I2C.c: 106:     }
  4875                           
  4876                           
  4877                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  4878  0768  1611               	bsf	17,4	;volatile
  4879  0769                     l2279:
  4880                           
  4881                           ;I2C.c: 108:     return temp;
  4882  0769  1283               	bcf	3,5	;RP0=0, select bank0
  4883  076A  1303               	bcf	3,6	;RP1=0, select bank0
  4884  076B  0847               	movf	I2C_Master_Read@temp+1,w
  4885  076C  00F4               	movwf	?_I2C_Master_Read+1
  4886  076D  0846               	movf	I2C_Master_Read@temp,w
  4887  076E  00F3               	movwf	?_I2C_Master_Read
  4888  076F                     l196:
  4889  076F  0008               	return
  4890  0770                     __end_of_I2C_Master_Read:
  4891                           
  4892                           	psect	text30
  4893  0F45                     __ptext30:	
  4894 ;; *************** function _I2C_Master_Wait *****************
  4895 ;; Defined at:
  4896 ;;		line 48 in file "I2C.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4910 ;;      Params:         0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0
  4913 ;;      Totals:         0       0       0       0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_I2C_Master_Start
  4921 ;;		_I2C_Master_RepeatedStart
  4922 ;;		_I2C_Master_Stop
  4923 ;;		_I2C_Master_Write
  4924 ;;		_I2C_Master_Read
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _I2C_Master_Wait
  4930  0F45                     _I2C_Master_Wait:
  4931  0F45                     l1997:	
  4932                           ;incstack = 0
  4933                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4934                           
  4935  0F45                     l176:	
  4936                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4937                           
  4938  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  4939  0F46  1303               	bcf	3,6	;RP1=0, select bank1
  4940  0F47  1914               	btfsc	20,2	;volatile
  4941  0F48  2F4A               	goto	u1281
  4942  0F49  2F4B               	goto	u1280
  4943  0F4A                     u1281:
  4944  0F4A  2F45               	goto	l176
  4945  0F4B                     u1280:
  4946  0F4B                     l1999:
  4947  0F4B  0811               	movf	17,w	;volatile
  4948  0F4C  391F               	andlw	31
  4949  0F4D  1D03               	btfss	3,2
  4950  0F4E  2F50               	goto	u1291
  4951  0F4F  2F51               	goto	u1290
  4952  0F50                     u1291:
  4953  0F50  2F45               	goto	l176
  4954  0F51                     u1290:
  4955  0F51                     l179:
  4956  0F51  0008               	return
  4957  0F52                     __end_of_I2C_Master_Wait:
  4958                           
  4959                           	psect	text31
  4960  06DD                     __ptext31:	
  4961 ;; *************** function _ISR *****************
  4962 ;; Defined at:
  4963 ;;		line 97 in file "main_prueba3_mini2.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4977 ;;      Params:         0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0
  4979 ;;      Temps:          3       0       0       0       0
  4980 ;;      Totals:         3       0       0       0       0
  4981 ;;Total ram usage:        3 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		Interrupt level 1
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           
  4991                           ;psect for function _ISR
  4992  06DD                     _ISR:
  4993  06DD                     i1l1357:
  4994                           
  4995                           ;main_prueba3_mini2.c: 98:     if(PIR1bits.RCIF == 1){
  4996  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  4997  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  4998  06DF  1E8C               	btfss	12,5	;volatile
  4999  06E0  2EE2               	goto	u63_21
  5000  06E1  2EE3               	goto	u63_20
  5001  06E2                     u63_21:
  5002  06E2  2F08               	goto	i1l121
  5003  06E3                     u63_20:
  5004  06E3                     i1l1359:
  5005                           
  5006                           ;main_prueba3_mini2.c: 99:         data_recive = RCREG;
  5007  06E3  081A               	movf	26,w	;volatile
  5008  06E4  00F0               	movwf	??_ISR
  5009  06E5  0870               	movf	??_ISR,w
  5010  06E6  00F8               	movwf	_data_recive
  5011  06E7                     i1l1361:
  5012                           
  5013                           ;main_prueba3_mini2.c: 100:         if (data_recive == '1'){
  5014  06E7  3031               	movlw	49
  5015  06E8  0678               	xorwf	_data_recive,w
  5016  06E9  1D03               	btfss	3,2
  5017  06EA  2EEC               	goto	u64_21
  5018  06EB  2EED               	goto	u64_20
  5019  06EC                     u64_21:
  5020  06EC  2EEF               	goto	i1l1365
  5021  06ED                     u64_20:
  5022  06ED                     i1l1363:
  5023                           
  5024                           ;main_prueba3_mini2.c: 101:             PORTAbits.RA6 = 1;
  5025  06ED  1705               	bsf	5,6	;volatile
  5026                           
  5027                           ;main_prueba3_mini2.c: 102:         }
  5028  06EE  2F07               	goto	i1l1377
  5029  06EF                     i1l1365:
  5030  06EF  3032               	movlw	50
  5031  06F0  0678               	xorwf	_data_recive,w
  5032  06F1  1D03               	btfss	3,2
  5033  06F2  2EF4               	goto	u65_21
  5034  06F3  2EF5               	goto	u65_20
  5035  06F4                     u65_21:
  5036  06F4  2EF7               	goto	i1l1369
  5037  06F5                     u65_20:
  5038  06F5                     i1l1367:
  5039                           
  5040                           ;main_prueba3_mini2.c: 104:             PORTAbits.RA6 = 0;
  5041  06F5  1305               	bcf	5,6	;volatile
  5042                           
  5043                           ;main_prueba3_mini2.c: 105:         }
  5044  06F6  2F07               	goto	i1l1377
  5045  06F7                     i1l1369:
  5046  06F7  3033               	movlw	51
  5047  06F8  0678               	xorwf	_data_recive,w
  5048  06F9  1D03               	btfss	3,2
  5049  06FA  2EFC               	goto	u66_21
  5050  06FB  2EFD               	goto	u66_20
  5051  06FC                     u66_21:
  5052  06FC  2EFF               	goto	i1l1373
  5053  06FD                     u66_20:
  5054  06FD                     i1l1371:
  5055                           
  5056                           ;main_prueba3_mini2.c: 107:             PORTAbits.RA7 = 1;
  5057  06FD  1785               	bsf	5,7	;volatile
  5058                           
  5059                           ;main_prueba3_mini2.c: 108:         }
  5060  06FE  2F07               	goto	i1l1377
  5061  06FF                     i1l1373:
  5062  06FF  3034               	movlw	52
  5063  0700  0678               	xorwf	_data_recive,w
  5064  0701  1D03               	btfss	3,2
  5065  0702  2F04               	goto	u67_21
  5066  0703  2F05               	goto	u67_20
  5067  0704                     u67_21:
  5068  0704  2F07               	goto	i1l117
  5069  0705                     u67_20:
  5070  0705                     i1l1375:
  5071                           
  5072                           ;main_prueba3_mini2.c: 110:             PORTAbits.RA7 = 0;
  5073  0705  1385               	bcf	5,7	;volatile
  5074  0706  2F07               	goto	i1l1377
  5075  0707                     i1l117:
  5076  0707                     i1l1377:
  5077                           
  5078                           ;main_prueba3_mini2.c: 112:         data_recive = 0;
  5079  0707  01F8               	clrf	_data_recive
  5080  0708                     i1l121:
  5081  0708  0872               	movf	??_ISR+2,w
  5082  0709  008A               	movwf	10
  5083  070A  0E71               	swapf	??_ISR+1,w
  5084  070B  0083               	movwf	3
  5085  070C  0EFE               	swapf	btemp,f
  5086  070D  0E7E               	swapf	btemp,w
  5087  070E  0009               	retfie
  5088  070F                     __end_of_ISR:
  5089  007E                     btemp	set	126	;btemp
  5090  007E                     wtemp0	set	126
  5091                           
  5092                           	psect	intentry
  5093  0004                     __pintentry:	
  5094                           ;incstack = 0
  5095                           ; Regs used in _ISR: [wreg+status,2+status,0]
  5096                           
  5097  0004                     interrupt_function:
  5098  007E                     saved_w	set	btemp
  5099  0004  00FE               	movwf	btemp
  5100  0005  0E03               	swapf	3,w
  5101  0006  00F1               	movwf	??_ISR+1
  5102  0007  080A               	movf	10,w
  5103  0008  00F2               	movwf	??_ISR+2
  5104  0009  120A  118A  2EDD   	ljmp	_ISR
  5105                           
  5106                           	psect	config
  5107                           
  5108                           ;Config register CONFIG1 @ 0x2007
  5109                           ;	Oscillator Selection bits
  5110                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5111                           ;	Watchdog Timer Enable bit
  5112                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5113                           ;	Power-up Timer Enable bit
  5114                           ;	PWRTE = OFF, PWRT disabled
  5115                           ;	RE3/MCLR pin function select bit
  5116                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5117                           ;	Code Protection bit
  5118                           ;	CP = OFF, Program memory code protection is disabled
  5119                           ;	Data Code Protection bit
  5120                           ;	CPD = OFF, Data memory code protection is disabled
  5121                           ;	Brown Out Reset Selection bits
  5122                           ;	BOREN = OFF, BOR disabled
  5123                           ;	Internal External Switchover bit
  5124                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5125                           ;	Fail-Safe Clock Monitor Enabled bit
  5126                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5127                           ;	Low Voltage Programming Enable bit
  5128                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5129                           ;	In-Circuit Debugger Mode bit
  5130                           ;	DEBUG = 0x1, unprogrammed default
  5131  2007                     	org	8199
  5132  2007  20D4               	dw	8404
  5133                           
  5134                           ;Config register CONFIG2 @ 0x2008
  5135                           ;	Brown-out Reset Selection bit
  5136                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5137                           ;	Flash Program Memory Self Write Enable bits
  5138                           ;	WRT = OFF, Write protection off
  5139  2008                     	org	8200
  5140  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    10
    Data        30
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      78
    BANK1            80      3      62
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> year_send(BANK1[8]), month_send(BANK1[8]), day_send(BANK0[8]), sec_send(BANK0[8]), 
		 -> min_send(BANK0[8]), hour_send(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> Date(BANK0[15]), STR_5(CODE[3]), sec_send(BANK0[8]), STR_4(CODE[2]), 
		 -> min_send(BANK0[8]), STR_3(CODE[2]), hour_send(BANK0[8]), STR_2(CODE[3]), 
		 -> STR_1(CODE[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> Time(BANK1[15]), Date(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_Write_USART_String
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_RTC_display
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10535
                                              0 BANK1      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     796
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    6103
                                             22 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2184
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1338
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     264
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3      3E       7       77.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 08 23:15:40 2021

                                _i 007A                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 0047  
                               fsr 0004               __size_of_Write_USART 000C  
                 ?_USART_INTERRUPT 0070                        _RTC_display 0041  
                              l220 0FBE                                l132 0FDA  
                              l301 0F38                                l141 05D0  
                              l214 0620                                l223 0F5E  
                              l232 07FC                                l144 073F  
                              l217 0EF3                                l138 023D  
                              l307 079A                                l229 07E6  
                              l173 06DC                                l238 0FFF  
                              l182 0F19                                l423 044A  
                              l191 0F2C                                l176 0F45  
                              l185 0F10                                l194 0765  
                              l179 0F51                                l195 0768  
                              l196 076F                                l188 0F22  
                              l292 0EFF                                l453 0FA4  
                              l463 051B                                l295 0EF9  
                              l289 0F44                                l298 0F2E  
                              l580 04B3                                l709 06A2  
                              l593 0576                                l699 0666  
                              _GIE 005F                                _ISR 06DD  
                              u720 0F96                                u721 0F95  
                              u730 0FA3                                u731 0FA2  
                              u900 0681                                u901 0680  
                              u910 068B                                u911 068A  
                              u930 069E                                u931 069D  
                              u915 0687                                u940 0F34  
                              u925 0692                                u941 0F33  
                              u880 066F                                u881 066E  
                              u895 0673                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0047  
      __size_of_Write_USART_String 002B                               ?_ISR 0070  
                             l2001 0FA6                               l2003 0FA9  
                             l2011 07E8                               l2005 0FAF  
                             l2013 07EB                               l2101 0399  
                             l2021 04B4                               l2007 0FB2  
                             l2015 07F1                               l2111 03B2  
                             l2103 03A1                               l2031 04E3  
                             l2023 04C6                               l2009 0FBB  
                             l2017 07F4                               l2201 0547  
                             l2121 03D0                               l2105 03A5  
                             l2033 04F5                               l2025 04C9  
                             l2041 0513                               l2019 07F9  
                             l2203 054B                               l2211 0568  
                             l2051 062E                               l2131 03F0  
                             l2123 03DA                               l2107 03A9  
                             l2035 0503                               l2027 04D6  
                             l2213 056D                               l2205 0555  
                             l2061 0654                               l2053 0635  
                             l2045 0621                               l2133 0420  
                             l2125 03E0                               l2117 03B4  
                             l2109 03AD                               l2141 0446  
                             l2037 0504                               l2029 04DA  
                             l2221 0716                               l2301 023E  
                             l2151 07C9                               l2215 0572  
                             l2207 055B                               l2063 0655  
                             l2055 0639                               l2047 0625  
                             l2135 0427                               l2127 03E7  
                             l2071 0F11                               l2039 050D  
                             l2231 071C                               l2223 0718  
                             l2311 0255                               l2303 0243  
                             l2153 07CE                               l2161 0FDE  
                             l2209 0562                               l2065 065C  
                             l2057 063D                               l2049 062B  
                             l1601 0681                               l2137 042B  
                             l2129 03EB                               l2073 0F16  
                             l2081 0F1F                               l2241 0723  
                             l2233 071F                               l2225 0719  
                             l2321 0279                               l2313 025A  
                             l2305 0246                               l2251 05D7  
                             l2155 07D5                               l2163 0FE1  
                             l1531 0F96                               l2083 0FC0  
                             l2059 064E                               l2067 0662  
                             l1603 068B                               l2091 036F  
                             l2139 0434                               l2075 0F23  
                             l2171 06A7                               l2243 0730  
                             l2235 0720                               l2227 071A  
                             l2219 070F                               l2331 02C6  
                             l2323 028A                               l2315 0263  
                             l2307 024B                               l2253 05E1  
                             l2157 07DB                               l2149 07C4  
                             l2165 0FEC                               l2181 051C  
                             l1533 0F9A                               l1605 0691  
                             l2093 0376                               l2077 0F28  
                             l2261 0577                               l2173 06AA  
                             l2245 0735                               l2237 0721  
                             l2229 071B                               l2341 02FA  
                             l2333 02D7                               l2325 029B  
                             l2317 026B                               l2309 0250  
                             l2271 074D                               l2263 0F08  
                             l2255 05F1                               l2159 07E0  
                             l2167 0FF4                               l2191 052E  
                             l2183 051F                               l1535 0F9C  
                             l1527 0F91                               l1607 0698  
                             l2095 037B                               l2087 0364  
                             l2079 0F1A                               l2175 06D9  
                             l2247 073A                               l2239 0722  
                             l2351 0327                               l2343 0303  
                             l2335 02E7                               l2327 02AC  
                             l2319 0270                               l2273 0756  
                             l2265 0F0D                               l2257 05F7  
                             l2249 05D1                               l2193 0533  
                             l2185 0523                               l1537 0FA3  
                             l1529 0F92                               l1609 069E  
                             l2089 0369                               l1625 0F2E  
                             l2177 06DA                               l2169 06A3  
                             l2361 034E                               l2353 0330  
                             l2345 030C                               l2337 02EC  
                             l2329 02B5                               l2275 075B  
                             l2267 0740                               l2259 0F52  
                             l2195 0539                               l2187 0528  
                             l2099 037C                               l2291 01E8  
                             l2283 0041                               l1627 0F34  
                             l2179 06DB                               l1731 0F39  
                             l2355 0339                               l2347 0315  
                             l2339 02F1                               l2277 0761  
                             l2269 0745                               l1741 0452  
                             l2197 053C                               l2189 052A  
                             l2293 01FB                               l2285 01B1  
                             l1901 0770                               l1733 0F43  
                             l2357 0342                               l2349 031E  
                             l2279 0769                               l1751 0466  
                             l1743 0457                               l2199 0543  
                             l1591 0667                               l2295 020E  
                             l2287 01C2                               l1903 0772  
                             l1735 0EF4                               l1727 0EFA  
                             l2359 0348                               l1761 047C  
                             l1753 0468                               l1745 0459  
                             l1737 044B                               l1593 066F  
                             l2297 0229                               l2289 01D5  
                             l1905 0783                               l1729 0EFD  
                             l1771 049F                               l1763 0480  
                             l1755 046E                               l1747 045D  
                             l1739 044E                               l1595 0672  
                             l2387 038E                               l2299 022F  
                             l1907 0787                               l1765 0491  
                             l1757 0471                               l1773 04A5  
                             l1749 0462                               l1597 0679  
                             l1775 04AA                               l1767 0497  
                             l1759 0478                               l1599 067D  
                             l1777 04AF                               l1769 0498  
                             l1995 0EEF                               l1997 0F45  
                             l1999 0F4B                               STR_1 07B5  
                             STR_2 07BB                               STR_3 07B9  
                             STR_4 07B9                               STR_5 07BB  
                             STR_6 07BE                               STR_7 07BE  
                             STR_8 07BE                               STR_9 07BE  
                             u1110 0480                               u1111 047F  
                             u1105 0472                               u1130 0491  
                             u1131 0490                               u1300 04C6  
                             u1125 0481                               u1301 04C5  
                             u1150 04A5                               u1070 0452  
                             u1151 04A4                               u1135 048D  
                             u1071 0451                               u1160 04AA  
                             u1080 045D                               u1320 04DA  
                             u1161 04A9                               u1145 0499  
                             u1081 045C                               u1321 04D9  
                             u1090 046E                               u1410 064E  
                             u1091 046D                               u1411 064D  
                             u1315 04CB                               u1500 0434  
                             u1340 04F5                               u1405 063E  
                             u1501 0433                               u1341 04F4  
                             u1430 0662                               u1510 0446  
                             u1270 079A                               u1431 0661  
                             u1415 064A                               u1511 0445  
                             u1271 0799                               u1335 04DC  
                             u1280 0F4B                               u1520 07C9  
                             u1600 054B                               u1360 0513  
                             u1281 0F4A                               u1521 07C8  
                             u1601 054A                               u1425 0656  
                             u1361 0512                               u1345 04F1  
                             u1290 0F51                               u1530 07DB  
                             u1610 0555                               u1370 062B  
                             u1450 036F                               u1291 0F50  
                             u1531 07DA                               u1611 0554  
                             u1371 062A                               u1451 036E  
                             u1355 0505                               u1540 0FFF  
                             u1460 03A9                               u1541 0FFE  
                             u1445 0FCC                               u1461 03A8  
                             u1630 0568                               u1390 063D  
                             u1470 03CF                               u1550 06BA  
                             u1631 0567                               u1615 0551  
                             u1391 063C                               u1471 03CE  
                             u1640 056D                               u1560 0523  
                             u1480 03DA                               u1641 056C  
                             u1625 055C                               u1561 0522  
                             u1385 062F                               u1481 03D9  
                             u1650 0761                               u1570 052E  
                             u1490 03E0                               u1651 0760  
                             u1707 05FD                               u1571 052D  
                             u1491 03DF                               u1475 03CB  
                             u1555 06B5                               u1580 0539  
                             u1717 0FB6                               u1581 0538  
                             u1595 053D                               u1667 0356  
                             u1677 07F6                               u1687 05DD  
                             u1697 05ED                               _PEIE 005E  
                             _RCIF 0065                               _TRMT 04C1  
                             _Date 005F                               _Time 00CC  
                ?_Lcd_Write_String 0070   __end_of_I2C_Master_RepeatedStart 0F11  
                             _cont 0079                               _main 023E  
                             _hour 0023                               _year 0020  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0076                    __end_of_Lcd_Cmd 0FBF  
                ___bmul@multiplier 0076              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 0053  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 04B4                              STR_10 07BE  
                            STR_11 07BE                    __end_of___awmod 0577  
                            _ANSEL 0188                    __end_of___lldiv 051C  
                  ___awdiv@divisor 0073                    __end_of___lwdiv 0667  
                            i1l121 0708                              i1l117 0707  
                  __end_of___lwmod 06A3                    ___awdiv@counter 0046  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u63_20 06E3  
                            u63_21 06E2                              u64_20 06ED  
                            u64_21 06EC                              u65_20 06F5  
                            u65_21 06F4            __size_of_Lcd_Set_Cursor 0026  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              u66_20 06FD  
                            _SSPIF 0063                              u66_21 06FC  
                            u67_20 0705                              u67_21 0704  
                            _TXREG 0019                              _m_day 0022  
                  __end_of_dpowers 07B5                              _month 0021  
                            _setup 070F                              pclath 000A  
                     _Write_to_RTC 0577                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 044B  
                      ?_USART_Init 0070                   __end_of_Lcd_Init 0621  
                 __end_of_Lcd_Port 0EF4                    __initialization 000F  
                     __end_of_main 0361                             ??_main 00DB  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
              _USART_Init_BaudRate 0EFA                             ?_setup 0070  
                           _ANSELH 0189                             i1l1361 06E7  
                           i1l1371 06FD                             i1l1363 06ED  
                           i1l1373 06FF                             i1l1365 06EF  
                           i1l1357 06DD                             i1l1375 0705  
                           i1l1367 06F5                             i1l1359 06E3  
                           i1l1369 06F7                             i1l1377 0707  
                        ??_Lcd_Cmd 0074                             _SPBRGH 009A  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0F08                             ___bmul 0F90  
                        ??___awdiv 0077                          ??___awmod 0077  
             ?_USART_Init_BaudRate 0070                          ??___lldiv 0073  
                        ??___lwdiv 0077                          ??___lwmod 004D  
                 ___awdiv@quotient 0048                             _minute 0024  
                           _second 0025                    ___awmod@divisor 0073  
                  ___awmod@counter 0046                             saved_w 007E  
              __size_of_USART_Init 000C                          ??_sprintf 0052  
                  Lcd_Set_Cursor@a 0047                    Lcd_Set_Cursor@b 0077  
          __end_of__initialization 003D                  __end_of_Lcd_Clear 0F5F  
              ___bmul@multiplicand 0073                     __pcstackCOMMON 0070  
            ??_USART_Init_BaudRate 0073                       __pidataBANK0 0F6E  
                     __pidataBANK1 0F5F                      __end_of_setup 0740  
                     ?_RTC_display 0070                     _Lcd_Set_Cursor 07C1  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 0078                       Write_USART@a 0073  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                       _data_total 00A0                         __pmaintext 023E  
                          ?___bmul 0073                      ??_Write_USART 0073  
                       __pintentry 0004          __size_of_Lcd_Write_String 0025  
           __end_of_Lcd_Set_Cursor 07E7         __end_of_Write_USART_String 079B  
          __size_of_bcd_to_decimal 001C                         ??_Lcd_Init 0046  
                       ??_Lcd_Port 0073           __size_of_USART_INTERRUPT 0006  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 079B                     _Lcd_Write_Char 07E7  
                          _Lcd_Cmd 0FA5                       ??_USART_Init 0073  
                  __size_of___bmul 0015                            ___awdiv 044B  
                          ___awmod 051C                            ___lldiv 04B4  
                          ___lwdiv 0621                            ___lwmod 0667  
                  ?_Lcd_Set_Cursor 0077                            __ptext1 070F  
                          __ptext2 0EFA                            __ptext3 0F39  
                          __ptext4 0EF4                            __ptext5 06A3  
                          __ptext6 04B4                            __ptext7 0577  
                          __ptext8 0F23                            __ptext9 0F1A  
                     __size_of_ISR 0032                            _dpowers 07AB  
              __end_of_Write_USART 0F39                   ___awmod@dividend 0075  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
               __end_of_USART_Init 0F45                            _sprintf 0361  
                          clrloop0 0F01             __end_of_Lcd_Write_Char 07FD  
             end_of_initialization 003D         ??_I2C_Master_RepeatedStart 0073  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0046                    ___lldiv@counter 0052  
                       _month_send 00C4                          _RCSTAbits 0018  
                 I2C_Master_Init@c 0053                   I2C_Master_Read@a 0073  
                        Lcd_Port@a 0073                          _PORTAbits 0005  
                        _PORTDbits 0008                          _PORTEbits 0009  
             __size_of_RTC_display 01FD                          _TRISCbits 0087  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0048  
                Lcd_Write_String@i 0046                          _TXSTAbits 0098  
                ??_USART_INTERRUPT 0073                          _Lcd_Clear 0F52  
                   __end_of___bmul 0FA5                        _Write_USART 0F2D  
                 _Lcd_Write_String 0FDB                start_initialization 000F  
                   _bcd_to_decimal 0FBF                        __end_of_ISR 070F  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
      __end_of_USART_Init_BaudRate 0F00                         ?_Lcd_Clear 0070  
                         ??___bmul 0074                         init_fetch0 0F7D  
                      __pdataBANK0 005F                        __pdataBANK1 00CC  
                  Lcd_Write_Char@a 0075             __end_of_bcd_to_decimal 0FDB  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 0046                      __pcstackBANK1 00DB  
                      _data_recive 0078                      ?_Write_to_RTC 0070  
                         ?_Lcd_Cmd 0070                        sprintf@flag 0056  
               _Write_USART_String 0770                        sprintf@prec 0057  
                 _I2C_Master_Start 0F11                   _I2C_Master_Write 0F23  
                 ___lwdiv@dividend 0075                   ??_Lcd_Set_Cursor 0046  
              ?_Write_USART_String 0074                           ?___awdiv 0073  
                         ?___awmod 0073                           ?___lldiv 0046  
                         ?___lwdiv 0073                           ?___lwmod 0049  
                        __pstrings 079B                          _cont_send 00B4  
                  ?_bcd_to_decimal 0070               ??_Write_USART_String 0076  
                 ___lwdiv@quotient 0047                           ?_sprintf 004F  
             bcd_to_decimal@number 0077                     ??_Write_to_RTC 0075  
                   __size_of_setup 0031                          _hour_send 002E  
                interrupt_function 0004                          clear_ram0 0F00  
                         _PIE1bits 008C                           Lcd_Cmd@a 0076  
                         _PIR1bits 000C                        ??_Lcd_Clear 0077  
                        _year_send 00BC                        __stringbase 07AA  
                 ??_Lcd_Write_Char 0074                    _USART_INTERRUPT 0EF4  
                         _Lcd_Init 05D1                           _Lcd_Port 0EEE  
              I2C_Master_Read@temp 0046           __end_of_Lcd_Write_String 1000  
                 __size_of_Lcd_Cmd 001A                       ?_Write_USART 0070  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 005B          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                      ??_RTC_display 005C  
               __end_of__stringtab 07AB                         sprintf@val 0058  
                  _I2C_Master_Init 06A3                    _I2C_Master_Read 0740  
                  _I2C_Master_Wait 0F45                    _I2C_Master_Stop 0F1A  
                  ___lwdiv@divisor 0073                           _day_send 0026  
                  ___lwdiv@counter 0046                           __ptext10 0F11  
                         __ptext11 0770                           __ptext20 044B  
                         __ptext12 0F2D                           __ptext21 0FDB  
                         __ptext13 0041                           __ptext30 0F45  
                         __ptext22 07E7                           __ptext14 0361  
                         __ptext31 06DD                           __ptext23 07C1  
                         __ptext15 0667                           __ptext24 05D1  
                         __ptext16 0621                           __ptext25 0F52  
                         __ptext17 0FBF                           __ptext26 0FA5  
                         __ptext18 0F90                           __ptext27 0EEE  
                         __ptext19 051C                           __ptext28 0F08  
                         __ptext29 0740                   __size_of_sprintf 00EA  
                    __size_of_main 0123                           _min_send 0036  
                         _sec_send 003E               __end_of_Write_to_RTC 05D1  
          __end_of_USART_INTERRUPT 0EFA           __end_of_I2C_Master_Start 0F1A  
         __end_of_I2C_Master_Write 0F2D                         _INTCONbits 000B  
              Write_USART_String@a 0074                Write_USART_String@i 0077  
                         init_ram0 0F81                __end_of_RTC_display 023E  
                         intlevel1 0000                          sprintf@ap 0055  
                        sprintf@sp 005A                   ___lwmod@dividend 004B  
                 ___lldiv@dividend 004A                          stringcode 07A5  
                       _OSCCONbits 008F                   ??_bcd_to_decimal 0046  
     __size_of_USART_Init_BaudRate 0006            __end_of_I2C_Master_Init 06DD  
          __end_of_I2C_Master_Read 0770            __end_of_I2C_Master_Wait 0F52  
          __end_of_I2C_Master_Stop 0F23                 Lcd_Set_Cursor@temp 0048  
                         sprintf@c 005B                           sprintf@f 004F  
                 ___lldiv@quotient 004E                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 0049                    ___lwmod@counter 004E  
                         stringdir 07A5                           stringtab 079B  
                      _SSPCON2bits 0091                         _USART_Init 0F39  
