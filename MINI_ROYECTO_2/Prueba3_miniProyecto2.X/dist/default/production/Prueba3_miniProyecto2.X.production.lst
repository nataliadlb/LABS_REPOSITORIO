

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 08 22:51:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F887 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0105                     	;# 
   146  0107                     	;# 
   147  0108                     	;# 
   148  0109                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0185                     	;# 
   155  0187                     	;# 
   156  0188                     	;# 
   157  0189                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008F                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  0107                     	;# 
   225  0108                     	;# 
   226  0109                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0185                     	;# 
   233  0187                     	;# 
   234  0188                     	;# 
   235  0189                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  0107                     	;# 
   303  0108                     	;# 
   304  0109                     	;# 
   305  010C                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  0185                     	;# 
   311  0187                     	;# 
   312  0188                     	;# 
   313  0189                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  008F                     	;# 
   361  0090                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  0105                     	;# 
   380  0107                     	;# 
   381  0108                     	;# 
   382  0109                     	;# 
   383  010C                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  0185                     	;# 
   389  0187                     	;# 
   390  0188                     	;# 
   391  0189                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  000E                     	;# 
   410  000F                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001D                     	;# 
   427  001E                     	;# 
   428  001F                     	;# 
   429  0081                     	;# 
   430  0085                     	;# 
   431  0086                     	;# 
   432  0087                     	;# 
   433  0088                     	;# 
   434  0089                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  008F                     	;# 
   439  0090                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  0105                     	;# 
   458  0107                     	;# 
   459  0108                     	;# 
   460  0109                     	;# 
   461  010C                     	;# 
   462  010C                     	;# 
   463  010D                     	;# 
   464  010E                     	;# 
   465  010F                     	;# 
   466  0185                     	;# 
   467  0187                     	;# 
   468  0188                     	;# 
   469  0189                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472  0000                     	;# 
   473  0001                     	;# 
   474  0002                     	;# 
   475  0003                     	;# 
   476  0004                     	;# 
   477  0005                     	;# 
   478  0006                     	;# 
   479  0007                     	;# 
   480  0008                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000D                     	;# 
   486  000E                     	;# 
   487  000E                     	;# 
   488  000F                     	;# 
   489  0010                     	;# 
   490  0011                     	;# 
   491  0012                     	;# 
   492  0013                     	;# 
   493  0014                     	;# 
   494  0015                     	;# 
   495  0015                     	;# 
   496  0016                     	;# 
   497  0017                     	;# 
   498  0018                     	;# 
   499  0019                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  0081                     	;# 
   508  0085                     	;# 
   509  0086                     	;# 
   510  0087                     	;# 
   511  0088                     	;# 
   512  0089                     	;# 
   513  008C                     	;# 
   514  008D                     	;# 
   515  008E                     	;# 
   516  008F                     	;# 
   517  0090                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0093                     	;# 
   522  0093                     	;# 
   523  0094                     	;# 
   524  0095                     	;# 
   525  0096                     	;# 
   526  0097                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009A                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  0105                     	;# 
   536  0107                     	;# 
   537  0108                     	;# 
   538  0109                     	;# 
   539  010C                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  010F                     	;# 
   544  0185                     	;# 
   545  0187                     	;# 
   546  0188                     	;# 
   547  0189                     	;# 
   548  018C                     	;# 
   549  018D                     	;# 
   550                           
   551                           	psect	idataBANK0
   552  04DE                     __pidataBANK0:
   553                           
   554                           ;initializer for _Time
   555  04DE  3454               	retlw	84
   556  04DF  3449               	retlw	73
   557  04E0  344D               	retlw	77
   558  04E1  3445               	retlw	69
   559  04E2  343A               	retlw	58
   560  04E3  3420               	retlw	32
   561  04E4  3430               	retlw	48
   562  04E5  3430               	retlw	48
   563  04E6  343A               	retlw	58
   564  04E7  3430               	retlw	48
   565  04E8  3430               	retlw	48
   566  04E9  343A               	retlw	58
   567  04EA  3430               	retlw	48
   568  04EB  3430               	retlw	48
   569  04EC  3400               	retlw	0
   570                           
   571                           ;initializer for _Date
   572  04ED  3444               	retlw	68
   573  04EE  3441               	retlw	65
   574  04EF  3454               	retlw	84
   575  04F0  3445               	retlw	69
   576  04F1  343A               	retlw	58
   577  04F2  3420               	retlw	32
   578  04F3  3430               	retlw	48
   579  04F4  3430               	retlw	48
   580  04F5  342F               	retlw	47
   581  04F6  3430               	retlw	48
   582  04F7  3430               	retlw	48
   583  04F8  342F               	retlw	47
   584  04F9  3430               	retlw	48
   585  04FA  3430               	retlw	48
   586  04FB  3400               	retlw	0
   587                           
   588                           	psect	strings
   589  0550                     __pstrings:
   590  0550                     stringtab:
   591  0550                     __stringtab:
   592  0550                     stringcode:	
   593                           ;	String table - string pointers are 1 byte each
   594                           
   595  0550                     stringdir:
   596  0550  3005               	movlw	high stringdir
   597  0551  008A               	movwf	10
   598  0552  0804               	movf	4,w
   599  0553  0A84               	incf	4,f
   600  0554  0782               	addwf	2,f
   601  0555                     __stringbase:
   602  0555  3400               	retlw	0
   603  0556                     __end_of__stringtab:
   604  0556                     _dpowers:
   605  0556  3401               	retlw	1
   606  0557  3400               	retlw	0
   607  0558  340A               	retlw	10
   608  0559  3400               	retlw	0
   609  055A  3464               	retlw	100
   610  055B  3400               	retlw	0
   611  055C  34E8               	retlw	232
   612  055D  3403               	retlw	3
   613  055E  3410               	retlw	16
   614  055F  3427               	retlw	39
   615  0560                     __end_of_dpowers:
   616  0019                     _TXREG	set	25
   617  000B                     _INTCONbits	set	11
   618  0018                     _RCSTAbits	set	24
   619  0008                     _PORTDbits	set	8
   620  0009                     _PORTEbits	set	9
   621  0013                     _SSPBUF	set	19
   622  0014                     _SSPCON	set	20
   623  0009                     _PORTE	set	9
   624  0008                     _PORTD	set	8
   625  0007                     _PORTC	set	7
   626  0006                     _PORTB	set	6
   627  0005                     _PORTA	set	5
   628  0005                     _PORTAbits	set	5
   629  001A                     _RCREG	set	26
   630  000C                     _PIR1bits	set	12
   631  0065                     _RCIF	set	101
   632  0063                     _SSPIF	set	99
   633  005E                     _PEIE	set	94
   634  005F                     _GIE	set	95
   635  008C                     _PIE1bits	set	140
   636  0099                     _SPBRG	set	153
   637  009A                     _SPBRGH	set	154
   638  0098                     _TXSTAbits	set	152
   639  008F                     _OSCCONbits	set	143
   640  0091                     _SSPCON2bits	set	145
   641  0094                     _SSPSTAT	set	148
   642  0093                     _SSPADD	set	147
   643  0091                     _SSPCON2	set	145
   644  0089                     _TRISE	set	137
   645  0087                     _TRISCbits	set	135
   646  0086                     _TRISB	set	134
   647  0085                     _TRISA	set	133
   648  0088                     _TRISD	set	136
   649  04C1                     _TRMT	set	1217
   650  0463                     _SSPIE	set	1123
   651  043C                     _TRISC4	set	1084
   652  043B                     _TRISC3	set	1083
   653  0189                     _ANSELH	set	393
   654  0188                     _ANSEL	set	392
   655  0560                     STR_1:
   656  0560  3425               	retlw	37	;'%'
   657  0561  3464               	retlw	100	;'d'
   658  0562  3420               	retlw	32	;' '
   659  0563  3400               	retlw	0
   660  0564                     STR_2:
   661  0564  3425               	retlw	37	;'%'
   662  0565  3464               	retlw	100	;'d'
   663  0566  3400               	retlw	0
   664                           
   665                           	psect	cinit
   666  000F                     start_initialization:	
   667                           ; #config settings
   668                           
   669  000F                     __initialization:
   670                           
   671                           ; Initialize objects allocated to BANK0
   672  000F  1383               	bcf	3,7	;select IRP bank0
   673  0010  303E               	movlw	low (__pdataBANK0+30)
   674  0011  00FD               	movwf	btemp+-1
   675  0012  3004               	movlw	high __pidataBANK0
   676  0013  00FE               	movwf	btemp
   677  0014  30DE               	movlw	low __pidataBANK0
   678  0015  00FF               	movwf	btemp+1
   679  0016  3020               	movlw	low __pdataBANK0
   680  0017  0084               	movwf	4
   681  0018  120A  118A  2596  120A  118A  	fcall	init_ram0
   682                           
   683                           ; Clear objects allocated to BANK1
   684  001D  30A0               	movlw	low __pbssBANK1
   685  001E  0084               	movwf	4
   686  001F  30DC               	movlw	low (__pbssBANK1+60)
   687  0020  120A  118A  25FC  120A  118A  	fcall	clear_ram0
   688                           
   689                           ; Clear objects allocated to BANK0
   690  0025  3057               	movlw	low __pbssBANK0
   691  0026  0084               	movwf	4
   692  0027  306D               	movlw	low (__pbssBANK0+22)
   693  0028  120A  118A  25FC  120A  118A  	fcall	clear_ram0
   694                           
   695                           ; Clear objects allocated to COMMON
   696  002D  01F8               	clrf	__pbssCOMMON& (0+127)
   697  002E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   698  002F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   699  0030                     end_of_initialization:	
   700                           ;End of C runtime variable initialization code
   701                           
   702  0030                     __end_of__initialization:
   703  0030  0183               	clrf	3
   704  0031  120A  118A  2834   	ljmp	_main	;jump to C main() function
   705                           
   706                           	psect	bssCOMMON
   707  0078                     __pbssCOMMON:
   708  0078                     _data_recive:
   709  0078                     	ds	1
   710  0079                     _cont:
   711  0079                     	ds	1
   712  007A                     _i:
   713  007A                     	ds	1
   714                           
   715                           	psect	bssBANK0
   716  0057                     __pbssBANK0:
   717  0057                     _year:
   718  0057                     	ds	1
   719  0058                     _month:
   720  0058                     	ds	1
   721  0059                     _m_day:
   722  0059                     	ds	1
   723  005A                     _hour:
   724  005A                     	ds	1
   725  005B                     _minute:
   726  005B                     	ds	1
   727  005C                     _second:
   728  005C                     	ds	1
   729  005D                     _sec_send:
   730  005D                     	ds	8
   731  0065                     _cont_send:
   732  0065                     	ds	8
   733                           
   734                           	psect	dataBANK0
   735  0020                     __pdataBANK0:
   736  0020                     _Time:
   737  0020                     	ds	15
   738  002F                     _Date:
   739  002F                     	ds	15
   740                           
   741                           	psect	bssBANK1
   742  00A0                     __pbssBANK1:
   743  00A0                     _data_total:
   744  00A0                     	ds	20
   745  00B4                     _year_send:
   746  00B4                     	ds	8
   747  00BC                     _month_send:
   748  00BC                     	ds	8
   749  00C4                     _day_send:
   750  00C4                     	ds	8
   751  00CC                     _hour_send:
   752  00CC                     	ds	8
   753  00D4                     _min_send:
   754  00D4                     	ds	8
   755                           
   756                           	psect	inittext
   757  0592                     init_fetch0:	
   758                           ;	Called with low address in FSR and high address in W
   759                           
   760  0592  087E               	movf	btemp,w
   761  0593  008A               	movwf	10
   762  0594  087F               	movf	btemp+1,w
   763  0595  0082               	movwf	2
   764  0596                     init_ram0:	
   765                           ;Called with:
   766                           ;	high address of idata address in btemp 
   767                           ;	low address of idata address in btemp+1 
   768                           ;	low address of data in FSR
   769                           ;	high address + 1 of data in btemp-1
   770                           
   771  0596  120A  118A  2592  120A  118A  	fcall	init_fetch0
   772  059B  0080               	movwf	0
   773  059C  0A84               	incf	4,f
   774  059D  0804               	movf	4,w
   775  059E  067D               	xorwf	btemp+-1,w
   776  059F  1903               	btfsc	3,2
   777  05A0  3400               	retlw	0
   778  05A1  0AFF               	incf	btemp+1,f
   779  05A2  1903               	btfsc	3,2
   780  05A3  0AFE               	incf	btemp,f
   781  05A4  2D96               	goto	init_ram0
   782                           
   783                           	psect	clrtext
   784  05FC                     clear_ram0:	
   785                           ;	Called with FSR containing the base address, and
   786                           ;	W with the last address+1
   787                           
   788  05FC  0064               	clrwdt	;clear the watchdog before getting into this loop
   789  05FD                     clrloop0:
   790  05FD  0180               	clrf	0	;clear RAM location pointed to by FSR
   791  05FE  0A84               	incf	4,f	;increment pointer
   792  05FF  0604               	xorwf	4,w	;XOR with final address
   793  0600  1903               	btfsc	3,2	;have we reached the end yet?
   794  0601  3400               	retlw	0	;all done for this memory range, return
   795  0602  0604               	xorwf	4,w	;XOR again to restore value
   796  0603  2DFD               	goto	clrloop0	;do the next byte
   797                           
   798                           	psect	cstackCOMMON
   799  0070                     __pcstackCOMMON:
   800  0070                     ?_setup:
   801  0070                     ?_Lcd_Init:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_Lcd_Clear:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_Write_to_RTC:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_I2C_Master_Start:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_I2C_Master_RepeatedStart:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_bcd_to_decimal:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_I2C_Master_Stop:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_Lcd_Write_String:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_Write_USART_String:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_Write_USART:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_USART_Init_BaudRate:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_USART_Init:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_USART_INTERRUPT:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_Lcd_Port:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_Lcd_Cmd:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_ISR:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ??_ISR:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_main:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_I2C_Master_Wait:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_Lcd_Write_Char:	
   859                           ; 1 bytes @ 0x0
   860                           
   861                           
   862                           ; 1 bytes @ 0x0
   863  0070                     	ds	3
   864  0073                     ??_I2C_Master_Start:
   865  0073                     ?_I2C_Master_Write:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     ??_I2C_Master_RepeatedStart:	
   869                           ; 1 bytes @ 0x3
   870                           
   871  0073                     ??_I2C_Master_Stop:	
   872                           ; 1 bytes @ 0x3
   873                           
   874  0073                     ??_Write_USART:	
   875                           ; 1 bytes @ 0x3
   876                           
   877  0073                     ??_USART_Init_BaudRate:	
   878                           ; 1 bytes @ 0x3
   879                           
   880  0073                     ??_USART_Init:	
   881                           ; 1 bytes @ 0x3
   882                           
   883  0073                     ??_USART_INTERRUPT:	
   884                           ; 1 bytes @ 0x3
   885                           
   886  0073                     ??_Lcd_Port:	
   887                           ; 1 bytes @ 0x3
   888                           
   889  0073                     ??_I2C_Master_Wait:	
   890                           ; 1 bytes @ 0x3
   891                           
   892  0073                     ?___bmul:	
   893                           ; 1 bytes @ 0x3
   894                           
   895  0073                     ??___lldiv:	
   896                           ; 1 bytes @ 0x3
   897                           
   898  0073                     ?_I2C_Master_Read:	
   899                           ; 1 bytes @ 0x3
   900                           
   901  0073                     ?___lwdiv:	
   902                           ; 2 bytes @ 0x3
   903                           
   904  0073                     Lcd_Port@a:	
   905                           ; 2 bytes @ 0x3
   906                           
   907  0073                     Write_USART@a:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     ___bmul@multiplicand:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0073                     I2C_Master_Write@d:	
   914                           ; 1 bytes @ 0x3
   915                           
   916  0073                     I2C_Master_Read@a:	
   917                           ; 2 bytes @ 0x3
   918                           
   919  0073                     ___lwdiv@divisor:	
   920                           ; 2 bytes @ 0x3
   921                           
   922                           
   923                           ; 2 bytes @ 0x3
   924  0073                     	ds	1
   925  0074                     ??_Write_USART_String:
   926  0074                     ??_I2C_Master_Init:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0074                     ??_Lcd_Cmd:	
   930                           ; 1 bytes @ 0x4
   931                           
   932  0074                     ??_Lcd_Write_Char:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0074                     ??___bmul:	
   936                           ; 1 bytes @ 0x4
   937                           
   938                           
   939                           ; 1 bytes @ 0x4
   940  0074                     	ds	1
   941  0075                     ??_Write_to_RTC:
   942  0075                     ??_I2C_Master_Write:	
   943                           ; 1 bytes @ 0x5
   944                           
   945  0075                     ??_I2C_Master_Read:	
   946                           ; 1 bytes @ 0x5
   947                           
   948  0075                     Lcd_Write_Char@a:	
   949                           ; 1 bytes @ 0x5
   950                           
   951  0075                     Write_USART_String@a:	
   952                           ; 1 bytes @ 0x5
   953                           
   954  0075                     ___bmul@product:	
   955                           ; 1 bytes @ 0x5
   956                           
   957  0075                     ___lwdiv@dividend:	
   958                           ; 1 bytes @ 0x5
   959                           
   960                           
   961                           ; 2 bytes @ 0x5
   962  0075                     	ds	1
   963  0076                     ??_Lcd_Write_String:
   964  0076                     Lcd_Cmd@a:	
   965                           ; 1 bytes @ 0x6
   966                           
   967  0076                     Write_USART_String@i:	
   968                           ; 1 bytes @ 0x6
   969                           
   970  0076                     ___bmul@multiplier:	
   971                           ; 1 bytes @ 0x6
   972                           
   973                           
   974                           ; 1 bytes @ 0x6
   975  0076                     	ds	1
   976  0077                     ??_Lcd_Clear:
   977  0077                     ?_Lcd_Set_Cursor:	
   978                           ; 1 bytes @ 0x7
   979                           
   980  0077                     ??___lwdiv:	
   981                           ; 1 bytes @ 0x7
   982                           
   983  0077                     bcd_to_decimal@number:	
   984                           ; 1 bytes @ 0x7
   985                           
   986  0077                     Lcd_Set_Cursor@b:	
   987                           ; 1 bytes @ 0x7
   988                           
   989                           
   990                           ; 1 bytes @ 0x7
   991  0077                     	ds	1
   992  0078                     ??_setup:
   993                           
   994                           	psect	cstackBANK0
   995  003E                     __pcstackBANK0:	
   996                           ; 1 bytes @ 0x8
   997                           
   998  003E                     ??_Lcd_Init:
   999  003E                     ??_bcd_to_decimal:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  003E                     ??_Lcd_Set_Cursor:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  003E                     ?___lldiv:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  003E                     ___lwdiv@counter:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011  003E                     I2C_Master_Read@temp:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  003E                     Lcd_Write_String@i:	
  1015                           ; 2 bytes @ 0x0
  1016                           
  1017  003E                     ___lldiv@divisor:	
  1018                           ; 2 bytes @ 0x0
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x0
  1022  003E                     	ds	1
  1023  003F                     Lcd_Set_Cursor@a:
  1024  003F                     ___lwdiv@quotient:	
  1025                           ; 1 bytes @ 0x1
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x1
  1029  003F                     	ds	1
  1030  0040                     Lcd_Set_Cursor@temp:
  1031  0040                     Lcd_Write_String@a:	
  1032                           ; 1 bytes @ 0x2
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x2
  1036  0040                     	ds	1
  1037  0041                     ?___lwmod:
  1038  0041                     ___lwmod@divisor:	
  1039                           ; 2 bytes @ 0x3
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x3
  1043  0041                     	ds	1
  1044  0042                     ___lldiv@dividend:
  1045                           
  1046                           ; 4 bytes @ 0x4
  1047  0042                     	ds	1
  1048  0043                     ___lwmod@dividend:
  1049                           
  1050                           ; 2 bytes @ 0x5
  1051  0043                     	ds	2
  1052  0045                     ??___lwmod:
  1053                           
  1054                           ; 1 bytes @ 0x7
  1055  0045                     	ds	1
  1056  0046                     ___lwmod@counter:
  1057  0046                     ___lldiv@quotient:	
  1058                           ; 1 bytes @ 0x8
  1059                           
  1060                           
  1061                           ; 4 bytes @ 0x8
  1062  0046                     	ds	1
  1063  0047                     ?_sprintf:
  1064  0047                     sprintf@f:	
  1065                           ; 2 bytes @ 0x9
  1066                           
  1067                           
  1068                           ; 1 bytes @ 0x9
  1069  0047                     	ds	3
  1070  004A                     ??_sprintf:
  1071  004A                     ___lldiv@counter:	
  1072                           ; 1 bytes @ 0xC
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0xC
  1076  004A                     	ds	1
  1077  004B                     ?_I2C_Master_Init:
  1078  004B                     I2C_Master_Init@c:	
  1079                           ; 1 bytes @ 0xD
  1080                           
  1081                           
  1082                           ; 4 bytes @ 0xD
  1083  004B                     	ds	2
  1084  004D                     sprintf@ap:
  1085                           
  1086                           ; 1 bytes @ 0xF
  1087  004D                     	ds	1
  1088  004E                     sprintf@flag:
  1089                           
  1090                           ; 1 bytes @ 0x10
  1091  004E                     	ds	1
  1092  004F                     sprintf@prec:
  1093                           
  1094                           ; 1 bytes @ 0x11
  1095  004F                     	ds	1
  1096  0050                     sprintf@val:
  1097                           
  1098                           ; 2 bytes @ 0x12
  1099  0050                     	ds	2
  1100  0052                     sprintf@sp:
  1101                           
  1102                           ; 1 bytes @ 0x14
  1103  0052                     	ds	1
  1104  0053                     sprintf@c:
  1105                           
  1106                           ; 1 bytes @ 0x15
  1107  0053                     	ds	1
  1108  0054                     ??_main:
  1109                           
  1110                           ; 1 bytes @ 0x16
  1111  0054                     	ds	3
  1112                           
  1113                           	psect	maintext
  1114  0034                     __pmaintext:	
  1115 ;;
  1116 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1117 ;;
  1118 ;; *************** function _main *****************
  1119 ;; Defined at:
  1120 ;;		line 120 in file "main_prueba3_mini2.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : B00/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          0       3       0       0       0
  1137 ;;      Totals:         0       3       0       0       0
  1138 ;;Total ram usage:        3 bytes
  1139 ;; Hardware stack levels required when called:    4
  1140 ;; This function calls:
  1141 ;;		_I2C_Master_Read
  1142 ;;		_I2C_Master_RepeatedStart
  1143 ;;		_I2C_Master_Start
  1144 ;;		_I2C_Master_Stop
  1145 ;;		_I2C_Master_Write
  1146 ;;		_Lcd_Clear
  1147 ;;		_Lcd_Init
  1148 ;;		_Lcd_Set_Cursor
  1149 ;;		_Lcd_Write_String
  1150 ;;		_Write_USART
  1151 ;;		_Write_USART_String
  1152 ;;		_Write_to_RTC
  1153 ;;		_bcd_to_decimal
  1154 ;;		_setup
  1155 ;;		_sprintf
  1156 ;; This function is called by:
  1157 ;;		Startup code after reset
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _main
  1163  0034                     _main:
  1164  0034                     l2183:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1167                           
  1168                           
  1169                           ;main_prueba3_mini2.c: 121:     setup();
  1170  0034  120A  118A  2432  120A  118A  	fcall	_setup
  1171  0039                     l2185:
  1172                           
  1173                           ;main_prueba3_mini2.c: 122:     TRISD = 0x00;
  1174  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1175  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1176  003B  0188               	clrf	8	;volatile
  1177  003C                     l2187:
  1178                           
  1179                           ;main_prueba3_mini2.c: 123:     Lcd_Init();
  1180  003C  120A  118A  22F4  120A  118A  	fcall	_Lcd_Init
  1181  0041                     l2189:
  1182                           
  1183                           ;main_prueba3_mini2.c: 124:     Lcd_Clear();
  1184  0041  120A  118A  25A5  120A  118A  	fcall	_Lcd_Clear
  1185  0046                     l2191:
  1186                           
  1187                           ;main_prueba3_mini2.c: 125:     Write_to_RTC();
  1188  0046  120A  118A  229A  120A  118A  	fcall	_Write_to_RTC
  1189  004B                     l2193:
  1190                           
  1191                           ;main_prueba3_mini2.c: 131:         I2C_Master_Start();
  1192  004B  120A  118A  25EA  120A  118A  	fcall	_I2C_Master_Start
  1193  0050                     l2195:
  1194                           
  1195                           ;main_prueba3_mini2.c: 132:         I2C_Master_Write(0xD0);
  1196  0050  30D0               	movlw	208
  1197  0051  00F3               	movwf	I2C_Master_Write@d
  1198  0052  3000               	movlw	0
  1199  0053  00F4               	movwf	I2C_Master_Write@d+1
  1200  0054  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1201  0059                     l2197:
  1202                           
  1203                           ;main_prueba3_mini2.c: 133:         I2C_Master_Write(0);
  1204  0059  3000               	movlw	0
  1205  005A  00F3               	movwf	I2C_Master_Write@d
  1206  005B  00F4               	movwf	I2C_Master_Write@d+1
  1207  005C  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1208  0061                     l2199:
  1209                           
  1210                           ;main_prueba3_mini2.c: 134:         I2C_Master_RepeatedStart();
  1211  0061  120A  118A  25F3  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1212  0066                     l2201:
  1213                           
  1214                           ;main_prueba3_mini2.c: 135:         I2C_Master_Write(0xD1);
  1215  0066  30D1               	movlw	209
  1216  0067  00F3               	movwf	I2C_Master_Write@d
  1217  0068  3000               	movlw	0
  1218  0069  00F4               	movwf	I2C_Master_Write@d+1
  1219  006A  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  1220  006F                     l2203:
  1221                           
  1222                           ;main_prueba3_mini2.c: 136:         second = bcd_to_decimal(I2C_Master_Read(1));
  1223  006F  3001               	movlw	1
  1224  0070  00F3               	movwf	I2C_Master_Read@a
  1225  0071  3000               	movlw	0
  1226  0072  00F4               	movwf	I2C_Master_Read@a+1
  1227  0073  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Read
  1228  0078  0873               	movf	?_I2C_Master_Read,w
  1229  0079  120A  118A  251A  120A  118A  	fcall	_bcd_to_decimal
  1230  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1231  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0080  00D4               	movwf	??_main
  1233  0081  0854               	movf	??_main,w
  1234  0082  00DC               	movwf	_second
  1235  0083                     l2205:
  1236                           
  1237                           ;main_prueba3_mini2.c: 137:         minute = bcd_to_decimal(I2C_Master_Read(1));
  1238  0083  3001               	movlw	1
  1239  0084  00F3               	movwf	I2C_Master_Read@a
  1240  0085  3000               	movlw	0
  1241  0086  00F4               	movwf	I2C_Master_Read@a+1
  1242  0087  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Read
  1243  008C  0873               	movf	?_I2C_Master_Read,w
  1244  008D  120A  118A  251A  120A  118A  	fcall	_bcd_to_decimal
  1245  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0094  00D4               	movwf	??_main
  1248  0095  0854               	movf	??_main,w
  1249  0096  00DB               	movwf	_minute
  1250  0097                     l2207:
  1251                           
  1252                           ;main_prueba3_mini2.c: 138:         hour = bcd_to_decimal(I2C_Master_Read(1));
  1253  0097  3001               	movlw	1
  1254  0098  00F3               	movwf	I2C_Master_Read@a
  1255  0099  3000               	movlw	0
  1256  009A  00F4               	movwf	I2C_Master_Read@a+1
  1257  009B  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Read
  1258  00A0  0873               	movf	?_I2C_Master_Read,w
  1259  00A1  120A  118A  251A  120A  118A  	fcall	_bcd_to_decimal
  1260  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1261  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1262  00A8  00D4               	movwf	??_main
  1263  00A9  0854               	movf	??_main,w
  1264  00AA  00DA               	movwf	_hour
  1265  00AB                     l2209:
  1266                           
  1267                           ;main_prueba3_mini2.c: 139:         I2C_Master_Read(1);
  1268  00AB  3001               	movlw	1
  1269  00AC  00F3               	movwf	I2C_Master_Read@a
  1270  00AD  3000               	movlw	0
  1271  00AE  00F4               	movwf	I2C_Master_Read@a+1
  1272  00AF  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Read
  1273  00B4                     l2211:
  1274                           
  1275                           ;main_prueba3_mini2.c: 140:         m_day = bcd_to_decimal(I2C_Master_Read(1));
  1276  00B4  3001               	movlw	1
  1277  00B5  00F3               	movwf	I2C_Master_Read@a
  1278  00B6  3000               	movlw	0
  1279  00B7  00F4               	movwf	I2C_Master_Read@a+1
  1280  00B8  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Read
  1281  00BD  0873               	movf	?_I2C_Master_Read,w
  1282  00BE  120A  118A  251A  120A  118A  	fcall	_bcd_to_decimal
  1283  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1284  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1285  00C5  00D4               	movwf	??_main
  1286  00C6  0854               	movf	??_main,w
  1287  00C7  00D9               	movwf	_m_day
  1288  00C8                     l2213:
  1289                           
  1290                           ;main_prueba3_mini2.c: 141:         month = bcd_to_decimal(I2C_Master_Read(1));
  1291  00C8  3001               	movlw	1
  1292  00C9  00F3               	movwf	I2C_Master_Read@a
  1293  00CA  3000               	movlw	0
  1294  00CB  00F4               	movwf	I2C_Master_Read@a+1
  1295  00CC  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Read
  1296  00D1  0873               	movf	?_I2C_Master_Read,w
  1297  00D2  120A  118A  251A  120A  118A  	fcall	_bcd_to_decimal
  1298  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1299  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1300  00D9  00D4               	movwf	??_main
  1301  00DA  0854               	movf	??_main,w
  1302  00DB  00D8               	movwf	_month
  1303  00DC                     l2215:
  1304                           
  1305                           ;main_prueba3_mini2.c: 142:         year = bcd_to_decimal(I2C_Master_Read(1));
  1306  00DC  3001               	movlw	1
  1307  00DD  00F3               	movwf	I2C_Master_Read@a
  1308  00DE  3000               	movlw	0
  1309  00DF  00F4               	movwf	I2C_Master_Read@a+1
  1310  00E0  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Read
  1311  00E5  0873               	movf	?_I2C_Master_Read,w
  1312  00E6  120A  118A  251A  120A  118A  	fcall	_bcd_to_decimal
  1313  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1314  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1315  00ED  00D4               	movwf	??_main
  1316  00EE  0854               	movf	??_main,w
  1317  00EF  00D7               	movwf	_year
  1318  00F0                     l2217:
  1319                           
  1320                           ;main_prueba3_mini2.c: 143:         I2C_Master_Stop();
  1321  00F0  120A  118A  25E1  120A  118A  	fcall	_I2C_Master_Stop
  1322  00F5                     l2219:
  1323                           
  1324                           ;main_prueba3_mini2.c: 147:         sprintf(sec_send, "%d ", second);
  1325  00F5  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1326  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1327  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1328  00F8  00D4               	movwf	??_main
  1329  00F9  0854               	movf	??_main,w
  1330  00FA  00C7               	movwf	sprintf@f
  1331  00FB  085C               	movf	_second,w
  1332  00FC  00D5               	movwf	??_main+1
  1333  00FD  01D6               	clrf	??_main+2
  1334  00FE  0855               	movf	??_main+1,w
  1335  00FF  00C8               	movwf	?_sprintf+1
  1336  0100  0856               	movf	??_main+2,w
  1337  0101  00C9               	movwf	?_sprintf+2
  1338  0102  305D               	movlw	(low (_sec_send| 0))& (0+255)
  1339  0103  120A  118A  2148  120A  118A  	fcall	_sprintf
  1340  0108                     l2221:
  1341                           
  1342                           ;main_prueba3_mini2.c: 149:         Lcd_Set_Cursor(1,1);
  1343  0108  01F7               	clrf	Lcd_Set_Cursor@b
  1344  0109  0AF7               	incf	Lcd_Set_Cursor@b,f
  1345  010A  3001               	movlw	1
  1346  010B  120A  118A  2493  120A  118A  	fcall	_Lcd_Set_Cursor
  1347  0110                     l2223:
  1348                           
  1349                           ;main_prueba3_mini2.c: 150:         Lcd_Write_String(sec_send);
  1350  0110  305D               	movlw	(low (_sec_send| 0))& (0+255)
  1351  0111  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_String
  1352  0116                     l2225:
  1353                           
  1354                           ;main_prueba3_mini2.c: 152:         Lcd_Set_Cursor(2,1);
  1355  0116  01F7               	clrf	Lcd_Set_Cursor@b
  1356  0117  0AF7               	incf	Lcd_Set_Cursor@b,f
  1357  0118  3002               	movlw	2
  1358  0119  120A  118A  2493  120A  118A  	fcall	_Lcd_Set_Cursor
  1359  011E                     l2227:
  1360                           
  1361                           ;main_prueba3_mini2.c: 153:         Lcd_Write_String(Date);
  1362  011E  302F               	movlw	(low (_Date| 0))& (0+255)
  1363  011F  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_String
  1364  0124                     l2229:
  1365                           
  1366                           ;main_prueba3_mini2.c: 159:         Write_USART_String(sec_send);
  1367  0124  305D               	movlw	(low (_sec_send| 0))& (0+255)
  1368  0125  120A  118A  24FC  120A  118A  	fcall	_Write_USART_String
  1369  012A                     l2231:
  1370                           
  1371                           ;main_prueba3_mini2.c: 163:         Write_USART(13);
  1372  012A  300D               	movlw	13
  1373  012B  120A  118A  25CB  120A  118A  	fcall	_Write_USART
  1374  0130                     l2233:
  1375                           
  1376                           ;main_prueba3_mini2.c: 164:         Write_USART(10);
  1377  0130  300A               	movlw	10
  1378  0131  120A  118A  25CB  120A  118A  	fcall	_Write_USART
  1379  0136                     l2235:
  1380                           
  1381                           ;main_prueba3_mini2.c: 176:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1382  0136  300B               	movlw	11
  1383  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0139  00D6               	movwf	??_main+2
  1386  013A  3026               	movlw	38
  1387  013B  00D5               	movwf	??_main+1
  1388  013C  305D               	movlw	93
  1389  013D  00D4               	movwf	??_main
  1390  013E                     u1387:
  1391  013E  0BD4               	decfsz	??_main,f
  1392  013F  293E               	goto	u1387
  1393  0140  0BD5               	decfsz	??_main+1,f
  1394  0141  293E               	goto	u1387
  1395  0142  0BD6               	decfsz	??_main+2,f
  1396  0143  293E               	goto	u1387
  1397  0144  284B               	goto	l2193
  1398  0145  120A  118A  280C   	ljmp	start
  1399  0148                     __end_of_main:
  1400                           
  1401                           	psect	text1
  1402  0148                     __ptext1:	
  1403 ;; *************** function _sprintf *****************
  1404 ;; Defined at:
  1405 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  sp              1    wreg     PTR unsigned char 
  1408 ;;		 -> cont_send(8), sec_send(8), 
  1409 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1410 ;;		 -> STR_2(3), STR_1(4), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1413 ;;		 -> cont_send(8), sec_send(8), 
  1414 ;;  tmpval          4    0        struct .
  1415 ;;  val             2   18[BANK0 ] unsigned int 
  1416 ;;  cp              2    0        PTR const unsigned char 
  1417 ;;  len             2    0        unsigned int 
  1418 ;;  c               1   21[BANK0 ] unsigned char 
  1419 ;;  prec            1   17[BANK0 ] char 
  1420 ;;  flag            1   16[BANK0 ] unsigned char 
  1421 ;;  ap              1   15[BANK0 ] PTR void [1]
  1422 ;;		 -> ?_sprintf(2), 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2    9[BANK0 ] int 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       3       0       0       0
  1433 ;;      Locals:         0       7       0       0       0
  1434 ;;      Temps:          0       3       0       0       0
  1435 ;;      Totals:         0      13       0       0       0
  1436 ;;Total ram usage:       13 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		___lwdiv
  1441 ;;		___lwmod
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;;		_RTC_display
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _sprintf
  1450  0148                     _sprintf:
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1454                           ;sprintf@sp stored from wreg
  1455  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1457  014A  00D2               	movwf	sprintf@sp
  1458  014B                     l2101:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1461  014B  3048               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1462  014C  00CA               	movwf	??_sprintf
  1463  014D  084A               	movf	??_sprintf,w
  1464  014E  00CD               	movwf	sprintf@ap
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1467  014F  2A1B               	goto	l2153
  1468  0150                     l2103:
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1471  0150  3025               	movlw	37
  1472  0151  0653               	xorwf	sprintf@c,w
  1473  0152  1903               	btfsc	3,2
  1474  0153  2955               	goto	u1281
  1475  0154  2956               	goto	u1280
  1476  0155                     u1281:
  1477  0155  2962               	goto	l2109
  1478  0156                     u1280:
  1479  0156                     l2105:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1482  0156  0853               	movf	sprintf@c,w
  1483  0157  00CA               	movwf	??_sprintf
  1484  0158  0852               	movf	sprintf@sp,w
  1485  0159  0084               	movwf	4
  1486  015A  084A               	movf	??_sprintf,w
  1487  015B  1383               	bcf	3,7	;select IRP bank0
  1488  015C  0080               	movwf	0
  1489  015D                     l2107:
  1490  015D  3001               	movlw	1
  1491  015E  00CA               	movwf	??_sprintf
  1492  015F  084A               	movf	??_sprintf,w
  1493  0160  07D2               	addwf	sprintf@sp,f
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1496  0161  2A1B               	goto	l2153
  1497  0162                     l2109:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1500  0162  01CE               	clrf	sprintf@flag
  1501  0163                     l2113:	
  1502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1503                           
  1504  0163  3001               	movlw	1
  1505  0164  07C7               	addwf	sprintf@f,f
  1506  0165  30FF               	movlw	-1
  1507  0166  0747               	addwf	sprintf@f,w
  1508  0167  0084               	movwf	4
  1509  0168  120A  118A  2550  120A  118A  	fcall	stringdir
  1510  016D  00D3               	movwf	sprintf@c
  1511  016E  00CA               	movwf	??_sprintf
  1512  016F  01CB               	clrf	??_sprintf+1
  1513                           
  1514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1515                           ; Switch size 1, requested type "simple"
  1516                           ; Number of cases is 1, Range of values is 0 to 0
  1517                           ; switch strategies available:
  1518                           ; Name         Instructions Cycles
  1519                           ; simple_byte            4     3 (average)
  1520                           ; direct_byte           11     8 (fixed)
  1521                           ; jumptable            260     6 (fixed)
  1522                           ;	Chosen strategy is simple_byte
  1523  0170  084B               	movf	??_sprintf+1,w
  1524  0171  3A00               	xorlw	0	; case 0
  1525  0172  1903               	skipnz
  1526  0173  2975               	goto	l2273
  1527  0174  2A1B               	goto	l2153
  1528  0175                     l2273:
  1529                           
  1530                           ; Switch size 1, requested type "simple"
  1531                           ; Number of cases is 3, Range of values is 0 to 105
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte           10     6 (average)
  1535                           ; jumptable            260     6 (fixed)
  1536                           ;	Chosen strategy is simple_byte
  1537  0175  084A               	movf	??_sprintf,w
  1538  0176  3A00               	xorlw	0	; case 0
  1539  0177  1903               	skipnz
  1540  0178  2A2D               	goto	l2155
  1541  0179  3A64               	xorlw	100	; case 100
  1542  017A  1903               	skipnz
  1543  017B  2980               	goto	l2115
  1544  017C  3A0D               	xorlw	13	; case 105
  1545  017D  1903               	skipnz
  1546  017E  2980               	goto	l2115
  1547  017F  2A1B               	goto	l2153
  1548  0180                     l2115:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1551  0180  084D               	movf	sprintf@ap,w
  1552  0181  0084               	movwf	4
  1553  0182  1383               	bcf	3,7	;select IRP bank0
  1554  0183  0800               	movf	0,w
  1555  0184  00D0               	movwf	sprintf@val
  1556  0185  0A84               	incf	4,f
  1557  0186  0800               	movf	0,w
  1558  0187  00D1               	movwf	sprintf@val+1
  1559  0188                     l2117:
  1560  0188  3002               	movlw	2
  1561  0189  00CA               	movwf	??_sprintf
  1562  018A  084A               	movf	??_sprintf,w
  1563  018B  07CD               	addwf	sprintf@ap,f
  1564  018C                     l2119:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1567  018C  1FD1               	btfss	sprintf@val+1,7
  1568  018D  298F               	goto	u1291
  1569  018E  2990               	goto	u1290
  1570  018F                     u1291:
  1571  018F  2999               	goto	l2125
  1572  0190                     u1290:
  1573  0190                     l2121:
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1576  0190  3003               	movlw	3
  1577  0191  00CA               	movwf	??_sprintf
  1578  0192  084A               	movf	??_sprintf,w
  1579  0193  04CE               	iorwf	sprintf@flag,f
  1580  0194                     l2123:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1583  0194  09D0               	comf	sprintf@val,f
  1584  0195  09D1               	comf	sprintf@val+1,f
  1585  0196  0AD0               	incf	sprintf@val,f
  1586  0197  1903               	skipnz
  1587  0198  0AD1               	incf	sprintf@val+1,f
  1588  0199                     l2125:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1591  0199  01D3               	clrf	sprintf@c
  1592  019A  0AD3               	incf	sprintf@c,f
  1593  019B                     l2131:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1596  019B  0853               	movf	sprintf@c,w
  1597  019C  00CA               	movwf	??_sprintf
  1598  019D  074A               	addwf	??_sprintf,w
  1599  019E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1600  019F  0084               	movwf	4
  1601  01A0  120A  118A  2550  120A  118A  	fcall	stringdir
  1602  01A5  00CB               	movwf	??_sprintf+1
  1603  01A6  120A  118A  2550  120A  118A  	fcall	stringdir
  1604  01AB  00CC               	movwf	??_sprintf+2
  1605  01AC  084C               	movf	??_sprintf+2,w
  1606  01AD  0251               	subwf	sprintf@val+1,w
  1607  01AE  1D03               	skipz
  1608  01AF  29B2               	goto	u1305
  1609  01B0  084B               	movf	??_sprintf+1,w
  1610  01B1  0250               	subwf	sprintf@val,w
  1611  01B2                     u1305:
  1612  01B2  1803               	skipnc
  1613  01B3  29B5               	goto	u1301
  1614  01B4  29B6               	goto	u1300
  1615  01B5                     u1301:
  1616  01B5  29B7               	goto	l2135
  1617  01B6                     u1300:
  1618  01B6  29C1               	goto	l2137
  1619  01B7                     l2135:
  1620  01B7  3001               	movlw	1
  1621  01B8  00CA               	movwf	??_sprintf
  1622  01B9  084A               	movf	??_sprintf,w
  1623  01BA  07D3               	addwf	sprintf@c,f
  1624  01BB  3005               	movlw	5
  1625  01BC  0653               	xorwf	sprintf@c,w
  1626  01BD  1D03               	btfss	3,2
  1627  01BE  29C0               	goto	u1311
  1628  01BF  29C1               	goto	u1310
  1629  01C0                     u1311:
  1630  01C0  299B               	goto	l2131
  1631  01C1                     u1310:
  1632  01C1                     l2137:
  1633                           
  1634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1635  01C1  084E               	movf	sprintf@flag,w
  1636  01C2  3903               	andlw	3
  1637  01C3  1903               	btfsc	3,2
  1638  01C4  29C6               	goto	u1321
  1639  01C5  29C7               	goto	u1320
  1640  01C6                     u1321:
  1641  01C6  29D2               	goto	l2143
  1642  01C7                     u1320:
  1643  01C7                     l2139:
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1646  01C7  302D               	movlw	45
  1647  01C8  00CA               	movwf	??_sprintf
  1648  01C9  0852               	movf	sprintf@sp,w
  1649  01CA  0084               	movwf	4
  1650  01CB  084A               	movf	??_sprintf,w
  1651  01CC  1383               	bcf	3,7	;select IRP bank0
  1652  01CD  0080               	movwf	0
  1653  01CE                     l2141:
  1654  01CE  3001               	movlw	1
  1655  01CF  00CA               	movwf	??_sprintf
  1656  01D0  084A               	movf	??_sprintf,w
  1657  01D1  07D2               	addwf	sprintf@sp,f
  1658  01D2                     l2143:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1661  01D2  0853               	movf	sprintf@c,w
  1662  01D3  00CA               	movwf	??_sprintf
  1663  01D4  084A               	movf	??_sprintf,w
  1664  01D5  00CF               	movwf	sprintf@prec
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1667  01D6  2A12               	goto	l2151
  1668  01D7                     l2145:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1671  01D7  300A               	movlw	10
  1672  01D8  00C1               	movwf	___lwmod@divisor
  1673  01D9  3000               	movlw	0
  1674  01DA  00C2               	movwf	___lwmod@divisor+1
  1675  01DB  084F               	movf	sprintf@prec,w
  1676  01DC  00CA               	movwf	??_sprintf
  1677  01DD  074A               	addwf	??_sprintf,w
  1678  01DE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1679  01DF  0084               	movwf	4
  1680  01E0  120A  118A  2550  120A  118A  	fcall	stringdir
  1681  01E5  00F3               	movwf	___lwdiv@divisor
  1682  01E6  120A  118A  2550  120A  118A  	fcall	stringdir
  1683  01EB  00F4               	movwf	___lwdiv@divisor+1
  1684  01EC  0851               	movf	sprintf@val+1,w
  1685  01ED  00F6               	movwf	___lwdiv@dividend+1
  1686  01EE  0850               	movf	sprintf@val,w
  1687  01EF  00F5               	movwf	___lwdiv@dividend
  1688  01F0  120A  118A  2344  120A  118A  	fcall	___lwdiv
  1689  01F5  0874               	movf	?___lwdiv+1,w
  1690  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1691  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1692  01F8  00C4               	movwf	___lwmod@dividend+1
  1693  01F9  0873               	movf	?___lwdiv,w
  1694  01FA  00C3               	movwf	___lwmod@dividend
  1695  01FB  120A  118A  238A  120A  118A  	fcall	___lwmod
  1696  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0202  0841               	movf	?___lwmod,w
  1699  0203  3E30               	addlw	48
  1700  0204  00CB               	movwf	??_sprintf+1
  1701  0205  084B               	movf	??_sprintf+1,w
  1702  0206  00D3               	movwf	sprintf@c
  1703  0207                     l2147:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1706  0207  0853               	movf	sprintf@c,w
  1707  0208  00CA               	movwf	??_sprintf
  1708  0209  0852               	movf	sprintf@sp,w
  1709  020A  0084               	movwf	4
  1710  020B  084A               	movf	??_sprintf,w
  1711  020C  1383               	bcf	3,7	;select IRP bank0
  1712  020D  0080               	movwf	0
  1713  020E                     l2149:
  1714  020E  3001               	movlw	1
  1715  020F  00CA               	movwf	??_sprintf
  1716  0210  084A               	movf	??_sprintf,w
  1717  0211  07D2               	addwf	sprintf@sp,f
  1718  0212                     l2151:
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1721  0212  30FF               	movlw	255
  1722  0213  00CA               	movwf	??_sprintf
  1723  0214  084A               	movf	??_sprintf,w
  1724  0215  07CF               	addwf	sprintf@prec,f
  1725  0216  0A4F               	incf	sprintf@prec,w
  1726  0217  1D03               	btfss	3,2
  1727  0218  2A1A               	goto	u1331
  1728  0219  2A1B               	goto	u1330
  1729  021A                     u1331:
  1730  021A  29D7               	goto	l2145
  1731  021B                     u1330:
  1732  021B                     l2153:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1735  021B  3001               	movlw	1
  1736  021C  07C7               	addwf	sprintf@f,f
  1737  021D  30FF               	movlw	-1
  1738  021E  0747               	addwf	sprintf@f,w
  1739  021F  0084               	movwf	4
  1740  0220  120A  118A  2550  120A  118A  	fcall	stringdir
  1741  0225  00CA               	movwf	??_sprintf
  1742  0226  084A               	movf	??_sprintf,w
  1743  0227  00D3               	movwf	sprintf@c
  1744  0228  0853               	movf	sprintf@c,w
  1745  0229  1D03               	btfss	3,2
  1746  022A  2A2C               	goto	u1341
  1747  022B  2A2D               	goto	u1340
  1748  022C                     u1341:
  1749  022C  2950               	goto	l2103
  1750  022D                     u1340:
  1751  022D                     l2155:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1754  022D  0852               	movf	sprintf@sp,w
  1755  022E  0084               	movwf	4
  1756  022F  1383               	bcf	3,7	;select IRP bank0
  1757  0230  0180               	clrf	0
  1758  0231                     l423:
  1759  0231  0008               	return
  1760  0232                     __end_of_sprintf:
  1761                           
  1762                           	psect	text2
  1763  038A                     __ptext2:	
  1764 ;; *************** function ___lwmod *****************
  1765 ;; Defined at:
  1766 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  divisor         2    3[BANK0 ] unsigned int 
  1769 ;;  dividend        2    5[BANK0 ] unsigned int 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  counter         1    8[BANK0 ] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2    3[BANK0 ] unsigned int 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       4       0       0       0
  1782 ;;      Locals:         0       1       0       0       0
  1783 ;;      Temps:          0       1       0       0       0
  1784 ;;      Totals:         0       6       0       0       0
  1785 ;;Total ram usage:        6 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_sprintf
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function ___lwmod
  1797  038A                     ___lwmod:
  1798  038A                     l1557:	
  1799                           ;incstack = 0
  1800                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1801                           
  1802  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1803  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1804  038C  0841               	movf	___lwmod@divisor,w
  1805  038D  0442               	iorwf	___lwmod@divisor+1,w
  1806  038E  1903               	btfsc	3,2
  1807  038F  2B91               	goto	u711
  1808  0390  2B92               	goto	u710
  1809  0391                     u711:
  1810  0391  2BC1               	goto	l1575
  1811  0392                     u710:
  1812  0392                     l1559:
  1813  0392  01C6               	clrf	___lwmod@counter
  1814  0393  0AC6               	incf	___lwmod@counter,f
  1815  0394  2BA0               	goto	l1565
  1816  0395                     l1561:
  1817  0395  3001               	movlw	1
  1818  0396                     u725:
  1819  0396  1003               	clrc
  1820  0397  0DC1               	rlf	___lwmod@divisor,f
  1821  0398  0DC2               	rlf	___lwmod@divisor+1,f
  1822  0399  3EFF               	addlw	-1
  1823  039A  1D03               	skipz
  1824  039B  2B96               	goto	u725
  1825  039C                     l1563:
  1826  039C  3001               	movlw	1
  1827  039D  00C5               	movwf	??___lwmod
  1828  039E  0845               	movf	??___lwmod,w
  1829  039F  07C6               	addwf	___lwmod@counter,f
  1830  03A0                     l1565:
  1831  03A0  1FC2               	btfss	___lwmod@divisor+1,7
  1832  03A1  2BA3               	goto	u731
  1833  03A2  2BA4               	goto	u730
  1834  03A3                     u731:
  1835  03A3  2B95               	goto	l1561
  1836  03A4                     u730:
  1837  03A4                     l1567:
  1838  03A4  0842               	movf	___lwmod@divisor+1,w
  1839  03A5  0244               	subwf	___lwmod@dividend+1,w
  1840  03A6  1D03               	skipz
  1841  03A7  2BAA               	goto	u745
  1842  03A8  0841               	movf	___lwmod@divisor,w
  1843  03A9  0243               	subwf	___lwmod@dividend,w
  1844  03AA                     u745:
  1845  03AA  1C03               	skipc
  1846  03AB  2BAD               	goto	u741
  1847  03AC  2BAE               	goto	u740
  1848  03AD                     u741:
  1849  03AD  2BB4               	goto	l1571
  1850  03AE                     u740:
  1851  03AE                     l1569:
  1852  03AE  0841               	movf	___lwmod@divisor,w
  1853  03AF  02C3               	subwf	___lwmod@dividend,f
  1854  03B0  0842               	movf	___lwmod@divisor+1,w
  1855  03B1  1C03               	skipc
  1856  03B2  03C4               	decf	___lwmod@dividend+1,f
  1857  03B3  02C4               	subwf	___lwmod@dividend+1,f
  1858  03B4                     l1571:
  1859  03B4  3001               	movlw	1
  1860  03B5                     u755:
  1861  03B5  1003               	clrc
  1862  03B6  0CC2               	rrf	___lwmod@divisor+1,f
  1863  03B7  0CC1               	rrf	___lwmod@divisor,f
  1864  03B8  3EFF               	addlw	-1
  1865  03B9  1D03               	skipz
  1866  03BA  2BB5               	goto	u755
  1867  03BB                     l1573:
  1868  03BB  3001               	movlw	1
  1869  03BC  02C6               	subwf	___lwmod@counter,f
  1870  03BD  1D03               	btfss	3,2
  1871  03BE  2BC0               	goto	u761
  1872  03BF  2BC1               	goto	u760
  1873  03C0                     u761:
  1874  03C0  2BA4               	goto	l1567
  1875  03C1                     u760:
  1876  03C1                     l1575:
  1877  03C1  0844               	movf	___lwmod@dividend+1,w
  1878  03C2  00C2               	movwf	?___lwmod+1
  1879  03C3  0843               	movf	___lwmod@dividend,w
  1880  03C4  00C1               	movwf	?___lwmod
  1881  03C5                     l709:
  1882  03C5  0008               	return
  1883  03C6                     __end_of___lwmod:
  1884                           
  1885                           	psect	text3
  1886  0344                     __ptext3:	
  1887 ;; *************** function ___lwdiv *****************
  1888 ;; Defined at:
  1889 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  divisor         2    3[COMMON] unsigned int 
  1892 ;;  dividend        2    5[COMMON] unsigned int 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  quotient        2    1[BANK0 ] unsigned int 
  1895 ;;  counter         1    0[BANK0 ] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  2    3[COMMON] unsigned int 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         4       0       0       0       0
  1906 ;;      Locals:         0       3       0       0       0
  1907 ;;      Temps:          1       0       0       0       0
  1908 ;;      Totals:         5       3       0       0       0
  1909 ;;Total ram usage:        8 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_sprintf
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function ___lwdiv
  1921  0344                     ___lwdiv:
  1922  0344                     l2007:	
  1923                           ;incstack = 0
  1924                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1925                           
  1926  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0346  01BF               	clrf	___lwdiv@quotient
  1929  0347  01C0               	clrf	___lwdiv@quotient+1
  1930  0348                     l2009:
  1931  0348  0873               	movf	___lwdiv@divisor,w
  1932  0349  0474               	iorwf	___lwdiv@divisor+1,w
  1933  034A  1903               	btfsc	3,2
  1934  034B  2B4D               	goto	u1191
  1935  034C  2B4E               	goto	u1190
  1936  034D                     u1191:
  1937  034D  2B85               	goto	l2029
  1938  034E                     u1190:
  1939  034E                     l2011:
  1940  034E  01BE               	clrf	___lwdiv@counter
  1941  034F  0ABE               	incf	___lwdiv@counter,f
  1942  0350  2B5C               	goto	l2017
  1943  0351                     l2013:
  1944  0351  3001               	movlw	1
  1945  0352                     u1205:
  1946  0352  1003               	clrc
  1947  0353  0DF3               	rlf	___lwdiv@divisor,f
  1948  0354  0DF4               	rlf	___lwdiv@divisor+1,f
  1949  0355  3EFF               	addlw	-1
  1950  0356  1D03               	skipz
  1951  0357  2B52               	goto	u1205
  1952  0358                     l2015:
  1953  0358  3001               	movlw	1
  1954  0359  00F7               	movwf	??___lwdiv
  1955  035A  0877               	movf	??___lwdiv,w
  1956  035B  07BE               	addwf	___lwdiv@counter,f
  1957  035C                     l2017:
  1958  035C  1FF4               	btfss	___lwdiv@divisor+1,7
  1959  035D  2B5F               	goto	u1211
  1960  035E  2B60               	goto	u1210
  1961  035F                     u1211:
  1962  035F  2B51               	goto	l2013
  1963  0360                     u1210:
  1964  0360                     l2019:
  1965  0360  3001               	movlw	1
  1966  0361                     u1225:
  1967  0361  1003               	clrc
  1968  0362  0DBF               	rlf	___lwdiv@quotient,f
  1969  0363  0DC0               	rlf	___lwdiv@quotient+1,f
  1970  0364  3EFF               	addlw	-1
  1971  0365  1D03               	skipz
  1972  0366  2B61               	goto	u1225
  1973  0367  0874               	movf	___lwdiv@divisor+1,w
  1974  0368  0276               	subwf	___lwdiv@dividend+1,w
  1975  0369  1D03               	skipz
  1976  036A  2B6D               	goto	u1235
  1977  036B  0873               	movf	___lwdiv@divisor,w
  1978  036C  0275               	subwf	___lwdiv@dividend,w
  1979  036D                     u1235:
  1980  036D  1C03               	skipc
  1981  036E  2B70               	goto	u1231
  1982  036F  2B71               	goto	u1230
  1983  0370                     u1231:
  1984  0370  2B78               	goto	l2025
  1985  0371                     u1230:
  1986  0371                     l2021:
  1987  0371  0873               	movf	___lwdiv@divisor,w
  1988  0372  02F5               	subwf	___lwdiv@dividend,f
  1989  0373  0874               	movf	___lwdiv@divisor+1,w
  1990  0374  1C03               	skipc
  1991  0375  03F6               	decf	___lwdiv@dividend+1,f
  1992  0376  02F6               	subwf	___lwdiv@dividend+1,f
  1993  0377                     l2023:
  1994  0377  143F               	bsf	___lwdiv@quotient,0
  1995  0378                     l2025:
  1996  0378  3001               	movlw	1
  1997  0379                     u1245:
  1998  0379  1003               	clrc
  1999  037A  0CF4               	rrf	___lwdiv@divisor+1,f
  2000  037B  0CF3               	rrf	___lwdiv@divisor,f
  2001  037C  3EFF               	addlw	-1
  2002  037D  1D03               	skipz
  2003  037E  2B79               	goto	u1245
  2004  037F                     l2027:
  2005  037F  3001               	movlw	1
  2006  0380  02BE               	subwf	___lwdiv@counter,f
  2007  0381  1D03               	btfss	3,2
  2008  0382  2B84               	goto	u1251
  2009  0383  2B85               	goto	u1250
  2010  0384                     u1251:
  2011  0384  2B60               	goto	l2019
  2012  0385                     u1250:
  2013  0385                     l2029:
  2014  0385  0840               	movf	___lwdiv@quotient+1,w
  2015  0386  00F4               	movwf	?___lwdiv+1
  2016  0387  083F               	movf	___lwdiv@quotient,w
  2017  0388  00F3               	movwf	?___lwdiv
  2018  0389                     l699:
  2019  0389  0008               	return
  2020  038A                     __end_of___lwdiv:
  2021                           
  2022                           	psect	text4
  2023  0432                     __ptext4:	
  2024 ;; *************** function _setup *****************
  2025 ;; Defined at:
  2026 ;;		line 245 in file "main_prueba3_mini2.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0
  2043 ;;      Totals:         0       0       0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    3
  2047 ;; This function calls:
  2048 ;;		_I2C_Master_Init
  2049 ;;		_USART_INTERRUPT
  2050 ;;		_USART_Init
  2051 ;;		_USART_Init_BaudRate
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function _setup
  2059  0432                     _setup:
  2060  0432                     l2033:	
  2061                           ;incstack = 0
  2062                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2063                           
  2064                           
  2065                           ;main_prueba3_mini2.c: 247:     ANSEL = 0;
  2066  0432  1683               	bsf	3,5	;RP0=1, select bank3
  2067  0433  1703               	bsf	3,6	;RP1=1, select bank3
  2068  0434  0188               	clrf	8	;volatile
  2069                           
  2070                           ;main_prueba3_mini2.c: 248:     ANSELH = 0;
  2071  0435  0189               	clrf	9	;volatile
  2072                           
  2073                           ;main_prueba3_mini2.c: 249:     TRISA = 0;
  2074  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2076  0438  0185               	clrf	5	;volatile
  2077  0439                     l2035:
  2078                           
  2079                           ;main_prueba3_mini2.c: 250:     TRISB = 0b00000011;
  2080  0439  3003               	movlw	3
  2081  043A  0086               	movwf	6	;volatile
  2082  043B                     l2037:
  2083                           
  2084                           ;main_prueba3_mini2.c: 251:     TRISCbits.TRISC6 = 0;
  2085  043B  1307               	bcf	7,6	;volatile
  2086  043C                     l2039:
  2087                           
  2088                           ;main_prueba3_mini2.c: 252:     TRISCbits.TRISC7 = 1;
  2089  043C  1787               	bsf	7,7	;volatile
  2090  043D                     l2041:
  2091                           
  2092                           ;main_prueba3_mini2.c: 253:     TRISD = 0;
  2093  043D  0188               	clrf	8	;volatile
  2094  043E                     l2043:
  2095                           
  2096                           ;main_prueba3_mini2.c: 254:     TRISE = 0;
  2097  043E  0189               	clrf	9	;volatile
  2098  043F                     l2045:
  2099                           
  2100                           ;main_prueba3_mini2.c: 255:     PORTA = 0;
  2101  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0441  0185               	clrf	5	;volatile
  2104  0442                     l2047:
  2105                           
  2106                           ;main_prueba3_mini2.c: 256:     PORTB = 0;
  2107  0442  0186               	clrf	6	;volatile
  2108  0443                     l2049:
  2109                           
  2110                           ;main_prueba3_mini2.c: 257:     PORTC = 0;
  2111  0443  0187               	clrf	7	;volatile
  2112  0444                     l2051:
  2113                           
  2114                           ;main_prueba3_mini2.c: 258:     PORTD = 0;
  2115  0444  0188               	clrf	8	;volatile
  2116  0445                     l2053:
  2117                           
  2118                           ;main_prueba3_mini2.c: 259:     PORTE = 0;
  2119  0445  0189               	clrf	9	;volatile
  2120  0446                     l2055:
  2121                           
  2122                           ;main_prueba3_mini2.c: 260:     I2C_Master_Init(100000);
  2123  0446  3000               	movlw	0
  2124  0447  00CE               	movwf	I2C_Master_Init@c+3
  2125  0448  3001               	movlw	1
  2126  0449  00CD               	movwf	I2C_Master_Init@c+2
  2127  044A  3086               	movlw	134
  2128  044B  00CC               	movwf	I2C_Master_Init@c+1
  2129  044C  30A0               	movlw	160
  2130  044D  00CB               	movwf	I2C_Master_Init@c
  2131  044E  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Init
  2132  0453                     l2057:
  2133                           
  2134                           ;main_prueba3_mini2.c: 261:     USART_Init_BaudRate();
  2135  0453  120A  118A  2604  120A  118A  	fcall	_USART_Init_BaudRate
  2136  0458                     l2059:
  2137                           
  2138                           ;main_prueba3_mini2.c: 262:     USART_Init();
  2139  0458  120A  118A  25BF  120A  118A  	fcall	_USART_Init
  2140  045D                     l2061:
  2141                           
  2142                           ;main_prueba3_mini2.c: 263:     USART_INTERRUPT();
  2143  045D  120A  118A  260A  120A  118A  	fcall	_USART_INTERRUPT
  2144  0462                     l144:
  2145  0462  0008               	return
  2146  0463                     __end_of_setup:
  2147                           
  2148                           	psect	text5
  2149  0604                     __ptext5:	
  2150 ;; *************** function _USART_Init_BaudRate *****************
  2151 ;; Defined at:
  2152 ;;		line 19 in file "USART.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0
  2169 ;;      Totals:         0       0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_setup
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _USART_Init_BaudRate
  2182  0604                     _USART_Init_BaudRate:
  2183  0604                     l1487:	
  2184                           ;incstack = 0
  2185                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  2186                           
  2187                           
  2188                           ;USART.c: 20:     SPBRGH = 0;
  2189  0604  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0605  1303               	bcf	3,6	;RP1=0, select bank1
  2191  0606  019A               	clrf	26	;volatile
  2192  0607                     l1489:
  2193                           
  2194                           ;USART.c: 21:     SPBRG = 12;
  2195  0607  300C               	movlw	12
  2196  0608  0099               	movwf	25	;volatile
  2197  0609                     l292:
  2198  0609  0008               	return
  2199  060A                     __end_of_USART_Init_BaudRate:
  2200                           
  2201                           	psect	text6
  2202  05BF                     __ptext6:	
  2203 ;; *************** function _USART_Init *****************
  2204 ;; Defined at:
  2205 ;;		line 8 in file "USART.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		status,2
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         0       0       0       0       0
  2220 ;;      Locals:         0       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0
  2222 ;;      Totals:         0       0       0       0       0
  2223 ;;Total ram usage:        0 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_setup
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _USART_Init
  2235  05BF                     _USART_Init:
  2236  05BF                     l1491:	
  2237                           ;incstack = 0
  2238                           ; Regs used in _USART_Init: [status,2]
  2239                           
  2240                           
  2241                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  2242  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2243  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2244  05C1  1798               	bsf	24,7	;volatile
  2245                           
  2246                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  2247  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  2248  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  2249  05C4  1218               	bcf	24,4	;volatile
  2250                           
  2251                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  2252  05C5  1698               	bsf	24,5	;volatile
  2253                           
  2254                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  2255  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2256  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2257  05C8  1618               	bsf	24,4	;volatile
  2258  05C9                     l1493:
  2259                           
  2260                           ;USART.c: 16:     RCREG = 0;
  2261  05C9  019A               	clrf	26	;volatile
  2262  05CA                     l289:
  2263  05CA  0008               	return
  2264  05CB                     __end_of_USART_Init:
  2265                           
  2266                           	psect	text7
  2267  060A                     __ptext7:	
  2268 ;; *************** function _USART_INTERRUPT *****************
  2269 ;; Defined at:
  2270 ;;		line 24 in file "USART.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		None
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0
  2287 ;;      Totals:         0       0       0       0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_setup
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _USART_INTERRUPT
  2300  060A                     _USART_INTERRUPT:
  2301  060A                     l1495:	
  2302                           ;incstack = 0
  2303                           ; Regs used in _USART_INTERRUPT: []
  2304                           
  2305                           
  2306                           ;USART.c: 25:     INTCONbits.GIE = 1;
  2307  060A  178B               	bsf	11,7	;volatile
  2308                           
  2309                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  2310  060B  170B               	bsf	11,6	;volatile
  2311                           
  2312                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  2313  060C  1683               	bsf	3,5	;RP0=1, select bank1
  2314  060D  1303               	bcf	3,6	;RP1=0, select bank1
  2315  060E  168C               	bsf	12,5	;volatile
  2316  060F                     l295:
  2317  060F  0008               	return
  2318  0610                     __end_of_USART_INTERRUPT:
  2319                           
  2320                           	psect	text8
  2321  03C6                     __ptext8:	
  2322 ;; *************** function _I2C_Master_Init *****************
  2323 ;; Defined at:
  2324 ;;		line 21 in file "I2C.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  c               4   13[BANK0 ] const unsigned long 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         0       4       0       0       0
  2339 ;;      Locals:         0       0       0       0       0
  2340 ;;      Temps:          4       0       0       0       0
  2341 ;;      Totals:         4       4       0       0       0
  2342 ;;Total ram usage:        8 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    2
  2345 ;; This function calls:
  2346 ;;		___lldiv
  2347 ;; This function is called by:
  2348 ;;		_setup
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _I2C_Master_Init
  2354  03C6                     _I2C_Master_Init:
  2355  03C6                     l1975:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2358                           
  2359                           
  2360                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  2361  03C6  3028               	movlw	40
  2362  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2363  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2364  03C9  0094               	movwf	20	;volatile
  2365  03CA                     l1977:
  2366                           
  2367                           ;I2C.c: 28:     SSPCON2 = 0;
  2368  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2369  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2370  03CC  0191               	clrf	17	;volatile
  2371  03CD                     l1979:
  2372                           
  2373                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  2374  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2375  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2376  03CF  084B               	movf	I2C_Master_Init@c,w
  2377  03D0  00F4               	movwf	??_I2C_Master_Init
  2378  03D1  084C               	movf	I2C_Master_Init@c+1,w
  2379  03D2  00F5               	movwf	??_I2C_Master_Init+1
  2380  03D3  084D               	movf	I2C_Master_Init@c+2,w
  2381  03D4  00F6               	movwf	??_I2C_Master_Init+2
  2382  03D5  084E               	movf	I2C_Master_Init@c+3,w
  2383  03D6  00F7               	movwf	??_I2C_Master_Init+3
  2384  03D7  3002               	movlw	2
  2385  03D8                     u1185:
  2386  03D8  1003               	clrc
  2387  03D9  0DF4               	rlf	??_I2C_Master_Init,f
  2388  03DA  0DF5               	rlf	??_I2C_Master_Init+1,f
  2389  03DB  0DF6               	rlf	??_I2C_Master_Init+2,f
  2390  03DC  0DF7               	rlf	??_I2C_Master_Init+3,f
  2391  03DD                     u1180:
  2392  03DD  3EFF               	addlw	-1
  2393  03DE  1D03               	skipz
  2394  03DF  2BD8               	goto	u1185
  2395  03E0  0877               	movf	??_I2C_Master_Init+3,w
  2396  03E1  00C1               	movwf	___lldiv@divisor+3
  2397  03E2  0876               	movf	??_I2C_Master_Init+2,w
  2398  03E3  00C0               	movwf	___lldiv@divisor+2
  2399  03E4  0875               	movf	??_I2C_Master_Init+1,w
  2400  03E5  00BF               	movwf	___lldiv@divisor+1
  2401  03E6  0874               	movf	??_I2C_Master_Init,w
  2402  03E7  00BE               	movwf	___lldiv@divisor
  2403  03E8  3000               	movlw	0
  2404  03E9  00C5               	movwf	___lldiv@dividend+3
  2405  03EA  307A               	movlw	122
  2406  03EB  00C4               	movwf	___lldiv@dividend+2
  2407  03EC  3012               	movlw	18
  2408  03ED  00C3               	movwf	___lldiv@dividend+1
  2409  03EE  3000               	movlw	0
  2410  03EF  00C2               	movwf	___lldiv@dividend
  2411  03F0  120A  118A  2232  120A  118A  	fcall	___lldiv
  2412  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2413  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2414  03F7  083E               	movf	?___lldiv,w
  2415  03F8  3EFF               	addlw	255
  2416  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2417  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2418  03FB  0093               	movwf	19	;volatile
  2419  03FC                     l1981:
  2420                           
  2421                           ;I2C.c: 36:     SSPSTAT = 0;
  2422  03FC  0194               	clrf	20	;volatile
  2423  03FD                     l1983:
  2424                           
  2425                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2426  03FD  1587               	bsf	7,3	;volatile
  2427  03FE                     l1985:
  2428                           
  2429                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2430  03FE  1607               	bsf	7,4	;volatile
  2431  03FF                     l173:
  2432  03FF  0008               	return
  2433  0400                     __end_of_I2C_Master_Init:
  2434                           
  2435                           	psect	text9
  2436  0232                     __ptext9:	
  2437 ;; *************** function ___lldiv *****************
  2438 ;; Defined at:
  2439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  divisor         4    0[BANK0 ] unsigned long 
  2442 ;;  dividend        4    4[BANK0 ] unsigned long 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  quotient        4    8[BANK0 ] unsigned long 
  2445 ;;  counter         1   12[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  4    0[BANK0 ] unsigned long 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       8       0       0       0
  2456 ;;      Locals:         0       5       0       0       0
  2457 ;;      Temps:          1       0       0       0       0
  2458 ;;      Totals:         1      13       0       0       0
  2459 ;;Total ram usage:       14 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_I2C_Master_Init
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function ___lldiv
  2471  0232                     ___lldiv:
  2472  0232                     l1939:	
  2473                           ;incstack = 0
  2474                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2475                           
  2476  0232  3000               	movlw	0
  2477  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0235  00C9               	movwf	___lldiv@quotient+3
  2480  0236  3000               	movlw	0
  2481  0237  00C8               	movwf	___lldiv@quotient+2
  2482  0238  3000               	movlw	0
  2483  0239  00C7               	movwf	___lldiv@quotient+1
  2484  023A  3000               	movlw	0
  2485  023B  00C6               	movwf	___lldiv@quotient
  2486  023C  0841               	movf	___lldiv@divisor+3,w
  2487  023D  0440               	iorwf	___lldiv@divisor+2,w
  2488  023E  043F               	iorwf	___lldiv@divisor+1,w
  2489  023F  043E               	iorwf	___lldiv@divisor,w
  2490  0240  1903               	skipnz
  2491  0241  2A43               	goto	u1111
  2492  0242  2A44               	goto	u1110
  2493  0243                     u1111:
  2494  0243  2A91               	goto	l1959
  2495  0244                     u1110:
  2496  0244                     l1941:
  2497  0244  01CA               	clrf	___lldiv@counter
  2498  0245  0ACA               	incf	___lldiv@counter,f
  2499  0246  2A54               	goto	l1945
  2500  0247                     l1943:
  2501  0247  3001               	movlw	1
  2502  0248  00F3               	movwf	??___lldiv
  2503  0249                     u1125:
  2504  0249  1003               	clrc
  2505  024A  0DBE               	rlf	___lldiv@divisor,f
  2506  024B  0DBF               	rlf	___lldiv@divisor+1,f
  2507  024C  0DC0               	rlf	___lldiv@divisor+2,f
  2508  024D  0DC1               	rlf	___lldiv@divisor+3,f
  2509  024E  0BF3               	decfsz	??___lldiv,f
  2510  024F  2A49               	goto	u1125
  2511  0250  3001               	movlw	1
  2512  0251  00F3               	movwf	??___lldiv
  2513  0252  0873               	movf	??___lldiv,w
  2514  0253  07CA               	addwf	___lldiv@counter,f
  2515  0254                     l1945:
  2516  0254  1FC1               	btfss	___lldiv@divisor+3,7
  2517  0255  2A57               	goto	u1131
  2518  0256  2A58               	goto	u1130
  2519  0257                     u1131:
  2520  0257  2A47               	goto	l1943
  2521  0258                     u1130:
  2522  0258                     l1947:
  2523  0258  3001               	movlw	1
  2524  0259  00F3               	movwf	??___lldiv
  2525  025A                     u1145:
  2526  025A  1003               	clrc
  2527  025B  0DC6               	rlf	___lldiv@quotient,f
  2528  025C  0DC7               	rlf	___lldiv@quotient+1,f
  2529  025D  0DC8               	rlf	___lldiv@quotient+2,f
  2530  025E  0DC9               	rlf	___lldiv@quotient+3,f
  2531  025F  0BF3               	decfsz	??___lldiv,f
  2532  0260  2A5A               	goto	u1145
  2533  0261                     l1949:
  2534  0261  0841               	movf	___lldiv@divisor+3,w
  2535  0262  0245               	subwf	___lldiv@dividend+3,w
  2536  0263  1D03               	skipz
  2537  0264  2A6F               	goto	u1155
  2538  0265  0840               	movf	___lldiv@divisor+2,w
  2539  0266  0244               	subwf	___lldiv@dividend+2,w
  2540  0267  1D03               	skipz
  2541  0268  2A6F               	goto	u1155
  2542  0269  083F               	movf	___lldiv@divisor+1,w
  2543  026A  0243               	subwf	___lldiv@dividend+1,w
  2544  026B  1D03               	skipz
  2545  026C  2A6F               	goto	u1155
  2546  026D  083E               	movf	___lldiv@divisor,w
  2547  026E  0242               	subwf	___lldiv@dividend,w
  2548  026F                     u1155:
  2549  026F  1C03               	skipc
  2550  0270  2A72               	goto	u1151
  2551  0271  2A73               	goto	u1150
  2552  0272                     u1151:
  2553  0272  2A82               	goto	l1955
  2554  0273                     u1150:
  2555  0273                     l1951:
  2556  0273  083E               	movf	___lldiv@divisor,w
  2557  0274  02C2               	subwf	___lldiv@dividend,f
  2558  0275  083F               	movf	___lldiv@divisor+1,w
  2559  0276  1C03               	skipc
  2560  0277  0F3F               	incfsz	___lldiv@divisor+1,w
  2561  0278  02C3               	subwf	___lldiv@dividend+1,f
  2562  0279  0840               	movf	___lldiv@divisor+2,w
  2563  027A  1C03               	skipc
  2564  027B  0F40               	incfsz	___lldiv@divisor+2,w
  2565  027C  02C4               	subwf	___lldiv@dividend+2,f
  2566  027D  0841               	movf	___lldiv@divisor+3,w
  2567  027E  1C03               	skipc
  2568  027F  0F41               	incfsz	___lldiv@divisor+3,w
  2569  0280  02C5               	subwf	___lldiv@dividend+3,f
  2570  0281                     l1953:
  2571  0281  1446               	bsf	___lldiv@quotient,0
  2572  0282                     l1955:
  2573  0282  3001               	movlw	1
  2574  0283                     u1165:
  2575  0283  1003               	clrc
  2576  0284  0CC1               	rrf	___lldiv@divisor+3,f
  2577  0285  0CC0               	rrf	___lldiv@divisor+2,f
  2578  0286  0CBF               	rrf	___lldiv@divisor+1,f
  2579  0287  0CBE               	rrf	___lldiv@divisor,f
  2580  0288  3EFF               	addlw	-1
  2581  0289  1D03               	skipz
  2582  028A  2A83               	goto	u1165
  2583  028B                     l1957:
  2584  028B  3001               	movlw	1
  2585  028C  02CA               	subwf	___lldiv@counter,f
  2586  028D  1D03               	btfss	3,2
  2587  028E  2A90               	goto	u1171
  2588  028F  2A91               	goto	u1170
  2589  0290                     u1171:
  2590  0290  2A58               	goto	l1947
  2591  0291                     u1170:
  2592  0291                     l1959:
  2593  0291  0849               	movf	___lldiv@quotient+3,w
  2594  0292  00C1               	movwf	?___lldiv+3
  2595  0293  0848               	movf	___lldiv@quotient+2,w
  2596  0294  00C0               	movwf	?___lldiv+2
  2597  0295  0847               	movf	___lldiv@quotient+1,w
  2598  0296  00BF               	movwf	?___lldiv+1
  2599  0297  0846               	movf	___lldiv@quotient,w
  2600  0298  00BE               	movwf	?___lldiv
  2601  0299                     l463:
  2602  0299  0008               	return
  2603  029A                     __end_of___lldiv:
  2604                           
  2605                           	psect	text10
  2606  051A                     __ptext10:	
  2607 ;; *************** function _bcd_to_decimal *****************
  2608 ;; Defined at:
  2609 ;;		line 185 in file "main_prueba3_mini2.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  number          1    wreg     unsigned char 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  number          1    7[COMMON] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      unsigned char 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, pclath, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         0       0       0       0       0
  2624 ;;      Locals:         1       0       0       0       0
  2625 ;;      Temps:          0       3       0       0       0
  2626 ;;      Totals:         1       3       0       0       0
  2627 ;;Total ram usage:        4 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    2
  2630 ;; This function calls:
  2631 ;;		___bmul
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;;		_RTC_display
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _bcd_to_decimal
  2640  051A                     _bcd_to_decimal:
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2644                           ;bcd_to_decimal@number stored from wreg
  2645  051A  00F7               	movwf	bcd_to_decimal@number
  2646  051B                     l2097:
  2647                           
  2648                           ;main_prueba3_mini2.c: 186:   return((number >> 4) * 10 + (number & 0x0F));
  2649  051B  300F               	movlw	15
  2650  051C  0577               	andwf	bcd_to_decimal@number,w
  2651  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2652  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2653  051F  00BE               	movwf	??_bcd_to_decimal
  2654  0520  300A               	movlw	10
  2655  0521  00BF               	movwf	??_bcd_to_decimal+1
  2656  0522  083F               	movf	??_bcd_to_decimal+1,w
  2657  0523  00F3               	movwf	___bmul@multiplicand
  2658  0524  0877               	movf	bcd_to_decimal@number,w
  2659  0525  00C0               	movwf	??_bcd_to_decimal+2
  2660  0526  3004               	movlw	4
  2661  0527                     u1275:
  2662  0527  1003               	clrc
  2663  0528  0CC0               	rrf	??_bcd_to_decimal+2,f
  2664  0529  3EFF               	addlw	-1
  2665  052A  1D03               	skipz
  2666  052B  2D27               	goto	u1275
  2667  052C  0840               	movf	??_bcd_to_decimal+2,w
  2668  052D  120A  118A  257D  120A  118A  	fcall	___bmul
  2669  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0534  073E               	addwf	??_bcd_to_decimal,w
  2672  0535                     l132:
  2673  0535  0008               	return
  2674  0536                     __end_of_bcd_to_decimal:
  2675                           
  2676                           	psect	text11
  2677  057D                     __ptext11:	
  2678 ;; *************** function ___bmul *****************
  2679 ;; Defined at:
  2680 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  multiplier      1    wreg     unsigned char 
  2683 ;;  multiplicand    1    3[COMMON] unsigned char 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  multiplier      1    6[COMMON] unsigned char 
  2686 ;;  product         1    5[COMMON] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      unsigned char 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         1       0       0       0       0
  2697 ;;      Locals:         2       0       0       0       0
  2698 ;;      Temps:          1       0       0       0       0
  2699 ;;      Totals:         4       0       0       0       0
  2700 ;;Total ram usage:        4 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_bcd_to_decimal
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function ___bmul
  2712  057D                     ___bmul:
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2716                           ;___bmul@multiplier stored from wreg
  2717  057D  00F6               	movwf	___bmul@multiplier
  2718  057E                     l1517:
  2719  057E  01F5               	clrf	___bmul@product
  2720  057F                     l1519:
  2721  057F  1C76               	btfss	___bmul@multiplier,0
  2722  0580  2D82               	goto	u621
  2723  0581  2D83               	goto	u620
  2724  0582                     u621:
  2725  0582  2D87               	goto	l1523
  2726  0583                     u620:
  2727  0583                     l1521:
  2728  0583  0873               	movf	___bmul@multiplicand,w
  2729  0584  00F4               	movwf	??___bmul
  2730  0585  0874               	movf	??___bmul,w
  2731  0586  07F5               	addwf	___bmul@product,f
  2732  0587                     l1523:
  2733  0587  1003               	clrc
  2734  0588  0DF3               	rlf	___bmul@multiplicand,f
  2735  0589                     l1525:
  2736  0589  1003               	clrc
  2737  058A  0CF6               	rrf	___bmul@multiplier,f
  2738  058B  0876               	movf	___bmul@multiplier,w
  2739  058C  1D03               	btfss	3,2
  2740  058D  2D8F               	goto	u631
  2741  058E  2D90               	goto	u630
  2742  058F                     u631:
  2743  058F  2D7F               	goto	l1519
  2744  0590                     u630:
  2745  0590                     l1527:
  2746  0590  0875               	movf	___bmul@product,w
  2747  0591                     l453:
  2748  0591  0008               	return
  2749  0592                     __end_of___bmul:
  2750                           
  2751                           	psect	text12
  2752  029A                     __ptext12:	
  2753 ;; *************** function _Write_to_RTC *****************
  2754 ;; Defined at:
  2755 ;;		line 230 in file "main_prueba3_mini2.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, pclath, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    3
  2776 ;; This function calls:
  2777 ;;		_I2C_Master_Start
  2778 ;;		_I2C_Master_Stop
  2779 ;;		_I2C_Master_Write
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function _Write_to_RTC
  2787  029A                     _Write_to_RTC:
  2788  029A                     l2075:	
  2789                           ;incstack = 0
  2790                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  2791                           
  2792                           
  2793                           ;main_prueba3_mini2.c: 231:     I2C_Master_Start();
  2794  029A  120A  118A  25EA  120A  118A  	fcall	_I2C_Master_Start
  2795                           
  2796                           ;main_prueba3_mini2.c: 232:     I2C_Master_Write(0xD0);
  2797  029F  30D0               	movlw	208
  2798  02A0  00F3               	movwf	I2C_Master_Write@d
  2799  02A1  3000               	movlw	0
  2800  02A2  00F4               	movwf	I2C_Master_Write@d+1
  2801  02A3  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2802                           
  2803                           ;main_prueba3_mini2.c: 233:     I2C_Master_Write(0);
  2804  02A8  3000               	movlw	0
  2805  02A9  00F3               	movwf	I2C_Master_Write@d
  2806  02AA  00F4               	movwf	I2C_Master_Write@d+1
  2807  02AB  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2808                           
  2809                           ;main_prueba3_mini2.c: 234:     I2C_Master_Write(0);
  2810  02B0  3000               	movlw	0
  2811  02B1  00F3               	movwf	I2C_Master_Write@d
  2812  02B2  00F4               	movwf	I2C_Master_Write@d+1
  2813  02B3  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2814                           
  2815                           ;main_prueba3_mini2.c: 235:     I2C_Master_Write(48);
  2816  02B8  3030               	movlw	48
  2817  02B9  00F3               	movwf	I2C_Master_Write@d
  2818  02BA  3000               	movlw	0
  2819  02BB  00F4               	movwf	I2C_Master_Write@d+1
  2820  02BC  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2821                           
  2822                           ;main_prueba3_mini2.c: 236:     I2C_Master_Write(6);
  2823  02C1  3006               	movlw	6
  2824  02C2  00F3               	movwf	I2C_Master_Write@d
  2825  02C3  3000               	movlw	0
  2826  02C4  00F4               	movwf	I2C_Master_Write@d+1
  2827  02C5  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2828                           
  2829                           ;main_prueba3_mini2.c: 237:     I2C_Master_Write(1);
  2830  02CA  3001               	movlw	1
  2831  02CB  00F3               	movwf	I2C_Master_Write@d
  2832  02CC  3000               	movlw	0
  2833  02CD  00F4               	movwf	I2C_Master_Write@d+1
  2834  02CE  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2835                           
  2836                           ;main_prueba3_mini2.c: 238:     I2C_Master_Write(8);
  2837  02D3  3008               	movlw	8
  2838  02D4  00F3               	movwf	I2C_Master_Write@d
  2839  02D5  3000               	movlw	0
  2840  02D6  00F4               	movwf	I2C_Master_Write@d+1
  2841  02D7  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2842                           
  2843                           ;main_prueba3_mini2.c: 239:     I2C_Master_Write(3);
  2844  02DC  3003               	movlw	3
  2845  02DD  00F3               	movwf	I2C_Master_Write@d
  2846  02DE  3000               	movlw	0
  2847  02DF  00F4               	movwf	I2C_Master_Write@d+1
  2848  02E0  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2849                           
  2850                           ;main_prueba3_mini2.c: 240:     I2C_Master_Write(27);
  2851  02E5  301B               	movlw	27
  2852  02E6  00F3               	movwf	I2C_Master_Write@d
  2853  02E7  3000               	movlw	0
  2854  02E8  00F4               	movwf	I2C_Master_Write@d+1
  2855  02E9  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Write
  2856                           
  2857                           ;main_prueba3_mini2.c: 241:     I2C_Master_Stop();
  2858  02EE  120A  118A  25E1  120A  118A  	fcall	_I2C_Master_Stop
  2859  02F3                     l141:
  2860  02F3  0008               	return
  2861  02F4                     __end_of_Write_to_RTC:
  2862                           
  2863                           	psect	text13
  2864  05D7                     __ptext13:	
  2865 ;; *************** function _I2C_Master_Write *****************
  2866 ;; Defined at:
  2867 ;;		line 84 in file "I2C.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  d               2    3[COMMON] unsigned int 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         2       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0
  2884 ;;      Totals:         2       0       0       0       0
  2885 ;;Total ram usage:        2 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    2
  2888 ;; This function calls:
  2889 ;;		_I2C_Master_Wait
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;;		_Write_to_RTC
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _I2C_Master_Write
  2898  05D7                     _I2C_Master_Write:
  2899  05D7                     l1967:	
  2900                           ;incstack = 0
  2901                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2902                           
  2903                           
  2904                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2905  05D7  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  2906  05DC                     l1969:
  2907                           
  2908                           ;I2C.c: 87:     SSPBUF = d;
  2909  05DC  0873               	movf	I2C_Master_Write@d,w
  2910  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2911  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2912  05DF  0093               	movwf	19	;volatile
  2913  05E0                     l191:
  2914  05E0  0008               	return
  2915  05E1                     __end_of_I2C_Master_Write:
  2916                           
  2917                           	psect	text14
  2918  05E1                     __ptext14:	
  2919 ;; *************** function _I2C_Master_Stop *****************
  2920 ;; Defined at:
  2921 ;;		line 73 in file "I2C.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0
  2938 ;;      Totals:         0       0       0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    2
  2942 ;; This function calls:
  2943 ;;		_I2C_Master_Wait
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;;		_Write_to_RTC
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _I2C_Master_Stop
  2952  05E1                     _I2C_Master_Stop:
  2953  05E1                     l1971:	
  2954                           ;incstack = 0
  2955                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2956                           
  2957                           
  2958                           ;I2C.c: 75:     I2C_Master_Wait();
  2959  05E1  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  2960  05E6                     l1973:
  2961                           
  2962                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2963  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  2964  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  2965  05E8  1511               	bsf	17,2	;volatile
  2966  05E9                     l188:
  2967  05E9  0008               	return
  2968  05EA                     __end_of_I2C_Master_Stop:
  2969                           
  2970                           	psect	text15
  2971  05EA                     __ptext15:	
  2972 ;; *************** function _I2C_Master_Start *****************
  2973 ;; Defined at:
  2974 ;;		line 56 in file "I2C.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0
  2991 ;;      Totals:         0       0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    2
  2995 ;; This function calls:
  2996 ;;		_I2C_Master_Wait
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;;		_Write_to_RTC
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           
  3004                           ;psect for function _I2C_Master_Start
  3005  05EA                     _I2C_Master_Start:
  3006  05EA                     l1963:	
  3007                           ;incstack = 0
  3008                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3009                           
  3010                           
  3011                           ;I2C.c: 57:     I2C_Master_Wait();
  3012  05EA  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3013  05EF                     l1965:
  3014                           
  3015                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  3016  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  3017  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  3018  05F1  1411               	bsf	17,0	;volatile
  3019  05F2                     l182:
  3020  05F2  0008               	return
  3021  05F3                     __end_of_I2C_Master_Start:
  3022                           
  3023                           	psect	text16
  3024  04FC                     __ptext16:	
  3025 ;; *************** function _Write_USART_String *****************
  3026 ;; Defined at:
  3027 ;;		line 37 in file "USART.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  a               1    wreg     PTR unsigned char 
  3030 ;;		 -> sec_send(8), 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  a               1    5[COMMON] PTR unsigned char 
  3033 ;;		 -> sec_send(8), 
  3034 ;;  i               1    6[COMMON] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         2       0       0       0       0
  3046 ;;      Temps:          1       0       0       0       0
  3047 ;;      Totals:         3       0       0       0       0
  3048 ;;Total ram usage:        3 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    2
  3051 ;; This function calls:
  3052 ;;		_Write_USART
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _Write_USART_String
  3060  04FC                     _Write_USART_String:
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3064                           ;Write_USART_String@a stored from wreg
  3065  04FC  00F5               	movwf	Write_USART_String@a
  3066  04FD                     l1729:
  3067                           
  3068                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  3069  04FD  01F6               	clrf	Write_USART_String@i
  3070  04FE  2D0E               	goto	l1735
  3071  04FF                     l1731:
  3072                           
  3073                           ;USART.c: 40:         Write_USART(a[i]);
  3074  04FF  0876               	movf	Write_USART_String@i,w
  3075  0500  0775               	addwf	Write_USART_String@a,w
  3076  0501  00F4               	movwf	??_Write_USART_String
  3077  0502  0874               	movf	??_Write_USART_String,w
  3078  0503  0084               	movwf	4
  3079  0504  0800               	movf	0,w
  3080  0505  120A  118A  25CB  120A  118A  	fcall	_Write_USART
  3081  050A                     l1733:
  3082                           
  3083                           ;USART.c: 41:     }
  3084  050A  3001               	movlw	1
  3085  050B  00F4               	movwf	??_Write_USART_String
  3086  050C  0874               	movf	??_Write_USART_String,w
  3087  050D  07F6               	addwf	Write_USART_String@i,f
  3088  050E                     l1735:
  3089  050E  0876               	movf	Write_USART_String@i,w
  3090  050F  0775               	addwf	Write_USART_String@a,w
  3091  0510  00F4               	movwf	??_Write_USART_String
  3092  0511  0874               	movf	??_Write_USART_String,w
  3093  0512  0084               	movwf	4
  3094  0513  1383               	bcf	3,7	;select IRP bank0
  3095  0514  0800               	movf	0,w
  3096  0515  1D03               	btfss	3,2
  3097  0516  2D18               	goto	u891
  3098  0517  2D19               	goto	u890
  3099  0518                     u891:
  3100  0518  2CFF               	goto	l1731
  3101  0519                     u890:
  3102  0519                     l307:
  3103  0519  0008               	return
  3104  051A                     __end_of_Write_USART_String:
  3105                           
  3106                           	psect	text17
  3107  05CB                     __ptext17:	
  3108 ;; *************** function _Write_USART *****************
  3109 ;; Defined at:
  3110 ;;		line 33 in file "USART.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  a               1    wreg     unsigned char 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  a               1    3[COMMON] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         0       0       0       0       0
  3125 ;;      Locals:         1       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0
  3127 ;;      Totals:         1       0       0       0       0
  3128 ;;Total ram usage:        1 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;;		_Write_USART_String
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function _Write_USART
  3141  05CB                     _Write_USART:
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _Write_USART: [wreg]
  3145                           ;Write_USART@a stored from wreg
  3146  05CB  00F3               	movwf	Write_USART@a
  3147  05CC                     l1471:
  3148  05CC                     l298:	
  3149                           ;USART.c: 34:     while(!TRMT);
  3150                           
  3151  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  3152  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  3153  05CE  1C98               	btfss	24,1	;volatile
  3154  05CF  2DD1               	goto	u601
  3155  05D0  2DD2               	goto	u600
  3156  05D1                     u601:
  3157  05D1  2DCC               	goto	l298
  3158  05D2                     u600:
  3159  05D2                     l1473:
  3160                           
  3161                           ;USART.c: 35:     TXREG=a;
  3162  05D2  0873               	movf	Write_USART@a,w
  3163  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3164  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3165  05D5  0099               	movwf	25	;volatile
  3166  05D6                     l301:
  3167  05D6  0008               	return
  3168  05D7                     __end_of_Write_USART:
  3169                           
  3170                           	psect	text18
  3171  04B9                     __ptext18:	
  3172 ;; *************** function _Lcd_Write_String *****************
  3173 ;; Defined at:
  3174 ;;		line 71 in file "LCD.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  a               1    wreg     PTR unsigned char 
  3177 ;;		 -> cont_send(8), Date(15), sec_send(8), 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3180 ;;		 -> cont_send(8), Date(15), sec_send(8), 
  3181 ;;  i               2    0[BANK0 ] int 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         0       3       0       0       0
  3193 ;;      Temps:          1       0       0       0       0
  3194 ;;      Totals:         1       3       0       0       0
  3195 ;;Total ram usage:        4 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    3
  3198 ;; This function calls:
  3199 ;;		_Lcd_Write_Char
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;;		_RTC_display
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _Lcd_Write_String
  3208  04B9                     _Lcd_Write_String:
  3209                           
  3210                           ;incstack = 0
  3211                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3212                           ;Lcd_Write_String@a stored from wreg
  3213  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3214  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3215  04BB  00C0               	movwf	Lcd_Write_String@a
  3216  04BC                     l2175:
  3217                           
  3218                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  3219  04BC  01BE               	clrf	Lcd_Write_String@i
  3220  04BD  01BF               	clrf	Lcd_Write_String@i+1
  3221  04BE  2CD2               	goto	l2181
  3222  04BF                     l2177:
  3223                           
  3224                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  3225  04BF  083E               	movf	Lcd_Write_String@i,w
  3226  04C0  0740               	addwf	Lcd_Write_String@a,w
  3227  04C1  00F6               	movwf	??_Lcd_Write_String
  3228  04C2  0876               	movf	??_Lcd_Write_String,w
  3229  04C3  0084               	movwf	4
  3230  04C4  0800               	movf	0,w
  3231  04C5  120A  118A  2567  120A  118A  	fcall	_Lcd_Write_Char
  3232  04CA                     l2179:
  3233  04CA  3001               	movlw	1
  3234  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3235  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  3236  04CD  07BE               	addwf	Lcd_Write_String@i,f
  3237  04CE  1803               	skipnc
  3238  04CF  0ABF               	incf	Lcd_Write_String@i+1,f
  3239  04D0  3000               	movlw	0
  3240  04D1  07BF               	addwf	Lcd_Write_String@i+1,f
  3241  04D2                     l2181:
  3242  04D2  083E               	movf	Lcd_Write_String@i,w
  3243  04D3  0740               	addwf	Lcd_Write_String@a,w
  3244  04D4  00F6               	movwf	??_Lcd_Write_String
  3245  04D5  0876               	movf	??_Lcd_Write_String,w
  3246  04D6  0084               	movwf	4
  3247  04D7  1383               	bcf	3,7	;select IRP bank0
  3248  04D8  0800               	movf	0,w
  3249  04D9  1D03               	btfss	3,2
  3250  04DA  2CDC               	goto	u1371
  3251  04DB  2CDD               	goto	u1370
  3252  04DC                     u1371:
  3253  04DC  2CBF               	goto	l2177
  3254  04DD                     u1370:
  3255  04DD                     l238:
  3256  04DD  0008               	return
  3257  04DE                     __end_of_Lcd_Write_String:
  3258                           
  3259                           	psect	text19
  3260  0567                     __ptext19:	
  3261 ;; *************** function _Lcd_Write_Char *****************
  3262 ;; Defined at:
  3263 ;;		line 62 in file "LCD.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  a               1    wreg     unsigned char 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  a               1    5[COMMON] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, pclath, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3277 ;;      Params:         0       0       0       0       0
  3278 ;;      Locals:         1       0       0       0       0
  3279 ;;      Temps:          1       0       0       0       0
  3280 ;;      Totals:         2       0       0       0       0
  3281 ;;Total ram usage:        2 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    2
  3284 ;; This function calls:
  3285 ;;		_Lcd_Port
  3286 ;; This function is called by:
  3287 ;;		_Lcd_Write_String
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _Lcd_Write_Char
  3293  0567                     _Lcd_Write_Char:
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3297                           ;Lcd_Write_Char@a stored from wreg
  3298  0567  00F5               	movwf	Lcd_Write_Char@a
  3299  0568                     l1997:
  3300                           
  3301                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  3302  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3304  056A  1409               	bsf	9,0	;volatile
  3305  056B                     l1999:
  3306                           
  3307                           ;LCD.c: 64:    Lcd_Port(a);
  3308  056B  0875               	movf	Lcd_Write_Char@a,w
  3309  056C  120A  118A  2610  120A  118A  	fcall	_Lcd_Port
  3310  0571                     l2001:
  3311                           
  3312                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  3313  0571  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0572  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0573  1509               	bsf	9,2	;volatile
  3316  0574                     l2003:
  3317                           
  3318                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3319  0574  301A               	movlw	26
  3320  0575  00F4               	movwf	??_Lcd_Write_Char
  3321  0576                     u1397:
  3322  0576  0BF4               	decfsz	??_Lcd_Write_Char,f
  3323  0577  2D76               	goto	u1397
  3324  0578  0000               	nop
  3325  0579                     l2005:
  3326                           
  3327                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  3328  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3329  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3330  057B  1109               	bcf	9,2	;volatile
  3331  057C                     l232:
  3332  057C  0008               	return
  3333  057D                     __end_of_Lcd_Write_Char:
  3334                           
  3335                           	psect	text20
  3336  0493                     __ptext20:	
  3337 ;; *************** function _Lcd_Set_Cursor *****************
  3338 ;; Defined at:
  3339 ;;		line 49 in file "LCD.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  a               1    wreg     unsigned char 
  3342 ;;  b               1    7[COMMON] unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  a               1    1[BANK0 ] unsigned char 
  3345 ;;  temp            1    2[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         1       0       0       0       0
  3356 ;;      Locals:         0       2       0       0       0
  3357 ;;      Temps:          0       1       0       0       0
  3358 ;;      Totals:         1       3       0       0       0
  3359 ;;Total ram usage:        4 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    3
  3362 ;; This function calls:
  3363 ;;		_Lcd_Cmd
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;;		_RTC_display
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function _Lcd_Set_Cursor
  3372  0493                     _Lcd_Set_Cursor:
  3373                           
  3374                           ;incstack = 0
  3375                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3376                           ;Lcd_Set_Cursor@a stored from wreg
  3377  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0495  00BF               	movwf	Lcd_Set_Cursor@a
  3380  0496                     l2163:
  3381                           
  3382                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  3383  0496  033F               	decf	Lcd_Set_Cursor@a,w
  3384  0497  1D03               	btfss	3,2
  3385  0498  2C9A               	goto	u1351
  3386  0499  2C9B               	goto	u1350
  3387  049A                     u1351:
  3388  049A  2CA7               	goto	l2169
  3389  049B                     u1350:
  3390  049B                     l2165:
  3391                           
  3392                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  3393  049B  0877               	movf	Lcd_Set_Cursor@b,w
  3394  049C  3E7F               	addlw	127
  3395  049D  00BE               	movwf	??_Lcd_Set_Cursor
  3396  049E  083E               	movf	??_Lcd_Set_Cursor,w
  3397  049F  00C0               	movwf	Lcd_Set_Cursor@temp
  3398  04A0                     l2167:
  3399                           
  3400                           ;LCD.c: 53:         Lcd_Cmd(temp);
  3401  04A0  0840               	movf	Lcd_Set_Cursor@temp,w
  3402  04A1  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3403                           
  3404                           ;LCD.c: 54:  }
  3405  04A6  2CB8               	goto	l229
  3406  04A7                     l2169:
  3407  04A7  3002               	movlw	2
  3408  04A8  063F               	xorwf	Lcd_Set_Cursor@a,w
  3409  04A9  1D03               	btfss	3,2
  3410  04AA  2CAC               	goto	u1361
  3411  04AB  2CAD               	goto	u1360
  3412  04AC                     u1361:
  3413  04AC  2CB8               	goto	l229
  3414  04AD                     u1360:
  3415  04AD                     l2171:
  3416                           
  3417                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  3418  04AD  0877               	movf	Lcd_Set_Cursor@b,w
  3419  04AE  3EBF               	addlw	191
  3420  04AF  00BE               	movwf	??_Lcd_Set_Cursor
  3421  04B0  083E               	movf	??_Lcd_Set_Cursor,w
  3422  04B1  00C0               	movwf	Lcd_Set_Cursor@temp
  3423  04B2                     l2173:
  3424                           
  3425                           ;LCD.c: 57:   Lcd_Cmd(temp);
  3426  04B2  0840               	movf	Lcd_Set_Cursor@temp,w
  3427  04B3  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3428  04B8                     l229:
  3429  04B8  0008               	return
  3430  04B9                     __end_of_Lcd_Set_Cursor:
  3431                           
  3432                           	psect	text21
  3433  02F4                     __ptext21:	
  3434 ;; *************** function _Lcd_Init *****************
  3435 ;; Defined at:
  3436 ;;		line 15 in file "LCD.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0, pclath, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3450 ;;      Params:         0       0       0       0       0
  3451 ;;      Locals:         0       0       0       0       0
  3452 ;;      Temps:          0       2       0       0       0
  3453 ;;      Totals:         0       2       0       0       0
  3454 ;;Total ram usage:        2 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    3
  3457 ;; This function calls:
  3458 ;;		_Lcd_Cmd
  3459 ;;		_Lcd_Port
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _Lcd_Init
  3467  02F4                     _Lcd_Init:
  3468  02F4                     l2063:	
  3469                           ;incstack = 0
  3470                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3471                           
  3472                           
  3473                           ;LCD.c: 16:   Lcd_Port(0x00);
  3474  02F4  3000               	movlw	0
  3475  02F5  120A  118A  2610  120A  118A  	fcall	_Lcd_Port
  3476  02FA                     l2065:
  3477                           
  3478                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3479  02FA  3034               	movlw	52
  3480  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  3481  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  3482  02FD  00BF               	movwf	??_Lcd_Init+1
  3483  02FE  30F1               	movlw	241
  3484  02FF  00BE               	movwf	??_Lcd_Init
  3485  0300                     u1407:
  3486  0300  0BBE               	decfsz	??_Lcd_Init,f
  3487  0301  2B00               	goto	u1407
  3488  0302  0BBF               	decfsz	??_Lcd_Init+1,f
  3489  0303  2B00               	goto	u1407
  3490  0304                     l2067:
  3491                           
  3492                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  3493  0304  3030               	movlw	48
  3494  0305  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3495                           
  3496                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3497  030A  300D               	movlw	13
  3498  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3499  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3500  030D  00BF               	movwf	??_Lcd_Init+1
  3501  030E  30FB               	movlw	251
  3502  030F  00BE               	movwf	??_Lcd_Init
  3503  0310                     u1417:
  3504  0310  0BBE               	decfsz	??_Lcd_Init,f
  3505  0311  2B10               	goto	u1417
  3506  0312  0BBF               	decfsz	??_Lcd_Init+1,f
  3507  0313  2B10               	goto	u1417
  3508  0314                     l2069:
  3509                           
  3510                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  3511  0314  3030               	movlw	48
  3512  0315  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3513  031A                     l2071:
  3514                           
  3515                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3516  031A  301D               	movlw	29
  3517  031B  1283               	bcf	3,5	;RP0=0, select bank0
  3518  031C  1303               	bcf	3,6	;RP1=0, select bank0
  3519  031D  00BF               	movwf	??_Lcd_Init+1
  3520  031E  3090               	movlw	144
  3521  031F  00BE               	movwf	??_Lcd_Init
  3522  0320                     u1427:
  3523  0320  0BBE               	decfsz	??_Lcd_Init,f
  3524  0321  2B20               	goto	u1427
  3525  0322  0BBF               	decfsz	??_Lcd_Init+1,f
  3526  0323  2B20               	goto	u1427
  3527  0324  0000               	nop
  3528                           
  3529                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  3530  0325  3030               	movlw	48
  3531  0326  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3532                           
  3533                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  3534  032B  3038               	movlw	56
  3535  032C  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3536                           
  3537                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  3538  0331  300C               	movlw	12
  3539  0332  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3540                           
  3541                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  3542  0337  3001               	movlw	1
  3543  0338  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3544                           
  3545                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  3546  033D  3006               	movlw	6
  3547  033E  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3548  0343                     l214:
  3549  0343  0008               	return
  3550  0344                     __end_of_Lcd_Init:
  3551                           
  3552                           	psect	text22
  3553  05A5                     __ptext22:	
  3554 ;; *************** function _Lcd_Clear *****************
  3555 ;; Defined at:
  3556 ;;		line 43 in file "LCD.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      void 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0, pclath, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3570 ;;      Params:         0       0       0       0       0
  3571 ;;      Locals:         0       0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0
  3573 ;;      Totals:         0       0       0       0       0
  3574 ;;Total ram usage:        0 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    3
  3577 ;; This function calls:
  3578 ;;		_Lcd_Cmd
  3579 ;; This function is called by:
  3580 ;;		_main
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function _Lcd_Clear
  3586  05A5                     _Lcd_Clear:
  3587  05A5                     l2073:	
  3588                           ;incstack = 0
  3589                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3590                           
  3591                           
  3592                           ;LCD.c: 44:  Lcd_Cmd(0);
  3593  05A5  3000               	movlw	0
  3594  05A6  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3595                           
  3596                           ;LCD.c: 45:  Lcd_Cmd(1);
  3597  05AB  3001               	movlw	1
  3598  05AC  120A  118A  2536  120A  118A  	fcall	_Lcd_Cmd
  3599  05B1                     l223:
  3600  05B1  0008               	return
  3601  05B2                     __end_of_Lcd_Clear:
  3602                           
  3603                           	psect	text23
  3604  0536                     __ptext23:	
  3605 ;; *************** function _Lcd_Cmd *****************
  3606 ;; Defined at:
  3607 ;;		line 34 in file "LCD.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  a               1    wreg     unsigned char 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  a               1    6[COMMON] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, pclath, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         0       0       0       0       0
  3622 ;;      Locals:         1       0       0       0       0
  3623 ;;      Temps:          2       0       0       0       0
  3624 ;;      Totals:         3       0       0       0       0
  3625 ;;Total ram usage:        3 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    2
  3628 ;; This function calls:
  3629 ;;		_Lcd_Port
  3630 ;; This function is called by:
  3631 ;;		_Lcd_Init
  3632 ;;		_Lcd_Clear
  3633 ;;		_Lcd_Set_Cursor
  3634 ;;		_Lcd_Shift_Right
  3635 ;;		_Lcd_Shift_Left
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _Lcd_Cmd
  3641  0536                     _Lcd_Cmd:
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3645                           ;Lcd_Cmd@a stored from wreg
  3646  0536  00F6               	movwf	Lcd_Cmd@a
  3647  0537                     l1987:
  3648                           
  3649                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  3650  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0539  1009               	bcf	9,0	;volatile
  3653  053A                     l1989:
  3654                           
  3655                           ;LCD.c: 36:  Lcd_Port(a);
  3656  053A  0876               	movf	Lcd_Cmd@a,w
  3657  053B  120A  118A  2610  120A  118A  	fcall	_Lcd_Port
  3658  0540                     l1991:
  3659                           
  3660                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  3661  0540  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0541  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0542  1509               	bsf	9,2	;volatile
  3664  0543                     l1993:
  3665                           
  3666                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3667  0543  300B               	movlw	11
  3668  0544  00F5               	movwf	??_Lcd_Cmd+1
  3669  0545  3062               	movlw	98
  3670  0546  00F4               	movwf	??_Lcd_Cmd
  3671  0547                     u1437:
  3672  0547  0BF4               	decfsz	??_Lcd_Cmd,f
  3673  0548  2D47               	goto	u1437
  3674  0549  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3675  054A  2D47               	goto	u1437
  3676  054B  0000               	nop
  3677  054C                     l1995:
  3678                           
  3679                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  3680  054C  1283               	bcf	3,5	;RP0=0, select bank0
  3681  054D  1303               	bcf	3,6	;RP1=0, select bank0
  3682  054E  1109               	bcf	9,2	;volatile
  3683  054F                     l220:
  3684  054F  0008               	return
  3685  0550                     __end_of_Lcd_Cmd:
  3686                           
  3687                           	psect	text24
  3688  0610                     __ptext24:	
  3689 ;; *************** function _Lcd_Port *****************
  3690 ;; Defined at:
  3691 ;;		line 30 in file "LCD.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  a               1    wreg     unsigned char 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  a               1    3[COMMON] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3705 ;;      Params:         0       0       0       0       0
  3706 ;;      Locals:         1       0       0       0       0
  3707 ;;      Temps:          0       0       0       0       0
  3708 ;;      Totals:         1       0       0       0       0
  3709 ;;Total ram usage:        1 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    1
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_Lcd_Init
  3716 ;;		_Lcd_Cmd
  3717 ;;		_Lcd_Write_Char
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           
  3722                           ;psect for function _Lcd_Port
  3723  0610                     _Lcd_Port:
  3724                           
  3725                           ;incstack = 0
  3726                           ; Regs used in _Lcd_Port: [wreg]
  3727                           ;Lcd_Port@a stored from wreg
  3728  0610  00F3               	movwf	Lcd_Port@a
  3729  0611                     l1937:
  3730                           
  3731                           ;LCD.c: 31:     PORTD = a;
  3732  0611  0873               	movf	Lcd_Port@a,w
  3733  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0614  0088               	movwf	8	;volatile
  3736  0615                     l217:
  3737  0615  0008               	return
  3738  0616                     __end_of_Lcd_Port:
  3739                           
  3740                           	psect	text25
  3741  05F3                     __ptext25:	
  3742 ;; *************** function _I2C_Master_RepeatedStart *****************
  3743 ;; Defined at:
  3744 ;;		line 64 in file "I2C.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    2
  3765 ;; This function calls:
  3766 ;;		_I2C_Master_Wait
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _I2C_Master_RepeatedStart
  3774  05F3                     _I2C_Master_RepeatedStart:
  3775  05F3                     l2077:	
  3776                           ;incstack = 0
  3777                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3778                           
  3779                           
  3780                           ;I2C.c: 66:     I2C_Master_Wait();
  3781  05F3  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3782  05F8                     l2079:
  3783                           
  3784                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3785  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  3786  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  3787  05FA  1491               	bsf	17,1	;volatile
  3788  05FB                     l185:
  3789  05FB  0008               	return
  3790  05FC                     __end_of_I2C_Master_RepeatedStart:
  3791                           
  3792                           	psect	text26
  3793  0463                     __ptext26:	
  3794 ;; *************** function _I2C_Master_Read *****************
  3795 ;; Defined at:
  3796 ;;		line 94 in file "I2C.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  a               2    3[COMMON] unsigned short 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  temp            2    0[BANK0 ] unsigned short 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  2    3[COMMON] unsigned short 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         2       0       0       0       0
  3811 ;;      Locals:         0       2       0       0       0
  3812 ;;      Temps:          2       0       0       0       0
  3813 ;;      Totals:         4       2       0       0       0
  3814 ;;Total ram usage:        6 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    2
  3817 ;; This function calls:
  3818 ;;		_I2C_Master_Wait
  3819 ;; This function is called by:
  3820 ;;		_main
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _I2C_Master_Read
  3826  0463                     _I2C_Master_Read:
  3827  0463                     l2081:	
  3828                           ;incstack = 0
  3829                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3830                           
  3831                           
  3832                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3833  0463  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3834  0468                     l2083:
  3835                           
  3836                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3837  0468  1683               	bsf	3,5	;RP0=1, select bank1
  3838  0469  1303               	bcf	3,6	;RP1=0, select bank1
  3839  046A  1591               	bsf	17,3	;volatile
  3840                           
  3841                           ;I2C.c: 99:     I2C_Master_Wait();
  3842  046B  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3843  0470                     l2085:
  3844                           
  3845                           ;I2C.c: 100:     temp = SSPBUF;
  3846  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0472  0813               	movf	19,w	;volatile
  3849  0473  00F5               	movwf	??_I2C_Master_Read
  3850  0474  01F6               	clrf	??_I2C_Master_Read+1
  3851  0475  0875               	movf	??_I2C_Master_Read,w
  3852  0476  00BE               	movwf	I2C_Master_Read@temp
  3853  0477  0876               	movf	??_I2C_Master_Read+1,w
  3854  0478  00BF               	movwf	I2C_Master_Read@temp+1
  3855  0479                     l2087:
  3856                           
  3857                           ;I2C.c: 101:     I2C_Master_Wait();
  3858  0479  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3859  047E                     l2089:
  3860                           
  3861                           ;I2C.c: 102:     if(a == 1){
  3862  047E  0373               	decf	I2C_Master_Read@a,w
  3863  047F  0474               	iorwf	I2C_Master_Read@a+1,w
  3864  0480  1D03               	btfss	3,2
  3865  0481  2C83               	goto	u1261
  3866  0482  2C84               	goto	u1260
  3867  0483                     u1261:
  3868  0483  2C88               	goto	l194
  3869  0484                     u1260:
  3870  0484                     l2091:
  3871                           
  3872                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3873  0484  1683               	bsf	3,5	;RP0=1, select bank1
  3874  0485  1303               	bcf	3,6	;RP1=0, select bank1
  3875  0486  1291               	bcf	17,5	;volatile
  3876                           
  3877                           ;I2C.c: 104:     }else{
  3878  0487  2C8B               	goto	l195
  3879  0488                     l194:
  3880                           
  3881                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3882  0488  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0489  1303               	bcf	3,6	;RP1=0, select bank1
  3884  048A  1691               	bsf	17,5	;volatile
  3885  048B                     l195:	
  3886                           ;I2C.c: 106:     }
  3887                           
  3888                           
  3889                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3890  048B  1611               	bsf	17,4	;volatile
  3891  048C                     l2093:
  3892                           
  3893                           ;I2C.c: 108:     return temp;
  3894  048C  1283               	bcf	3,5	;RP0=0, select bank0
  3895  048D  1303               	bcf	3,6	;RP1=0, select bank0
  3896  048E  083F               	movf	I2C_Master_Read@temp+1,w
  3897  048F  00F4               	movwf	?_I2C_Master_Read+1
  3898  0490  083E               	movf	I2C_Master_Read@temp,w
  3899  0491  00F3               	movwf	?_I2C_Master_Read
  3900  0492                     l196:
  3901  0492  0008               	return
  3902  0493                     __end_of_I2C_Master_Read:
  3903                           
  3904                           	psect	text27
  3905  05B2                     __ptext27:	
  3906 ;; *************** function _I2C_Master_Wait *****************
  3907 ;; Defined at:
  3908 ;;		line 48 in file "I2C.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    1
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_I2C_Master_Start
  3933 ;;		_I2C_Master_RepeatedStart
  3934 ;;		_I2C_Master_Stop
  3935 ;;		_I2C_Master_Write
  3936 ;;		_I2C_Master_Read
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           
  3941                           ;psect for function _I2C_Master_Wait
  3942  05B2                     _I2C_Master_Wait:
  3943  05B2                     l1933:	
  3944                           ;incstack = 0
  3945                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3946                           
  3947  05B2                     l176:	
  3948                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3949                           
  3950  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  3951  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  3952  05B4  1914               	btfsc	20,2	;volatile
  3953  05B5  2DB7               	goto	u1091
  3954  05B6  2DB8               	goto	u1090
  3955  05B7                     u1091:
  3956  05B7  2DB2               	goto	l176
  3957  05B8                     u1090:
  3958  05B8                     l1935:
  3959  05B8  0811               	movf	17,w	;volatile
  3960  05B9  391F               	andlw	31
  3961  05BA  1D03               	btfss	3,2
  3962  05BB  2DBD               	goto	u1101
  3963  05BC  2DBE               	goto	u1100
  3964  05BD                     u1101:
  3965  05BD  2DB2               	goto	l176
  3966  05BE                     u1100:
  3967  05BE                     l179:
  3968  05BE  0008               	return
  3969  05BF                     __end_of_I2C_Master_Wait:
  3970                           
  3971                           	psect	text28
  3972  0400                     __ptext28:	
  3973 ;; *************** function _ISR *****************
  3974 ;; Defined at:
  3975 ;;		line 97 in file "main_prueba3_mini2.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0
  3991 ;;      Temps:          3       0       0       0       0
  3992 ;;      Totals:         3       0       0       0       0
  3993 ;;Total ram usage:        3 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		Interrupt level 1
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function _ISR
  4004  0400                     _ISR:
  4005  0400                     i1l1257:
  4006                           
  4007                           ;main_prueba3_mini2.c: 98:     if(PIR1bits.RCIF == 1){
  4008  0400  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0401  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0402  1E8C               	btfss	12,5	;volatile
  4011  0403  2C05               	goto	u44_21
  4012  0404  2C06               	goto	u44_20
  4013  0405                     u44_21:
  4014  0405  2C2B               	goto	i1l121
  4015  0406                     u44_20:
  4016  0406                     i1l1259:
  4017                           
  4018                           ;main_prueba3_mini2.c: 99:         data_recive = RCREG;
  4019  0406  081A               	movf	26,w	;volatile
  4020  0407  00F0               	movwf	??_ISR
  4021  0408  0870               	movf	??_ISR,w
  4022  0409  00F8               	movwf	_data_recive
  4023  040A                     i1l1261:
  4024                           
  4025                           ;main_prueba3_mini2.c: 100:         if (data_recive == '1'){
  4026  040A  3031               	movlw	49
  4027  040B  0678               	xorwf	_data_recive,w
  4028  040C  1D03               	btfss	3,2
  4029  040D  2C0F               	goto	u45_21
  4030  040E  2C10               	goto	u45_20
  4031  040F                     u45_21:
  4032  040F  2C12               	goto	i1l1265
  4033  0410                     u45_20:
  4034  0410                     i1l1263:
  4035                           
  4036                           ;main_prueba3_mini2.c: 101:             PORTAbits.RA6 = 1;
  4037  0410  1705               	bsf	5,6	;volatile
  4038                           
  4039                           ;main_prueba3_mini2.c: 102:         }
  4040  0411  2C2A               	goto	i1l1277
  4041  0412                     i1l1265:
  4042  0412  3032               	movlw	50
  4043  0413  0678               	xorwf	_data_recive,w
  4044  0414  1D03               	btfss	3,2
  4045  0415  2C17               	goto	u46_21
  4046  0416  2C18               	goto	u46_20
  4047  0417                     u46_21:
  4048  0417  2C1A               	goto	i1l1269
  4049  0418                     u46_20:
  4050  0418                     i1l1267:
  4051                           
  4052                           ;main_prueba3_mini2.c: 104:             PORTAbits.RA6 = 0;
  4053  0418  1305               	bcf	5,6	;volatile
  4054                           
  4055                           ;main_prueba3_mini2.c: 105:         }
  4056  0419  2C2A               	goto	i1l1277
  4057  041A                     i1l1269:
  4058  041A  3033               	movlw	51
  4059  041B  0678               	xorwf	_data_recive,w
  4060  041C  1D03               	btfss	3,2
  4061  041D  2C1F               	goto	u47_21
  4062  041E  2C20               	goto	u47_20
  4063  041F                     u47_21:
  4064  041F  2C22               	goto	i1l1273
  4065  0420                     u47_20:
  4066  0420                     i1l1271:
  4067                           
  4068                           ;main_prueba3_mini2.c: 107:             PORTAbits.RA7 = 1;
  4069  0420  1785               	bsf	5,7	;volatile
  4070                           
  4071                           ;main_prueba3_mini2.c: 108:         }
  4072  0421  2C2A               	goto	i1l1277
  4073  0422                     i1l1273:
  4074  0422  3034               	movlw	52
  4075  0423  0678               	xorwf	_data_recive,w
  4076  0424  1D03               	btfss	3,2
  4077  0425  2C27               	goto	u48_21
  4078  0426  2C28               	goto	u48_20
  4079  0427                     u48_21:
  4080  0427  2C2A               	goto	i1l117
  4081  0428                     u48_20:
  4082  0428                     i1l1275:
  4083                           
  4084                           ;main_prueba3_mini2.c: 110:             PORTAbits.RA7 = 0;
  4085  0428  1385               	bcf	5,7	;volatile
  4086  0429  2C2A               	goto	i1l1277
  4087  042A                     i1l117:
  4088  042A                     i1l1277:
  4089                           
  4090                           ;main_prueba3_mini2.c: 112:         data_recive = 0;
  4091  042A  01F8               	clrf	_data_recive
  4092  042B                     i1l121:
  4093  042B  0872               	movf	??_ISR+2,w
  4094  042C  008A               	movwf	10
  4095  042D  0E71               	swapf	??_ISR+1,w
  4096  042E  0083               	movwf	3
  4097  042F  0EFE               	swapf	btemp,f
  4098  0430  0E7E               	swapf	btemp,w
  4099  0431  0009               	retfie
  4100  0432                     __end_of_ISR:
  4101  007E                     btemp	set	126	;btemp
  4102  007E                     wtemp0	set	126
  4103                           
  4104                           	psect	intentry
  4105  0004                     __pintentry:	
  4106                           ;incstack = 0
  4107                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4108                           
  4109  0004                     interrupt_function:
  4110  007E                     saved_w	set	btemp
  4111  0004  00FE               	movwf	btemp
  4112  0005  0E03               	swapf	3,w
  4113  0006  00F1               	movwf	??_ISR+1
  4114  0007  080A               	movf	10,w
  4115  0008  00F2               	movwf	??_ISR+2
  4116  0009  120A  118A  2C00   	ljmp	_ISR
  4117                           
  4118                           	psect	config
  4119                           
  4120                           ;Config register CONFIG1 @ 0x2007
  4121                           ;	Oscillator Selection bits
  4122                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4123                           ;	Watchdog Timer Enable bit
  4124                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4125                           ;	Power-up Timer Enable bit
  4126                           ;	PWRTE = OFF, PWRT disabled
  4127                           ;	RE3/MCLR pin function select bit
  4128                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4129                           ;	Code Protection bit
  4130                           ;	CP = OFF, Program memory code protection is disabled
  4131                           ;	Data Code Protection bit
  4132                           ;	CPD = OFF, Data memory code protection is disabled
  4133                           ;	Brown Out Reset Selection bits
  4134                           ;	BOREN = OFF, BOR disabled
  4135                           ;	Internal External Switchover bit
  4136                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4137                           ;	Fail-Safe Clock Monitor Enabled bit
  4138                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4139                           ;	Low Voltage Programming Enable bit
  4140                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4141                           ;	In-Circuit Debugger Mode bit
  4142                           ;	DEBUG = 0x1, unprogrammed default
  4143  2007                     	org	8199
  4144  2007  20D4               	dw	8404
  4145                           
  4146                           ;Config register CONFIG2 @ 0x2008
  4147                           ;	Brown-out Reset Selection bit
  4148                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4149                           ;	Flash Program Memory Self Write Enable bits
  4150                           ;	WRT = OFF, Write protection off
  4151  2008                     	org	8200
  4152  2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    10
    Data        30
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      77
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> cont_send(BANK0[8]), sec_send(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 8
		 -> sec_send(BANK0[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> cont_send(BANK0[8]), Date(BANK0[15]), sec_send(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_bcd_to_decimal
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _bcd_to_decimal->___bmul
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6641
                                             22 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                     _bcd_to_decimal
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1680
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     145
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     336
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _bcd_to_decimal
     ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      94      12        0.0%
ABS                  0      0      94       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 08 22:51:44 2021

                                _i 007A                                  pc 0002  
                   ___bmul@product 0075                                 fsr 0004  
             __size_of_Write_USART 000C                   ?_USART_INTERRUPT 0070  
                              l220 054F                                l132 0535  
                              l301 05D6                                l141 02F3  
                              l214 0343                                l223 05B1  
                              l232 057C                                l144 0462  
                              l217 0615                                l307 0519  
                              l229 04B8                                l173 03FF  
                              l238 04DD                                l182 05F2  
                              l191 05E0                                l423 0231  
                              l176 05B2                                l185 05FB  
                              l194 0488                                l179 05BE  
                              l195 048B                                l196 0492  
                              l188 05E9                                l292 0609  
                              l453 0591                                l463 0299  
                              l295 060F                                l289 05CA  
                              l298 05CC                                l709 03C5  
                              l699 0389                                _GIE 005F  
                              u600 05D2                                u601 05D1  
                              u620 0583                                _ISR 0400  
                              u621 0582                                u630 0590  
                              u710 0392                                u631 058F  
                              u711 0391                                u730 03A4  
                              u731 03A3                                u740 03AE  
                              u741 03AD                                u725 0396  
                              u760 03C1                                u761 03C0  
                              u745 03AA                                u755 03B5  
                              u890 0519                                u891 0518  
                              fsr0 0004                                indf 0000  
      __size_of_Write_USART_String 001E                               ?_ISR 0070  
                             l2001 0571                               l2003 0574  
                             l2011 034E                               l2005 0579  
                             l2021 0371                               l2013 0351  
                             l2101 014B                               l2023 0377  
                             l2015 0358                               l2007 0344  
                             l2103 0150                               l2041 043D  
                             l2033 0432                               l2025 0378  
                             l2017 035C                               l2009 0348  
                             l2121 0190                               l2113 0163  
                             l2105 0156                               l2201 0066  
                             l2051 0444                               l2043 043E  
                             l2035 0439                               l2027 037F  
                             l2019 0360                               l2131 019B  
                             l2123 0194                               l2115 0180  
                             l2107 015D                               l2211 00B4  
                             l2203 006F                               l2061 045D  
                             l2053 0445                               l2045 043F  
                             l2037 043B                               l2029 0385  
                             l2141 01CE                               l2125 0199  
                             l2117 0188                               l2109 0162  
                             l2221 0108                               l2213 00C8  
                             l2205 0083                               l2071 031A  
                             l2063 02F4                               l2055 0446  
                             l2047 0442                               l2039 043C  
                             l2151 0212                               l2143 01D2  
                             l2135 01B7                               l2119 018C  
                             l2231 012A                               l2223 0110  
                             l2215 00DC                               l2207 0097  
                             l2081 0463                               l2073 05A5  
                             l2065 02FA                               l1521 0583  
                             l2057 0453                               l2049 0443  
                             l2145 01D7                               l2137 01C1  
                             l2153 021B                               l2233 0130  
                             l2225 0116                               l2217 00F0  
                             l2209 00AB                               l2091 0484  
                             l2083 0468                               l2067 0304  
                             l2171 04AD                               l2163 0496  
                             l2075 029A                               l1523 0587  
                             l2059 0458                               l2147 0207  
                             l2139 01C7                               l2155 022D  
                             l2235 0136                               l2227 011E  
                             l2219 00F5                               l2093 048C  
                             l2085 0470                               l2077 05F3  
                             l2069 0314                               l2173 04B2  
                             l2165 049B                               l2181 04D2  
                             l1525 0589                               l1517 057E  
                             l2149 020E                               l2229 0124  
                             l2087 0479                               l2079 05F8  
                             l2167 04A0                               l2175 04BC  
                             l1471 05CC                               l1527 0590  
                             l1519 057F                               l2191 0046  
                             l2183 0034                               l2089 047E  
                             l2169 04A7                               l2177 04BF  
                             l1473 05D2                               l2097 051B  
                             l1561 0395                               l2273 0175  
                             l2193 004B                               l2185 0039  
                             l2179 04CA                               l1731 04FF  
                             l1491 05BF                               l1571 03B4  
                             l1563 039C                               l2195 0050  
                             l2187 003C                               l1733 050A  
                             l1493 05C9                               l1573 03BB  
                             l1565 03A0                               l1557 038A  
                             l2197 0059                               l2189 0041  
                             l1735 050E                               l1495 060A  
                             l1487 0604                               l1567 03A4  
                             l1559 0392                               l1575 03C1  
                             l2199 0061                               l1729 04FD  
                             l1489 0607                               l1569 03AE  
                             l1933 05B2                               l1941 0244  
                             l1935 05B8                               l1951 0273  
                             l1943 0247                               l1937 0611  
                             l1953 0281                               l1945 0254  
                             l1963 05EA                               l1971 05E1  
                             l1955 0282                               l1947 0258  
                             l1939 0232                               l1965 05EF  
                             l1973 05E6                               l1957 028B  
                             l1949 0261                               l1981 03FC  
                             l1991 0540                               l1967 05D7  
                             l1959 0291                               l1983 03FD  
                             l1975 03C6                               l1993 0543  
                             l1969 05DC                               l1985 03FE  
                             l1977 03CA                               l1995 054C  
                             l1987 0537                               l1979 03CD  
                             l1989 053A                               l1997 0568  
                             l1999 056B                               STR_1 0560  
                             STR_2 0564                               u1100 05BE  
                             u1101 05BD                               u1110 0244  
                             u1111 0243                               u1130 0258  
                             u1210 0360                               u1131 0257  
                             u1211 035F                               u1300 01B6  
                             u1125 0249                               u1205 0352  
                             u1301 01B5                               u1150 0273  
                             u1230 0371                               u1310 01C1  
                             u1151 0272                               u1231 0370  
                             u1311 01C0                               u1320 01C7  
                             u1145 025A                               u1225 0361  
                             u1321 01C6                               u1305 01B2  
                             u1090 05B8                               u1170 0291  
                             u1250 0385                               u1330 021B  
                             u1091 05B7                               u1171 0290  
                             u1155 026F                               u1251 0384  
                             u1235 036D                               u1331 021A  
                             u1260 0484                               u1180 03DD  
                             u1340 022D                               u1261 0483  
                             u1165 0283                               u1245 0379  
                             u1341 022C                               u1350 049B  
                             u1190 034E                               u1407 0300  
                             u1351 049A                               u1191 034D  
                             u1360 04AD                               u1280 0156  
                             u1417 0310                               u1361 04AC  
                             u1185 03D8                               u1281 0155  
                             u1370 04DD                               u1290 0190  
                             u1427 0320                               u1371 04DC  
                             u1275 0527                               u1291 018F  
                             u1437 0547                               u1387 013E  
                             u1397 0576                               _PEIE 005E  
                             _RCIF 0065                               _TRMT 04C1  
                             _Date 002F                               _Time 0020  
                ?_Lcd_Write_String 0070   __end_of_I2C_Master_RepeatedStart 05FC  
                             _cont 0079                               _main 0034  
                             _hour 005A                               _year 0057  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0076                    __end_of_Lcd_Cmd 0550  
                ___bmul@multiplier 0076              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 004B  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ANSEL 0188                    __end_of___lldiv 029A  
                  __end_of___lwdiv 038A                              i1l121 042B  
                            i1l117 042A                    __end_of___lwmod 03C6  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u44_20 0406  
                            u44_21 0405                              u45_20 0410  
                            u45_21 040F                              u46_20 0418  
                            u46_21 0417                              u47_20 0420  
                            u47_21 041F                              u48_20 0428  
                            u48_21 0427            __size_of_Lcd_Set_Cursor 0026  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                            _TXREG 0019                              _m_day 0059  
                  __end_of_dpowers 0560                              _month 0058  
                            _setup 0432                              pclath 000A  
                     _Write_to_RTC 029A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0232  
                      ?_USART_Init 0070                   __end_of_Lcd_Init 0344  
                 __end_of_Lcd_Port 0616                    __initialization 000F  
                     __end_of_main 0148                             ??_main 0054  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                _USART_Init_BaudRate 0604  
                           ?_setup 0070                             _ANSELH 0189  
                           i1l1261 040A                             i1l1271 0420  
                           i1l1263 0410                             i1l1273 0422  
                           i1l1265 0412                             i1l1257 0400  
                           i1l1275 0428                             i1l1267 0418  
                           i1l1259 0406                             i1l1269 041A  
                           i1l1277 042A                          ??_Lcd_Cmd 0074  
                           _SPBRGH 009A            __size_of_Lcd_Write_Char 0016  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 05F3  
                           ___bmul 057D               ?_USART_Init_BaudRate 0070  
                        ??___lldiv 0073                          ??___lwdiv 0077  
                        ??___lwmod 0045                             _minute 005B  
                           _second 005C                             saved_w 007E  
              __size_of_USART_Init 000C                          ??_sprintf 004A  
                  Lcd_Set_Cursor@a 003F                    Lcd_Set_Cursor@b 0077  
          __end_of__initialization 0030                  __end_of_Lcd_Clear 05B2  
              ___bmul@multiplicand 0073                     __pcstackCOMMON 0070  
            ??_USART_Init_BaudRate 0073                       __pidataBANK0 04DE  
                    __end_of_setup 0463                     _Lcd_Set_Cursor 0493  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 0078                       Write_USART@a 0073  
                       __pbssBANK0 0057                         __pbssBANK1 00A0  
                       _data_total 00A0                         __pmaintext 0034  
                          ?___bmul 0073                      ??_Write_USART 0073  
                       __pintentry 0004          __size_of_Lcd_Write_String 0025  
           __end_of_Lcd_Set_Cursor 04B9         __end_of_Write_USART_String 051A  
          __size_of_bcd_to_decimal 001C                         ??_Lcd_Init 003E  
                       ??_Lcd_Port 0073           __size_of_USART_INTERRUPT 0006  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0550                     _Lcd_Write_Char 0567  
                          _Lcd_Cmd 0536                       ??_USART_Init 0073  
                  __size_of___bmul 0015                            ___lldiv 0232  
                          ___lwdiv 0344                            ___lwmod 038A  
                  ?_Lcd_Set_Cursor 0077                            __ptext1 0148  
                          __ptext2 038A                            __ptext3 0344  
                          __ptext4 0432                            __ptext5 0604  
                          __ptext6 05BF                            __ptext7 060A  
                          __ptext8 03C6                            __ptext9 0232  
                     __size_of_ISR 0032                            _dpowers 0556  
              __end_of_Write_USART 05D7           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                 __end_of_USART_Init 05CB  
                          _sprintf 0148                            clrloop0 05FD  
           __end_of_Lcd_Write_Char 057D               end_of_initialization 0030  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 003E  
                  ___lldiv@counter 004A                         _month_send 00BC  
                        _RCSTAbits 0018                   I2C_Master_Init@c 004B  
                 I2C_Master_Read@a 0073                          Lcd_Port@a 0073  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009                          _TRISCbits 0087  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0040  
                Lcd_Write_String@i 003E                          _TXSTAbits 0098  
                ??_USART_INTERRUPT 0073                          _Lcd_Clear 05A5  
                   __end_of___bmul 0592                        _Write_USART 05CB  
                 _Lcd_Write_String 04B9                start_initialization 000F  
                   _bcd_to_decimal 051A                        __end_of_ISR 0432  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
      __end_of_USART_Init_BaudRate 060A                         ?_Lcd_Clear 0070  
                         ??___bmul 0074                         init_fetch0 0592  
                      __pdataBANK0 0020                    Lcd_Write_Char@a 0075  
           __end_of_bcd_to_decimal 0536                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 003E  
                      _data_recive 0078                      ?_Write_to_RTC 0070  
                         ?_Lcd_Cmd 0070                        sprintf@flag 004E  
               _Write_USART_String 04FC                        sprintf@prec 004F  
                 _I2C_Master_Start 05EA                   _I2C_Master_Write 05D7  
                 ___lwdiv@dividend 0075                   ??_Lcd_Set_Cursor 003E  
              ?_Write_USART_String 0070                           ?___lldiv 003E  
                         ?___lwdiv 0073                           ?___lwmod 0041  
                        __pstrings 0550                          _cont_send 0065  
                  ?_bcd_to_decimal 0070               ??_Write_USART_String 0074  
                 ___lwdiv@quotient 003F                           ?_sprintf 0047  
             bcd_to_decimal@number 0077                     ??_Write_to_RTC 0075  
                   __size_of_setup 0031                          _hour_send 00CC  
                interrupt_function 0004                          clear_ram0 05FC  
                         _PIE1bits 008C                           Lcd_Cmd@a 0076  
                         _PIR1bits 000C                        ??_Lcd_Clear 0077  
                        _year_send 00B4                        __stringbase 0555  
                 ??_Lcd_Write_Char 0074                    _USART_INTERRUPT 060A  
                         _Lcd_Init 02F4                           _Lcd_Port 0610  
              I2C_Master_Read@temp 003E           __end_of_Lcd_Write_String 04DE  
                 __size_of_Lcd_Cmd 001A                       ?_Write_USART 0070  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                 __end_of__stringtab 0556  
                       sprintf@val 0050                    _I2C_Master_Init 03C6  
                  _I2C_Master_Read 0463                    _I2C_Master_Wait 05B2  
                  _I2C_Master_Stop 05E1                    ___lwdiv@divisor 0073  
                         _day_send 00C4                    ___lwdiv@counter 003E  
                         __ptext10 051A                           __ptext11 057D  
                         __ptext20 0493                           __ptext12 029A  
                         __ptext21 02F4                           __ptext13 05D7  
                         __ptext22 05A5                           __ptext14 05E1  
                         __ptext23 0536                           __ptext15 05EA  
                         __ptext24 0610                           __ptext16 04FC  
                         __ptext25 05F3                           __ptext17 05CB  
                         __ptext26 0463                           __ptext18 04B9  
                         __ptext27 05B2                           __ptext19 0567  
                         __ptext28 0400                   __size_of_sprintf 00EA  
                    __size_of_main 0114                           _min_send 00D4  
                         _sec_send 005D               __end_of_Write_to_RTC 02F4  
          __end_of_USART_INTERRUPT 0610           __end_of_I2C_Master_Start 05F3  
         __end_of_I2C_Master_Write 05E1                         _INTCONbits 000B  
              Write_USART_String@a 0075                Write_USART_String@i 0076  
                         init_ram0 0596                           intlevel1 0000  
                        sprintf@ap 004D                          sprintf@sp 0052  
                 ___lwmod@dividend 0043                   ___lldiv@dividend 0042  
                        stringcode 0550                         _OSCCONbits 008F  
                 ??_bcd_to_decimal 003E       __size_of_USART_Init_BaudRate 0006  
          __end_of_I2C_Master_Init 0400            __end_of_I2C_Master_Read 0493  
          __end_of_I2C_Master_Wait 05BF            __end_of_I2C_Master_Stop 05EA  
               Lcd_Set_Cursor@temp 0040                           sprintf@c 0053  
                         sprintf@f 0047                   ___lldiv@quotient 0046  
                I2C_Master_Write@d 0073                    ___lwmod@divisor 0041  
                  ___lwmod@counter 0046                           stringdir 0550  
                         stringtab 0550                        _SSPCON2bits 0091  
                       _USART_Init 05BF  
