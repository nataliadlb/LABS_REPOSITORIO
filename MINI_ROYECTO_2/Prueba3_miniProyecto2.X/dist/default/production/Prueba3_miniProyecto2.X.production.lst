

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 08 19:09:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  000E                     	;# 
   409  000F                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001D                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  0081                     	;# 
   429  0085                     	;# 
   430  0086                     	;# 
   431  0087                     	;# 
   432  0088                     	;# 
   433  0089                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  008F                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  0105                     	;# 
   457  0107                     	;# 
   458  0108                     	;# 
   459  0109                     	;# 
   460  010C                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  0185                     	;# 
   466  0187                     	;# 
   467  0188                     	;# 
   468  0189                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0000                     	;# 
   472  0001                     	;# 
   473  0002                     	;# 
   474  0003                     	;# 
   475  0004                     	;# 
   476  0005                     	;# 
   477  0006                     	;# 
   478  0007                     	;# 
   479  0008                     	;# 
   480  0009                     	;# 
   481  000A                     	;# 
   482  000B                     	;# 
   483  000C                     	;# 
   484  000D                     	;# 
   485  000E                     	;# 
   486  000E                     	;# 
   487  000F                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001B                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  001D                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  0081                     	;# 
   507  0085                     	;# 
   508  0086                     	;# 
   509  0087                     	;# 
   510  0088                     	;# 
   511  0089                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  008F                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0093                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  0105                     	;# 
   535  0107                     	;# 
   536  0108                     	;# 
   537  0109                     	;# 
   538  010C                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  0185                     	;# 
   544  0187                     	;# 
   545  0188                     	;# 
   546  0189                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549                           
   550                           	psect	idataBANK0
   551  05AA                     __pidataBANK0:
   552                           
   553                           ;initializer for _Date
   554  05AA  3444               	retlw	68
   555  05AB  3441               	retlw	65
   556  05AC  3454               	retlw	84
   557  05AD  3445               	retlw	69
   558  05AE  343A               	retlw	58
   559  05AF  3420               	retlw	32
   560  05B0  3430               	retlw	48
   561  05B1  3430               	retlw	48
   562  05B2  342F               	retlw	47
   563  05B3  3430               	retlw	48
   564  05B4  3430               	retlw	48
   565  05B5  342F               	retlw	47
   566  05B6  3430               	retlw	48
   567  05B7  3430               	retlw	48
   568  05B8  3400               	retlw	0
   569                           
   570                           ;initializer for _Time
   571  05B9  3454               	retlw	84
   572  05BA  3449               	retlw	73
   573  05BB  344D               	retlw	77
   574  05BC  3445               	retlw	69
   575  05BD  343A               	retlw	58
   576  05BE  3420               	retlw	32
   577  05BF  3430               	retlw	48
   578  05C0  3430               	retlw	48
   579  05C1  343A               	retlw	58
   580  05C2  3430               	retlw	48
   581  05C3  3430               	retlw	48
   582  05C4  343A               	retlw	58
   583  05C5  3430               	retlw	48
   584  05C6  3430               	retlw	48
   585  05C7  3400               	retlw	0
   586  0019                     _TXREG	set	25
   587  000B                     _INTCONbits	set	11
   588  0018                     _RCSTAbits	set	24
   589  0008                     _PORTDbits	set	8
   590  0009                     _PORTEbits	set	9
   591  0013                     _SSPBUF	set	19
   592  0014                     _SSPCON	set	20
   593  0009                     _PORTE	set	9
   594  0008                     _PORTD	set	8
   595  0007                     _PORTC	set	7
   596  0006                     _PORTB	set	6
   597  0005                     _PORTA	set	5
   598  0005                     _PORTAbits	set	5
   599  001A                     _RCREG	set	26
   600  000C                     _PIR1bits	set	12
   601  0065                     _RCIF	set	101
   602  0063                     _SSPIF	set	99
   603  005E                     _PEIE	set	94
   604  005F                     _GIE	set	95
   605  008C                     _PIE1bits	set	140
   606  0099                     _SPBRG	set	153
   607  009A                     _SPBRGH	set	154
   608  0098                     _TXSTAbits	set	152
   609  008F                     _OSCCONbits	set	143
   610  0091                     _SSPCON2bits	set	145
   611  0094                     _SSPSTAT	set	148
   612  0093                     _SSPADD	set	147
   613  0091                     _SSPCON2	set	145
   614  0089                     _TRISE	set	137
   615  0087                     _TRISCbits	set	135
   616  0086                     _TRISB	set	134
   617  0085                     _TRISA	set	133
   618  0088                     _TRISD	set	136
   619  04C1                     _TRMT	set	1217
   620  0463                     _SSPIE	set	1123
   621  043C                     _TRISC4	set	1084
   622  043B                     _TRISC3	set	1083
   623  0189                     _ANSELH	set	393
   624  0188                     _ANSEL	set	392
   625                           
   626                           	psect	cinit
   627  000F                     start_initialization:	
   628                           ; #config settings
   629                           
   630  000F                     __initialization:
   631                           
   632                           ; Initialize objects allocated to BANK0
   633  000F  1383               	bcf	3,7	;select IRP bank0
   634  0010  303E               	movlw	low (__pdataBANK0+30)
   635  0011  00FD               	movwf	btemp+-1
   636  0012  3005               	movlw	high __pidataBANK0
   637  0013  00FE               	movwf	btemp
   638  0014  30AA               	movlw	low __pidataBANK0
   639  0015  00FF               	movwf	btemp+1
   640  0016  3020               	movlw	low __pdataBANK0
   641  0017  0084               	movwf	4
   642  0018  120A  118A  262D  120A  118A  	fcall	init_ram0
   643                           
   644                           ; Clear objects allocated to BANK1
   645  001D  30A0               	movlw	low __pbssBANK1
   646  001E  0084               	movwf	4
   647  001F  30B4               	movlw	low (__pbssBANK1+20)
   648  0020  120A  118A  2693  120A  118A  	fcall	clear_ram0
   649                           
   650                           ; Clear objects allocated to BANK0
   651  0025  3052               	movlw	low __pbssBANK0
   652  0026  0084               	movwf	4
   653  0027  3060               	movlw	low (__pbssBANK0+14)
   654  0028  120A  118A  2693  120A  118A  	fcall	clear_ram0
   655                           
   656                           ; Clear objects allocated to COMMON
   657  002D  01F8               	clrf	__pbssCOMMON& (0+127)
   658  002E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   659  002F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   660  0030                     end_of_initialization:	
   661                           ;End of C runtime variable initialization code
   662                           
   663  0030                     __end_of__initialization:
   664  0030  0183               	clrf	3
   665  0031  120A  118A  29A7   	ljmp	_main	;jump to C main() function
   666                           
   667                           	psect	bssCOMMON
   668  0078                     __pbssCOMMON:
   669  0078                     _data_recive:
   670  0078                     	ds	1
   671  0079                     _minute:
   672  0079                     	ds	1
   673  007A                     _second:
   674  007A                     	ds	1
   675                           
   676                           	psect	bssBANK0
   677  0052                     __pbssBANK0:
   678  0052                     _cont_send:
   679  0052                     	ds	8
   680  005A                     _cont:
   681  005A                     	ds	1
   682  005B                     _year:
   683  005B                     	ds	1
   684  005C                     _month:
   685  005C                     	ds	1
   686  005D                     _m_day:
   687  005D                     	ds	1
   688  005E                     _hour:
   689  005E                     	ds	1
   690  005F                     _i:
   691  005F                     	ds	1
   692                           
   693                           	psect	dataBANK0
   694  0020                     __pdataBANK0:
   695  0020                     _Date:
   696  0020                     	ds	15
   697  002F                     _Time:
   698  002F                     	ds	15
   699                           
   700                           	psect	bssBANK1
   701  00A0                     __pbssBANK1:
   702  00A0                     _data_total:
   703  00A0                     	ds	20
   704                           
   705                           	psect	inittext
   706  0629                     init_fetch0:	
   707                           ;	Called with low address in FSR and high address in W
   708                           
   709  0629  087E               	movf	btemp,w
   710  062A  008A               	movwf	10
   711  062B  087F               	movf	btemp+1,w
   712  062C  0082               	movwf	2
   713  062D                     init_ram0:	
   714                           ;Called with:
   715                           ;	high address of idata address in btemp 
   716                           ;	low address of idata address in btemp+1 
   717                           ;	low address of data in FSR
   718                           ;	high address + 1 of data in btemp-1
   719                           
   720  062D  120A  118A  2629  120A  118A  	fcall	init_fetch0
   721  0632  0080               	movwf	0
   722  0633  0A84               	incf	4,f
   723  0634  0804               	movf	4,w
   724  0635  067D               	xorwf	btemp+-1,w
   725  0636  1903               	btfsc	3,2
   726  0637  3400               	retlw	0
   727  0638  0AFF               	incf	btemp+1,f
   728  0639  1903               	btfsc	3,2
   729  063A  0AFE               	incf	btemp,f
   730  063B  2E2D               	goto	init_ram0
   731                           
   732                           	psect	clrtext
   733  0693                     clear_ram0:	
   734                           ;	Called with FSR containing the base address, and
   735                           ;	W with the last address+1
   736                           
   737  0693  0064               	clrwdt	;clear the watchdog before getting into this loop
   738  0694                     clrloop0:
   739  0694  0180               	clrf	0	;clear RAM location pointed to by FSR
   740  0695  0A84               	incf	4,f	;increment pointer
   741  0696  0604               	xorwf	4,w	;XOR with final address
   742  0697  1903               	btfsc	3,2	;have we reached the end yet?
   743  0698  3400               	retlw	0	;all done for this memory range, return
   744  0699  0604               	xorwf	4,w	;XOR again to restore value
   745  069A  2E94               	goto	clrloop0	;do the next byte
   746                           
   747                           	psect	cstackCOMMON
   748  0070                     __pcstackCOMMON:
   749  0070                     ?_setup:
   750  0070                     ?_Lcd_Init:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_Lcd_Clear:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_Write_to_RTC:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_I2C_Master_Start:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_I2C_Master_RepeatedStart:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_I2C_Master_Stop:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_RTC_display:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_Write_USART:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_Lcd_Write_String:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_USART_Init_BaudRate:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_USART_Init:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_USART_INTERRUPT:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_Lcd_Port:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_Lcd_Cmd:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_ISR:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ??_ISR:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_main:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_bcd_to_decimal:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_I2C_Master_Wait:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_Lcd_Write_Char:	
   808                           ; 1 bytes @ 0x0
   809                           
   810                           
   811                           ; 1 bytes @ 0x0
   812  0070                     	ds	3
   813  0073                     ??_I2C_Master_Start:
   814  0073                     ?_I2C_Master_Write:	
   815                           ; 1 bytes @ 0x3
   816                           
   817  0073                     ??_I2C_Master_RepeatedStart:	
   818                           ; 1 bytes @ 0x3
   819                           
   820  0073                     ??_I2C_Master_Stop:	
   821                           ; 1 bytes @ 0x3
   822                           
   823  0073                     ??_Write_USART:	
   824                           ; 1 bytes @ 0x3
   825                           
   826  0073                     ??_USART_Init_BaudRate:	
   827                           ; 1 bytes @ 0x3
   828                           
   829  0073                     ??_USART_Init:	
   830                           ; 1 bytes @ 0x3
   831                           
   832  0073                     ??_USART_INTERRUPT:	
   833                           ; 1 bytes @ 0x3
   834                           
   835  0073                     ??_Lcd_Port:	
   836                           ; 1 bytes @ 0x3
   837                           
   838  0073                     ??_I2C_Master_Wait:	
   839                           ; 1 bytes @ 0x3
   840                           
   841  0073                     ?___bmul:	
   842                           ; 1 bytes @ 0x3
   843                           
   844  0073                     ??___lldiv:	
   845                           ; 1 bytes @ 0x3
   846                           
   847  0073                     ?_I2C_Master_Read:	
   848                           ; 1 bytes @ 0x3
   849                           
   850  0073                     ?___awdiv:	
   851                           ; 2 bytes @ 0x3
   852                           
   853  0073                     ?___awmod:	
   854                           ; 2 bytes @ 0x3
   855                           
   856  0073                     Lcd_Port@a:	
   857                           ; 2 bytes @ 0x3
   858                           
   859  0073                     Write_USART@a:	
   860                           ; 1 bytes @ 0x3
   861                           
   862  0073                     ___bmul@multiplicand:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     I2C_Master_Write@d:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     I2C_Master_Read@a:	
   869                           ; 2 bytes @ 0x3
   870                           
   871  0073                     ___awdiv@divisor:	
   872                           ; 2 bytes @ 0x3
   873                           
   874  0073                     ___awmod@divisor:	
   875                           ; 2 bytes @ 0x3
   876                           
   877                           
   878                           ; 2 bytes @ 0x3
   879  0073                     	ds	1
   880  0074                     ?_Write_USART_String:
   881  0074                     ??_I2C_Master_Init:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0074                     ??_Lcd_Cmd:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0074                     ??_Lcd_Write_Char:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0074                     ??___bmul:	
   891                           ; 1 bytes @ 0x4
   892                           
   893  0074                     Write_USART_String@a:	
   894                           ; 1 bytes @ 0x4
   895                           
   896                           
   897                           ; 2 bytes @ 0x4
   898  0074                     	ds	1
   899  0075                     ??_Write_to_RTC:
   900  0075                     ??_I2C_Master_Write:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0075                     ??_I2C_Master_Read:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0075                     Lcd_Write_Char@a:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0075                     ___bmul@product:	
   910                           ; 1 bytes @ 0x5
   911                           
   912  0075                     ___awdiv@dividend:	
   913                           ; 1 bytes @ 0x5
   914                           
   915  0075                     ___awmod@dividend:	
   916                           ; 2 bytes @ 0x5
   917                           
   918                           
   919                           ; 2 bytes @ 0x5
   920  0075                     	ds	1
   921  0076                     ??_Write_USART_String:
   922  0076                     ??_Lcd_Write_String:	
   923                           ; 1 bytes @ 0x6
   924                           
   925  0076                     Lcd_Cmd@a:	
   926                           ; 1 bytes @ 0x6
   927                           
   928  0076                     ___bmul@multiplier:	
   929                           ; 1 bytes @ 0x6
   930                           
   931                           
   932                           ; 1 bytes @ 0x6
   933  0076                     	ds	1
   934  0077                     ??_Lcd_Clear:
   935  0077                     ?_Lcd_Set_Cursor:	
   936                           ; 1 bytes @ 0x7
   937                           
   938  0077                     ??___awdiv:	
   939                           ; 1 bytes @ 0x7
   940                           
   941  0077                     ??___awmod:	
   942                           ; 1 bytes @ 0x7
   943                           
   944  0077                     bcd_to_decimal@number:	
   945                           ; 1 bytes @ 0x7
   946                           
   947  0077                     Lcd_Set_Cursor@b:	
   948                           ; 1 bytes @ 0x7
   949                           
   950                           
   951                           ; 1 bytes @ 0x7
   952  0077                     	ds	1
   953  0078                     ??_setup:
   954                           
   955                           	psect	cstackBANK0
   956  003E                     __pcstackBANK0:	
   957                           ; 1 bytes @ 0x8
   958                           
   959  003E                     ??_Lcd_Init:
   960  003E                     ??_Lcd_Set_Cursor:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  003E                     ??_bcd_to_decimal:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  003E                     ?___lldiv:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  003E                     Write_USART_String@i:	
   970                           ; 4 bytes @ 0x0
   971                           
   972  003E                     ___awdiv@counter:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  003E                     ___awmod@counter:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  003E                     I2C_Master_Read@temp:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  003E                     Lcd_Write_String@i:	
   982                           ; 2 bytes @ 0x0
   983                           
   984  003E                     ___lldiv@divisor:	
   985                           ; 2 bytes @ 0x0
   986                           
   987                           
   988                           ; 4 bytes @ 0x0
   989  003E                     	ds	1
   990  003F                     Lcd_Set_Cursor@a:
   991  003F                     ___awdiv@sign:	
   992                           ; 1 bytes @ 0x1
   993                           
   994  003F                     ___awmod@sign:	
   995                           ; 1 bytes @ 0x1
   996                           
   997                           
   998                           ; 1 bytes @ 0x1
   999  003F                     	ds	1
  1000  0040                     Lcd_Set_Cursor@temp:
  1001  0040                     Lcd_Write_String@a:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004  0040                     ___awdiv@quotient:	
  1005                           ; 1 bytes @ 0x2
  1006                           
  1007                           
  1008                           ; 2 bytes @ 0x2
  1009  0040                     	ds	2
  1010  0042                     ??_RTC_display:
  1011  0042                     ___lldiv@dividend:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014                           
  1015                           ; 4 bytes @ 0x4
  1016  0042                     	ds	4
  1017  0046                     ___lldiv@quotient:
  1018                           
  1019                           ; 4 bytes @ 0x8
  1020  0046                     	ds	4
  1021  004A                     ___lldiv@counter:
  1022                           
  1023                           ; 1 bytes @ 0xC
  1024  004A                     	ds	1
  1025  004B                     ?_I2C_Master_Init:
  1026  004B                     I2C_Master_Init@c:	
  1027                           ; 1 bytes @ 0xD
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0xD
  1031  004B                     	ds	4
  1032  004F                     ??_main:
  1033                           
  1034                           ; 1 bytes @ 0x11
  1035  004F                     	ds	3
  1036                           
  1037                           	psect	maintext
  1038  01A7                     __pmaintext:	
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 115 in file "main_prueba3_mini2.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : B00/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       3       0       0       0
  1061 ;;      Totals:         0       3       0       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels required when called:    5
  1064 ;; This function calls:
  1065 ;;		_I2C_Master_Read
  1066 ;;		_I2C_Master_RepeatedStart
  1067 ;;		_I2C_Master_Start
  1068 ;;		_I2C_Master_Stop
  1069 ;;		_I2C_Master_Write
  1070 ;;		_Lcd_Clear
  1071 ;;		_Lcd_Init
  1072 ;;		_RTC_display
  1073 ;;		_Write_USART
  1074 ;;		_Write_USART_String
  1075 ;;		_Write_to_RTC
  1076 ;;		_setup
  1077 ;; This function is called by:
  1078 ;;		Startup code after reset
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _main
  1084  01A7                     _main:
  1085  01A7                     l1873:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1088                           
  1089                           
  1090                           ;main_prueba3_mini2.c: 116:     setup();
  1091  01A7  120A  118A  24CE  120A  118A  	fcall	_setup
  1092  01AC                     l1875:
  1093                           
  1094                           ;main_prueba3_mini2.c: 117:     TRISD = 0x00;
  1095  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1096  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1097  01AE  0188               	clrf	8	;volatile
  1098  01AF                     l1877:
  1099                           
  1100                           ;main_prueba3_mini2.c: 118:     Lcd_Init();
  1101  01AF  120A  118A  2412  120A  118A  	fcall	_Lcd_Init
  1102  01B4                     l1879:
  1103                           
  1104                           ;main_prueba3_mini2.c: 119:     Lcd_Clear();
  1105  01B4  120A  118A  263C  120A  118A  	fcall	_Lcd_Clear
  1106  01B9                     l1881:
  1107                           
  1108                           ;main_prueba3_mini2.c: 120:     Write_to_RTC();
  1109  01B9  120A  118A  23B8  120A  118A  	fcall	_Write_to_RTC
  1110  01BE                     l1883:
  1111                           
  1112                           ;main_prueba3_mini2.c: 126:         I2C_Master_Start();
  1113  01BE  120A  118A  2681  120A  118A  	fcall	_I2C_Master_Start
  1114  01C3                     l1885:
  1115                           
  1116                           ;main_prueba3_mini2.c: 127:         I2C_Master_Write(0xD0);
  1117  01C3  30D0               	movlw	208
  1118  01C4  00F3               	movwf	I2C_Master_Write@d
  1119  01C5  3000               	movlw	0
  1120  01C6  00F4               	movwf	I2C_Master_Write@d+1
  1121  01C7  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1122  01CC                     l1887:
  1123                           
  1124                           ;main_prueba3_mini2.c: 128:         I2C_Master_Write(0);
  1125  01CC  3000               	movlw	0
  1126  01CD  00F3               	movwf	I2C_Master_Write@d
  1127  01CE  00F4               	movwf	I2C_Master_Write@d+1
  1128  01CF  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1129  01D4                     l1889:
  1130                           
  1131                           ;main_prueba3_mini2.c: 129:         I2C_Master_RepeatedStart();
  1132  01D4  120A  118A  268A  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1133  01D9                     l1891:
  1134                           
  1135                           ;main_prueba3_mini2.c: 130:         I2C_Master_Write(0xD1);
  1136  01D9  30D1               	movlw	209
  1137  01DA  00F3               	movwf	I2C_Master_Write@d
  1138  01DB  3000               	movlw	0
  1139  01DC  00F4               	movwf	I2C_Master_Write@d+1
  1140  01DD  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1141  01E2                     l1893:
  1142                           
  1143                           ;main_prueba3_mini2.c: 131:         second = I2C_Master_Read(1);
  1144  01E2  3001               	movlw	1
  1145  01E3  00F3               	movwf	I2C_Master_Read@a
  1146  01E4  3000               	movlw	0
  1147  01E5  00F4               	movwf	I2C_Master_Read@a+1
  1148  01E6  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Read
  1149  01EB  0873               	movf	?_I2C_Master_Read,w
  1150  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1151  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1152  01EE  00CF               	movwf	??_main
  1153  01EF  084F               	movf	??_main,w
  1154  01F0  00FA               	movwf	_second
  1155  01F1                     l1895:
  1156                           
  1157                           ;main_prueba3_mini2.c: 132:         minute = I2C_Master_Read(1);
  1158  01F1  3001               	movlw	1
  1159  01F2  00F3               	movwf	I2C_Master_Read@a
  1160  01F3  3000               	movlw	0
  1161  01F4  00F4               	movwf	I2C_Master_Read@a+1
  1162  01F5  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Read
  1163  01FA  0873               	movf	?_I2C_Master_Read,w
  1164  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1165  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1166  01FD  00CF               	movwf	??_main
  1167  01FE  084F               	movf	??_main,w
  1168  01FF  00F9               	movwf	_minute
  1169  0200                     l1897:
  1170                           
  1171                           ;main_prueba3_mini2.c: 133:         hour = I2C_Master_Read(1);
  1172  0200  3001               	movlw	1
  1173  0201  00F3               	movwf	I2C_Master_Read@a
  1174  0202  3000               	movlw	0
  1175  0203  00F4               	movwf	I2C_Master_Read@a+1
  1176  0204  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Read
  1177  0209  0873               	movf	?_I2C_Master_Read,w
  1178  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1179  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1180  020C  00CF               	movwf	??_main
  1181  020D  084F               	movf	??_main,w
  1182  020E  00DE               	movwf	_hour
  1183  020F                     l1899:
  1184                           
  1185                           ;main_prueba3_mini2.c: 134:         I2C_Master_Read(1);
  1186  020F  3001               	movlw	1
  1187  0210  00F3               	movwf	I2C_Master_Read@a
  1188  0211  3000               	movlw	0
  1189  0212  00F4               	movwf	I2C_Master_Read@a+1
  1190  0213  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Read
  1191  0218                     l1901:
  1192                           
  1193                           ;main_prueba3_mini2.c: 135:         m_day = I2C_Master_Read(1);
  1194  0218  3001               	movlw	1
  1195  0219  00F3               	movwf	I2C_Master_Read@a
  1196  021A  3000               	movlw	0
  1197  021B  00F4               	movwf	I2C_Master_Read@a+1
  1198  021C  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Read
  1199  0221  0873               	movf	?_I2C_Master_Read,w
  1200  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0224  00CF               	movwf	??_main
  1203  0225  084F               	movf	??_main,w
  1204  0226  00DD               	movwf	_m_day
  1205  0227                     l1903:
  1206                           
  1207                           ;main_prueba3_mini2.c: 136:         month = I2C_Master_Read(1);
  1208  0227  3001               	movlw	1
  1209  0228  00F3               	movwf	I2C_Master_Read@a
  1210  0229  3000               	movlw	0
  1211  022A  00F4               	movwf	I2C_Master_Read@a+1
  1212  022B  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Read
  1213  0230  0873               	movf	?_I2C_Master_Read,w
  1214  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0233  00CF               	movwf	??_main
  1217  0234  084F               	movf	??_main,w
  1218  0235  00DC               	movwf	_month
  1219  0236                     l1905:
  1220                           
  1221                           ;main_prueba3_mini2.c: 137:         year = I2C_Master_Read(0);
  1222  0236  3000               	movlw	0
  1223  0237  00F3               	movwf	I2C_Master_Read@a
  1224  0238  00F4               	movwf	I2C_Master_Read@a+1
  1225  0239  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Read
  1226  023E  0873               	movf	?_I2C_Master_Read,w
  1227  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0241  00CF               	movwf	??_main
  1230  0242  084F               	movf	??_main,w
  1231  0243  00DB               	movwf	_year
  1232  0244                     l1907:
  1233                           
  1234                           ;main_prueba3_mini2.c: 138:         I2C_Master_Stop();
  1235  0244  120A  118A  2678  120A  118A  	fcall	_I2C_Master_Stop
  1236  0249                     l1909:
  1237                           
  1238                           ;main_prueba3_mini2.c: 140:         RTC_display();
  1239  0249  120A  118A  2034  120A  118A  	fcall	_RTC_display
  1240  024E                     l1911:
  1241                           
  1242                           ;main_prueba3_mini2.c: 143:         for(i = 0; i < 13; i++){
  1243  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1244  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0250  01DF               	clrf	_i
  1246  0251                     l1917:
  1247                           
  1248                           ;main_prueba3_mini2.c: 144:             Write_USART_String(Time[i]);
  1249  0251  085F               	movf	_i,w
  1250  0252  3E2F               	addlw	(low (_Time| 0))& (0+255)
  1251  0253  0084               	movwf	4
  1252  0254  1383               	bcf	3,7	;select IRP bank0
  1253  0255  0800               	movf	0,w
  1254  0256  00CF               	movwf	??_main
  1255  0257  01D0               	clrf	??_main+1
  1256  0258  084F               	movf	??_main,w
  1257  0259  00F4               	movwf	Write_USART_String@a
  1258  025A  0850               	movf	??_main+1,w
  1259  025B  00F5               	movwf	Write_USART_String@a+1
  1260  025C  120A  118A  24FF  120A  118A  	fcall	_Write_USART_String
  1261  0261                     l1919:
  1262                           
  1263                           ;main_prueba3_mini2.c: 145:         }
  1264  0261  3001               	movlw	1
  1265  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0264  00CF               	movwf	??_main
  1268  0265  084F               	movf	??_main,w
  1269  0266  07DF               	addwf	_i,f
  1270  0267                     l1921:
  1271  0267  300D               	movlw	13
  1272  0268  025F               	subwf	_i,w
  1273  0269  1C03               	skipc
  1274  026A  2A6C               	goto	u1161
  1275  026B  2A6D               	goto	u1160
  1276  026C                     u1161:
  1277  026C  2A51               	goto	l1917
  1278  026D                     u1160:
  1279  026D                     l1923:
  1280                           
  1281                           ;main_prueba3_mini2.c: 149:         Write_USART(13);
  1282  026D  300D               	movlw	13
  1283  026E  120A  118A  2662  120A  118A  	fcall	_Write_USART
  1284                           
  1285                           ;main_prueba3_mini2.c: 150:         Write_USART(10);
  1286  0273  300A               	movlw	10
  1287  0274  120A  118A  2662  120A  118A  	fcall	_Write_USART
  1288  0279                     l1925:
  1289                           
  1290                           ;main_prueba3_mini2.c: 162:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1291  0279  3002               	movlw	2
  1292  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1293  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1294  027C  00D1               	movwf	??_main+2
  1295  027D  3004               	movlw	4
  1296  027E  00D0               	movwf	??_main+1
  1297  027F  30B9               	movlw	185
  1298  0280  00CF               	movwf	??_main
  1299  0281                     u1177:
  1300  0281  0BCF               	decfsz	??_main,f
  1301  0282  2A81               	goto	u1177
  1302  0283  0BD0               	decfsz	??_main+1,f
  1303  0284  2A81               	goto	u1177
  1304  0285  0BD1               	decfsz	??_main+2,f
  1305  0286  2A81               	goto	u1177
  1306  0287  2A88               	nop2
  1307  0288  29BE               	goto	l1883
  1308  0289  120A  118A  280C   	ljmp	start
  1309  028C                     __end_of_main:
  1310                           
  1311                           	psect	text1
  1312  04CE                     __ptext1:	
  1313 ;; *************** function _setup *****************
  1314 ;; Defined at:
  1315 ;;		line 229 in file "main_prueba3_mini2.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0
  1332 ;;      Totals:         0       0       0       0       0
  1333 ;;Total ram usage:        0 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    3
  1336 ;; This function calls:
  1337 ;;		_I2C_Master_Init
  1338 ;;		_USART_INTERRUPT
  1339 ;;		_USART_Init
  1340 ;;		_USART_Init_BaudRate
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _setup
  1348  04CE                     _setup:
  1349  04CE                     l1795:	
  1350                           ;incstack = 0
  1351                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1352                           
  1353                           
  1354                           ;main_prueba3_mini2.c: 231:     ANSEL = 0;
  1355  04CE  1683               	bsf	3,5	;RP0=1, select bank3
  1356  04CF  1703               	bsf	3,6	;RP1=1, select bank3
  1357  04D0  0188               	clrf	8	;volatile
  1358                           
  1359                           ;main_prueba3_mini2.c: 232:     ANSELH = 0;
  1360  04D1  0189               	clrf	9	;volatile
  1361                           
  1362                           ;main_prueba3_mini2.c: 233:     TRISA = 0;
  1363  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  1364  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  1365  04D4  0185               	clrf	5	;volatile
  1366  04D5                     l1797:
  1367                           
  1368                           ;main_prueba3_mini2.c: 234:     TRISB = 0b00000011;
  1369  04D5  3003               	movlw	3
  1370  04D6  0086               	movwf	6	;volatile
  1371  04D7                     l1799:
  1372                           
  1373                           ;main_prueba3_mini2.c: 235:     TRISCbits.TRISC6 = 0;
  1374  04D7  1307               	bcf	7,6	;volatile
  1375  04D8                     l1801:
  1376                           
  1377                           ;main_prueba3_mini2.c: 236:     TRISCbits.TRISC7 = 1;
  1378  04D8  1787               	bsf	7,7	;volatile
  1379  04D9                     l1803:
  1380                           
  1381                           ;main_prueba3_mini2.c: 237:     TRISD = 0;
  1382  04D9  0188               	clrf	8	;volatile
  1383  04DA                     l1805:
  1384                           
  1385                           ;main_prueba3_mini2.c: 238:     TRISE = 0;
  1386  04DA  0189               	clrf	9	;volatile
  1387  04DB                     l1807:
  1388                           
  1389                           ;main_prueba3_mini2.c: 239:     PORTA = 0;
  1390  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1391  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1392  04DD  0185               	clrf	5	;volatile
  1393  04DE                     l1809:
  1394                           
  1395                           ;main_prueba3_mini2.c: 240:     PORTB = 0;
  1396  04DE  0186               	clrf	6	;volatile
  1397  04DF                     l1811:
  1398                           
  1399                           ;main_prueba3_mini2.c: 241:     PORTC = 0;
  1400  04DF  0187               	clrf	7	;volatile
  1401  04E0                     l1813:
  1402                           
  1403                           ;main_prueba3_mini2.c: 242:     PORTD = 0;
  1404  04E0  0188               	clrf	8	;volatile
  1405  04E1                     l1815:
  1406                           
  1407                           ;main_prueba3_mini2.c: 243:     PORTE = 0;
  1408  04E1  0189               	clrf	9	;volatile
  1409  04E2                     l1817:
  1410                           
  1411                           ;main_prueba3_mini2.c: 244:     I2C_Master_Init(100000);
  1412  04E2  3000               	movlw	0
  1413  04E3  00CE               	movwf	I2C_Master_Init@c+3
  1414  04E4  3001               	movlw	1
  1415  04E5  00CD               	movwf	I2C_Master_Init@c+2
  1416  04E6  3086               	movlw	134
  1417  04E7  00CC               	movwf	I2C_Master_Init@c+1
  1418  04E8  30A0               	movlw	160
  1419  04E9  00CB               	movwf	I2C_Master_Init@c
  1420  04EA  120A  118A  2462  120A  118A  	fcall	_I2C_Master_Init
  1421  04EF                     l1819:
  1422                           
  1423                           ;main_prueba3_mini2.c: 245:     USART_Init_BaudRate();
  1424  04EF  120A  118A  269B  120A  118A  	fcall	_USART_Init_BaudRate
  1425  04F4                     l1821:
  1426                           
  1427                           ;main_prueba3_mini2.c: 246:     USART_Init();
  1428  04F4  120A  118A  2656  120A  118A  	fcall	_USART_Init
  1429  04F9                     l1823:
  1430                           
  1431                           ;main_prueba3_mini2.c: 247:     USART_INTERRUPT();
  1432  04F9  120A  118A  26A1  120A  118A  	fcall	_USART_INTERRUPT
  1433  04FE                     l132:
  1434  04FE  0008               	return
  1435  04FF                     __end_of_setup:
  1436                           
  1437                           	psect	text2
  1438  069B                     __ptext2:	
  1439 ;; *************** function _USART_Init_BaudRate *****************
  1440 ;; Defined at:
  1441 ;;		line 19 in file "USART.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_setup
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _USART_Init_BaudRate
  1471  069B                     _USART_Init_BaudRate:
  1472  069B                     l1427:	
  1473                           ;incstack = 0
  1474                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1475                           
  1476                           
  1477                           ;USART.c: 20:     SPBRGH = 0;
  1478  069B  1683               	bsf	3,5	;RP0=1, select bank1
  1479  069C  1303               	bcf	3,6	;RP1=0, select bank1
  1480  069D  019A               	clrf	26	;volatile
  1481  069E                     l1429:
  1482                           
  1483                           ;USART.c: 21:     SPBRG = 12;
  1484  069E  300C               	movlw	12
  1485  069F  0099               	movwf	25	;volatile
  1486  06A0                     l280:
  1487  06A0  0008               	return
  1488  06A1                     __end_of_USART_Init_BaudRate:
  1489                           
  1490                           	psect	text3
  1491  0656                     __ptext3:	
  1492 ;; *************** function _USART_Init *****************
  1493 ;; Defined at:
  1494 ;;		line 8 in file "USART.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		status,2
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_setup
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           
  1523                           ;psect for function _USART_Init
  1524  0656                     _USART_Init:
  1525  0656                     l1431:	
  1526                           ;incstack = 0
  1527                           ; Regs used in _USART_Init: [status,2]
  1528                           
  1529                           
  1530                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1531  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0658  1798               	bsf	24,7	;volatile
  1534                           
  1535                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  1536  0659  1683               	bsf	3,5	;RP0=1, select bank1
  1537  065A  1303               	bcf	3,6	;RP1=0, select bank1
  1538  065B  1218               	bcf	24,4	;volatile
  1539                           
  1540                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  1541  065C  1698               	bsf	24,5	;volatile
  1542                           
  1543                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1544  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1545  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1546  065F  1618               	bsf	24,4	;volatile
  1547  0660                     l1433:
  1548                           
  1549                           ;USART.c: 16:     RCREG = 0;
  1550  0660  019A               	clrf	26	;volatile
  1551  0661                     l277:
  1552  0661  0008               	return
  1553  0662                     __end_of_USART_Init:
  1554                           
  1555                           	psect	text4
  1556  06A1                     __ptext4:	
  1557 ;; *************** function _USART_INTERRUPT *****************
  1558 ;; Defined at:
  1559 ;;		line 24 in file "USART.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		None
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0
  1576 ;;      Totals:         0       0       0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_setup
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _USART_INTERRUPT
  1589  06A1                     _USART_INTERRUPT:
  1590  06A1                     l1435:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _USART_INTERRUPT: []
  1593                           
  1594                           
  1595                           ;USART.c: 25:     INTCONbits.GIE = 1;
  1596  06A1  178B               	bsf	11,7	;volatile
  1597                           
  1598                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  1599  06A2  170B               	bsf	11,6	;volatile
  1600                           
  1601                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  1602  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  1603  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  1604  06A5  168C               	bsf	12,5	;volatile
  1605  06A6                     l283:
  1606  06A6  0008               	return
  1607  06A7                     __end_of_USART_INTERRUPT:
  1608                           
  1609                           	psect	text5
  1610  0462                     __ptext5:	
  1611 ;; *************** function _I2C_Master_Init *****************
  1612 ;; Defined at:
  1613 ;;		line 21 in file "I2C.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  c               4   13[BANK0 ] const unsigned long 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       4       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          4       0       0       0       0
  1630 ;;      Totals:         4       4       0       0       0
  1631 ;;Total ram usage:        8 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    2
  1634 ;; This function calls:
  1635 ;;		___lldiv
  1636 ;; This function is called by:
  1637 ;;		_setup
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           
  1642                           ;psect for function _I2C_Master_Init
  1643  0462                     _I2C_Master_Init:
  1644  0462                     l1745:	
  1645                           ;incstack = 0
  1646                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1647                           
  1648                           
  1649                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1650  0462  3028               	movlw	40
  1651  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0465  0094               	movwf	20	;volatile
  1654  0466                     l1747:
  1655                           
  1656                           ;I2C.c: 28:     SSPCON2 = 0;
  1657  0466  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0467  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0468  0191               	clrf	17	;volatile
  1660  0469                     l1749:
  1661                           
  1662                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1663  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1664  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1665  046B  084B               	movf	I2C_Master_Init@c,w
  1666  046C  00F4               	movwf	??_I2C_Master_Init
  1667  046D  084C               	movf	I2C_Master_Init@c+1,w
  1668  046E  00F5               	movwf	??_I2C_Master_Init+1
  1669  046F  084D               	movf	I2C_Master_Init@c+2,w
  1670  0470  00F6               	movwf	??_I2C_Master_Init+2
  1671  0471  084E               	movf	I2C_Master_Init@c+3,w
  1672  0472  00F7               	movwf	??_I2C_Master_Init+3
  1673  0473  3002               	movlw	2
  1674  0474                     u1045:
  1675  0474  1003               	clrc
  1676  0475  0DF4               	rlf	??_I2C_Master_Init,f
  1677  0476  0DF5               	rlf	??_I2C_Master_Init+1,f
  1678  0477  0DF6               	rlf	??_I2C_Master_Init+2,f
  1679  0478  0DF7               	rlf	??_I2C_Master_Init+3,f
  1680  0479                     u1040:
  1681  0479  3EFF               	addlw	-1
  1682  047A  1D03               	skipz
  1683  047B  2C74               	goto	u1045
  1684  047C  0877               	movf	??_I2C_Master_Init+3,w
  1685  047D  00C1               	movwf	___lldiv@divisor+3
  1686  047E  0876               	movf	??_I2C_Master_Init+2,w
  1687  047F  00C0               	movwf	___lldiv@divisor+2
  1688  0480  0875               	movf	??_I2C_Master_Init+1,w
  1689  0481  00BF               	movwf	___lldiv@divisor+1
  1690  0482  0874               	movf	??_I2C_Master_Init,w
  1691  0483  00BE               	movwf	___lldiv@divisor
  1692  0484  3000               	movlw	0
  1693  0485  00C5               	movwf	___lldiv@dividend+3
  1694  0486  307A               	movlw	122
  1695  0487  00C4               	movwf	___lldiv@dividend+2
  1696  0488  3012               	movlw	18
  1697  0489  00C3               	movwf	___lldiv@dividend+1
  1698  048A  3000               	movlw	0
  1699  048B  00C2               	movwf	___lldiv@dividend
  1700  048C  120A  118A  22F5  120A  118A  	fcall	___lldiv
  1701  0491  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0492  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0493  083E               	movf	?___lldiv,w
  1704  0494  3EFF               	addlw	255
  1705  0495  1683               	bsf	3,5	;RP0=1, select bank1
  1706  0496  1303               	bcf	3,6	;RP1=0, select bank1
  1707  0497  0093               	movwf	19	;volatile
  1708  0498                     l1751:
  1709                           
  1710                           ;I2C.c: 36:     SSPSTAT = 0;
  1711  0498  0194               	clrf	20	;volatile
  1712  0499                     l1753:
  1713                           
  1714                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1715  0499  1587               	bsf	7,3	;volatile
  1716  049A                     l1755:
  1717                           
  1718                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1719  049A  1607               	bsf	7,4	;volatile
  1720  049B                     l161:
  1721  049B  0008               	return
  1722  049C                     __end_of_I2C_Master_Init:
  1723                           
  1724                           	psect	text6
  1725  02F5                     __ptext6:	
  1726 ;; *************** function ___lldiv *****************
  1727 ;; Defined at:
  1728 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  divisor         4    0[BANK0 ] unsigned long 
  1731 ;;  dividend        4    4[BANK0 ] unsigned long 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  quotient        4    8[BANK0 ] unsigned long 
  1734 ;;  counter         1   12[BANK0 ] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  4    0[BANK0 ] unsigned long 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       8       0       0       0
  1745 ;;      Locals:         0       5       0       0       0
  1746 ;;      Temps:          1       0       0       0       0
  1747 ;;      Totals:         1      13       0       0       0
  1748 ;;Total ram usage:       14 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_I2C_Master_Init
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function ___lldiv
  1760  02F5                     ___lldiv:
  1761  02F5                     l1681:	
  1762                           ;incstack = 0
  1763                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1764                           
  1765  02F5  3000               	movlw	0
  1766  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1767  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1768  02F8  00C9               	movwf	___lldiv@quotient+3
  1769  02F9  3000               	movlw	0
  1770  02FA  00C8               	movwf	___lldiv@quotient+2
  1771  02FB  3000               	movlw	0
  1772  02FC  00C7               	movwf	___lldiv@quotient+1
  1773  02FD  3000               	movlw	0
  1774  02FE  00C6               	movwf	___lldiv@quotient
  1775  02FF  0841               	movf	___lldiv@divisor+3,w
  1776  0300  0440               	iorwf	___lldiv@divisor+2,w
  1777  0301  043F               	iorwf	___lldiv@divisor+1,w
  1778  0302  043E               	iorwf	___lldiv@divisor,w
  1779  0303  1903               	skipnz
  1780  0304  2B06               	goto	u921
  1781  0305  2B07               	goto	u920
  1782  0306                     u921:
  1783  0306  2B54               	goto	l1701
  1784  0307                     u920:
  1785  0307                     l1683:
  1786  0307  01CA               	clrf	___lldiv@counter
  1787  0308  0ACA               	incf	___lldiv@counter,f
  1788  0309  2B17               	goto	l1687
  1789  030A                     l1685:
  1790  030A  3001               	movlw	1
  1791  030B  00F3               	movwf	??___lldiv
  1792  030C                     u935:
  1793  030C  1003               	clrc
  1794  030D  0DBE               	rlf	___lldiv@divisor,f
  1795  030E  0DBF               	rlf	___lldiv@divisor+1,f
  1796  030F  0DC0               	rlf	___lldiv@divisor+2,f
  1797  0310  0DC1               	rlf	___lldiv@divisor+3,f
  1798  0311  0BF3               	decfsz	??___lldiv,f
  1799  0312  2B0C               	goto	u935
  1800  0313  3001               	movlw	1
  1801  0314  00F3               	movwf	??___lldiv
  1802  0315  0873               	movf	??___lldiv,w
  1803  0316  07CA               	addwf	___lldiv@counter,f
  1804  0317                     l1687:
  1805  0317  1FC1               	btfss	___lldiv@divisor+3,7
  1806  0318  2B1A               	goto	u941
  1807  0319  2B1B               	goto	u940
  1808  031A                     u941:
  1809  031A  2B0A               	goto	l1685
  1810  031B                     u940:
  1811  031B                     l1689:
  1812  031B  3001               	movlw	1
  1813  031C  00F3               	movwf	??___lldiv
  1814  031D                     u955:
  1815  031D  1003               	clrc
  1816  031E  0DC6               	rlf	___lldiv@quotient,f
  1817  031F  0DC7               	rlf	___lldiv@quotient+1,f
  1818  0320  0DC8               	rlf	___lldiv@quotient+2,f
  1819  0321  0DC9               	rlf	___lldiv@quotient+3,f
  1820  0322  0BF3               	decfsz	??___lldiv,f
  1821  0323  2B1D               	goto	u955
  1822  0324                     l1691:
  1823  0324  0841               	movf	___lldiv@divisor+3,w
  1824  0325  0245               	subwf	___lldiv@dividend+3,w
  1825  0326  1D03               	skipz
  1826  0327  2B32               	goto	u965
  1827  0328  0840               	movf	___lldiv@divisor+2,w
  1828  0329  0244               	subwf	___lldiv@dividend+2,w
  1829  032A  1D03               	skipz
  1830  032B  2B32               	goto	u965
  1831  032C  083F               	movf	___lldiv@divisor+1,w
  1832  032D  0243               	subwf	___lldiv@dividend+1,w
  1833  032E  1D03               	skipz
  1834  032F  2B32               	goto	u965
  1835  0330  083E               	movf	___lldiv@divisor,w
  1836  0331  0242               	subwf	___lldiv@dividend,w
  1837  0332                     u965:
  1838  0332  1C03               	skipc
  1839  0333  2B35               	goto	u961
  1840  0334  2B36               	goto	u960
  1841  0335                     u961:
  1842  0335  2B45               	goto	l1697
  1843  0336                     u960:
  1844  0336                     l1693:
  1845  0336  083E               	movf	___lldiv@divisor,w
  1846  0337  02C2               	subwf	___lldiv@dividend,f
  1847  0338  083F               	movf	___lldiv@divisor+1,w
  1848  0339  1C03               	skipc
  1849  033A  0F3F               	incfsz	___lldiv@divisor+1,w
  1850  033B  02C3               	subwf	___lldiv@dividend+1,f
  1851  033C  0840               	movf	___lldiv@divisor+2,w
  1852  033D  1C03               	skipc
  1853  033E  0F40               	incfsz	___lldiv@divisor+2,w
  1854  033F  02C4               	subwf	___lldiv@dividend+2,f
  1855  0340  0841               	movf	___lldiv@divisor+3,w
  1856  0341  1C03               	skipc
  1857  0342  0F41               	incfsz	___lldiv@divisor+3,w
  1858  0343  02C5               	subwf	___lldiv@dividend+3,f
  1859  0344                     l1695:
  1860  0344  1446               	bsf	___lldiv@quotient,0
  1861  0345                     l1697:
  1862  0345  3001               	movlw	1
  1863  0346                     u975:
  1864  0346  1003               	clrc
  1865  0347  0CC1               	rrf	___lldiv@divisor+3,f
  1866  0348  0CC0               	rrf	___lldiv@divisor+2,f
  1867  0349  0CBF               	rrf	___lldiv@divisor+1,f
  1868  034A  0CBE               	rrf	___lldiv@divisor,f
  1869  034B  3EFF               	addlw	-1
  1870  034C  1D03               	skipz
  1871  034D  2B46               	goto	u975
  1872  034E                     l1699:
  1873  034E  3001               	movlw	1
  1874  034F  02CA               	subwf	___lldiv@counter,f
  1875  0350  1D03               	btfss	3,2
  1876  0351  2B53               	goto	u981
  1877  0352  2B54               	goto	u980
  1878  0353                     u981:
  1879  0353  2B1B               	goto	l1689
  1880  0354                     u980:
  1881  0354                     l1701:
  1882  0354  0849               	movf	___lldiv@quotient+3,w
  1883  0355  00C1               	movwf	?___lldiv+3
  1884  0356  0848               	movf	___lldiv@quotient+2,w
  1885  0357  00C0               	movwf	?___lldiv+2
  1886  0358  0847               	movf	___lldiv@quotient+1,w
  1887  0359  00BF               	movwf	?___lldiv+1
  1888  035A  0846               	movf	___lldiv@quotient,w
  1889  035B  00BE               	movwf	?___lldiv
  1890  035C                     l423:
  1891  035C  0008               	return
  1892  035D                     __end_of___lldiv:
  1893                           
  1894                           	psect	text7
  1895  03B8                     __ptext7:	
  1896 ;; *************** function _Write_to_RTC *****************
  1897 ;; Defined at:
  1898 ;;		line 214 in file "main_prueba3_mini2.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0
  1915 ;;      Totals:         0       0       0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		_I2C_Master_Start
  1921 ;;		_I2C_Master_Stop
  1922 ;;		_I2C_Master_Write
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _Write_to_RTC
  1930  03B8                     _Write_to_RTC:
  1931  03B8                     l1837:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  1934                           
  1935                           
  1936                           ;main_prueba3_mini2.c: 215:     I2C_Master_Start();
  1937  03B8  120A  118A  2681  120A  118A  	fcall	_I2C_Master_Start
  1938                           
  1939                           ;main_prueba3_mini2.c: 216:     I2C_Master_Write(0xD0);
  1940  03BD  30D0               	movlw	208
  1941  03BE  00F3               	movwf	I2C_Master_Write@d
  1942  03BF  3000               	movlw	0
  1943  03C0  00F4               	movwf	I2C_Master_Write@d+1
  1944  03C1  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1945                           
  1946                           ;main_prueba3_mini2.c: 217:     I2C_Master_Write(0);
  1947  03C6  3000               	movlw	0
  1948  03C7  00F3               	movwf	I2C_Master_Write@d
  1949  03C8  00F4               	movwf	I2C_Master_Write@d+1
  1950  03C9  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1951                           
  1952                           ;main_prueba3_mini2.c: 218:     I2C_Master_Write(0);
  1953  03CE  3000               	movlw	0
  1954  03CF  00F3               	movwf	I2C_Master_Write@d
  1955  03D0  00F4               	movwf	I2C_Master_Write@d+1
  1956  03D1  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1957                           
  1958                           ;main_prueba3_mini2.c: 219:     I2C_Master_Write(48);
  1959  03D6  3030               	movlw	48
  1960  03D7  00F3               	movwf	I2C_Master_Write@d
  1961  03D8  3000               	movlw	0
  1962  03D9  00F4               	movwf	I2C_Master_Write@d+1
  1963  03DA  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1964                           
  1965                           ;main_prueba3_mini2.c: 220:     I2C_Master_Write(6);
  1966  03DF  3006               	movlw	6
  1967  03E0  00F3               	movwf	I2C_Master_Write@d
  1968  03E1  3000               	movlw	0
  1969  03E2  00F4               	movwf	I2C_Master_Write@d+1
  1970  03E3  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1971                           
  1972                           ;main_prueba3_mini2.c: 221:     I2C_Master_Write(1);
  1973  03E8  3001               	movlw	1
  1974  03E9  00F3               	movwf	I2C_Master_Write@d
  1975  03EA  3000               	movlw	0
  1976  03EB  00F4               	movwf	I2C_Master_Write@d+1
  1977  03EC  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1978                           
  1979                           ;main_prueba3_mini2.c: 222:     I2C_Master_Write(8);
  1980  03F1  3008               	movlw	8
  1981  03F2  00F3               	movwf	I2C_Master_Write@d
  1982  03F3  3000               	movlw	0
  1983  03F4  00F4               	movwf	I2C_Master_Write@d+1
  1984  03F5  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1985                           
  1986                           ;main_prueba3_mini2.c: 223:     I2C_Master_Write(3);
  1987  03FA  3003               	movlw	3
  1988  03FB  00F3               	movwf	I2C_Master_Write@d
  1989  03FC  3000               	movlw	0
  1990  03FD  00F4               	movwf	I2C_Master_Write@d+1
  1991  03FE  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1992                           
  1993                           ;main_prueba3_mini2.c: 224:     I2C_Master_Write(27);
  1994  0403  301B               	movlw	27
  1995  0404  00F3               	movwf	I2C_Master_Write@d
  1996  0405  3000               	movlw	0
  1997  0406  00F4               	movwf	I2C_Master_Write@d+1
  1998  0407  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  1999                           
  2000                           ;main_prueba3_mini2.c: 225:     I2C_Master_Stop();
  2001  040C  120A  118A  2678  120A  118A  	fcall	_I2C_Master_Stop
  2002  0411                     l129:
  2003  0411  0008               	return
  2004  0412                     __end_of_Write_to_RTC:
  2005                           
  2006                           	psect	text8
  2007  066E                     __ptext8:	
  2008 ;; *************** function _I2C_Master_Write *****************
  2009 ;; Defined at:
  2010 ;;		line 84 in file "I2C.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  d               2    3[COMMON] unsigned int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         2       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0
  2027 ;;      Totals:         2       0       0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    2
  2031 ;; This function calls:
  2032 ;;		_I2C_Master_Wait
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;;		_Write_to_RTC
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _I2C_Master_Write
  2041  066E                     _I2C_Master_Write:
  2042  066E                     l1709:	
  2043                           ;incstack = 0
  2044                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2045                           
  2046                           
  2047                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2048  066E  120A  118A  2649  120A  118A  	fcall	_I2C_Master_Wait
  2049  0673                     l1711:
  2050                           
  2051                           ;I2C.c: 87:     SSPBUF = d;
  2052  0673  0873               	movf	I2C_Master_Write@d,w
  2053  0674  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0675  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0676  0093               	movwf	19	;volatile
  2056  0677                     l179:
  2057  0677  0008               	return
  2058  0678                     __end_of_I2C_Master_Write:
  2059                           
  2060                           	psect	text9
  2061  0678                     __ptext9:	
  2062 ;; *************** function _I2C_Master_Stop *****************
  2063 ;; Defined at:
  2064 ;;		line 73 in file "I2C.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    2
  2085 ;; This function calls:
  2086 ;;		_I2C_Master_Wait
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;;		_Write_to_RTC
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _I2C_Master_Stop
  2095  0678                     _I2C_Master_Stop:
  2096  0678                     l1713:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2099                           
  2100                           
  2101                           ;I2C.c: 75:     I2C_Master_Wait();
  2102  0678  120A  118A  2649  120A  118A  	fcall	_I2C_Master_Wait
  2103  067D                     l1715:
  2104                           
  2105                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2106  067D  1683               	bsf	3,5	;RP0=1, select bank1
  2107  067E  1303               	bcf	3,6	;RP1=0, select bank1
  2108  067F  1511               	bsf	17,2	;volatile
  2109  0680                     l176:
  2110  0680  0008               	return
  2111  0681                     __end_of_I2C_Master_Stop:
  2112                           
  2113                           	psect	text10
  2114  0681                     __ptext10:	
  2115 ;; *************** function _I2C_Master_Start *****************
  2116 ;; Defined at:
  2117 ;;		line 56 in file "I2C.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0
  2134 ;;      Totals:         0       0       0       0       0
  2135 ;;Total ram usage:        0 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    2
  2138 ;; This function calls:
  2139 ;;		_I2C_Master_Wait
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;;		_Write_to_RTC
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _I2C_Master_Start
  2148  0681                     _I2C_Master_Start:
  2149  0681                     l1705:	
  2150                           ;incstack = 0
  2151                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2152                           
  2153                           
  2154                           ;I2C.c: 57:     I2C_Master_Wait();
  2155  0681  120A  118A  2649  120A  118A  	fcall	_I2C_Master_Wait
  2156  0686                     l1707:
  2157                           
  2158                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  2159  0686  1683               	bsf	3,5	;RP0=1, select bank1
  2160  0687  1303               	bcf	3,6	;RP1=0, select bank1
  2161  0688  1411               	bsf	17,0	;volatile
  2162  0689                     l170:
  2163  0689  0008               	return
  2164  068A                     __end_of_I2C_Master_Start:
  2165                           
  2166                           	psect	text11
  2167  04FF                     __ptext11:	
  2168 ;; *************** function _Write_USART_String *****************
  2169 ;; Defined at:
  2170 ;;		line 37 in file "USART.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  a               2    4[COMMON] PTR unsigned char 
  2173 ;;		 -> RAM(512), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  i               1    0[BANK0 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         2       0       0       0       0
  2186 ;;      Locals:         0       1       0       0       0
  2187 ;;      Temps:          2       0       0       0       0
  2188 ;;      Totals:         4       1       0       0       0
  2189 ;;Total ram usage:        5 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    2
  2192 ;; This function calls:
  2193 ;;		_Write_USART
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _Write_USART_String
  2201  04FF                     _Write_USART_String:
  2202  04FF                     l1865:	
  2203                           ;incstack = 0
  2204                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2205                           
  2206                           
  2207                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2208  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0501  01BE               	clrf	Write_USART_String@i
  2211  0502  2D1C               	goto	l1871
  2212  0503                     l1867:
  2213                           
  2214                           ;USART.c: 40:         Write_USART(a[i]);
  2215  0503  083E               	movf	Write_USART_String@i,w
  2216  0504  0774               	addwf	Write_USART_String@a,w
  2217  0505  00F6               	movwf	??_Write_USART_String
  2218  0506  3000               	movlw	0
  2219  0507  1803               	skipnc
  2220  0508  3001               	movlw	1
  2221  0509  0775               	addwf	Write_USART_String@a+1,w
  2222  050A  00F7               	movwf	??_Write_USART_String+1
  2223  050B  0876               	movf	??_Write_USART_String,w
  2224  050C  0084               	movwf	4
  2225  050D  1783               	bsf	3,7
  2226  050E  1C77               	btfss	??_Write_USART_String+1,0
  2227  050F  1383               	bcf	3,7
  2228  0510  0800               	movf	0,w
  2229  0511  120A  118A  2662  120A  118A  	fcall	_Write_USART
  2230  0516                     l1869:
  2231                           
  2232                           ;USART.c: 41:     }
  2233  0516  3001               	movlw	1
  2234  0517  00F6               	movwf	??_Write_USART_String
  2235  0518  0876               	movf	??_Write_USART_String,w
  2236  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2237  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2238  051B  07BE               	addwf	Write_USART_String@i,f
  2239  051C                     l1871:
  2240  051C  083E               	movf	Write_USART_String@i,w
  2241  051D  0774               	addwf	Write_USART_String@a,w
  2242  051E  00F6               	movwf	??_Write_USART_String
  2243  051F  3000               	movlw	0
  2244  0520  1803               	skipnc
  2245  0521  3001               	movlw	1
  2246  0522  0775               	addwf	Write_USART_String@a+1,w
  2247  0523  00F7               	movwf	??_Write_USART_String+1
  2248  0524  0876               	movf	??_Write_USART_String,w
  2249  0525  0084               	movwf	4
  2250  0526  1783               	bsf	3,7
  2251  0527  1C77               	btfss	??_Write_USART_String+1,0
  2252  0528  1383               	bcf	3,7
  2253  0529  0800               	movf	0,w
  2254  052A  1D03               	btfss	3,2
  2255  052B  2D2D               	goto	u1151
  2256  052C  2D2E               	goto	u1150
  2257  052D                     u1151:
  2258  052D  2D03               	goto	l1867
  2259  052E                     u1150:
  2260  052E                     l295:
  2261  052E  0008               	return
  2262  052F                     __end_of_Write_USART_String:
  2263                           
  2264                           	psect	text12
  2265  0662                     __ptext12:	
  2266 ;; *************** function _Write_USART *****************
  2267 ;; Defined at:
  2268 ;;		line 33 in file "USART.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  a               1    wreg     unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  a               1    3[COMMON] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         0       0       0       0       0
  2283 ;;      Locals:         1       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0
  2285 ;;      Totals:         1       0       0       0       0
  2286 ;;Total ram usage:        1 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;;		_Write_USART_String
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _Write_USART
  2299  0662                     _Write_USART:
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in _Write_USART: [wreg]
  2303                           ;Write_USART@a stored from wreg
  2304  0662  00F3               	movwf	Write_USART@a
  2305  0663                     l1717:
  2306  0663                     l286:	
  2307                           ;USART.c: 34:     while(!TRMT);
  2308                           
  2309  0663  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0664  1303               	bcf	3,6	;RP1=0, select bank1
  2311  0665  1C98               	btfss	24,1	;volatile
  2312  0666  2E68               	goto	u991
  2313  0667  2E69               	goto	u990
  2314  0668                     u991:
  2315  0668  2E63               	goto	l286
  2316  0669                     u990:
  2317  0669                     l1719:
  2318                           
  2319                           ;USART.c: 35:     TXREG=a;
  2320  0669  0873               	movf	Write_USART@a,w
  2321  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2322  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2323  066C  0099               	movwf	25	;volatile
  2324  066D                     l289:
  2325  066D  0008               	return
  2326  066E                     __end_of_Write_USART:
  2327                           
  2328                           	psect	text13
  2329  0034                     __ptext13:	
  2330 ;; *************** function _RTC_display *****************
  2331 ;; Defined at:
  2332 ;;		line 180 in file "main_prueba3_mini2.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0
  2348 ;;      Temps:          0       3       0       0       0
  2349 ;;      Totals:         0       3       0       0       0
  2350 ;;Total ram usage:        3 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    4
  2353 ;; This function calls:
  2354 ;;		_Lcd_Set_Cursor
  2355 ;;		_Lcd_Write_String
  2356 ;;		___awdiv
  2357 ;;		___awmod
  2358 ;;		_bcd_to_decimal
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _RTC_display
  2366  0034                     _RTC_display:
  2367  0034                     l1859:	
  2368                           ;incstack = 0
  2369                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2370                           
  2371                           
  2372                           ;main_prueba3_mini2.c: 182:     second = bcd_to_decimal(second);
  2373  0034  087A               	movf	_second,w
  2374  0035  120A  118A  25C8  120A  118A  	fcall	_bcd_to_decimal
  2375  003A  1283               	bcf	3,5	;RP0=0, select bank0
  2376  003B  1303               	bcf	3,6	;RP1=0, select bank0
  2377  003C  00C2               	movwf	??_RTC_display
  2378  003D  0842               	movf	??_RTC_display,w
  2379  003E  00FA               	movwf	_second
  2380                           
  2381                           ;main_prueba3_mini2.c: 183:     minute = bcd_to_decimal(minute);
  2382  003F  0879               	movf	_minute,w
  2383  0040  120A  118A  25C8  120A  118A  	fcall	_bcd_to_decimal
  2384  0045  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0046  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0047  00C2               	movwf	??_RTC_display
  2387  0048  0842               	movf	??_RTC_display,w
  2388  0049  00F9               	movwf	_minute
  2389                           
  2390                           ;main_prueba3_mini2.c: 184:     hour = bcd_to_decimal(hour);
  2391  004A  085E               	movf	_hour,w
  2392  004B  120A  118A  25C8  120A  118A  	fcall	_bcd_to_decimal
  2393  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0052  00C2               	movwf	??_RTC_display
  2396  0053  0842               	movf	??_RTC_display,w
  2397  0054  00DE               	movwf	_hour
  2398                           
  2399                           ;main_prueba3_mini2.c: 185:     m_day = bcd_to_decimal(m_day);
  2400  0055  085D               	movf	_m_day,w
  2401  0056  120A  118A  25C8  120A  118A  	fcall	_bcd_to_decimal
  2402  005B  1283               	bcf	3,5	;RP0=0, select bank0
  2403  005C  1303               	bcf	3,6	;RP1=0, select bank0
  2404  005D  00C2               	movwf	??_RTC_display
  2405  005E  0842               	movf	??_RTC_display,w
  2406  005F  00DD               	movwf	_m_day
  2407                           
  2408                           ;main_prueba3_mini2.c: 186:     month = bcd_to_decimal(month);
  2409  0060  085C               	movf	_month,w
  2410  0061  120A  118A  25C8  120A  118A  	fcall	_bcd_to_decimal
  2411  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0067  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0068  00C2               	movwf	??_RTC_display
  2414  0069  0842               	movf	??_RTC_display,w
  2415  006A  00DC               	movwf	_month
  2416                           
  2417                           ;main_prueba3_mini2.c: 187:     year = bcd_to_decimal(year);
  2418  006B  085B               	movf	_year,w
  2419  006C  120A  118A  25C8  120A  118A  	fcall	_bcd_to_decimal
  2420  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0073  00C2               	movwf	??_RTC_display
  2423  0074  0842               	movf	??_RTC_display,w
  2424  0075  00DB               	movwf	_year
  2425                           
  2426                           ;main_prueba3_mini2.c: 191:     Time[6] = hour / 10 + '0';
  2427  0076  300A               	movlw	10
  2428  0077  00F3               	movwf	___awdiv@divisor
  2429  0078  3000               	movlw	0
  2430  0079  00F4               	movwf	___awdiv@divisor+1
  2431  007A  085E               	movf	_hour,w
  2432  007B  00C2               	movwf	??_RTC_display
  2433  007C  01C3               	clrf	??_RTC_display+1
  2434  007D  0842               	movf	??_RTC_display,w
  2435  007E  00F5               	movwf	___awdiv@dividend
  2436  007F  0843               	movf	??_RTC_display+1,w
  2437  0080  00F6               	movwf	___awdiv@dividend+1
  2438  0081  120A  118A  228C  120A  118A  	fcall	___awdiv
  2439  0086  0873               	movf	?___awdiv,w
  2440  0087  3E30               	addlw	48
  2441  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2443  008A  00C4               	movwf	??_RTC_display+2
  2444  008B  0844               	movf	??_RTC_display+2,w
  2445  008C  00B5               	movwf	_Time+6
  2446                           
  2447                           ;main_prueba3_mini2.c: 192:     Time[7] = hour % 10 + '0';
  2448  008D  300A               	movlw	10
  2449  008E  00F3               	movwf	___awmod@divisor
  2450  008F  3000               	movlw	0
  2451  0090  00F4               	movwf	___awmod@divisor+1
  2452  0091  085E               	movf	_hour,w
  2453  0092  00C2               	movwf	??_RTC_display
  2454  0093  01C3               	clrf	??_RTC_display+1
  2455  0094  0842               	movf	??_RTC_display,w
  2456  0095  00F5               	movwf	___awmod@dividend
  2457  0096  0843               	movf	??_RTC_display+1,w
  2458  0097  00F6               	movwf	___awmod@dividend+1
  2459  0098  120A  118A  235D  120A  118A  	fcall	___awmod
  2460  009D  0873               	movf	?___awmod,w
  2461  009E  3E30               	addlw	48
  2462  009F  1283               	bcf	3,5	;RP0=0, select bank0
  2463  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2464  00A1  00C4               	movwf	??_RTC_display+2
  2465  00A2  0844               	movf	??_RTC_display+2,w
  2466  00A3  00B6               	movwf	_Time+7
  2467                           
  2468                           ;main_prueba3_mini2.c: 193:     Time[9] = minute / 10 + '0';
  2469  00A4  300A               	movlw	10
  2470  00A5  00F3               	movwf	___awdiv@divisor
  2471  00A6  3000               	movlw	0
  2472  00A7  00F4               	movwf	___awdiv@divisor+1
  2473  00A8  0879               	movf	_minute,w
  2474  00A9  00C2               	movwf	??_RTC_display
  2475  00AA  01C3               	clrf	??_RTC_display+1
  2476  00AB  0842               	movf	??_RTC_display,w
  2477  00AC  00F5               	movwf	___awdiv@dividend
  2478  00AD  0843               	movf	??_RTC_display+1,w
  2479  00AE  00F6               	movwf	___awdiv@dividend+1
  2480  00AF  120A  118A  228C  120A  118A  	fcall	___awdiv
  2481  00B4  0873               	movf	?___awdiv,w
  2482  00B5  3E30               	addlw	48
  2483  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2484  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2485  00B8  00C4               	movwf	??_RTC_display+2
  2486  00B9  0844               	movf	??_RTC_display+2,w
  2487  00BA  00B8               	movwf	_Time+9
  2488                           
  2489                           ;main_prueba3_mini2.c: 194:     Time[10] = minute % 10 + '0';
  2490  00BB  300A               	movlw	10
  2491  00BC  00F3               	movwf	___awmod@divisor
  2492  00BD  3000               	movlw	0
  2493  00BE  00F4               	movwf	___awmod@divisor+1
  2494  00BF  0879               	movf	_minute,w
  2495  00C0  00C2               	movwf	??_RTC_display
  2496  00C1  01C3               	clrf	??_RTC_display+1
  2497  00C2  0842               	movf	??_RTC_display,w
  2498  00C3  00F5               	movwf	___awmod@dividend
  2499  00C4  0843               	movf	??_RTC_display+1,w
  2500  00C5  00F6               	movwf	___awmod@dividend+1
  2501  00C6  120A  118A  235D  120A  118A  	fcall	___awmod
  2502  00CB  0873               	movf	?___awmod,w
  2503  00CC  3E30               	addlw	48
  2504  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2505  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2506  00CF  00C4               	movwf	??_RTC_display+2
  2507  00D0  0844               	movf	??_RTC_display+2,w
  2508  00D1  00B9               	movwf	_Time+10
  2509                           
  2510                           ;main_prueba3_mini2.c: 195:     Time[12] = second / 10 + '0';
  2511  00D2  300A               	movlw	10
  2512  00D3  00F3               	movwf	___awdiv@divisor
  2513  00D4  3000               	movlw	0
  2514  00D5  00F4               	movwf	___awdiv@divisor+1
  2515  00D6  087A               	movf	_second,w
  2516  00D7  00C2               	movwf	??_RTC_display
  2517  00D8  01C3               	clrf	??_RTC_display+1
  2518  00D9  0842               	movf	??_RTC_display,w
  2519  00DA  00F5               	movwf	___awdiv@dividend
  2520  00DB  0843               	movf	??_RTC_display+1,w
  2521  00DC  00F6               	movwf	___awdiv@dividend+1
  2522  00DD  120A  118A  228C  120A  118A  	fcall	___awdiv
  2523  00E2  0873               	movf	?___awdiv,w
  2524  00E3  3E30               	addlw	48
  2525  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2526  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2527  00E6  00C4               	movwf	??_RTC_display+2
  2528  00E7  0844               	movf	??_RTC_display+2,w
  2529  00E8  00BB               	movwf	_Time+12
  2530                           
  2531                           ;main_prueba3_mini2.c: 196:     Time[13] = second % 10 + '0';
  2532  00E9  300A               	movlw	10
  2533  00EA  00F3               	movwf	___awmod@divisor
  2534  00EB  3000               	movlw	0
  2535  00EC  00F4               	movwf	___awmod@divisor+1
  2536  00ED  087A               	movf	_second,w
  2537  00EE  00C2               	movwf	??_RTC_display
  2538  00EF  01C3               	clrf	??_RTC_display+1
  2539  00F0  0842               	movf	??_RTC_display,w
  2540  00F1  00F5               	movwf	___awmod@dividend
  2541  00F2  0843               	movf	??_RTC_display+1,w
  2542  00F3  00F6               	movwf	___awmod@dividend+1
  2543  00F4  120A  118A  235D  120A  118A  	fcall	___awmod
  2544  00F9  0873               	movf	?___awmod,w
  2545  00FA  3E30               	addlw	48
  2546  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2547  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2548  00FD  00C4               	movwf	??_RTC_display+2
  2549  00FE  0844               	movf	??_RTC_display+2,w
  2550  00FF  00BC               	movwf	_Time+13
  2551                           
  2552                           ;main_prueba3_mini2.c: 199:     Date[6] = m_day / 10 + '0';
  2553  0100  300A               	movlw	10
  2554  0101  00F3               	movwf	___awdiv@divisor
  2555  0102  3000               	movlw	0
  2556  0103  00F4               	movwf	___awdiv@divisor+1
  2557  0104  085D               	movf	_m_day,w
  2558  0105  00C2               	movwf	??_RTC_display
  2559  0106  01C3               	clrf	??_RTC_display+1
  2560  0107  0842               	movf	??_RTC_display,w
  2561  0108  00F5               	movwf	___awdiv@dividend
  2562  0109  0843               	movf	??_RTC_display+1,w
  2563  010A  00F6               	movwf	___awdiv@dividend+1
  2564  010B  120A  118A  228C  120A  118A  	fcall	___awdiv
  2565  0110  0873               	movf	?___awdiv,w
  2566  0111  3E30               	addlw	48
  2567  0112  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0113  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0114  00C4               	movwf	??_RTC_display+2
  2570  0115  0844               	movf	??_RTC_display+2,w
  2571  0116  00A6               	movwf	_Date+6
  2572                           
  2573                           ;main_prueba3_mini2.c: 200:     Date[7] = m_day % 10 + '0';
  2574  0117  300A               	movlw	10
  2575  0118  00F3               	movwf	___awmod@divisor
  2576  0119  3000               	movlw	0
  2577  011A  00F4               	movwf	___awmod@divisor+1
  2578  011B  085D               	movf	_m_day,w
  2579  011C  00C2               	movwf	??_RTC_display
  2580  011D  01C3               	clrf	??_RTC_display+1
  2581  011E  0842               	movf	??_RTC_display,w
  2582  011F  00F5               	movwf	___awmod@dividend
  2583  0120  0843               	movf	??_RTC_display+1,w
  2584  0121  00F6               	movwf	___awmod@dividend+1
  2585  0122  120A  118A  235D  120A  118A  	fcall	___awmod
  2586  0127  0873               	movf	?___awmod,w
  2587  0128  3E30               	addlw	48
  2588  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2589  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2590  012B  00C4               	movwf	??_RTC_display+2
  2591  012C  0844               	movf	??_RTC_display+2,w
  2592  012D  00A7               	movwf	_Date+7
  2593                           
  2594                           ;main_prueba3_mini2.c: 201:     Date[9] = month / 10 + '0';
  2595  012E  300A               	movlw	10
  2596  012F  00F3               	movwf	___awdiv@divisor
  2597  0130  3000               	movlw	0
  2598  0131  00F4               	movwf	___awdiv@divisor+1
  2599  0132  085C               	movf	_month,w
  2600  0133  00C2               	movwf	??_RTC_display
  2601  0134  01C3               	clrf	??_RTC_display+1
  2602  0135  0842               	movf	??_RTC_display,w
  2603  0136  00F5               	movwf	___awdiv@dividend
  2604  0137  0843               	movf	??_RTC_display+1,w
  2605  0138  00F6               	movwf	___awdiv@dividend+1
  2606  0139  120A  118A  228C  120A  118A  	fcall	___awdiv
  2607  013E  0873               	movf	?___awdiv,w
  2608  013F  3E30               	addlw	48
  2609  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0141  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0142  00C4               	movwf	??_RTC_display+2
  2612  0143  0844               	movf	??_RTC_display+2,w
  2613  0144  00A9               	movwf	_Date+9
  2614                           
  2615                           ;main_prueba3_mini2.c: 202:     Date[10] = month % 10 + '0';
  2616  0145  300A               	movlw	10
  2617  0146  00F3               	movwf	___awmod@divisor
  2618  0147  3000               	movlw	0
  2619  0148  00F4               	movwf	___awmod@divisor+1
  2620  0149  085C               	movf	_month,w
  2621  014A  00C2               	movwf	??_RTC_display
  2622  014B  01C3               	clrf	??_RTC_display+1
  2623  014C  0842               	movf	??_RTC_display,w
  2624  014D  00F5               	movwf	___awmod@dividend
  2625  014E  0843               	movf	??_RTC_display+1,w
  2626  014F  00F6               	movwf	___awmod@dividend+1
  2627  0150  120A  118A  235D  120A  118A  	fcall	___awmod
  2628  0155  0873               	movf	?___awmod,w
  2629  0156  3E30               	addlw	48
  2630  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0159  00C4               	movwf	??_RTC_display+2
  2633  015A  0844               	movf	??_RTC_display+2,w
  2634  015B  00AA               	movwf	_Date+10
  2635                           
  2636                           ;main_prueba3_mini2.c: 203:     Date[12] = year / 10 + '0';
  2637  015C  300A               	movlw	10
  2638  015D  00F3               	movwf	___awdiv@divisor
  2639  015E  3000               	movlw	0
  2640  015F  00F4               	movwf	___awdiv@divisor+1
  2641  0160  085B               	movf	_year,w
  2642  0161  00C2               	movwf	??_RTC_display
  2643  0162  01C3               	clrf	??_RTC_display+1
  2644  0163  0842               	movf	??_RTC_display,w
  2645  0164  00F5               	movwf	___awdiv@dividend
  2646  0165  0843               	movf	??_RTC_display+1,w
  2647  0166  00F6               	movwf	___awdiv@dividend+1
  2648  0167  120A  118A  228C  120A  118A  	fcall	___awdiv
  2649  016C  0873               	movf	?___awdiv,w
  2650  016D  3E30               	addlw	48
  2651  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2652  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0170  00C4               	movwf	??_RTC_display+2
  2654  0171  0844               	movf	??_RTC_display+2,w
  2655  0172  00AC               	movwf	_Date+12
  2656                           
  2657                           ;main_prueba3_mini2.c: 204:     Date[13] = year % 10 + '0';
  2658  0173  300A               	movlw	10
  2659  0174  00F3               	movwf	___awmod@divisor
  2660  0175  3000               	movlw	0
  2661  0176  00F4               	movwf	___awmod@divisor+1
  2662  0177  085B               	movf	_year,w
  2663  0178  00C2               	movwf	??_RTC_display
  2664  0179  01C3               	clrf	??_RTC_display+1
  2665  017A  0842               	movf	??_RTC_display,w
  2666  017B  00F5               	movwf	___awmod@dividend
  2667  017C  0843               	movf	??_RTC_display+1,w
  2668  017D  00F6               	movwf	___awmod@dividend+1
  2669  017E  120A  118A  235D  120A  118A  	fcall	___awmod
  2670  0183  0873               	movf	?___awmod,w
  2671  0184  3E30               	addlw	48
  2672  0185  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0186  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0187  00C4               	movwf	??_RTC_display+2
  2675  0188  0844               	movf	??_RTC_display+2,w
  2676  0189  00AD               	movwf	_Date+13
  2677                           
  2678                           ;main_prueba3_mini2.c: 207:     Lcd_Set_Cursor(1,1);
  2679  018A  01F7               	clrf	Lcd_Set_Cursor@b
  2680  018B  0AF7               	incf	Lcd_Set_Cursor@b,f
  2681  018C  3001               	movlw	1
  2682  018D  120A  118A  255F  120A  118A  	fcall	_Lcd_Set_Cursor
  2683  0192                     l1861:
  2684                           
  2685                           ;main_prueba3_mini2.c: 208:     Lcd_Write_String(Time);
  2686  0192  302F               	movlw	(low (_Time| 0))& (0+255)
  2687  0193  120A  118A  2585  120A  118A  	fcall	_Lcd_Write_String
  2688  0198                     l1863:
  2689                           
  2690                           ;main_prueba3_mini2.c: 209:     Lcd_Set_Cursor(2,1);
  2691  0198  01F7               	clrf	Lcd_Set_Cursor@b
  2692  0199  0AF7               	incf	Lcd_Set_Cursor@b,f
  2693  019A  3002               	movlw	2
  2694  019B  120A  118A  255F  120A  118A  	fcall	_Lcd_Set_Cursor
  2695                           
  2696                           ;main_prueba3_mini2.c: 210:     Lcd_Write_String(Date);
  2697  01A0  3020               	movlw	(low (_Date| 0))& (0+255)
  2698  01A1  120A  118A  2585  120A  118A  	fcall	_Lcd_Write_String
  2699  01A6                     l126:
  2700  01A6  0008               	return
  2701  01A7                     __end_of_RTC_display:
  2702                           
  2703                           	psect	text14
  2704  05C8                     __ptext14:	
  2705 ;; *************** function _bcd_to_decimal *****************
  2706 ;; Defined at:
  2707 ;;		line 171 in file "main_prueba3_mini2.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  number          1    wreg     unsigned char 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  number          1    7[COMMON] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      unsigned char 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       0       0       0       0
  2722 ;;      Locals:         1       0       0       0       0
  2723 ;;      Temps:          0       3       0       0       0
  2724 ;;      Totals:         1       3       0       0       0
  2725 ;;Total ram usage:        4 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    2
  2728 ;; This function calls:
  2729 ;;		___bmul
  2730 ;; This function is called by:
  2731 ;;		_RTC_display
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _bcd_to_decimal
  2737  05C8                     _bcd_to_decimal:
  2738                           
  2739                           ;incstack = 0
  2740                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2741                           ;bcd_to_decimal@number stored from wreg
  2742  05C8  00F7               	movwf	bcd_to_decimal@number
  2743  05C9                     l1721:
  2744                           
  2745                           ;main_prueba3_mini2.c: 172:   return((number >> 4) * 10 + (number & 0x0F));
  2746  05C9  300F               	movlw	15
  2747  05CA  0577               	andwf	bcd_to_decimal@number,w
  2748  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2749  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2750  05CD  00BE               	movwf	??_bcd_to_decimal
  2751  05CE  300A               	movlw	10
  2752  05CF  00BF               	movwf	??_bcd_to_decimal+1
  2753  05D0  083F               	movf	??_bcd_to_decimal+1,w
  2754  05D1  00F3               	movwf	___bmul@multiplicand
  2755  05D2  0877               	movf	bcd_to_decimal@number,w
  2756  05D3  00C0               	movwf	??_bcd_to_decimal+2
  2757  05D4  3004               	movlw	4
  2758  05D5                     u1005:
  2759  05D5  1003               	clrc
  2760  05D6  0CC0               	rrf	??_bcd_to_decimal+2,f
  2761  05D7  3EFF               	addlw	-1
  2762  05D8  1D03               	skipz
  2763  05D9  2DD5               	goto	u1005
  2764  05DA  0840               	movf	??_bcd_to_decimal+2,w
  2765  05DB  120A  118A  2614  120A  118A  	fcall	___bmul
  2766  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2767  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2768  05E2  073E               	addwf	??_bcd_to_decimal,w
  2769  05E3                     l120:
  2770  05E3  0008               	return
  2771  05E4                     __end_of_bcd_to_decimal:
  2772                           
  2773                           	psect	text15
  2774  0614                     __ptext15:	
  2775 ;; *************** function ___bmul *****************
  2776 ;; Defined at:
  2777 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  multiplier      1    wreg     unsigned char 
  2780 ;;  multiplicand    1    3[COMMON] unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  multiplier      1    6[COMMON] unsigned char 
  2783 ;;  product         1    5[COMMON] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      unsigned char 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         1       0       0       0       0
  2794 ;;      Locals:         2       0       0       0       0
  2795 ;;      Temps:          1       0       0       0       0
  2796 ;;      Totals:         4       0       0       0       0
  2797 ;;Total ram usage:        4 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_bcd_to_decimal
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function ___bmul
  2809  0614                     ___bmul:
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2813                           ;___bmul@multiplier stored from wreg
  2814  0614  00F6               	movwf	___bmul@multiplier
  2815  0615                     l1337:
  2816  0615  01F5               	clrf	___bmul@product
  2817  0616                     l1339:
  2818  0616  1C76               	btfss	___bmul@multiplier,0
  2819  0617  2E19               	goto	u531
  2820  0618  2E1A               	goto	u530
  2821  0619                     u531:
  2822  0619  2E1E               	goto	l1343
  2823  061A                     u530:
  2824  061A                     l1341:
  2825  061A  0873               	movf	___bmul@multiplicand,w
  2826  061B  00F4               	movwf	??___bmul
  2827  061C  0874               	movf	??___bmul,w
  2828  061D  07F5               	addwf	___bmul@product,f
  2829  061E                     l1343:
  2830  061E  1003               	clrc
  2831  061F  0DF3               	rlf	___bmul@multiplicand,f
  2832  0620                     l1345:
  2833  0620  1003               	clrc
  2834  0621  0CF6               	rrf	___bmul@multiplier,f
  2835  0622  0876               	movf	___bmul@multiplier,w
  2836  0623  1D03               	btfss	3,2
  2837  0624  2E26               	goto	u541
  2838  0625  2E27               	goto	u540
  2839  0626                     u541:
  2840  0626  2E16               	goto	l1339
  2841  0627                     u540:
  2842  0627                     l1347:
  2843  0627  0875               	movf	___bmul@product,w
  2844  0628                     l413:
  2845  0628  0008               	return
  2846  0629                     __end_of___bmul:
  2847                           
  2848                           	psect	text16
  2849  035D                     __ptext16:	
  2850 ;; *************** function ___awmod *****************
  2851 ;; Defined at:
  2852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  divisor         2    3[COMMON] int 
  2855 ;;  dividend        2    5[COMMON] int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  sign            1    1[BANK0 ] unsigned char 
  2858 ;;  counter         1    0[BANK0 ] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  2    3[COMMON] int 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         4       0       0       0       0
  2869 ;;      Locals:         0       2       0       0       0
  2870 ;;      Temps:          1       0       0       0       0
  2871 ;;      Totals:         5       2       0       0       0
  2872 ;;Total ram usage:        7 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_RTC_display
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function ___awmod
  2884  035D                     ___awmod:
  2885  035D                     l1757:	
  2886                           ;incstack = 0
  2887                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2888                           
  2889  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2890  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2891  035F  01BF               	clrf	___awmod@sign
  2892  0360                     l1759:
  2893  0360  1FF6               	btfss	___awmod@dividend+1,7
  2894  0361  2B63               	goto	u1051
  2895  0362  2B64               	goto	u1050
  2896  0363                     u1051:
  2897  0363  2B6B               	goto	l1765
  2898  0364                     u1050:
  2899  0364                     l1761:
  2900  0364  09F5               	comf	___awmod@dividend,f
  2901  0365  09F6               	comf	___awmod@dividend+1,f
  2902  0366  0AF5               	incf	___awmod@dividend,f
  2903  0367  1903               	skipnz
  2904  0368  0AF6               	incf	___awmod@dividend+1,f
  2905  0369                     l1763:
  2906  0369  01BF               	clrf	___awmod@sign
  2907  036A  0ABF               	incf	___awmod@sign,f
  2908  036B                     l1765:
  2909  036B  1FF4               	btfss	___awmod@divisor+1,7
  2910  036C  2B6E               	goto	u1061
  2911  036D  2B6F               	goto	u1060
  2912  036E                     u1061:
  2913  036E  2B74               	goto	l1769
  2914  036F                     u1060:
  2915  036F                     l1767:
  2916  036F  09F3               	comf	___awmod@divisor,f
  2917  0370  09F4               	comf	___awmod@divisor+1,f
  2918  0371  0AF3               	incf	___awmod@divisor,f
  2919  0372  1903               	skipnz
  2920  0373  0AF4               	incf	___awmod@divisor+1,f
  2921  0374                     l1769:
  2922  0374  0873               	movf	___awmod@divisor,w
  2923  0375  0474               	iorwf	___awmod@divisor+1,w
  2924  0376  1903               	btfsc	3,2
  2925  0377  2B79               	goto	u1071
  2926  0378  2B7A               	goto	u1070
  2927  0379                     u1071:
  2928  0379  2BA9               	goto	l1787
  2929  037A                     u1070:
  2930  037A                     l1771:
  2931  037A  01BE               	clrf	___awmod@counter
  2932  037B  0ABE               	incf	___awmod@counter,f
  2933  037C  2B88               	goto	l1777
  2934  037D                     l1773:
  2935  037D  3001               	movlw	1
  2936  037E                     u1085:
  2937  037E  1003               	clrc
  2938  037F  0DF3               	rlf	___awmod@divisor,f
  2939  0380  0DF4               	rlf	___awmod@divisor+1,f
  2940  0381  3EFF               	addlw	-1
  2941  0382  1D03               	skipz
  2942  0383  2B7E               	goto	u1085
  2943  0384                     l1775:
  2944  0384  3001               	movlw	1
  2945  0385  00F7               	movwf	??___awmod
  2946  0386  0877               	movf	??___awmod,w
  2947  0387  07BE               	addwf	___awmod@counter,f
  2948  0388                     l1777:
  2949  0388  1FF4               	btfss	___awmod@divisor+1,7
  2950  0389  2B8B               	goto	u1091
  2951  038A  2B8C               	goto	u1090
  2952  038B                     u1091:
  2953  038B  2B7D               	goto	l1773
  2954  038C                     u1090:
  2955  038C                     l1779:
  2956  038C  0874               	movf	___awmod@divisor+1,w
  2957  038D  0276               	subwf	___awmod@dividend+1,w
  2958  038E  1D03               	skipz
  2959  038F  2B92               	goto	u1105
  2960  0390  0873               	movf	___awmod@divisor,w
  2961  0391  0275               	subwf	___awmod@dividend,w
  2962  0392                     u1105:
  2963  0392  1C03               	skipc
  2964  0393  2B95               	goto	u1101
  2965  0394  2B96               	goto	u1100
  2966  0395                     u1101:
  2967  0395  2B9C               	goto	l1783
  2968  0396                     u1100:
  2969  0396                     l1781:
  2970  0396  0873               	movf	___awmod@divisor,w
  2971  0397  02F5               	subwf	___awmod@dividend,f
  2972  0398  0874               	movf	___awmod@divisor+1,w
  2973  0399  1C03               	skipc
  2974  039A  03F6               	decf	___awmod@dividend+1,f
  2975  039B  02F6               	subwf	___awmod@dividend+1,f
  2976  039C                     l1783:
  2977  039C  3001               	movlw	1
  2978  039D                     u1115:
  2979  039D  1003               	clrc
  2980  039E  0CF4               	rrf	___awmod@divisor+1,f
  2981  039F  0CF3               	rrf	___awmod@divisor,f
  2982  03A0  3EFF               	addlw	-1
  2983  03A1  1D03               	skipz
  2984  03A2  2B9D               	goto	u1115
  2985  03A3                     l1785:
  2986  03A3  3001               	movlw	1
  2987  03A4  02BE               	subwf	___awmod@counter,f
  2988  03A5  1D03               	btfss	3,2
  2989  03A6  2BA8               	goto	u1121
  2990  03A7  2BA9               	goto	u1120
  2991  03A8                     u1121:
  2992  03A8  2B8C               	goto	l1779
  2993  03A9                     u1120:
  2994  03A9                     l1787:
  2995  03A9  083F               	movf	___awmod@sign,w
  2996  03AA  1903               	btfsc	3,2
  2997  03AB  2BAD               	goto	u1131
  2998  03AC  2BAE               	goto	u1130
  2999  03AD                     u1131:
  3000  03AD  2BB3               	goto	l1791
  3001  03AE                     u1130:
  3002  03AE                     l1789:
  3003  03AE  09F5               	comf	___awmod@dividend,f
  3004  03AF  09F6               	comf	___awmod@dividend+1,f
  3005  03B0  0AF5               	incf	___awmod@dividend,f
  3006  03B1  1903               	skipnz
  3007  03B2  0AF6               	incf	___awmod@dividend+1,f
  3008  03B3                     l1791:
  3009  03B3  0876               	movf	___awmod@dividend+1,w
  3010  03B4  00F4               	movwf	?___awmod+1
  3011  03B5  0875               	movf	___awmod@dividend,w
  3012  03B6  00F3               	movwf	?___awmod
  3013  03B7                     l553:
  3014  03B7  0008               	return
  3015  03B8                     __end_of___awmod:
  3016                           
  3017                           	psect	text17
  3018  028C                     __ptext17:	
  3019 ;; *************** function ___awdiv *****************
  3020 ;; Defined at:
  3021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  divisor         2    3[COMMON] int 
  3024 ;;  dividend        2    5[COMMON] int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  quotient        2    2[BANK0 ] int 
  3027 ;;  sign            1    1[BANK0 ] unsigned char 
  3028 ;;  counter         1    0[BANK0 ] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2    3[COMMON] int 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         4       0       0       0       0
  3039 ;;      Locals:         0       4       0       0       0
  3040 ;;      Temps:          1       0       0       0       0
  3041 ;;      Totals:         5       4       0       0       0
  3042 ;;Total ram usage:        9 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_RTC_display
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function ___awdiv
  3054  028C                     ___awdiv:
  3055  028C                     l1437:	
  3056                           ;incstack = 0
  3057                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3058                           
  3059  028C  1283               	bcf	3,5	;RP0=0, select bank0
  3060  028D  1303               	bcf	3,6	;RP1=0, select bank0
  3061  028E  01BF               	clrf	___awdiv@sign
  3062  028F                     l1439:
  3063  028F  1FF4               	btfss	___awdiv@divisor+1,7
  3064  0290  2A92               	goto	u681
  3065  0291  2A93               	goto	u680
  3066  0292                     u681:
  3067  0292  2A9A               	goto	l1445
  3068  0293                     u680:
  3069  0293                     l1441:
  3070  0293  09F3               	comf	___awdiv@divisor,f
  3071  0294  09F4               	comf	___awdiv@divisor+1,f
  3072  0295  0AF3               	incf	___awdiv@divisor,f
  3073  0296  1903               	skipnz
  3074  0297  0AF4               	incf	___awdiv@divisor+1,f
  3075  0298                     l1443:
  3076  0298  01BF               	clrf	___awdiv@sign
  3077  0299  0ABF               	incf	___awdiv@sign,f
  3078  029A                     l1445:
  3079  029A  1FF6               	btfss	___awdiv@dividend+1,7
  3080  029B  2A9D               	goto	u691
  3081  029C  2A9E               	goto	u690
  3082  029D                     u691:
  3083  029D  2AA7               	goto	l1451
  3084  029E                     u690:
  3085  029E                     l1447:
  3086  029E  09F5               	comf	___awdiv@dividend,f
  3087  029F  09F6               	comf	___awdiv@dividend+1,f
  3088  02A0  0AF5               	incf	___awdiv@dividend,f
  3089  02A1  1903               	skipnz
  3090  02A2  0AF6               	incf	___awdiv@dividend+1,f
  3091  02A3                     l1449:
  3092  02A3  3001               	movlw	1
  3093  02A4  00F7               	movwf	??___awdiv
  3094  02A5  0877               	movf	??___awdiv,w
  3095  02A6  06BF               	xorwf	___awdiv@sign,f
  3096  02A7                     l1451:
  3097  02A7  01C0               	clrf	___awdiv@quotient
  3098  02A8  01C1               	clrf	___awdiv@quotient+1
  3099  02A9                     l1453:
  3100  02A9  0873               	movf	___awdiv@divisor,w
  3101  02AA  0474               	iorwf	___awdiv@divisor+1,w
  3102  02AB  1903               	btfsc	3,2
  3103  02AC  2AAE               	goto	u701
  3104  02AD  2AAF               	goto	u700
  3105  02AE                     u701:
  3106  02AE  2AE6               	goto	l1473
  3107  02AF                     u700:
  3108  02AF                     l1455:
  3109  02AF  01BE               	clrf	___awdiv@counter
  3110  02B0  0ABE               	incf	___awdiv@counter,f
  3111  02B1  2ABD               	goto	l1461
  3112  02B2                     l1457:
  3113  02B2  3001               	movlw	1
  3114  02B3                     u715:
  3115  02B3  1003               	clrc
  3116  02B4  0DF3               	rlf	___awdiv@divisor,f
  3117  02B5  0DF4               	rlf	___awdiv@divisor+1,f
  3118  02B6  3EFF               	addlw	-1
  3119  02B7  1D03               	skipz
  3120  02B8  2AB3               	goto	u715
  3121  02B9                     l1459:
  3122  02B9  3001               	movlw	1
  3123  02BA  00F7               	movwf	??___awdiv
  3124  02BB  0877               	movf	??___awdiv,w
  3125  02BC  07BE               	addwf	___awdiv@counter,f
  3126  02BD                     l1461:
  3127  02BD  1FF4               	btfss	___awdiv@divisor+1,7
  3128  02BE  2AC0               	goto	u721
  3129  02BF  2AC1               	goto	u720
  3130  02C0                     u721:
  3131  02C0  2AB2               	goto	l1457
  3132  02C1                     u720:
  3133  02C1                     l1463:
  3134  02C1  3001               	movlw	1
  3135  02C2                     u735:
  3136  02C2  1003               	clrc
  3137  02C3  0DC0               	rlf	___awdiv@quotient,f
  3138  02C4  0DC1               	rlf	___awdiv@quotient+1,f
  3139  02C5  3EFF               	addlw	-1
  3140  02C6  1D03               	skipz
  3141  02C7  2AC2               	goto	u735
  3142  02C8  0874               	movf	___awdiv@divisor+1,w
  3143  02C9  0276               	subwf	___awdiv@dividend+1,w
  3144  02CA  1D03               	skipz
  3145  02CB  2ACE               	goto	u745
  3146  02CC  0873               	movf	___awdiv@divisor,w
  3147  02CD  0275               	subwf	___awdiv@dividend,w
  3148  02CE                     u745:
  3149  02CE  1C03               	skipc
  3150  02CF  2AD1               	goto	u741
  3151  02D0  2AD2               	goto	u740
  3152  02D1                     u741:
  3153  02D1  2AD9               	goto	l1469
  3154  02D2                     u740:
  3155  02D2                     l1465:
  3156  02D2  0873               	movf	___awdiv@divisor,w
  3157  02D3  02F5               	subwf	___awdiv@dividend,f
  3158  02D4  0874               	movf	___awdiv@divisor+1,w
  3159  02D5  1C03               	skipc
  3160  02D6  03F6               	decf	___awdiv@dividend+1,f
  3161  02D7  02F6               	subwf	___awdiv@dividend+1,f
  3162  02D8                     l1467:
  3163  02D8  1440               	bsf	___awdiv@quotient,0
  3164  02D9                     l1469:
  3165  02D9  3001               	movlw	1
  3166  02DA                     u755:
  3167  02DA  1003               	clrc
  3168  02DB  0CF4               	rrf	___awdiv@divisor+1,f
  3169  02DC  0CF3               	rrf	___awdiv@divisor,f
  3170  02DD  3EFF               	addlw	-1
  3171  02DE  1D03               	skipz
  3172  02DF  2ADA               	goto	u755
  3173  02E0                     l1471:
  3174  02E0  3001               	movlw	1
  3175  02E1  02BE               	subwf	___awdiv@counter,f
  3176  02E2  1D03               	btfss	3,2
  3177  02E3  2AE5               	goto	u761
  3178  02E4  2AE6               	goto	u760
  3179  02E5                     u761:
  3180  02E5  2AC1               	goto	l1463
  3181  02E6                     u760:
  3182  02E6                     l1473:
  3183  02E6  083F               	movf	___awdiv@sign,w
  3184  02E7  1903               	btfsc	3,2
  3185  02E8  2AEA               	goto	u771
  3186  02E9  2AEB               	goto	u770
  3187  02EA                     u771:
  3188  02EA  2AF0               	goto	l1477
  3189  02EB                     u770:
  3190  02EB                     l1475:
  3191  02EB  09C0               	comf	___awdiv@quotient,f
  3192  02EC  09C1               	comf	___awdiv@quotient+1,f
  3193  02ED  0AC0               	incf	___awdiv@quotient,f
  3194  02EE  1903               	skipnz
  3195  02EF  0AC1               	incf	___awdiv@quotient+1,f
  3196  02F0                     l1477:
  3197  02F0  0841               	movf	___awdiv@quotient+1,w
  3198  02F1  00F4               	movwf	?___awdiv+1
  3199  02F2  0840               	movf	___awdiv@quotient,w
  3200  02F3  00F3               	movwf	?___awdiv
  3201  02F4                     l540:
  3202  02F4  0008               	return
  3203  02F5                     __end_of___awdiv:
  3204                           
  3205                           	psect	text18
  3206  0585                     __ptext18:	
  3207 ;; *************** function _Lcd_Write_String *****************
  3208 ;; Defined at:
  3209 ;;		line 71 in file "LCD.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  a               1    wreg     PTR unsigned char 
  3212 ;;		 -> Date(15), Time(15), 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3215 ;;		 -> Date(15), Time(15), 
  3216 ;;  i               2    0[BANK0 ] int 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         0       0       0       0       0
  3227 ;;      Locals:         0       3       0       0       0
  3228 ;;      Temps:          1       0       0       0       0
  3229 ;;      Totals:         1       3       0       0       0
  3230 ;;Total ram usage:        4 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    3
  3233 ;; This function calls:
  3234 ;;		_Lcd_Write_Char
  3235 ;; This function is called by:
  3236 ;;		_RTC_display
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _Lcd_Write_String
  3242  0585                     _Lcd_Write_String:
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3246                           ;Lcd_Write_String@a stored from wreg
  3247  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3249  0587  00C0               	movwf	Lcd_Write_String@a
  3250  0588                     l1737:
  3251                           
  3252                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  3253  0588  01BE               	clrf	Lcd_Write_String@i
  3254  0589  01BF               	clrf	Lcd_Write_String@i+1
  3255  058A  2D9E               	goto	l1743
  3256  058B                     l1739:
  3257                           
  3258                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  3259  058B  083E               	movf	Lcd_Write_String@i,w
  3260  058C  0740               	addwf	Lcd_Write_String@a,w
  3261  058D  00F6               	movwf	??_Lcd_Write_String
  3262  058E  0876               	movf	??_Lcd_Write_String,w
  3263  058F  0084               	movwf	4
  3264  0590  0800               	movf	0,w
  3265  0591  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_Char
  3266  0596                     l1741:
  3267  0596  3001               	movlw	1
  3268  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0599  07BE               	addwf	Lcd_Write_String@i,f
  3271  059A  1803               	skipnc
  3272  059B  0ABF               	incf	Lcd_Write_String@i+1,f
  3273  059C  3000               	movlw	0
  3274  059D  07BF               	addwf	Lcd_Write_String@i+1,f
  3275  059E                     l1743:
  3276  059E  083E               	movf	Lcd_Write_String@i,w
  3277  059F  0740               	addwf	Lcd_Write_String@a,w
  3278  05A0  00F6               	movwf	??_Lcd_Write_String
  3279  05A1  0876               	movf	??_Lcd_Write_String,w
  3280  05A2  0084               	movwf	4
  3281  05A3  1383               	bcf	3,7	;select IRP bank0
  3282  05A4  0800               	movf	0,w
  3283  05A5  1D03               	btfss	3,2
  3284  05A6  2DA8               	goto	u1031
  3285  05A7  2DA9               	goto	u1030
  3286  05A8                     u1031:
  3287  05A8  2D8B               	goto	l1739
  3288  05A9                     u1030:
  3289  05A9                     l226:
  3290  05A9  0008               	return
  3291  05AA                     __end_of_Lcd_Write_String:
  3292                           
  3293                           	psect	text19
  3294  05FE                     __ptext19:	
  3295 ;; *************** function _Lcd_Write_Char *****************
  3296 ;; Defined at:
  3297 ;;		line 62 in file "LCD.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  a               1    wreg     unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  a               1    5[COMMON] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0, pclath, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         1       0       0       0       0
  3313 ;;      Temps:          1       0       0       0       0
  3314 ;;      Totals:         2       0       0       0       0
  3315 ;;Total ram usage:        2 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    2
  3318 ;; This function calls:
  3319 ;;		_Lcd_Port
  3320 ;; This function is called by:
  3321 ;;		_Lcd_Write_String
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _Lcd_Write_Char
  3327  05FE                     _Lcd_Write_Char:
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3331                           ;Lcd_Write_Char@a stored from wreg
  3332  05FE  00F5               	movwf	Lcd_Write_Char@a
  3333  05FF                     l1671:
  3334                           
  3335                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  3336  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0600  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0601  1409               	bsf	9,0	;volatile
  3339  0602                     l1673:
  3340                           
  3341                           ;LCD.c: 64:    Lcd_Port(a);
  3342  0602  0875               	movf	Lcd_Write_Char@a,w
  3343  0603  120A  118A  26A7  120A  118A  	fcall	_Lcd_Port
  3344  0608                     l1675:
  3345                           
  3346                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  3347  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0609  1303               	bcf	3,6	;RP1=0, select bank0
  3349  060A  1509               	bsf	9,2	;volatile
  3350  060B                     l1677:
  3351                           
  3352                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3353  060B  301A               	movlw	26
  3354  060C  00F4               	movwf	??_Lcd_Write_Char
  3355  060D                     u1187:
  3356  060D  0BF4               	decfsz	??_Lcd_Write_Char,f
  3357  060E  2E0D               	goto	u1187
  3358  060F  0000               	nop
  3359  0610                     l1679:
  3360                           
  3361                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  3362  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0612  1109               	bcf	9,2	;volatile
  3365  0613                     l220:
  3366  0613  0008               	return
  3367  0614                     __end_of_Lcd_Write_Char:
  3368                           
  3369                           	psect	text20
  3370  055F                     __ptext20:	
  3371 ;; *************** function _Lcd_Set_Cursor *****************
  3372 ;; Defined at:
  3373 ;;		line 49 in file "LCD.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  a               1    wreg     unsigned char 
  3376 ;;  b               1    7[COMMON] unsigned char 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  a               1    1[BANK0 ] unsigned char 
  3379 ;;  temp            1    2[BANK0 ] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, pclath, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3389 ;;      Params:         1       0       0       0       0
  3390 ;;      Locals:         0       2       0       0       0
  3391 ;;      Temps:          0       1       0       0       0
  3392 ;;      Totals:         1       3       0       0       0
  3393 ;;Total ram usage:        4 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		_Lcd_Cmd
  3398 ;; This function is called by:
  3399 ;;		_RTC_display
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _Lcd_Set_Cursor
  3405  055F                     _Lcd_Set_Cursor:
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3409                           ;Lcd_Set_Cursor@a stored from wreg
  3410  055F  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0560  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0561  00BF               	movwf	Lcd_Set_Cursor@a
  3413  0562                     l1725:
  3414                           
  3415                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  3416  0562  033F               	decf	Lcd_Set_Cursor@a,w
  3417  0563  1D03               	btfss	3,2
  3418  0564  2D66               	goto	u1011
  3419  0565  2D67               	goto	u1010
  3420  0566                     u1011:
  3421  0566  2D73               	goto	l1731
  3422  0567                     u1010:
  3423  0567                     l1727:
  3424                           
  3425                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  3426  0567  0877               	movf	Lcd_Set_Cursor@b,w
  3427  0568  3E7F               	addlw	127
  3428  0569  00BE               	movwf	??_Lcd_Set_Cursor
  3429  056A  083E               	movf	??_Lcd_Set_Cursor,w
  3430  056B  00C0               	movwf	Lcd_Set_Cursor@temp
  3431  056C                     l1729:
  3432                           
  3433                           ;LCD.c: 53:         Lcd_Cmd(temp);
  3434  056C  0840               	movf	Lcd_Set_Cursor@temp,w
  3435  056D  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3436                           
  3437                           ;LCD.c: 54:  }
  3438  0572  2D84               	goto	l217
  3439  0573                     l1731:
  3440  0573  3002               	movlw	2
  3441  0574  063F               	xorwf	Lcd_Set_Cursor@a,w
  3442  0575  1D03               	btfss	3,2
  3443  0576  2D78               	goto	u1021
  3444  0577  2D79               	goto	u1020
  3445  0578                     u1021:
  3446  0578  2D84               	goto	l217
  3447  0579                     u1020:
  3448  0579                     l1733:
  3449                           
  3450                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  3451  0579  0877               	movf	Lcd_Set_Cursor@b,w
  3452  057A  3EBF               	addlw	191
  3453  057B  00BE               	movwf	??_Lcd_Set_Cursor
  3454  057C  083E               	movf	??_Lcd_Set_Cursor,w
  3455  057D  00C0               	movwf	Lcd_Set_Cursor@temp
  3456  057E                     l1735:
  3457                           
  3458                           ;LCD.c: 57:   Lcd_Cmd(temp);
  3459  057E  0840               	movf	Lcd_Set_Cursor@temp,w
  3460  057F  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3461  0584                     l217:
  3462  0584  0008               	return
  3463  0585                     __end_of_Lcd_Set_Cursor:
  3464                           
  3465                           	psect	text21
  3466  0412                     __ptext21:	
  3467 ;; *************** function _Lcd_Init *****************
  3468 ;; Defined at:
  3469 ;;		line 15 in file "LCD.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0, pclath, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          0       2       0       0       0
  3486 ;;      Totals:         0       2       0       0       0
  3487 ;;Total ram usage:        2 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    3
  3490 ;; This function calls:
  3491 ;;		_Lcd_Cmd
  3492 ;;		_Lcd_Port
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _Lcd_Init
  3500  0412                     _Lcd_Init:
  3501  0412                     l1825:	
  3502                           ;incstack = 0
  3503                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3504                           
  3505                           
  3506                           ;LCD.c: 16:   Lcd_Port(0x00);
  3507  0412  3000               	movlw	0
  3508  0413  120A  118A  26A7  120A  118A  	fcall	_Lcd_Port
  3509  0418                     l1827:
  3510                           
  3511                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3512  0418  3034               	movlw	52
  3513  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3514  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3515  041B  00BF               	movwf	??_Lcd_Init+1
  3516  041C  30F1               	movlw	241
  3517  041D  00BE               	movwf	??_Lcd_Init
  3518  041E                     u1197:
  3519  041E  0BBE               	decfsz	??_Lcd_Init,f
  3520  041F  2C1E               	goto	u1197
  3521  0420  0BBF               	decfsz	??_Lcd_Init+1,f
  3522  0421  2C1E               	goto	u1197
  3523  0422                     l1829:
  3524                           
  3525                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  3526  0422  3030               	movlw	48
  3527  0423  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3528                           
  3529                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3530  0428  300D               	movlw	13
  3531  0429  1283               	bcf	3,5	;RP0=0, select bank0
  3532  042A  1303               	bcf	3,6	;RP1=0, select bank0
  3533  042B  00BF               	movwf	??_Lcd_Init+1
  3534  042C  30FB               	movlw	251
  3535  042D  00BE               	movwf	??_Lcd_Init
  3536  042E                     u1207:
  3537  042E  0BBE               	decfsz	??_Lcd_Init,f
  3538  042F  2C2E               	goto	u1207
  3539  0430  0BBF               	decfsz	??_Lcd_Init+1,f
  3540  0431  2C2E               	goto	u1207
  3541  0432                     l1831:
  3542                           
  3543                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  3544  0432  3030               	movlw	48
  3545  0433  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3546  0438                     l1833:
  3547                           
  3548                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3549  0438  301D               	movlw	29
  3550  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3551  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3552  043B  00BF               	movwf	??_Lcd_Init+1
  3553  043C  3090               	movlw	144
  3554  043D  00BE               	movwf	??_Lcd_Init
  3555  043E                     u1217:
  3556  043E  0BBE               	decfsz	??_Lcd_Init,f
  3557  043F  2C3E               	goto	u1217
  3558  0440  0BBF               	decfsz	??_Lcd_Init+1,f
  3559  0441  2C3E               	goto	u1217
  3560  0442  0000               	nop
  3561                           
  3562                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  3563  0443  3030               	movlw	48
  3564  0444  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3565                           
  3566                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  3567  0449  3038               	movlw	56
  3568  044A  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3569                           
  3570                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  3571  044F  300C               	movlw	12
  3572  0450  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3573                           
  3574                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  3575  0455  3001               	movlw	1
  3576  0456  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3577                           
  3578                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  3579  045B  3006               	movlw	6
  3580  045C  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3581  0461                     l202:
  3582  0461  0008               	return
  3583  0462                     __end_of_Lcd_Init:
  3584                           
  3585                           	psect	text22
  3586  063C                     __ptext22:	
  3587 ;; *************** function _Lcd_Clear *****************
  3588 ;; Defined at:
  3589 ;;		line 43 in file "LCD.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    3
  3610 ;; This function calls:
  3611 ;;		_Lcd_Cmd
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function _Lcd_Clear
  3619  063C                     _Lcd_Clear:
  3620  063C                     l1835:	
  3621                           ;incstack = 0
  3622                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3623                           
  3624                           
  3625                           ;LCD.c: 44:  Lcd_Cmd(0);
  3626  063C  3000               	movlw	0
  3627  063D  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3628                           
  3629                           ;LCD.c: 45:  Lcd_Cmd(1);
  3630  0642  3001               	movlw	1
  3631  0643  120A  118A  25E4  120A  118A  	fcall	_Lcd_Cmd
  3632  0648                     l211:
  3633  0648  0008               	return
  3634  0649                     __end_of_Lcd_Clear:
  3635                           
  3636                           	psect	text23
  3637  05E4                     __ptext23:	
  3638 ;; *************** function _Lcd_Cmd *****************
  3639 ;; Defined at:
  3640 ;;		line 34 in file "LCD.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  a               1    wreg     unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  a               1    6[COMMON] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, pclath, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         1       0       0       0       0
  3656 ;;      Temps:          2       0       0       0       0
  3657 ;;      Totals:         3       0       0       0       0
  3658 ;;Total ram usage:        3 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    2
  3661 ;; This function calls:
  3662 ;;		_Lcd_Port
  3663 ;; This function is called by:
  3664 ;;		_Lcd_Init
  3665 ;;		_Lcd_Clear
  3666 ;;		_Lcd_Set_Cursor
  3667 ;;		_Lcd_Shift_Right
  3668 ;;		_Lcd_Shift_Left
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function _Lcd_Cmd
  3674  05E4                     _Lcd_Cmd:
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3678                           ;Lcd_Cmd@a stored from wreg
  3679  05E4  00F6               	movwf	Lcd_Cmd@a
  3680  05E5                     l1661:
  3681                           
  3682                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  3683  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3684  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3685  05E7  1009               	bcf	9,0	;volatile
  3686  05E8                     l1663:
  3687                           
  3688                           ;LCD.c: 36:  Lcd_Port(a);
  3689  05E8  0876               	movf	Lcd_Cmd@a,w
  3690  05E9  120A  118A  26A7  120A  118A  	fcall	_Lcd_Port
  3691  05EE                     l1665:
  3692                           
  3693                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  3694  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3695  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3696  05F0  1509               	bsf	9,2	;volatile
  3697  05F1                     l1667:
  3698                           
  3699                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3700  05F1  300B               	movlw	11
  3701  05F2  00F5               	movwf	??_Lcd_Cmd+1
  3702  05F3  3062               	movlw	98
  3703  05F4  00F4               	movwf	??_Lcd_Cmd
  3704  05F5                     u1227:
  3705  05F5  0BF4               	decfsz	??_Lcd_Cmd,f
  3706  05F6  2DF5               	goto	u1227
  3707  05F7  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3708  05F8  2DF5               	goto	u1227
  3709  05F9  0000               	nop
  3710  05FA                     l1669:
  3711                           
  3712                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  3713  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3714  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3715  05FC  1109               	bcf	9,2	;volatile
  3716  05FD                     l208:
  3717  05FD  0008               	return
  3718  05FE                     __end_of_Lcd_Cmd:
  3719                           
  3720                           	psect	text24
  3721  06A7                     __ptext24:	
  3722 ;; *************** function _Lcd_Port *****************
  3723 ;; Defined at:
  3724 ;;		line 30 in file "LCD.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  a               1    wreg     unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  a               1    3[COMMON] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         1       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0
  3741 ;;      Totals:         1       0       0       0       0
  3742 ;;Total ram usage:        1 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_Lcd_Init
  3749 ;;		_Lcd_Cmd
  3750 ;;		_Lcd_Write_Char
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _Lcd_Port
  3756  06A7                     _Lcd_Port:
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _Lcd_Port: [wreg]
  3760                           ;Lcd_Port@a stored from wreg
  3761  06A7  00F3               	movwf	Lcd_Port@a
  3762  06A8                     l1655:
  3763                           
  3764                           ;LCD.c: 31:     PORTD = a;
  3765  06A8  0873               	movf	Lcd_Port@a,w
  3766  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  3767  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  3768  06AB  0088               	movwf	8	;volatile
  3769  06AC                     l205:
  3770  06AC  0008               	return
  3771  06AD                     __end_of_Lcd_Port:
  3772                           
  3773                           	psect	text25
  3774  068A                     __ptext25:	
  3775 ;; *************** function _I2C_Master_RepeatedStart *****************
  3776 ;; Defined at:
  3777 ;;		line 64 in file "I2C.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0
  3794 ;;      Totals:         0       0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    2
  3798 ;; This function calls:
  3799 ;;		_I2C_Master_Wait
  3800 ;; This function is called by:
  3801 ;;		_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function _I2C_Master_RepeatedStart
  3807  068A                     _I2C_Master_RepeatedStart:
  3808  068A                     l1839:	
  3809                           ;incstack = 0
  3810                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3811                           
  3812                           
  3813                           ;I2C.c: 66:     I2C_Master_Wait();
  3814  068A  120A  118A  2649  120A  118A  	fcall	_I2C_Master_Wait
  3815  068F                     l1841:
  3816                           
  3817                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3818  068F  1683               	bsf	3,5	;RP0=1, select bank1
  3819  0690  1303               	bcf	3,6	;RP1=0, select bank1
  3820  0691  1491               	bsf	17,1	;volatile
  3821  0692                     l173:
  3822  0692  0008               	return
  3823  0693                     __end_of_I2C_Master_RepeatedStart:
  3824                           
  3825                           	psect	text26
  3826  052F                     __ptext26:	
  3827 ;; *************** function _I2C_Master_Read *****************
  3828 ;; Defined at:
  3829 ;;		line 94 in file "I2C.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  a               2    3[COMMON] unsigned short 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  temp            2    0[BANK0 ] unsigned short 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2    3[COMMON] unsigned short 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         2       0       0       0       0
  3844 ;;      Locals:         0       2       0       0       0
  3845 ;;      Temps:          2       0       0       0       0
  3846 ;;      Totals:         4       2       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    2
  3850 ;; This function calls:
  3851 ;;		_I2C_Master_Wait
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _I2C_Master_Read
  3859  052F                     _I2C_Master_Read:
  3860  052F                     l1843:	
  3861                           ;incstack = 0
  3862                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3863                           
  3864                           
  3865                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3866  052F  120A  118A  2649  120A  118A  	fcall	_I2C_Master_Wait
  3867  0534                     l1845:
  3868                           
  3869                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3870  0534  1683               	bsf	3,5	;RP0=1, select bank1
  3871  0535  1303               	bcf	3,6	;RP1=0, select bank1
  3872  0536  1591               	bsf	17,3	;volatile
  3873                           
  3874                           ;I2C.c: 99:     I2C_Master_Wait();
  3875  0537  120A  118A  2649  120A  118A  	fcall	_I2C_Master_Wait
  3876  053C                     l1847:
  3877                           
  3878                           ;I2C.c: 100:     temp = SSPBUF;
  3879  053C  1283               	bcf	3,5	;RP0=0, select bank0
  3880  053D  1303               	bcf	3,6	;RP1=0, select bank0
  3881  053E  0813               	movf	19,w	;volatile
  3882  053F  00F5               	movwf	??_I2C_Master_Read
  3883  0540  01F6               	clrf	??_I2C_Master_Read+1
  3884  0541  0875               	movf	??_I2C_Master_Read,w
  3885  0542  00BE               	movwf	I2C_Master_Read@temp
  3886  0543  0876               	movf	??_I2C_Master_Read+1,w
  3887  0544  00BF               	movwf	I2C_Master_Read@temp+1
  3888  0545                     l1849:
  3889                           
  3890                           ;I2C.c: 101:     I2C_Master_Wait();
  3891  0545  120A  118A  2649  120A  118A  	fcall	_I2C_Master_Wait
  3892  054A                     l1851:
  3893                           
  3894                           ;I2C.c: 102:     if(a == 1){
  3895  054A  0373               	decf	I2C_Master_Read@a,w
  3896  054B  0474               	iorwf	I2C_Master_Read@a+1,w
  3897  054C  1D03               	btfss	3,2
  3898  054D  2D4F               	goto	u1141
  3899  054E  2D50               	goto	u1140
  3900  054F                     u1141:
  3901  054F  2D54               	goto	l182
  3902  0550                     u1140:
  3903  0550                     l1853:
  3904                           
  3905                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3906  0550  1683               	bsf	3,5	;RP0=1, select bank1
  3907  0551  1303               	bcf	3,6	;RP1=0, select bank1
  3908  0552  1291               	bcf	17,5	;volatile
  3909                           
  3910                           ;I2C.c: 104:     }else{
  3911  0553  2D57               	goto	l183
  3912  0554                     l182:
  3913                           
  3914                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3915  0554  1683               	bsf	3,5	;RP0=1, select bank1
  3916  0555  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0556  1691               	bsf	17,5	;volatile
  3918  0557                     l183:	
  3919                           ;I2C.c: 106:     }
  3920                           
  3921                           
  3922                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3923  0557  1611               	bsf	17,4	;volatile
  3924  0558                     l1855:
  3925                           
  3926                           ;I2C.c: 108:     return temp;
  3927  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3928  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3929  055A  083F               	movf	I2C_Master_Read@temp+1,w
  3930  055B  00F4               	movwf	?_I2C_Master_Read+1
  3931  055C  083E               	movf	I2C_Master_Read@temp,w
  3932  055D  00F3               	movwf	?_I2C_Master_Read
  3933  055E                     l184:
  3934  055E  0008               	return
  3935  055F                     __end_of_I2C_Master_Read:
  3936                           
  3937                           	psect	text27
  3938  0649                     __ptext27:	
  3939 ;; *************** function _I2C_Master_Wait *****************
  3940 ;; Defined at:
  3941 ;;		line 48 in file "I2C.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0
  3958 ;;      Totals:         0       0       0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    1
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_I2C_Master_Start
  3966 ;;		_I2C_Master_RepeatedStart
  3967 ;;		_I2C_Master_Stop
  3968 ;;		_I2C_Master_Write
  3969 ;;		_I2C_Master_Read
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _I2C_Master_Wait
  3975  0649                     _I2C_Master_Wait:
  3976  0649                     l1657:	
  3977                           ;incstack = 0
  3978                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3979                           
  3980  0649                     l164:	
  3981                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3982                           
  3983  0649  1683               	bsf	3,5	;RP0=1, select bank1
  3984  064A  1303               	bcf	3,6	;RP1=0, select bank1
  3985  064B  1914               	btfsc	20,2	;volatile
  3986  064C  2E4E               	goto	u901
  3987  064D  2E4F               	goto	u900
  3988  064E                     u901:
  3989  064E  2E49               	goto	l164
  3990  064F                     u900:
  3991  064F                     l1659:
  3992  064F  0811               	movf	17,w	;volatile
  3993  0650  391F               	andlw	31
  3994  0651  1D03               	btfss	3,2
  3995  0652  2E54               	goto	u911
  3996  0653  2E55               	goto	u910
  3997  0654                     u911:
  3998  0654  2E49               	goto	l164
  3999  0655                     u910:
  4000  0655                     l167:
  4001  0655  0008               	return
  4002  0656                     __end_of_I2C_Master_Wait:
  4003                           
  4004                           	psect	text28
  4005  049C                     __ptext28:	
  4006 ;; *************** function _ISR *****************
  4007 ;; Defined at:
  4008 ;;		line 92 in file "main_prueba3_mini2.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4022 ;;      Params:         0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0
  4024 ;;      Temps:          3       0       0       0       0
  4025 ;;      Totals:         3       0       0       0       0
  4026 ;;Total ram usage:        3 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		Interrupt level 1
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _ISR
  4037  049C                     _ISR:
  4038  049C                     i1l1195:
  4039                           
  4040                           ;main_prueba3_mini2.c: 93:     if(PIR1bits.RCIF == 1){
  4041  049C  1283               	bcf	3,5	;RP0=0, select bank0
  4042  049D  1303               	bcf	3,6	;RP1=0, select bank0
  4043  049E  1E8C               	btfss	12,5	;volatile
  4044  049F  2CA1               	goto	u43_21
  4045  04A0  2CA2               	goto	u43_20
  4046  04A1                     u43_21:
  4047  04A1  2CC7               	goto	i1l107
  4048  04A2                     u43_20:
  4049  04A2                     i1l1197:
  4050                           
  4051                           ;main_prueba3_mini2.c: 94:         data_recive = RCREG;
  4052  04A2  081A               	movf	26,w	;volatile
  4053  04A3  00F0               	movwf	??_ISR
  4054  04A4  0870               	movf	??_ISR,w
  4055  04A5  00F8               	movwf	_data_recive
  4056  04A6                     i1l1199:
  4057                           
  4058                           ;main_prueba3_mini2.c: 95:         if (data_recive == '1'){
  4059  04A6  3031               	movlw	49
  4060  04A7  0678               	xorwf	_data_recive,w
  4061  04A8  1D03               	btfss	3,2
  4062  04A9  2CAB               	goto	u44_21
  4063  04AA  2CAC               	goto	u44_20
  4064  04AB                     u44_21:
  4065  04AB  2CAE               	goto	i1l1203
  4066  04AC                     u44_20:
  4067  04AC                     i1l1201:
  4068                           
  4069                           ;main_prueba3_mini2.c: 96:             PORTAbits.RA6 = 1;
  4070  04AC  1705               	bsf	5,6	;volatile
  4071                           
  4072                           ;main_prueba3_mini2.c: 97:         }
  4073  04AD  2CC6               	goto	i1l1215
  4074  04AE                     i1l1203:
  4075  04AE  3032               	movlw	50
  4076  04AF  0678               	xorwf	_data_recive,w
  4077  04B0  1D03               	btfss	3,2
  4078  04B1  2CB3               	goto	u45_21
  4079  04B2  2CB4               	goto	u45_20
  4080  04B3                     u45_21:
  4081  04B3  2CB6               	goto	i1l1207
  4082  04B4                     u45_20:
  4083  04B4                     i1l1205:
  4084                           
  4085                           ;main_prueba3_mini2.c: 99:             PORTAbits.RA6 = 0;
  4086  04B4  1305               	bcf	5,6	;volatile
  4087                           
  4088                           ;main_prueba3_mini2.c: 100:         }
  4089  04B5  2CC6               	goto	i1l1215
  4090  04B6                     i1l1207:
  4091  04B6  3033               	movlw	51
  4092  04B7  0678               	xorwf	_data_recive,w
  4093  04B8  1D03               	btfss	3,2
  4094  04B9  2CBB               	goto	u46_21
  4095  04BA  2CBC               	goto	u46_20
  4096  04BB                     u46_21:
  4097  04BB  2CBE               	goto	i1l1211
  4098  04BC                     u46_20:
  4099  04BC                     i1l1209:
  4100                           
  4101                           ;main_prueba3_mini2.c: 102:             PORTAbits.RA7 = 1;
  4102  04BC  1785               	bsf	5,7	;volatile
  4103                           
  4104                           ;main_prueba3_mini2.c: 103:         }
  4105  04BD  2CC6               	goto	i1l1215
  4106  04BE                     i1l1211:
  4107  04BE  3034               	movlw	52
  4108  04BF  0678               	xorwf	_data_recive,w
  4109  04C0  1D03               	btfss	3,2
  4110  04C1  2CC3               	goto	u47_21
  4111  04C2  2CC4               	goto	u47_20
  4112  04C3                     u47_21:
  4113  04C3  2CC6               	goto	i1l103
  4114  04C4                     u47_20:
  4115  04C4                     i1l1213:
  4116                           
  4117                           ;main_prueba3_mini2.c: 105:             PORTAbits.RA7 = 0;
  4118  04C4  1385               	bcf	5,7	;volatile
  4119  04C5  2CC6               	goto	i1l1215
  4120  04C6                     i1l103:
  4121  04C6                     i1l1215:
  4122                           
  4123                           ;main_prueba3_mini2.c: 107:         data_recive = 0;
  4124  04C6  01F8               	clrf	_data_recive
  4125  04C7                     i1l107:
  4126  04C7  0872               	movf	??_ISR+2,w
  4127  04C8  008A               	movwf	10
  4128  04C9  0E71               	swapf	??_ISR+1,w
  4129  04CA  0083               	movwf	3
  4130  04CB  0EFE               	swapf	btemp,f
  4131  04CC  0E7E               	swapf	btemp,w
  4132  04CD  0009               	retfie
  4133  04CE                     __end_of_ISR:
  4134  007E                     btemp	set	126	;btemp
  4135  007E                     wtemp0	set	126
  4136                           
  4137                           	psect	intentry
  4138  0004                     __pintentry:	
  4139                           ;incstack = 0
  4140                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4141                           
  4142  0004                     interrupt_function:
  4143  007E                     saved_w	set	btemp
  4144  0004  00FE               	movwf	btemp
  4145  0005  0E03               	swapf	3,w
  4146  0006  00F1               	movwf	??_ISR+1
  4147  0007  080A               	movf	10,w
  4148  0008  00F2               	movwf	??_ISR+2
  4149  0009  120A  118A  2C9C   	ljmp	_ISR
  4150                           
  4151                           	psect	config
  4152                           
  4153                           ;Config register CONFIG1 @ 0x2007
  4154                           ;	Oscillator Selection bits
  4155                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4156                           ;	Watchdog Timer Enable bit
  4157                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4158                           ;	Power-up Timer Enable bit
  4159                           ;	PWRTE = OFF, PWRT disabled
  4160                           ;	RE3/MCLR pin function select bit
  4161                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4162                           ;	Code Protection bit
  4163                           ;	CP = OFF, Program memory code protection is disabled
  4164                           ;	Data Code Protection bit
  4165                           ;	CPD = OFF, Data memory code protection is disabled
  4166                           ;	Brown Out Reset Selection bits
  4167                           ;	BOREN = OFF, BOR disabled
  4168                           ;	Internal External Switchover bit
  4169                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4170                           ;	Fail-Safe Clock Monitor Enabled bit
  4171                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4172                           ;	Low Voltage Programming Enable bit
  4173                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4174                           ;	In-Circuit Debugger Mode bit
  4175                           ;	DEBUG = 0x1, unprogrammed default
  4176  2007                     	org	8199
  4177  2007  20D4               	dw	8404
  4178                           
  4179                           ;Config register CONFIG2 @ 0x2008
  4180                           ;	Brown-out Reset Selection bit
  4181                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4182                           ;	Flash Program Memory Self Write Enable bits
  4183                           ;	WRT = OFF, Write protection off
  4184  2008                     	org	8200
  4185  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      64
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> Date(BANK0[15]), Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_Write_USART_String
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7815
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   5     3      2     251
                                              4 COMMON     4     2      2
                                              0 BANK0      1     1      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    3919
                                              4 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1338
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     264
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 08 19:09:33 2021

                                _i 005F                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 003F  
                               fsr 0004               __size_of_Write_USART 000C  
                 ?_USART_INTERRUPT 0070                        _RTC_display 0034  
                              l120 05E3                                l202 0461  
                              l211 0648                                l220 0613  
                              l132 04FE                                l205 06AC  
                              l126 01A6                                l208 05FD  
                              l217 0584                                l129 0411  
                              l161 049B                                l226 05A9  
                              l170 0689                                l164 0649  
                              l173 0692                                l413 0628  
                              l182 0554                                l167 0655  
                              l183 0557                                l423 035C  
                              l184 055E                                l176 0680  
                              l280 06A0                                l179 0677  
                              l283 06A6                                l540 02F4  
                              l277 0661                                l286 0663  
                              l295 052E                                l553 03B7  
                              l289 066D                                _GIE 005F  
                              u530 061A                                u531 0619  
                              u700 02AF                                u540 0627  
                              _ISR 049C                                u701 02AE  
                              u541 0626                                u720 02C1  
                              u721 02C0                                u715 02B3  
                              u900 064F                                u740 02D2  
                              u901 064E                                u741 02D1  
                              u910 0655                                u911 0654  
                              u735 02C2                                u760 02E6  
                              u680 0293                                u920 0307  
                              u761 02E5                                u745 02CE  
                              u681 0292                                u921 0306  
                              u770 02EB                                u690 029E  
                              u771 02EA                                u755 02DA  
                              u691 029D                                u940 031B  
                              u941 031A                                u935 030C  
                              u960 0336                                u961 0335  
                              u955 031D                                u980 0354  
                              u981 0353                                u965 0332  
                              u990 0669                                u991 0668  
                              u975 0346                                fsr0 0004  
                              indf 0000                       ___awmod@sign 003F  
      __size_of_Write_USART_String 0030                               ?_ISR 0070  
                             l1341 061A                               l1343 061E  
                             l1431 0656                               l1441 0293  
                             l1345 0620                               l1337 0615  
                             l1433 0660                               l1451 02A7  
                             l1443 0298                               l1347 0627  
                             l1339 0616                               l1435 06A1  
                             l1427 069B                               l1461 02BD  
                             l1453 02A9                               l1445 029A  
                             l1437 028C                               l1701 0354  
                             l1429 069E                               l1471 02E0  
                             l1463 02C1                               l1455 02AF  
                             l1447 029E                               l1439 028F  
                             l1711 0673                               l1465 02D2  
                             l1457 02B2                               l1473 02E6  
                             l1449 02A3                               l1721 05C9  
                             l1705 0681                               l1713 0678  
                             l1801 04D8                               l1731 0573  
                             l1475 02EB                               l1467 02D8  
                             l1459 02B9                               l1707 0686  
                             l1715 067D                               l1811 04DF  
                             l1803 04D9                               l1661 05E5  
                             l1733 0579                               l1725 0562  
                             l1741 0596                               l1477 02F0  
                             l1469 02D9                               l1717 0663  
                             l1709 066E                               l1821 04F4  
                             l1813 04E0                               l1805 04DA  
                             l1901 0218                               l1655 06A8  
                             l1663 05E8                               l1831 0432  
                             l1735 057E                               l1727 0567  
                             l1671 05FF                               l1743 059E  
                             l1719 0669                               l1751 0498  
                             l1823 04F9                               l1815 04E1  
                             l1807 04DB                               l1911 024E  
                             l1903 0227                               l1657 0649  
                             l1841 068F                               l1665 05EE  
                             l1833 0438                               l1825 0412  
                             l1729 056C                               l1673 0602  
                             l1737 0588                               l1761 0364  
                             l1681 02F5                               l1753 0499  
                             l1745 0462                               l1817 04E2  
                             l1809 04DE                               l1921 0267  
                             l1905 0236                               l1659 064F  
                             l1851 054A                               l1843 052F  
                             l1667 05F1                               l1835 063C  
                             l1827 0418                               l1675 0608  
                             l1739 058B                               l1771 037A  
                             l1763 0369                               l1691 0324  
                             l1683 0307                               l1755 049A  
                             l1747 0466                               l1819 04EF  
                             l1923 026D                               l1907 0244  
                             l1853 0550                               l1845 0534  
                             l1669 05FA                               l1829 0422  
                             l1677 060B                               l1781 0396  
                             l1773 037D                               l1765 036B  
                             l1757 035D                               l1861 0192  
                             l1837 03B8                               l1693 0336  
                             l1685 030A                               l1749 0469  
                             l1925 0279                               l1917 0251  
                             l1909 0249                               l1855 0558  
                             l1847 053C                               l1839 068A  
                             l1679 0610                               l1791 03B3  
                             l1783 039C                               l1775 0384  
                             l1767 036F                               l1759 0360  
                             l1863 0198                               l1871 051C  
                             l1695 0344                               l1687 0317  
                             l1919 0261                               l1849 0545  
                             l1785 03A3                               l1777 0388  
                             l1769 0374                               l1865 04FF  
                             l1697 0345                               l1689 031B  
                             l1881 01B9                               l1873 01A7  
                             l1779 038C                               l1787 03A9  
                             l1859 0034                               l1867 0503  
                             l1699 034E                               l1795 04CE  
                             l1891 01D9                               l1883 01BE  
                             l1875 01AC                               l1789 03AE  
                             l1869 0516                               l1797 04D5  
                             l1893 01E2                               l1885 01C3  
                             l1877 01AF                               l1799 04D7  
                             l1895 01F1                               l1887 01CC  
                             l1879 01B4                               l1897 0200  
                             l1889 01D4                               l1899 020F  
                             u1010 0567                               u1011 0566  
                             u1020 0579                               u1100 0396  
                             u1021 0578                               u1101 0395  
                             u1005 05D5                               u1030 05A9  
                             u1031 05A8                               u1120 03A9  
                             u1040 0479                               u1121 03A8  
                             u1105 0392                               u1130 03AE  
                             u1050 0364                               u1131 03AD  
                             u1115 039D                               u1051 0363  
                             u1140 0550                               u1060 036F  
                             u1141 054F                               u1061 036E  
                             u1045 0474                               u1070 037A  
                             u1150 052E                               u1207 042E  
                             u1071 0379                               u1151 052D  
                             u1160 026D                               u1217 043E  
                             u1161 026C                               u1090 038C  
                             u1227 05F5                               u1091 038B  
                             u1085 037E                               u1177 0281  
                             u1187 060D                               u1197 041E  
                             _PEIE 005E                               _RCIF 0065  
                             _TRMT 04C1                               _Date 0020  
                             _Time 002F                  ?_Lcd_Write_String 0070  
 __end_of_I2C_Master_RepeatedStart 0693                               _cont 005A  
                             _main 01A7                               _hour 005E  
                             _year 005B                               btemp 007E  
                             start 000C                 ??_Lcd_Write_String 0076  
                  __end_of_Lcd_Cmd 05FE                  ___bmul@multiplier 0076  
            __size_of_Write_to_RTC 005A                              ??_ISR 0070  
                 ?_I2C_Master_Init 004B                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                    __end_of___awdiv 02F5  
                  __end_of___awmod 03B8                              _ANSEL 0188  
                  __end_of___lldiv 035D                    ___awdiv@divisor 0073  
                            i1l103 04C6                              i1l107 04C7  
                  ___awdiv@counter 003E                              _RCREG 001A  
                            _SPBRG 0099                              u43_20 04A2  
                            u43_21 04A1                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u44_20 04AC                              u44_21 04AB  
                            u45_20 04B4                              u45_21 04B3  
                            u46_20 04BC                              u46_21 04BB  
                            u47_20 04C4                              u47_21 04C3  
          __size_of_Lcd_Set_Cursor 0026                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _m_day 005D                              _month 005C  
                            _setup 04CE                              pclath 000A  
                     _Write_to_RTC 03B8                              status 0003  
                            wtemp0 007E                        ?_USART_Init 0070  
                 __end_of_Lcd_Init 0462                   __end_of_Lcd_Port 06AD  
                  __initialization 000F                       __end_of_main 028C  
                           ??_main 004F                 __size_of_Lcd_Clear 000D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
                 ___awdiv@dividend 0075                _USART_Init_BaudRate 069B  
                           ?_setup 0070                             _ANSELH 0189  
                           i1l1201 04AC                             i1l1211 04BE  
                           i1l1203 04AE                             i1l1213 04C4  
                           i1l1205 04B4                             i1l1207 04B6  
                           i1l1215 04C6                             i1l1209 04BC  
                           i1l1195 049C                             i1l1197 04A2  
                           i1l1199 04A6                          ??_Lcd_Cmd 0074  
                           _SPBRGH 009A            __size_of_Lcd_Write_Char 0016  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 068A  
                           ___bmul 0614                          ??___awdiv 0077  
                        ??___awmod 0077               ?_USART_Init_BaudRate 0070  
                        ??___lldiv 0073                   ___awdiv@quotient 0040  
                           _minute 0079                             _second 007A  
                  ___awmod@divisor 0073                    ___awmod@counter 003E  
                           saved_w 007E                __size_of_USART_Init 000C  
                  Lcd_Set_Cursor@a 003F                    Lcd_Set_Cursor@b 0077  
          __end_of__initialization 0030                  __end_of_Lcd_Clear 0649  
              ___bmul@multiplicand 0073                     __pcstackCOMMON 0070  
            ??_USART_Init_BaudRate 0073                       __pidataBANK0 05AA  
                    __end_of_setup 04FF                       ?_RTC_display 0070  
                   _Lcd_Set_Cursor 055F                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 0078  
                     Write_USART@a 0073                         __pbssBANK0 0052  
                       __pbssBANK1 00A0                         _data_total 00A0  
                       __pmaintext 01A7                            ?___bmul 0073  
                    ??_Write_USART 0073                         __pintentry 0004  
        __size_of_Lcd_Write_String 0025             __end_of_Lcd_Set_Cursor 0585  
       __end_of_Write_USART_String 052F            __size_of_bcd_to_decimal 001C  
                       ??_Lcd_Init 003E                         ??_Lcd_Port 0073  
         __size_of_USART_INTERRUPT 0006                            _SSPCON2 0091  
                          _SSPSTAT 0094                     _Lcd_Write_Char 05FE  
                          _Lcd_Cmd 05E4                       ??_USART_Init 0073  
                  __size_of___bmul 0015                            ___awdiv 028C  
                          ___awmod 035D                            ___lldiv 02F5  
                  ?_Lcd_Set_Cursor 0077                            __ptext1 04CE  
                          __ptext2 069B                            __ptext3 0656  
                          __ptext4 06A1                            __ptext5 0462  
                          __ptext6 02F5                            __ptext7 03B8  
                          __ptext8 066E                            __ptext9 0678  
                     __size_of_ISR 0032                __end_of_Write_USART 066E  
                 ___awmod@dividend 0075           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                 __end_of_USART_Init 0662  
                          clrloop0 0694             __end_of_Lcd_Write_Char 0614  
             end_of_initialization 0030         ??_I2C_Master_RepeatedStart 0073  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 003E                    ___lldiv@counter 004A  
                        _RCSTAbits 0018                   I2C_Master_Init@c 004B  
                 I2C_Master_Read@a 0073                          Lcd_Port@a 0073  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009               __size_of_RTC_display 0173  
                        _TRISCbits 0087                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0040                  Lcd_Write_String@i 003E  
                        _TXSTAbits 0098                  ??_USART_INTERRUPT 0073  
                        _Lcd_Clear 063C                     __end_of___bmul 0629  
                      _Write_USART 0662                   _Lcd_Write_String 0585  
              start_initialization 000F                     _bcd_to_decimal 05C8  
                      __end_of_ISR 04CE                  __size_of_Lcd_Init 0050  
                __size_of_Lcd_Port 0006                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073        __end_of_USART_Init_BaudRate 06A1  
                       ?_Lcd_Clear 0070                           ??___bmul 0074  
                       init_fetch0 0629                        __pdataBANK0 0020  
                  Lcd_Write_Char@a 0075             __end_of_bcd_to_decimal 05E4  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 003E                        _data_recive 0078  
                    ?_Write_to_RTC 0070                           ?_Lcd_Cmd 0070  
               _Write_USART_String 04FF                   _I2C_Master_Start 0681  
                 _I2C_Master_Write 066E                   ??_Lcd_Set_Cursor 003E  
              ?_Write_USART_String 0074                           ?___awdiv 0073  
                         ?___awmod 0073                           ?___lldiv 003E  
                        _cont_send 0052                    ?_bcd_to_decimal 0070  
             ??_Write_USART_String 0076               bcd_to_decimal@number 0077  
                   ??_Write_to_RTC 0075                     __size_of_setup 0031  
                interrupt_function 0004                          clear_ram0 0693  
                         _PIE1bits 008C                           Lcd_Cmd@a 0076  
                         _PIR1bits 000C                        ??_Lcd_Clear 0077  
                 ??_Lcd_Write_Char 0074                    _USART_INTERRUPT 06A1  
                         _Lcd_Init 0412                           _Lcd_Port 06A7  
              I2C_Master_Read@temp 003E           __end_of_Lcd_Write_String 05AA  
                 __size_of_Lcd_Cmd 001A                       ?_Write_USART 0070  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 005B          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                      ??_RTC_display 0042  
                  _I2C_Master_Init 0462                    _I2C_Master_Read 052F  
                  _I2C_Master_Wait 0649                    _I2C_Master_Stop 0678  
                         __ptext10 0681                           __ptext11 04FF  
                         __ptext20 055F                           __ptext12 0662  
                         __ptext21 0412                           __ptext13 0034  
                         __ptext22 063C                           __ptext14 05C8  
                         __ptext23 05E4                           __ptext15 0614  
                         __ptext24 06A7                           __ptext16 035D  
                         __ptext25 068A                           __ptext17 028C  
                         __ptext26 052F                           __ptext18 0585  
                         __ptext27 0649                           __ptext19 05FE  
                         __ptext28 049C                      __size_of_main 00E5  
             __end_of_Write_to_RTC 0412            __end_of_USART_INTERRUPT 06A7  
         __end_of_I2C_Master_Start 068A           __end_of_I2C_Master_Write 0678  
                       _INTCONbits 000B                Write_USART_String@a 0074  
              Write_USART_String@i 003E                           init_ram0 062D  
              __end_of_RTC_display 01A7                           intlevel1 0000  
                 ___lldiv@dividend 0042                         _OSCCONbits 008F  
                 ??_bcd_to_decimal 003E       __size_of_USART_Init_BaudRate 0006  
          __end_of_I2C_Master_Init 049C            __end_of_I2C_Master_Read 055F  
          __end_of_I2C_Master_Wait 0656            __end_of_I2C_Master_Stop 0681  
               Lcd_Set_Cursor@temp 0040                   ___lldiv@quotient 0046  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
                       _USART_Init 0656  
