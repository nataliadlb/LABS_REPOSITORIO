

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 21:37:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387                           
   388                           	psect	idataBANK0
   389  04CE                     __pidataBANK0:
   390                           
   391                           ;initializer for _Date
   392  04CE  3444               	retlw	68
   393  04CF  3441               	retlw	65
   394  04D0  3454               	retlw	84
   395  04D1  3445               	retlw	69
   396  04D2  343A               	retlw	58
   397  04D3  3420               	retlw	32
   398  04D4  3430               	retlw	48
   399  04D5  3436               	retlw	54
   400  04D6  342F               	retlw	47
   401  04D7  3430               	retlw	48
   402  04D8  3433               	retlw	51
   403  04D9  342F               	retlw	47
   404  04DA  3432               	retlw	50
   405  04DB  3430               	retlw	48
   406  04DC  3432               	retlw	50
   407  04DD  3431               	retlw	49
   408  04DE  3400               	retlw	0
   409                           
   410                           ;initializer for _Time
   411  04DF  3454               	retlw	84
   412  04E0  3449               	retlw	73
   413  04E1  344D               	retlw	77
   414  04E2  3445               	retlw	69
   415  04E3  343A               	retlw	58
   416  04E4  3420               	retlw	32
   417  04E5  3432               	retlw	50
   418  04E6  3430               	retlw	48
   419  04E7  343A               	retlw	58
   420  04E8  3433               	retlw	51
   421  04E9  3437               	retlw	55
   422  04EA  343A               	retlw	58
   423  04EB  3430               	retlw	48
   424  04EC  3430               	retlw	48
   425  04ED  3400               	retlw	0
   426  0008                     _PORTDbits	set	8
   427  0009                     _PORTEbits	set	9
   428  0013                     _SSPBUF	set	19
   429  0014                     _SSPCON	set	20
   430  0009                     _PORTE	set	9
   431  0008                     _PORTD	set	8
   432  0007                     _PORTC	set	7
   433  0006                     _PORTB	set	6
   434  0005                     _PORTA	set	5
   435  0005                     _PORTAbits	set	5
   436  001A                     _RCREG	set	26
   437  000C                     _PIR1bits	set	12
   438  0063                     _SSPIF	set	99
   439  005E                     _PEIE	set	94
   440  005F                     _GIE	set	95
   441  0031                     _RB1	set	49
   442  0030                     _RB0	set	48
   443  0091                     _SSPCON2bits	set	145
   444  0094                     _SSPSTAT	set	148
   445  0093                     _SSPADD	set	147
   446  0091                     _SSPCON2	set	145
   447  0089                     _TRISE	set	137
   448  0087                     _TRISCbits	set	135
   449  0086                     _TRISB	set	134
   450  0085                     _TRISA	set	133
   451  0088                     _TRISD	set	136
   452  0463                     _SSPIE	set	1123
   453  043C                     _TRISC4	set	1084
   454  043B                     _TRISC3	set	1083
   455  0189                     _ANSELH	set	393
   456  0188                     _ANSEL	set	392
   457                           
   458                           	psect	strings
   459  0500                     __pstrings:
   460  0500                     stringtab:
   461  0500                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0500  1BFF               	btfsc	btemp+1,7
   465  0501  2D0A               	ljmp	stringcode
   466  0502  1383               	bcf	3,7
   467  0503  187F               	btfsc	btemp+1,0
   468  0504  1783               	bsf	3,7
   469  0505  0800               	movf	0,w
   470  0506  0A84               	incf	4,f
   471  0507  1903               	skipnz
   472  0508  0AFF               	incf	btemp+1,f
   473  0509  0008               	return
   474  050A                     stringcode:
   475  050A                     stringdir:
   476  050A  3005               	movlw	high stringdir
   477  050B  008A               	movwf	10
   478  050C  0804               	movf	4,w
   479  050D  0A84               	incf	4,f
   480  050E  0782               	addwf	2,f
   481  050F                     __stringbase:
   482  050F  3400               	retlw	0
   483  0510                     __end_of__stringtab:
   484  0510                     STR_1:
   485  0510  3448               	retlw	72	;'H'
   486  0511  344F               	retlw	79	;'O'
   487  0512  344C               	retlw	76	;'L'
   488  0513  3441               	retlw	65	;'A'
   489  0514  3420               	retlw	32	;' '
   490  0515  3450               	retlw	80	;'P'
   491  0516  3449               	retlw	73	;'I'
   492  0517  344E               	retlw	78	;'N'
   493  0518  3443               	retlw	67	;'C'
   494  0519  3448               	retlw	72	;'H'
   495  051A  3445               	retlw	69	;'E'
   496  051B  3400               	retlw	0
   497  051C                     STR_2:
   498  051C  3420               	retlw	32	;' '
   499  051D  3420               	retlw	32	;' '
   500  051E  3400               	retlw	0
   501                           
   502                           	psect	cinit
   503  000F                     start_initialization:	
   504                           ; #config settings
   505                           
   506  000F                     __initialization:
   507                           
   508                           ; Initialize objects allocated to BANK0
   509  000F  1383               	bcf	3,7	;select IRP bank0
   510  0010  3040               	movlw	low (__pdataBANK0+32)
   511  0011  00FD               	movwf	btemp+-1
   512  0012  3004               	movlw	high __pidataBANK0
   513  0013  00FE               	movwf	btemp
   514  0014  30CE               	movlw	low __pidataBANK0
   515  0015  00FF               	movwf	btemp+1
   516  0016  3020               	movlw	low __pdataBANK0
   517  0017  0084               	movwf	4
   518  0018  120A  118A  2584  120A  118A  	fcall	init_ram0
   519                           
   520                           ; Clear objects allocated to BANK0
   521  001D  3040               	movlw	low __pbssBANK0
   522  001E  0084               	movwf	4
   523  001F  305A               	movlw	low (__pbssBANK0+26)
   524  0020  120A  118A  25E4  120A  118A  	fcall	clear_ram0
   525                           
   526                           ; Clear objects allocated to COMMON
   527  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   528  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   529  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   530  0028                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  0028                     __end_of__initialization:
   534  0028  0183               	clrf	3
   535  0029  120A  118A  29A5   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssCOMMON
   538  0078                     __pbssCOMMON:
   539  0078                     _minute:
   540  0078                     	ds	1
   541  0079                     _second:
   542  0079                     	ds	1
   543  007A                     _i:
   544  007A                     	ds	1
   545                           
   546                           	psect	bssBANK0
   547  0040                     __pbssBANK0:
   548  0040                     _data_total:
   549  0040                     	ds	20
   550  0054                     _data_recive:
   551  0054                     	ds	1
   552  0055                     _cont:
   553  0055                     	ds	1
   554  0056                     _year:
   555  0056                     	ds	1
   556  0057                     _month:
   557  0057                     	ds	1
   558  0058                     _m_day:
   559  0058                     	ds	1
   560  0059                     _hour:
   561  0059                     	ds	1
   562                           
   563                           	psect	dataBANK0
   564  0020                     __pdataBANK0:
   565  0020                     _Date:
   566  0020                     	ds	17
   567  0031                     _Time:
   568  0031                     	ds	15
   569                           
   570                           	psect	inittext
   571  0580                     init_fetch0:	
   572                           ;	Called with low address in FSR and high address in W
   573                           
   574  0580  087E               	movf	btemp,w
   575  0581  008A               	movwf	10
   576  0582  087F               	movf	btemp+1,w
   577  0583  0082               	movwf	2
   578  0584                     init_ram0:	
   579                           ;Called with:
   580                           ;	high address of idata address in btemp 
   581                           ;	low address of idata address in btemp+1 
   582                           ;	low address of data in FSR
   583                           ;	high address + 1 of data in btemp-1
   584                           
   585  0584  120A  118A  2580  120A  118A  	fcall	init_fetch0
   586  0589  0080               	movwf	0
   587  058A  0A84               	incf	4,f
   588  058B  0804               	movf	4,w
   589  058C  067D               	xorwf	btemp+-1,w
   590  058D  1903               	btfsc	3,2
   591  058E  3400               	retlw	0
   592  058F  0AFF               	incf	btemp+1,f
   593  0590  1903               	btfsc	3,2
   594  0591  0AFE               	incf	btemp,f
   595  0592  2D84               	goto	init_ram0
   596                           
   597                           	psect	clrtext
   598  05E4                     clear_ram0:	
   599                           ;	Called with FSR containing the base address, and
   600                           ;	W with the last address+1
   601                           
   602  05E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   603  05E5                     clrloop0:
   604  05E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   605  05E6  0A84               	incf	4,f	;increment pointer
   606  05E7  0604               	xorwf	4,w	;XOR with final address
   607  05E8  1903               	btfsc	3,2	;have we reached the end yet?
   608  05E9  3400               	retlw	0	;all done for this memory range, return
   609  05EA  0604               	xorwf	4,w	;XOR again to restore value
   610  05EB  2DE5               	goto	clrloop0	;do the next byte
   611                           
   612                           	psect	cstackCOMMON
   613  0070                     __pcstackCOMMON:
   614  0070                     ?_setup:
   615  0070                     ?_Lcd_Init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_Lcd_Clear:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_I2C_Master_Start:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_I2C_Master_RepeatedStart:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_I2C_Master_Stop:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_RTC_display:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_Lcd_Port:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_Lcd_Cmd:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_ISR:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ??_ISR:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_main:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_bcd_to_decimal:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_I2C_Master_Wait:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_Lcd_Write_Char:	
   655                           ; 1 bytes @ 0x0
   656                           
   657                           
   658                           ; 1 bytes @ 0x0
   659  0070                     	ds	3
   660  0073                     ??_I2C_Master_Start:
   661  0073                     ?_I2C_Master_Write:	
   662                           ; 1 bytes @ 0x3
   663                           
   664  0073                     ??_I2C_Master_RepeatedStart:	
   665                           ; 1 bytes @ 0x3
   666                           
   667  0073                     ??_I2C_Master_Stop:	
   668                           ; 1 bytes @ 0x3
   669                           
   670  0073                     ??_Lcd_Port:	
   671                           ; 1 bytes @ 0x3
   672                           
   673  0073                     ??_I2C_Master_Wait:	
   674                           ; 1 bytes @ 0x3
   675                           
   676  0073                     ?___bmul:	
   677                           ; 1 bytes @ 0x3
   678                           
   679  0073                     ??___lldiv:	
   680                           ; 1 bytes @ 0x3
   681                           
   682  0073                     ?_I2C_Master_Read:	
   683                           ; 1 bytes @ 0x3
   684                           
   685  0073                     ?___awdiv:	
   686                           ; 2 bytes @ 0x3
   687                           
   688  0073                     ?___awmod:	
   689                           ; 2 bytes @ 0x3
   690                           
   691  0073                     Lcd_Port@a:	
   692                           ; 2 bytes @ 0x3
   693                           
   694  0073                     ___bmul@multiplicand:	
   695                           ; 1 bytes @ 0x3
   696                           
   697  0073                     I2C_Master_Write@d:	
   698                           ; 1 bytes @ 0x3
   699                           
   700  0073                     I2C_Master_Read@a:	
   701                           ; 2 bytes @ 0x3
   702                           
   703  0073                     ___awdiv@divisor:	
   704                           ; 2 bytes @ 0x3
   705                           
   706  0073                     ___awmod@divisor:	
   707                           ; 2 bytes @ 0x3
   708                           
   709                           
   710                           ; 2 bytes @ 0x3
   711  0073                     	ds	1
   712  0074                     ??_I2C_Master_Init:
   713  0074                     ??_Lcd_Cmd:	
   714                           ; 1 bytes @ 0x4
   715                           
   716  0074                     ??_Lcd_Write_Char:	
   717                           ; 1 bytes @ 0x4
   718                           
   719  0074                     ??___bmul:	
   720                           ; 1 bytes @ 0x4
   721                           
   722                           
   723                           ; 1 bytes @ 0x4
   724  0074                     	ds	1
   725  0075                     ??_I2C_Master_Write:
   726  0075                     ??_I2C_Master_Read:	
   727                           ; 1 bytes @ 0x5
   728                           
   729  0075                     Lcd_Write_Char@a:	
   730                           ; 1 bytes @ 0x5
   731                           
   732  0075                     ___bmul@product:	
   733                           ; 1 bytes @ 0x5
   734                           
   735  0075                     ___awdiv@dividend:	
   736                           ; 1 bytes @ 0x5
   737                           
   738  0075                     ___awmod@dividend:	
   739                           ; 2 bytes @ 0x5
   740                           
   741                           
   742                           ; 2 bytes @ 0x5
   743  0075                     	ds	1
   744  0076                     ?_Lcd_Write_String:
   745  0076                     Lcd_Cmd@a:	
   746                           ; 1 bytes @ 0x6
   747                           
   748  0076                     ___bmul@multiplier:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  0076                     Lcd_Write_String@a:	
   752                           ; 1 bytes @ 0x6
   753                           
   754                           
   755                           ; 2 bytes @ 0x6
   756  0076                     	ds	1
   757  0077                     ??_Lcd_Clear:
   758  0077                     ?_Lcd_Set_Cursor:	
   759                           ; 1 bytes @ 0x7
   760                           
   761  0077                     ??___awdiv:	
   762                           ; 1 bytes @ 0x7
   763                           
   764  0077                     ??___awmod:	
   765                           ; 1 bytes @ 0x7
   766                           
   767  0077                     bcd_to_decimal@number:	
   768                           ; 1 bytes @ 0x7
   769                           
   770  0077                     Lcd_Set_Cursor@b:	
   771                           ; 1 bytes @ 0x7
   772                           
   773                           
   774                           ; 1 bytes @ 0x7
   775  0077                     	ds	1
   776  0078                     ??_setup:
   777                           
   778                           	psect	cstackBANK0
   779  005A                     __pcstackBANK0:	
   780                           ; 1 bytes @ 0x8
   781                           
   782  005A                     ??_Lcd_Init:
   783  005A                     ??_Lcd_Set_Cursor:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  005A                     ??_Lcd_Write_String:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  005A                     ??_bcd_to_decimal:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  005A                     ?___lldiv:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  005A                     ___awdiv@counter:	
   796                           ; 4 bytes @ 0x0
   797                           
   798  005A                     ___awmod@counter:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  005A                     I2C_Master_Read@temp:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  005A                     ___lldiv@divisor:	
   805                           ; 2 bytes @ 0x0
   806                           
   807                           
   808                           ; 4 bytes @ 0x0
   809  005A                     	ds	1
   810  005B                     Lcd_Set_Cursor@a:
   811  005B                     ___awdiv@sign:	
   812                           ; 1 bytes @ 0x1
   813                           
   814  005B                     ___awmod@sign:	
   815                           ; 1 bytes @ 0x1
   816                           
   817                           
   818                           ; 1 bytes @ 0x1
   819  005B                     	ds	1
   820  005C                     Lcd_Set_Cursor@temp:
   821  005C                     ___awdiv@quotient:	
   822                           ; 1 bytes @ 0x2
   823                           
   824                           
   825                           ; 2 bytes @ 0x2
   826  005C                     	ds	1
   827  005D                     Lcd_Write_String@i:
   828                           
   829                           ; 2 bytes @ 0x3
   830  005D                     	ds	1
   831  005E                     ___lldiv@dividend:
   832                           
   833                           ; 4 bytes @ 0x4
   834  005E                     	ds	1
   835  005F                     ??_RTC_display:
   836                           
   837                           ; 1 bytes @ 0x5
   838  005F                     	ds	3
   839  0062                     ___lldiv@quotient:
   840                           
   841                           ; 4 bytes @ 0x8
   842  0062                     	ds	4
   843  0066                     ___lldiv@counter:
   844                           
   845                           ; 1 bytes @ 0xC
   846  0066                     	ds	1
   847  0067                     ?_I2C_Master_Init:
   848  0067                     I2C_Master_Init@c:	
   849                           ; 1 bytes @ 0xD
   850                           
   851                           
   852                           ; 4 bytes @ 0xD
   853  0067                     	ds	4
   854  006B                     ??_main:
   855                           
   856                           ; 1 bytes @ 0x11
   857  006B                     	ds	3
   858                           
   859                           	psect	maintext
   860  01A5                     __pmaintext:	
   861 ;;
   862 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   863 ;;
   864 ;; *************** function _main *****************
   865 ;; Defined at:
   866 ;;		line 114 in file "main_prueba3_mini2.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : B00/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       3       0       0       0
   883 ;;      Totals:         0       3       0       0       0
   884 ;;Total ram usage:        3 bytes
   885 ;; Hardware stack levels required when called:    5
   886 ;; This function calls:
   887 ;;		_I2C_Master_Read
   888 ;;		_I2C_Master_RepeatedStart
   889 ;;		_I2C_Master_Start
   890 ;;		_I2C_Master_Stop
   891 ;;		_I2C_Master_Write
   892 ;;		_Lcd_Clear
   893 ;;		_Lcd_Init
   894 ;;		_RTC_display
   895 ;;		_setup
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _main
   903  01A5                     _main:
   904  01A5                     l1889:	
   905                           ;incstack = 0
   906                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   907                           
   908                           
   909                           ;main_prueba3_mini2.c: 115:     setup();
   910  01A5  120A  118A  24AC  120A  118A  	fcall	_setup
   911  01AA                     l1891:
   912                           
   913                           ;main_prueba3_mini2.c: 116:     TRISD = 0x00;
   914  01AA  1683               	bsf	3,5	;RP0=1, select bank1
   915  01AB  1303               	bcf	3,6	;RP1=0, select bank1
   916  01AC  0188               	clrf	8	;volatile
   917  01AD                     l1893:
   918                           
   919                           ;main_prueba3_mini2.c: 117:     Lcd_Init();
   920  01AD  120A  118A  2386  120A  118A  	fcall	_Lcd_Init
   921  01B2                     l1895:
   922                           
   923                           ;main_prueba3_mini2.c: 118:     Lcd_Clear();
   924  01B2  120A  118A  25A5  120A  118A  	fcall	_Lcd_Clear
   925  01B7                     l1897:
   926                           
   927                           ;main_prueba3_mini2.c: 178:         I2C_Master_Start();
   928  01B7  120A  118A  25D2  120A  118A  	fcall	_I2C_Master_Start
   929  01BC                     l1899:
   930                           
   931                           ;main_prueba3_mini2.c: 179:         I2C_Master_Write(0xD0);
   932  01BC  30D0               	movlw	208
   933  01BD  00F3               	movwf	I2C_Master_Write@d
   934  01BE  3000               	movlw	0
   935  01BF  00F4               	movwf	I2C_Master_Write@d+1
   936  01C0  120A  118A  25BF  120A  118A  	fcall	_I2C_Master_Write
   937  01C5                     l1901:
   938                           
   939                           ;main_prueba3_mini2.c: 180:         I2C_Master_Write(0);
   940  01C5  3000               	movlw	0
   941  01C6  00F3               	movwf	I2C_Master_Write@d
   942  01C7  00F4               	movwf	I2C_Master_Write@d+1
   943  01C8  120A  118A  25BF  120A  118A  	fcall	_I2C_Master_Write
   944  01CD                     l1903:
   945                           
   946                           ;main_prueba3_mini2.c: 181:         I2C_Master_RepeatedStart();
   947  01CD  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_RepeatedStart
   948  01D2                     l1905:
   949                           
   950                           ;main_prueba3_mini2.c: 182:         I2C_Master_Write(0xD1);
   951  01D2  30D1               	movlw	209
   952  01D3  00F3               	movwf	I2C_Master_Write@d
   953  01D4  3000               	movlw	0
   954  01D5  00F4               	movwf	I2C_Master_Write@d+1
   955  01D6  120A  118A  25BF  120A  118A  	fcall	_I2C_Master_Write
   956  01DB                     l1907:
   957                           
   958                           ;main_prueba3_mini2.c: 183:         second = I2C_Master_Read(1);
   959  01DB  3001               	movlw	1
   960  01DC  00F3               	movwf	I2C_Master_Read@a
   961  01DD  3000               	movlw	0
   962  01DE  00F4               	movwf	I2C_Master_Read@a+1
   963  01DF  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Read
   964  01E4  0873               	movf	?_I2C_Master_Read,w
   965  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   966  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   967  01E7  00EB               	movwf	??_main
   968  01E8  086B               	movf	??_main,w
   969  01E9  00F9               	movwf	_second
   970  01EA                     l1909:
   971                           
   972                           ;main_prueba3_mini2.c: 184:         minute = I2C_Master_Read(1);
   973  01EA  3001               	movlw	1
   974  01EB  00F3               	movwf	I2C_Master_Read@a
   975  01EC  3000               	movlw	0
   976  01ED  00F4               	movwf	I2C_Master_Read@a+1
   977  01EE  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Read
   978  01F3  0873               	movf	?_I2C_Master_Read,w
   979  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   980  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   981  01F6  00EB               	movwf	??_main
   982  01F7  086B               	movf	??_main,w
   983  01F8  00F8               	movwf	_minute
   984  01F9                     l1911:
   985                           
   986                           ;main_prueba3_mini2.c: 185:         hour = I2C_Master_Read(1);
   987  01F9  3001               	movlw	1
   988  01FA  00F3               	movwf	I2C_Master_Read@a
   989  01FB  3000               	movlw	0
   990  01FC  00F4               	movwf	I2C_Master_Read@a+1
   991  01FD  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Read
   992  0202  0873               	movf	?_I2C_Master_Read,w
   993  0203  1283               	bcf	3,5	;RP0=0, select bank0
   994  0204  1303               	bcf	3,6	;RP1=0, select bank0
   995  0205  00EB               	movwf	??_main
   996  0206  086B               	movf	??_main,w
   997  0207  00D9               	movwf	_hour
   998  0208                     l1913:
   999                           
  1000                           ;main_prueba3_mini2.c: 186:         I2C_Master_Read(1);
  1001  0208  3001               	movlw	1
  1002  0209  00F3               	movwf	I2C_Master_Read@a
  1003  020A  3000               	movlw	0
  1004  020B  00F4               	movwf	I2C_Master_Read@a+1
  1005  020C  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Read
  1006  0211                     l1915:
  1007                           
  1008                           ;main_prueba3_mini2.c: 187:         m_day = I2C_Master_Read(1);
  1009  0211  3001               	movlw	1
  1010  0212  00F3               	movwf	I2C_Master_Read@a
  1011  0213  3000               	movlw	0
  1012  0214  00F4               	movwf	I2C_Master_Read@a+1
  1013  0215  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Read
  1014  021A  0873               	movf	?_I2C_Master_Read,w
  1015  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1016  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1017  021D  00EB               	movwf	??_main
  1018  021E  086B               	movf	??_main,w
  1019  021F  00D8               	movwf	_m_day
  1020  0220                     l1917:
  1021                           
  1022                           ;main_prueba3_mini2.c: 188:         month = I2C_Master_Read(1);
  1023  0220  3001               	movlw	1
  1024  0221  00F3               	movwf	I2C_Master_Read@a
  1025  0222  3000               	movlw	0
  1026  0223  00F4               	movwf	I2C_Master_Read@a+1
  1027  0224  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Read
  1028  0229  0873               	movf	?_I2C_Master_Read,w
  1029  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1030  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1031  022C  00EB               	movwf	??_main
  1032  022D  086B               	movf	??_main,w
  1033  022E  00D7               	movwf	_month
  1034  022F                     l1919:
  1035                           
  1036                           ;main_prueba3_mini2.c: 189:         year = I2C_Master_Read(0);
  1037  022F  3000               	movlw	0
  1038  0230  00F3               	movwf	I2C_Master_Read@a
  1039  0231  00F4               	movwf	I2C_Master_Read@a+1
  1040  0232  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Read
  1041  0237  0873               	movf	?_I2C_Master_Read,w
  1042  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1044  023A  00EB               	movwf	??_main
  1045  023B  086B               	movf	??_main,w
  1046  023C  00D6               	movwf	_year
  1047  023D                     l1921:
  1048                           
  1049                           ;main_prueba3_mini2.c: 190:         I2C_Master_Stop();
  1050  023D  120A  118A  25C9  120A  118A  	fcall	_I2C_Master_Stop
  1051  0242                     l1923:
  1052                           
  1053                           ;main_prueba3_mini2.c: 192:         RTC_display();
  1054  0242  120A  118A  202C  120A  118A  	fcall	_RTC_display
  1055  0247                     l1925:
  1056                           
  1057                           ;main_prueba3_mini2.c: 197:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1058  0247  3002               	movlw	2
  1059  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1061  024A  00ED               	movwf	??_main+2
  1062  024B  3004               	movlw	4
  1063  024C  00EC               	movwf	??_main+1
  1064  024D  30B9               	movlw	185
  1065  024E  00EB               	movwf	??_main
  1066  024F                     u1587:
  1067  024F  0BEB               	decfsz	??_main,f
  1068  0250  2A4F               	goto	u1587
  1069  0251  0BEC               	decfsz	??_main+1,f
  1070  0252  2A4F               	goto	u1587
  1071  0253  0BED               	decfsz	??_main+2,f
  1072  0254  2A4F               	goto	u1587
  1073  0255  2A56               	nop2
  1074  0256  29B7               	goto	l1897
  1075  0257  120A  118A  280C   	ljmp	start
  1076  025A                     __end_of_main:
  1077                           
  1078                           	psect	text1
  1079  04AC                     __ptext1:	
  1080 ;; *************** function _setup *****************
  1081 ;; Defined at:
  1082 ;;		line 327 in file "main_prueba3_mini2.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0
  1099 ;;      Totals:         0       0       0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    3
  1103 ;; This function calls:
  1104 ;;		_I2C_Master_Init
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _setup
  1112  04AC                     _setup:
  1113  04AC                     l1815:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1116                           
  1117                           
  1118                           ;main_prueba3_mini2.c: 329:     ANSEL = 0;
  1119  04AC  1683               	bsf	3,5	;RP0=1, select bank3
  1120  04AD  1703               	bsf	3,6	;RP1=1, select bank3
  1121  04AE  0188               	clrf	8	;volatile
  1122                           
  1123                           ;main_prueba3_mini2.c: 330:     ANSELH = 0;
  1124  04AF  0189               	clrf	9	;volatile
  1125                           
  1126                           ;main_prueba3_mini2.c: 331:     TRISA = 0;
  1127  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  1128  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  1129  04B2  0185               	clrf	5	;volatile
  1130  04B3                     l1817:
  1131                           
  1132                           ;main_prueba3_mini2.c: 332:     TRISB = 0b00000011;
  1133  04B3  3003               	movlw	3
  1134  04B4  0086               	movwf	6	;volatile
  1135  04B5                     l1819:
  1136                           
  1137                           ;main_prueba3_mini2.c: 333:     TRISCbits.TRISC6 = 0;
  1138  04B5  1307               	bcf	7,6	;volatile
  1139  04B6                     l1821:
  1140                           
  1141                           ;main_prueba3_mini2.c: 334:     TRISCbits.TRISC7 = 1;
  1142  04B6  1787               	bsf	7,7	;volatile
  1143  04B7                     l1823:
  1144                           
  1145                           ;main_prueba3_mini2.c: 335:     TRISD = 0;
  1146  04B7  0188               	clrf	8	;volatile
  1147  04B8                     l1825:
  1148                           
  1149                           ;main_prueba3_mini2.c: 336:     TRISE = 0;
  1150  04B8  0189               	clrf	9	;volatile
  1151  04B9                     l1827:
  1152                           
  1153                           ;main_prueba3_mini2.c: 337:     PORTA = 0;
  1154  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1155  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1156  04BB  0185               	clrf	5	;volatile
  1157  04BC                     l1829:
  1158                           
  1159                           ;main_prueba3_mini2.c: 338:     PORTB = 0;
  1160  04BC  0186               	clrf	6	;volatile
  1161  04BD                     l1831:
  1162                           
  1163                           ;main_prueba3_mini2.c: 339:     PORTC = 0;
  1164  04BD  0187               	clrf	7	;volatile
  1165  04BE                     l1833:
  1166                           
  1167                           ;main_prueba3_mini2.c: 340:     PORTD = 0;
  1168  04BE  0188               	clrf	8	;volatile
  1169  04BF                     l1835:
  1170                           
  1171                           ;main_prueba3_mini2.c: 341:     PORTE = 0;
  1172  04BF  0189               	clrf	9	;volatile
  1173  04C0                     l1837:
  1174                           
  1175                           ;main_prueba3_mini2.c: 342:     I2C_Master_Init(100000);
  1176  04C0  3000               	movlw	0
  1177  04C1  00EA               	movwf	I2C_Master_Init@c+3
  1178  04C2  3001               	movlw	1
  1179  04C3  00E9               	movwf	I2C_Master_Init@c+2
  1180  04C4  3086               	movlw	134
  1181  04C5  00E8               	movwf	I2C_Master_Init@c+1
  1182  04C6  30A0               	movlw	160
  1183  04C7  00E7               	movwf	I2C_Master_Init@c
  1184  04C8  120A  118A  241C  120A  118A  	fcall	_I2C_Master_Init
  1185  04CD                     l157:
  1186  04CD  0008               	return
  1187  04CE                     __end_of_setup:
  1188                           
  1189                           	psect	text2
  1190  041C                     __ptext2:	
  1191 ;; *************** function _I2C_Master_Init *****************
  1192 ;; Defined at:
  1193 ;;		line 21 in file "I2C.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  c               4   13[BANK0 ] const unsigned long 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       4       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          4       0       0       0       0
  1210 ;;      Totals:         4       4       0       0       0
  1211 ;;Total ram usage:        8 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    2
  1214 ;; This function calls:
  1215 ;;		___lldiv
  1216 ;; This function is called by:
  1217 ;;		_setup
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _I2C_Master_Init
  1223  041C                     _I2C_Master_Init:
  1224  041C                     l1761:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1227                           
  1228                           
  1229                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1230  041C  3028               	movlw	40
  1231  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1232  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1233  041F  0094               	movwf	20	;volatile
  1234  0420                     l1763:
  1235                           
  1236                           ;I2C.c: 28:     SSPCON2 = 0;
  1237  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1238  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1239  0422  0191               	clrf	17	;volatile
  1240  0423                     l1765:
  1241                           
  1242                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1243  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0425  0867               	movf	I2C_Master_Init@c,w
  1246  0426  00F4               	movwf	??_I2C_Master_Init
  1247  0427  0868               	movf	I2C_Master_Init@c+1,w
  1248  0428  00F5               	movwf	??_I2C_Master_Init+1
  1249  0429  0869               	movf	I2C_Master_Init@c+2,w
  1250  042A  00F6               	movwf	??_I2C_Master_Init+2
  1251  042B  086A               	movf	I2C_Master_Init@c+3,w
  1252  042C  00F7               	movwf	??_I2C_Master_Init+3
  1253  042D  3002               	movlw	2
  1254  042E                     u1315:
  1255  042E  1003               	clrc
  1256  042F  0DF4               	rlf	??_I2C_Master_Init,f
  1257  0430  0DF5               	rlf	??_I2C_Master_Init+1,f
  1258  0431  0DF6               	rlf	??_I2C_Master_Init+2,f
  1259  0432  0DF7               	rlf	??_I2C_Master_Init+3,f
  1260  0433                     u1310:
  1261  0433  3EFF               	addlw	-1
  1262  0434  1D03               	skipz
  1263  0435  2C2E               	goto	u1315
  1264  0436  0877               	movf	??_I2C_Master_Init+3,w
  1265  0437  00DD               	movwf	___lldiv@divisor+3
  1266  0438  0876               	movf	??_I2C_Master_Init+2,w
  1267  0439  00DC               	movwf	___lldiv@divisor+2
  1268  043A  0875               	movf	??_I2C_Master_Init+1,w
  1269  043B  00DB               	movwf	___lldiv@divisor+1
  1270  043C  0874               	movf	??_I2C_Master_Init,w
  1271  043D  00DA               	movwf	___lldiv@divisor
  1272  043E  3000               	movlw	0
  1273  043F  00E1               	movwf	___lldiv@dividend+3
  1274  0440  307A               	movlw	122
  1275  0441  00E0               	movwf	___lldiv@dividend+2
  1276  0442  3012               	movlw	18
  1277  0443  00DF               	movwf	___lldiv@dividend+1
  1278  0444  3000               	movlw	0
  1279  0445  00DE               	movwf	___lldiv@dividend
  1280  0446  120A  118A  22C3  120A  118A  	fcall	___lldiv
  1281  044B  1283               	bcf	3,5	;RP0=0, select bank0
  1282  044C  1303               	bcf	3,6	;RP1=0, select bank0
  1283  044D  085A               	movf	?___lldiv,w
  1284  044E  3EFF               	addlw	255
  1285  044F  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0450  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0451  0093               	movwf	19	;volatile
  1288  0452                     l1767:
  1289                           
  1290                           ;I2C.c: 36:     SSPSTAT = 0;
  1291  0452  0194               	clrf	20	;volatile
  1292  0453                     l1769:
  1293                           
  1294                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1295  0453  1587               	bsf	7,3	;volatile
  1296  0454                     l1771:
  1297                           
  1298                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1299  0454  1607               	bsf	7,4	;volatile
  1300  0455                     l186:
  1301  0455  0008               	return
  1302  0456                     __end_of_I2C_Master_Init:
  1303                           
  1304                           	psect	text3
  1305  02C3                     __ptext3:	
  1306 ;; *************** function ___lldiv *****************
  1307 ;; Defined at:
  1308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  divisor         4    0[BANK0 ] unsigned long 
  1311 ;;  dividend        4    4[BANK0 ] unsigned long 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  quotient        4    8[BANK0 ] unsigned long 
  1314 ;;  counter         1   12[BANK0 ] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  4    0[BANK0 ] unsigned long 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       8       0       0       0
  1325 ;;      Locals:         0       5       0       0       0
  1326 ;;      Temps:          1       0       0       0       0
  1327 ;;      Totals:         1      13       0       0       0
  1328 ;;Total ram usage:       14 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_I2C_Master_Init
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function ___lldiv
  1340  02C3                     ___lldiv:
  1341  02C3                     l1713:	
  1342                           ;incstack = 0
  1343                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1344                           
  1345  02C3  3000               	movlw	0
  1346  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1347  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1348  02C6  00E5               	movwf	___lldiv@quotient+3
  1349  02C7  3000               	movlw	0
  1350  02C8  00E4               	movwf	___lldiv@quotient+2
  1351  02C9  3000               	movlw	0
  1352  02CA  00E3               	movwf	___lldiv@quotient+1
  1353  02CB  3000               	movlw	0
  1354  02CC  00E2               	movwf	___lldiv@quotient
  1355  02CD  085D               	movf	___lldiv@divisor+3,w
  1356  02CE  045C               	iorwf	___lldiv@divisor+2,w
  1357  02CF  045B               	iorwf	___lldiv@divisor+1,w
  1358  02D0  045A               	iorwf	___lldiv@divisor,w
  1359  02D1  1903               	skipnz
  1360  02D2  2AD4               	goto	u1181
  1361  02D3  2AD5               	goto	u1180
  1362  02D4                     u1181:
  1363  02D4  2B22               	goto	l1733
  1364  02D5                     u1180:
  1365  02D5                     l1715:
  1366  02D5  01E6               	clrf	___lldiv@counter
  1367  02D6  0AE6               	incf	___lldiv@counter,f
  1368  02D7  2AE5               	goto	l1719
  1369  02D8                     l1717:
  1370  02D8  3001               	movlw	1
  1371  02D9  00F3               	movwf	??___lldiv
  1372  02DA                     u1195:
  1373  02DA  1003               	clrc
  1374  02DB  0DDA               	rlf	___lldiv@divisor,f
  1375  02DC  0DDB               	rlf	___lldiv@divisor+1,f
  1376  02DD  0DDC               	rlf	___lldiv@divisor+2,f
  1377  02DE  0DDD               	rlf	___lldiv@divisor+3,f
  1378  02DF  0BF3               	decfsz	??___lldiv,f
  1379  02E0  2ADA               	goto	u1195
  1380  02E1  3001               	movlw	1
  1381  02E2  00F3               	movwf	??___lldiv
  1382  02E3  0873               	movf	??___lldiv,w
  1383  02E4  07E6               	addwf	___lldiv@counter,f
  1384  02E5                     l1719:
  1385  02E5  1FDD               	btfss	___lldiv@divisor+3,7
  1386  02E6  2AE8               	goto	u1201
  1387  02E7  2AE9               	goto	u1200
  1388  02E8                     u1201:
  1389  02E8  2AD8               	goto	l1717
  1390  02E9                     u1200:
  1391  02E9                     l1721:
  1392  02E9  3001               	movlw	1
  1393  02EA  00F3               	movwf	??___lldiv
  1394  02EB                     u1215:
  1395  02EB  1003               	clrc
  1396  02EC  0DE2               	rlf	___lldiv@quotient,f
  1397  02ED  0DE3               	rlf	___lldiv@quotient+1,f
  1398  02EE  0DE4               	rlf	___lldiv@quotient+2,f
  1399  02EF  0DE5               	rlf	___lldiv@quotient+3,f
  1400  02F0  0BF3               	decfsz	??___lldiv,f
  1401  02F1  2AEB               	goto	u1215
  1402  02F2                     l1723:
  1403  02F2  085D               	movf	___lldiv@divisor+3,w
  1404  02F3  0261               	subwf	___lldiv@dividend+3,w
  1405  02F4  1D03               	skipz
  1406  02F5  2B00               	goto	u1225
  1407  02F6  085C               	movf	___lldiv@divisor+2,w
  1408  02F7  0260               	subwf	___lldiv@dividend+2,w
  1409  02F8  1D03               	skipz
  1410  02F9  2B00               	goto	u1225
  1411  02FA  085B               	movf	___lldiv@divisor+1,w
  1412  02FB  025F               	subwf	___lldiv@dividend+1,w
  1413  02FC  1D03               	skipz
  1414  02FD  2B00               	goto	u1225
  1415  02FE  085A               	movf	___lldiv@divisor,w
  1416  02FF  025E               	subwf	___lldiv@dividend,w
  1417  0300                     u1225:
  1418  0300  1C03               	skipc
  1419  0301  2B03               	goto	u1221
  1420  0302  2B04               	goto	u1220
  1421  0303                     u1221:
  1422  0303  2B13               	goto	l1729
  1423  0304                     u1220:
  1424  0304                     l1725:
  1425  0304  085A               	movf	___lldiv@divisor,w
  1426  0305  02DE               	subwf	___lldiv@dividend,f
  1427  0306  085B               	movf	___lldiv@divisor+1,w
  1428  0307  1C03               	skipc
  1429  0308  0F5B               	incfsz	___lldiv@divisor+1,w
  1430  0309  02DF               	subwf	___lldiv@dividend+1,f
  1431  030A  085C               	movf	___lldiv@divisor+2,w
  1432  030B  1C03               	skipc
  1433  030C  0F5C               	incfsz	___lldiv@divisor+2,w
  1434  030D  02E0               	subwf	___lldiv@dividend+2,f
  1435  030E  085D               	movf	___lldiv@divisor+3,w
  1436  030F  1C03               	skipc
  1437  0310  0F5D               	incfsz	___lldiv@divisor+3,w
  1438  0311  02E1               	subwf	___lldiv@dividend+3,f
  1439  0312                     l1727:
  1440  0312  1462               	bsf	___lldiv@quotient,0
  1441  0313                     l1729:
  1442  0313  3001               	movlw	1
  1443  0314                     u1235:
  1444  0314  1003               	clrc
  1445  0315  0CDD               	rrf	___lldiv@divisor+3,f
  1446  0316  0CDC               	rrf	___lldiv@divisor+2,f
  1447  0317  0CDB               	rrf	___lldiv@divisor+1,f
  1448  0318  0CDA               	rrf	___lldiv@divisor,f
  1449  0319  3EFF               	addlw	-1
  1450  031A  1D03               	skipz
  1451  031B  2B14               	goto	u1235
  1452  031C                     l1731:
  1453  031C  3001               	movlw	1
  1454  031D  02E6               	subwf	___lldiv@counter,f
  1455  031E  1D03               	btfss	3,2
  1456  031F  2B21               	goto	u1241
  1457  0320  2B22               	goto	u1240
  1458  0321                     u1241:
  1459  0321  2AE9               	goto	l1721
  1460  0322                     u1240:
  1461  0322                     l1733:
  1462  0322  0865               	movf	___lldiv@quotient+3,w
  1463  0323  00DD               	movwf	?___lldiv+3
  1464  0324  0864               	movf	___lldiv@quotient+2,w
  1465  0325  00DC               	movwf	?___lldiv+2
  1466  0326  0863               	movf	___lldiv@quotient+1,w
  1467  0327  00DB               	movwf	?___lldiv+1
  1468  0328  0862               	movf	___lldiv@quotient,w
  1469  0329  00DA               	movwf	?___lldiv
  1470  032A                     l385:
  1471  032A  0008               	return
  1472  032B                     __end_of___lldiv:
  1473                           
  1474                           	psect	text4
  1475  002C                     __ptext4:	
  1476 ;; *************** function _RTC_display *****************
  1477 ;; Defined at:
  1478 ;;		line 227 in file "main_prueba3_mini2.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          0       3       0       0       0
  1495 ;;      Totals:         0       3       0       0       0
  1496 ;;Total ram usage:        3 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    4
  1499 ;; This function calls:
  1500 ;;		_Lcd_Set_Cursor
  1501 ;;		_Lcd_Write_String
  1502 ;;		___awdiv
  1503 ;;		___awmod
  1504 ;;		_bcd_to_decimal
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _RTC_display
  1512  002C                     _RTC_display:
  1513  002C                     l1883:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1516                           
  1517                           
  1518                           ;main_prueba3_mini2.c: 229:     second = bcd_to_decimal(second);
  1519  002C  0879               	movf	_second,w
  1520  002D  120A  118A  251F  120A  118A  	fcall	_bcd_to_decimal
  1521  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0034  00DF               	movwf	??_RTC_display
  1524  0035  085F               	movf	??_RTC_display,w
  1525  0036  00F9               	movwf	_second
  1526                           
  1527                           ;main_prueba3_mini2.c: 230:     minute = bcd_to_decimal(minute);
  1528  0037  0878               	movf	_minute,w
  1529  0038  120A  118A  251F  120A  118A  	fcall	_bcd_to_decimal
  1530  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1531  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1532  003F  00DF               	movwf	??_RTC_display
  1533  0040  085F               	movf	??_RTC_display,w
  1534  0041  00F8               	movwf	_minute
  1535                           
  1536                           ;main_prueba3_mini2.c: 231:     hour = bcd_to_decimal(hour);
  1537  0042  0859               	movf	_hour,w
  1538  0043  120A  118A  251F  120A  118A  	fcall	_bcd_to_decimal
  1539  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1541  004A  00DF               	movwf	??_RTC_display
  1542  004B  085F               	movf	??_RTC_display,w
  1543  004C  00D9               	movwf	_hour
  1544                           
  1545                           ;main_prueba3_mini2.c: 232:     m_day = bcd_to_decimal(m_day);
  1546  004D  0858               	movf	_m_day,w
  1547  004E  120A  118A  251F  120A  118A  	fcall	_bcd_to_decimal
  1548  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0055  00DF               	movwf	??_RTC_display
  1551  0056  085F               	movf	??_RTC_display,w
  1552  0057  00D8               	movwf	_m_day
  1553                           
  1554                           ;main_prueba3_mini2.c: 233:     month = bcd_to_decimal(month);
  1555  0058  0857               	movf	_month,w
  1556  0059  120A  118A  251F  120A  118A  	fcall	_bcd_to_decimal
  1557  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1558  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0060  00DF               	movwf	??_RTC_display
  1560  0061  085F               	movf	??_RTC_display,w
  1561  0062  00D7               	movwf	_month
  1562                           
  1563                           ;main_prueba3_mini2.c: 234:     year = bcd_to_decimal(year);
  1564  0063  0856               	movf	_year,w
  1565  0064  120A  118A  251F  120A  118A  	fcall	_bcd_to_decimal
  1566  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1567  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1568  006B  00DF               	movwf	??_RTC_display
  1569  006C  085F               	movf	??_RTC_display,w
  1570  006D  00D6               	movwf	_year
  1571                           
  1572                           ;main_prueba3_mini2.c: 238:     Time[6] = hour / 10 + '0';
  1573  006E  300A               	movlw	10
  1574  006F  00F3               	movwf	___awdiv@divisor
  1575  0070  3000               	movlw	0
  1576  0071  00F4               	movwf	___awdiv@divisor+1
  1577  0072  0859               	movf	_hour,w
  1578  0073  00DF               	movwf	??_RTC_display
  1579  0074  01E0               	clrf	??_RTC_display+1
  1580  0075  085F               	movf	??_RTC_display,w
  1581  0076  00F5               	movwf	___awdiv@dividend
  1582  0077  0860               	movf	??_RTC_display+1,w
  1583  0078  00F6               	movwf	___awdiv@dividend+1
  1584  0079  120A  118A  225A  120A  118A  	fcall	___awdiv
  1585  007E  0873               	movf	?___awdiv,w
  1586  007F  3E30               	addlw	48
  1587  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0082  00E1               	movwf	??_RTC_display+2
  1590  0083  0861               	movf	??_RTC_display+2,w
  1591  0084  00B7               	movwf	_Time+6
  1592                           
  1593                           ;main_prueba3_mini2.c: 239:     Time[7] = hour % 10 + '0';
  1594  0085  300A               	movlw	10
  1595  0086  00F3               	movwf	___awmod@divisor
  1596  0087  3000               	movlw	0
  1597  0088  00F4               	movwf	___awmod@divisor+1
  1598  0089  0859               	movf	_hour,w
  1599  008A  00DF               	movwf	??_RTC_display
  1600  008B  01E0               	clrf	??_RTC_display+1
  1601  008C  085F               	movf	??_RTC_display,w
  1602  008D  00F5               	movwf	___awmod@dividend
  1603  008E  0860               	movf	??_RTC_display+1,w
  1604  008F  00F6               	movwf	___awmod@dividend+1
  1605  0090  120A  118A  232B  120A  118A  	fcall	___awmod
  1606  0095  0873               	movf	?___awmod,w
  1607  0096  3E30               	addlw	48
  1608  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0099  00E1               	movwf	??_RTC_display+2
  1611  009A  0861               	movf	??_RTC_display+2,w
  1612  009B  00B8               	movwf	_Time+7
  1613                           
  1614                           ;main_prueba3_mini2.c: 240:     Time[9] = minute / 10 + '0';
  1615  009C  300A               	movlw	10
  1616  009D  00F3               	movwf	___awdiv@divisor
  1617  009E  3000               	movlw	0
  1618  009F  00F4               	movwf	___awdiv@divisor+1
  1619  00A0  0878               	movf	_minute,w
  1620  00A1  00DF               	movwf	??_RTC_display
  1621  00A2  01E0               	clrf	??_RTC_display+1
  1622  00A3  085F               	movf	??_RTC_display,w
  1623  00A4  00F5               	movwf	___awdiv@dividend
  1624  00A5  0860               	movf	??_RTC_display+1,w
  1625  00A6  00F6               	movwf	___awdiv@dividend+1
  1626  00A7  120A  118A  225A  120A  118A  	fcall	___awdiv
  1627  00AC  0873               	movf	?___awdiv,w
  1628  00AD  3E30               	addlw	48
  1629  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1630  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1631  00B0  00E1               	movwf	??_RTC_display+2
  1632  00B1  0861               	movf	??_RTC_display+2,w
  1633  00B2  00BA               	movwf	_Time+9
  1634                           
  1635                           ;main_prueba3_mini2.c: 241:     Time[10] = minute % 10 + '0';
  1636  00B3  300A               	movlw	10
  1637  00B4  00F3               	movwf	___awmod@divisor
  1638  00B5  3000               	movlw	0
  1639  00B6  00F4               	movwf	___awmod@divisor+1
  1640  00B7  0878               	movf	_minute,w
  1641  00B8  00DF               	movwf	??_RTC_display
  1642  00B9  01E0               	clrf	??_RTC_display+1
  1643  00BA  085F               	movf	??_RTC_display,w
  1644  00BB  00F5               	movwf	___awmod@dividend
  1645  00BC  0860               	movf	??_RTC_display+1,w
  1646  00BD  00F6               	movwf	___awmod@dividend+1
  1647  00BE  120A  118A  232B  120A  118A  	fcall	___awmod
  1648  00C3  0873               	movf	?___awmod,w
  1649  00C4  3E30               	addlw	48
  1650  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1651  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1652  00C7  00E1               	movwf	??_RTC_display+2
  1653  00C8  0861               	movf	??_RTC_display+2,w
  1654  00C9  00BB               	movwf	_Time+10
  1655                           
  1656                           ;main_prueba3_mini2.c: 242:     Time[12] = second / 10 + '0';
  1657  00CA  300A               	movlw	10
  1658  00CB  00F3               	movwf	___awdiv@divisor
  1659  00CC  3000               	movlw	0
  1660  00CD  00F4               	movwf	___awdiv@divisor+1
  1661  00CE  0879               	movf	_second,w
  1662  00CF  00DF               	movwf	??_RTC_display
  1663  00D0  01E0               	clrf	??_RTC_display+1
  1664  00D1  085F               	movf	??_RTC_display,w
  1665  00D2  00F5               	movwf	___awdiv@dividend
  1666  00D3  0860               	movf	??_RTC_display+1,w
  1667  00D4  00F6               	movwf	___awdiv@dividend+1
  1668  00D5  120A  118A  225A  120A  118A  	fcall	___awdiv
  1669  00DA  0873               	movf	?___awdiv,w
  1670  00DB  3E30               	addlw	48
  1671  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1672  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1673  00DE  00E1               	movwf	??_RTC_display+2
  1674  00DF  0861               	movf	??_RTC_display+2,w
  1675  00E0  00BD               	movwf	_Time+12
  1676                           
  1677                           ;main_prueba3_mini2.c: 243:     Time[13] = second % 10 + '0';
  1678  00E1  300A               	movlw	10
  1679  00E2  00F3               	movwf	___awmod@divisor
  1680  00E3  3000               	movlw	0
  1681  00E4  00F4               	movwf	___awmod@divisor+1
  1682  00E5  0879               	movf	_second,w
  1683  00E6  00DF               	movwf	??_RTC_display
  1684  00E7  01E0               	clrf	??_RTC_display+1
  1685  00E8  085F               	movf	??_RTC_display,w
  1686  00E9  00F5               	movwf	___awmod@dividend
  1687  00EA  0860               	movf	??_RTC_display+1,w
  1688  00EB  00F6               	movwf	___awmod@dividend+1
  1689  00EC  120A  118A  232B  120A  118A  	fcall	___awmod
  1690  00F1  0873               	movf	?___awmod,w
  1691  00F2  3E30               	addlw	48
  1692  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1693  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1694  00F5  00E1               	movwf	??_RTC_display+2
  1695  00F6  0861               	movf	??_RTC_display+2,w
  1696  00F7  00BE               	movwf	_Time+13
  1697                           
  1698                           ;main_prueba3_mini2.c: 245:     Date[6] = m_day / 10 + '0';
  1699  00F8  300A               	movlw	10
  1700  00F9  00F3               	movwf	___awdiv@divisor
  1701  00FA  3000               	movlw	0
  1702  00FB  00F4               	movwf	___awdiv@divisor+1
  1703  00FC  0858               	movf	_m_day,w
  1704  00FD  00DF               	movwf	??_RTC_display
  1705  00FE  01E0               	clrf	??_RTC_display+1
  1706  00FF  085F               	movf	??_RTC_display,w
  1707  0100  00F5               	movwf	___awdiv@dividend
  1708  0101  0860               	movf	??_RTC_display+1,w
  1709  0102  00F6               	movwf	___awdiv@dividend+1
  1710  0103  120A  118A  225A  120A  118A  	fcall	___awdiv
  1711  0108  0873               	movf	?___awdiv,w
  1712  0109  3E30               	addlw	48
  1713  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1714  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1715  010C  00E1               	movwf	??_RTC_display+2
  1716  010D  0861               	movf	??_RTC_display+2,w
  1717  010E  00A6               	movwf	_Date+6
  1718                           
  1719                           ;main_prueba3_mini2.c: 246:     Date[7] = m_day % 10 + '0';
  1720  010F  300A               	movlw	10
  1721  0110  00F3               	movwf	___awmod@divisor
  1722  0111  3000               	movlw	0
  1723  0112  00F4               	movwf	___awmod@divisor+1
  1724  0113  0858               	movf	_m_day,w
  1725  0114  00DF               	movwf	??_RTC_display
  1726  0115  01E0               	clrf	??_RTC_display+1
  1727  0116  085F               	movf	??_RTC_display,w
  1728  0117  00F5               	movwf	___awmod@dividend
  1729  0118  0860               	movf	??_RTC_display+1,w
  1730  0119  00F6               	movwf	___awmod@dividend+1
  1731  011A  120A  118A  232B  120A  118A  	fcall	___awmod
  1732  011F  0873               	movf	?___awmod,w
  1733  0120  3E30               	addlw	48
  1734  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0123  00E1               	movwf	??_RTC_display+2
  1737  0124  0861               	movf	??_RTC_display+2,w
  1738  0125  00A7               	movwf	_Date+7
  1739                           
  1740                           ;main_prueba3_mini2.c: 247:     Date[9] = month / 10 + '0';
  1741  0126  300A               	movlw	10
  1742  0127  00F3               	movwf	___awdiv@divisor
  1743  0128  3000               	movlw	0
  1744  0129  00F4               	movwf	___awdiv@divisor+1
  1745  012A  0857               	movf	_month,w
  1746  012B  00DF               	movwf	??_RTC_display
  1747  012C  01E0               	clrf	??_RTC_display+1
  1748  012D  085F               	movf	??_RTC_display,w
  1749  012E  00F5               	movwf	___awdiv@dividend
  1750  012F  0860               	movf	??_RTC_display+1,w
  1751  0130  00F6               	movwf	___awdiv@dividend+1
  1752  0131  120A  118A  225A  120A  118A  	fcall	___awdiv
  1753  0136  0873               	movf	?___awdiv,w
  1754  0137  3E30               	addlw	48
  1755  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1757  013A  00E1               	movwf	??_RTC_display+2
  1758  013B  0861               	movf	??_RTC_display+2,w
  1759  013C  00A9               	movwf	_Date+9
  1760                           
  1761                           ;main_prueba3_mini2.c: 248:     Date[10] = month % 10 + '0';
  1762  013D  300A               	movlw	10
  1763  013E  00F3               	movwf	___awmod@divisor
  1764  013F  3000               	movlw	0
  1765  0140  00F4               	movwf	___awmod@divisor+1
  1766  0141  0857               	movf	_month,w
  1767  0142  00DF               	movwf	??_RTC_display
  1768  0143  01E0               	clrf	??_RTC_display+1
  1769  0144  085F               	movf	??_RTC_display,w
  1770  0145  00F5               	movwf	___awmod@dividend
  1771  0146  0860               	movf	??_RTC_display+1,w
  1772  0147  00F6               	movwf	___awmod@dividend+1
  1773  0148  120A  118A  232B  120A  118A  	fcall	___awmod
  1774  014D  0873               	movf	?___awmod,w
  1775  014E  3E30               	addlw	48
  1776  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0151  00E1               	movwf	??_RTC_display+2
  1779  0152  0861               	movf	??_RTC_display+2,w
  1780  0153  00AA               	movwf	_Date+10
  1781                           
  1782                           ;main_prueba3_mini2.c: 249:     Date[14] = year / 10 + '0';
  1783  0154  300A               	movlw	10
  1784  0155  00F3               	movwf	___awdiv@divisor
  1785  0156  3000               	movlw	0
  1786  0157  00F4               	movwf	___awdiv@divisor+1
  1787  0158  0856               	movf	_year,w
  1788  0159  00DF               	movwf	??_RTC_display
  1789  015A  01E0               	clrf	??_RTC_display+1
  1790  015B  085F               	movf	??_RTC_display,w
  1791  015C  00F5               	movwf	___awdiv@dividend
  1792  015D  0860               	movf	??_RTC_display+1,w
  1793  015E  00F6               	movwf	___awdiv@dividend+1
  1794  015F  120A  118A  225A  120A  118A  	fcall	___awdiv
  1795  0164  0873               	movf	?___awdiv,w
  1796  0165  3E30               	addlw	48
  1797  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0168  00E1               	movwf	??_RTC_display+2
  1800  0169  0861               	movf	??_RTC_display+2,w
  1801  016A  00AE               	movwf	_Date+14
  1802                           
  1803                           ;main_prueba3_mini2.c: 250:     Date[15] = year % 10 + '0';
  1804  016B  300A               	movlw	10
  1805  016C  00F3               	movwf	___awmod@divisor
  1806  016D  3000               	movlw	0
  1807  016E  00F4               	movwf	___awmod@divisor+1
  1808  016F  0856               	movf	_year,w
  1809  0170  00DF               	movwf	??_RTC_display
  1810  0171  01E0               	clrf	??_RTC_display+1
  1811  0172  085F               	movf	??_RTC_display,w
  1812  0173  00F5               	movwf	___awmod@dividend
  1813  0174  0860               	movf	??_RTC_display+1,w
  1814  0175  00F6               	movwf	___awmod@dividend+1
  1815  0176  120A  118A  232B  120A  118A  	fcall	___awmod
  1816  017B  0873               	movf	?___awmod,w
  1817  017C  3E30               	addlw	48
  1818  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1819  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1820  017F  00E1               	movwf	??_RTC_display+2
  1821  0180  0861               	movf	??_RTC_display+2,w
  1822  0181  00AF               	movwf	_Date+15
  1823                           
  1824                           ;main_prueba3_mini2.c: 252:     Lcd_Set_Cursor(1,1);
  1825  0182  01F7               	clrf	Lcd_Set_Cursor@b
  1826  0183  0AF7               	incf	Lcd_Set_Cursor@b,f
  1827  0184  3001               	movlw	1
  1828  0185  120A  118A  2486  120A  118A  	fcall	_Lcd_Set_Cursor
  1829  018A                     l1885:
  1830                           
  1831                           ;main_prueba3_mini2.c: 253:     Lcd_Write_String(Time);
  1832  018A  3031               	movlw	(low (_Time| 0))& (0+255)
  1833  018B  00F6               	movwf	Lcd_Write_String@a
  1834  018C  3000               	movlw	0
  1835  018D  00F7               	movwf	Lcd_Write_String@a+1
  1836  018E  120A  118A  23D6  120A  118A  	fcall	_Lcd_Write_String
  1837  0193                     l1887:
  1838                           
  1839                           ;main_prueba3_mini2.c: 254:     Lcd_Set_Cursor(2,1);
  1840  0193  01F7               	clrf	Lcd_Set_Cursor@b
  1841  0194  0AF7               	incf	Lcd_Set_Cursor@b,f
  1842  0195  3002               	movlw	2
  1843  0196  120A  118A  2486  120A  118A  	fcall	_Lcd_Set_Cursor
  1844                           
  1845                           ;main_prueba3_mini2.c: 255:     Lcd_Write_String(Date);
  1846  019B  3020               	movlw	(low (_Date| 0))& (0+255)
  1847  019C  00F6               	movwf	Lcd_Write_String@a
  1848  019D  3000               	movlw	0
  1849  019E  00F7               	movwf	Lcd_Write_String@a+1
  1850  019F  120A  118A  23D6  120A  118A  	fcall	_Lcd_Write_String
  1851  01A4                     l119:
  1852  01A4  0008               	return
  1853  01A5                     __end_of_RTC_display:
  1854                           
  1855                           	psect	text5
  1856  051F                     __ptext5:	
  1857 ;; *************** function _bcd_to_decimal *****************
  1858 ;; Defined at:
  1859 ;;		line 218 in file "main_prueba3_mini2.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  number          1    wreg     unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  number          1    7[COMMON] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      unsigned char 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         1       0       0       0       0
  1875 ;;      Temps:          0       3       0       0       0
  1876 ;;      Totals:         1       3       0       0       0
  1877 ;;Total ram usage:        4 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    2
  1880 ;; This function calls:
  1881 ;;		___bmul
  1882 ;; This function is called by:
  1883 ;;		_RTC_display
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _bcd_to_decimal
  1889  051F                     _bcd_to_decimal:
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1893                           ;bcd_to_decimal@number stored from wreg
  1894  051F  00F7               	movwf	bcd_to_decimal@number
  1895  0520                     l1757:
  1896                           
  1897                           ;main_prueba3_mini2.c: 219:   return((number >> 4) * 10 + (number & 0x0F));
  1898  0520  300F               	movlw	15
  1899  0521  0577               	andwf	bcd_to_decimal@number,w
  1900  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0524  00DA               	movwf	??_bcd_to_decimal
  1903  0525  300A               	movlw	10
  1904  0526  00DB               	movwf	??_bcd_to_decimal+1
  1905  0527  085B               	movf	??_bcd_to_decimal+1,w
  1906  0528  00F3               	movwf	___bmul@multiplicand
  1907  0529  0877               	movf	bcd_to_decimal@number,w
  1908  052A  00DC               	movwf	??_bcd_to_decimal+2
  1909  052B  3004               	movlw	4
  1910  052C                     u1305:
  1911  052C  1003               	clrc
  1912  052D  0CDC               	rrf	??_bcd_to_decimal+2,f
  1913  052E  3EFF               	addlw	-1
  1914  052F  1D03               	skipz
  1915  0530  2D2C               	goto	u1305
  1916  0531  085C               	movf	??_bcd_to_decimal+2,w
  1917  0532  120A  118A  256B  120A  118A  	fcall	___bmul
  1918  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0539  075A               	addwf	??_bcd_to_decimal,w
  1921  053A                     l113:
  1922  053A  0008               	return
  1923  053B                     __end_of_bcd_to_decimal:
  1924                           
  1925                           	psect	text6
  1926  056B                     __ptext6:	
  1927 ;; *************** function ___bmul *****************
  1928 ;; Defined at:
  1929 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  multiplier      1    wreg     unsigned char 
  1932 ;;  multiplicand    1    3[COMMON] unsigned char 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  multiplier      1    6[COMMON] unsigned char 
  1935 ;;  product         1    5[COMMON] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      unsigned char 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         1       0       0       0       0
  1946 ;;      Locals:         2       0       0       0       0
  1947 ;;      Temps:          1       0       0       0       0
  1948 ;;      Totals:         4       0       0       0       0
  1949 ;;Total ram usage:        4 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_bcd_to_decimal
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function ___bmul
  1961  056B                     ___bmul:
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1965                           ;___bmul@multiplier stored from wreg
  1966  056B  00F6               	movwf	___bmul@multiplier
  1967  056C                     l1331:
  1968  056C  01F5               	clrf	___bmul@product
  1969  056D                     l1333:
  1970  056D  1C76               	btfss	___bmul@multiplier,0
  1971  056E  2D70               	goto	u651
  1972  056F  2D71               	goto	u650
  1973  0570                     u651:
  1974  0570  2D75               	goto	l1337
  1975  0571                     u650:
  1976  0571                     l1335:
  1977  0571  0873               	movf	___bmul@multiplicand,w
  1978  0572  00F4               	movwf	??___bmul
  1979  0573  0874               	movf	??___bmul,w
  1980  0574  07F5               	addwf	___bmul@product,f
  1981  0575                     l1337:
  1982  0575  1003               	clrc
  1983  0576  0DF3               	rlf	___bmul@multiplicand,f
  1984  0577                     l1339:
  1985  0577  1003               	clrc
  1986  0578  0CF6               	rrf	___bmul@multiplier,f
  1987  0579  0876               	movf	___bmul@multiplier,w
  1988  057A  1D03               	btfss	3,2
  1989  057B  2D7D               	goto	u661
  1990  057C  2D7E               	goto	u660
  1991  057D                     u661:
  1992  057D  2D6D               	goto	l1333
  1993  057E                     u660:
  1994  057E                     l1341:
  1995  057E  0875               	movf	___bmul@product,w
  1996  057F                     l375:
  1997  057F  0008               	return
  1998  0580                     __end_of___bmul:
  1999                           
  2000                           	psect	text7
  2001  032B                     __ptext7:	
  2002 ;; *************** function ___awmod *****************
  2003 ;; Defined at:
  2004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  divisor         2    3[COMMON] int 
  2007 ;;  dividend        2    5[COMMON] int 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  sign            1    1[BANK0 ] unsigned char 
  2010 ;;  counter         1    0[BANK0 ] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2    3[COMMON] int 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         4       0       0       0       0
  2021 ;;      Locals:         0       2       0       0       0
  2022 ;;      Temps:          1       0       0       0       0
  2023 ;;      Totals:         5       2       0       0       0
  2024 ;;Total ram usage:        7 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_RTC_display
  2031 ;;		_edit
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function ___awmod
  2037  032B                     ___awmod:
  2038  032B                     l1777:	
  2039                           ;incstack = 0
  2040                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2041                           
  2042  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2043  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2044  032D  01DB               	clrf	___awmod@sign
  2045  032E                     l1779:
  2046  032E  1FF6               	btfss	___awmod@dividend+1,7
  2047  032F  2B31               	goto	u1341
  2048  0330  2B32               	goto	u1340
  2049  0331                     u1341:
  2050  0331  2B39               	goto	l1785
  2051  0332                     u1340:
  2052  0332                     l1781:
  2053  0332  09F5               	comf	___awmod@dividend,f
  2054  0333  09F6               	comf	___awmod@dividend+1,f
  2055  0334  0AF5               	incf	___awmod@dividend,f
  2056  0335  1903               	skipnz
  2057  0336  0AF6               	incf	___awmod@dividend+1,f
  2058  0337                     l1783:
  2059  0337  01DB               	clrf	___awmod@sign
  2060  0338  0ADB               	incf	___awmod@sign,f
  2061  0339                     l1785:
  2062  0339  1FF4               	btfss	___awmod@divisor+1,7
  2063  033A  2B3C               	goto	u1351
  2064  033B  2B3D               	goto	u1350
  2065  033C                     u1351:
  2066  033C  2B42               	goto	l1789
  2067  033D                     u1350:
  2068  033D                     l1787:
  2069  033D  09F3               	comf	___awmod@divisor,f
  2070  033E  09F4               	comf	___awmod@divisor+1,f
  2071  033F  0AF3               	incf	___awmod@divisor,f
  2072  0340  1903               	skipnz
  2073  0341  0AF4               	incf	___awmod@divisor+1,f
  2074  0342                     l1789:
  2075  0342  0873               	movf	___awmod@divisor,w
  2076  0343  0474               	iorwf	___awmod@divisor+1,w
  2077  0344  1903               	btfsc	3,2
  2078  0345  2B47               	goto	u1361
  2079  0346  2B48               	goto	u1360
  2080  0347                     u1361:
  2081  0347  2B77               	goto	l1807
  2082  0348                     u1360:
  2083  0348                     l1791:
  2084  0348  01DA               	clrf	___awmod@counter
  2085  0349  0ADA               	incf	___awmod@counter,f
  2086  034A  2B56               	goto	l1797
  2087  034B                     l1793:
  2088  034B  3001               	movlw	1
  2089  034C                     u1375:
  2090  034C  1003               	clrc
  2091  034D  0DF3               	rlf	___awmod@divisor,f
  2092  034E  0DF4               	rlf	___awmod@divisor+1,f
  2093  034F  3EFF               	addlw	-1
  2094  0350  1D03               	skipz
  2095  0351  2B4C               	goto	u1375
  2096  0352                     l1795:
  2097  0352  3001               	movlw	1
  2098  0353  00F7               	movwf	??___awmod
  2099  0354  0877               	movf	??___awmod,w
  2100  0355  07DA               	addwf	___awmod@counter,f
  2101  0356                     l1797:
  2102  0356  1FF4               	btfss	___awmod@divisor+1,7
  2103  0357  2B59               	goto	u1381
  2104  0358  2B5A               	goto	u1380
  2105  0359                     u1381:
  2106  0359  2B4B               	goto	l1793
  2107  035A                     u1380:
  2108  035A                     l1799:
  2109  035A  0874               	movf	___awmod@divisor+1,w
  2110  035B  0276               	subwf	___awmod@dividend+1,w
  2111  035C  1D03               	skipz
  2112  035D  2B60               	goto	u1395
  2113  035E  0873               	movf	___awmod@divisor,w
  2114  035F  0275               	subwf	___awmod@dividend,w
  2115  0360                     u1395:
  2116  0360  1C03               	skipc
  2117  0361  2B63               	goto	u1391
  2118  0362  2B64               	goto	u1390
  2119  0363                     u1391:
  2120  0363  2B6A               	goto	l1803
  2121  0364                     u1390:
  2122  0364                     l1801:
  2123  0364  0873               	movf	___awmod@divisor,w
  2124  0365  02F5               	subwf	___awmod@dividend,f
  2125  0366  0874               	movf	___awmod@divisor+1,w
  2126  0367  1C03               	skipc
  2127  0368  03F6               	decf	___awmod@dividend+1,f
  2128  0369  02F6               	subwf	___awmod@dividend+1,f
  2129  036A                     l1803:
  2130  036A  3001               	movlw	1
  2131  036B                     u1405:
  2132  036B  1003               	clrc
  2133  036C  0CF4               	rrf	___awmod@divisor+1,f
  2134  036D  0CF3               	rrf	___awmod@divisor,f
  2135  036E  3EFF               	addlw	-1
  2136  036F  1D03               	skipz
  2137  0370  2B6B               	goto	u1405
  2138  0371                     l1805:
  2139  0371  3001               	movlw	1
  2140  0372  02DA               	subwf	___awmod@counter,f
  2141  0373  1D03               	btfss	3,2
  2142  0374  2B76               	goto	u1411
  2143  0375  2B77               	goto	u1410
  2144  0376                     u1411:
  2145  0376  2B5A               	goto	l1799
  2146  0377                     u1410:
  2147  0377                     l1807:
  2148  0377  085B               	movf	___awmod@sign,w
  2149  0378  1903               	btfsc	3,2
  2150  0379  2B7B               	goto	u1421
  2151  037A  2B7C               	goto	u1420
  2152  037B                     u1421:
  2153  037B  2B81               	goto	l1811
  2154  037C                     u1420:
  2155  037C                     l1809:
  2156  037C  09F5               	comf	___awmod@dividend,f
  2157  037D  09F6               	comf	___awmod@dividend+1,f
  2158  037E  0AF5               	incf	___awmod@dividend,f
  2159  037F  1903               	skipnz
  2160  0380  0AF6               	incf	___awmod@dividend+1,f
  2161  0381                     l1811:
  2162  0381  0876               	movf	___awmod@dividend+1,w
  2163  0382  00F4               	movwf	?___awmod+1
  2164  0383  0875               	movf	___awmod@dividend,w
  2165  0384  00F3               	movwf	?___awmod
  2166  0385                     l515:
  2167  0385  0008               	return
  2168  0386                     __end_of___awmod:
  2169                           
  2170                           	psect	text8
  2171  025A                     __ptext8:	
  2172 ;; *************** function ___awdiv *****************
  2173 ;; Defined at:
  2174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  divisor         2    3[COMMON] int 
  2177 ;;  dividend        2    5[COMMON] int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  quotient        2    2[BANK0 ] int 
  2180 ;;  sign            1    1[BANK0 ] unsigned char 
  2181 ;;  counter         1    0[BANK0 ] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  2    3[COMMON] int 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2191 ;;      Params:         4       0       0       0       0
  2192 ;;      Locals:         0       4       0       0       0
  2193 ;;      Temps:          1       0       0       0       0
  2194 ;;      Totals:         5       4       0       0       0
  2195 ;;Total ram usage:        9 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_RTC_display
  2202 ;;		_edit
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function ___awdiv
  2208  025A                     ___awdiv:
  2209  025A                     l1409:	
  2210                           ;incstack = 0
  2211                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2212                           
  2213  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2214  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2215  025C  01DB               	clrf	___awdiv@sign
  2216  025D                     l1411:
  2217  025D  1FF4               	btfss	___awdiv@divisor+1,7
  2218  025E  2A60               	goto	u831
  2219  025F  2A61               	goto	u830
  2220  0260                     u831:
  2221  0260  2A68               	goto	l1417
  2222  0261                     u830:
  2223  0261                     l1413:
  2224  0261  09F3               	comf	___awdiv@divisor,f
  2225  0262  09F4               	comf	___awdiv@divisor+1,f
  2226  0263  0AF3               	incf	___awdiv@divisor,f
  2227  0264  1903               	skipnz
  2228  0265  0AF4               	incf	___awdiv@divisor+1,f
  2229  0266                     l1415:
  2230  0266  01DB               	clrf	___awdiv@sign
  2231  0267  0ADB               	incf	___awdiv@sign,f
  2232  0268                     l1417:
  2233  0268  1FF6               	btfss	___awdiv@dividend+1,7
  2234  0269  2A6B               	goto	u841
  2235  026A  2A6C               	goto	u840
  2236  026B                     u841:
  2237  026B  2A75               	goto	l1423
  2238  026C                     u840:
  2239  026C                     l1419:
  2240  026C  09F5               	comf	___awdiv@dividend,f
  2241  026D  09F6               	comf	___awdiv@dividend+1,f
  2242  026E  0AF5               	incf	___awdiv@dividend,f
  2243  026F  1903               	skipnz
  2244  0270  0AF6               	incf	___awdiv@dividend+1,f
  2245  0271                     l1421:
  2246  0271  3001               	movlw	1
  2247  0272  00F7               	movwf	??___awdiv
  2248  0273  0877               	movf	??___awdiv,w
  2249  0274  06DB               	xorwf	___awdiv@sign,f
  2250  0275                     l1423:
  2251  0275  01DC               	clrf	___awdiv@quotient
  2252  0276  01DD               	clrf	___awdiv@quotient+1
  2253  0277                     l1425:
  2254  0277  0873               	movf	___awdiv@divisor,w
  2255  0278  0474               	iorwf	___awdiv@divisor+1,w
  2256  0279  1903               	btfsc	3,2
  2257  027A  2A7C               	goto	u851
  2258  027B  2A7D               	goto	u850
  2259  027C                     u851:
  2260  027C  2AB4               	goto	l1445
  2261  027D                     u850:
  2262  027D                     l1427:
  2263  027D  01DA               	clrf	___awdiv@counter
  2264  027E  0ADA               	incf	___awdiv@counter,f
  2265  027F  2A8B               	goto	l1433
  2266  0280                     l1429:
  2267  0280  3001               	movlw	1
  2268  0281                     u865:
  2269  0281  1003               	clrc
  2270  0282  0DF3               	rlf	___awdiv@divisor,f
  2271  0283  0DF4               	rlf	___awdiv@divisor+1,f
  2272  0284  3EFF               	addlw	-1
  2273  0285  1D03               	skipz
  2274  0286  2A81               	goto	u865
  2275  0287                     l1431:
  2276  0287  3001               	movlw	1
  2277  0288  00F7               	movwf	??___awdiv
  2278  0289  0877               	movf	??___awdiv,w
  2279  028A  07DA               	addwf	___awdiv@counter,f
  2280  028B                     l1433:
  2281  028B  1FF4               	btfss	___awdiv@divisor+1,7
  2282  028C  2A8E               	goto	u871
  2283  028D  2A8F               	goto	u870
  2284  028E                     u871:
  2285  028E  2A80               	goto	l1429
  2286  028F                     u870:
  2287  028F                     l1435:
  2288  028F  3001               	movlw	1
  2289  0290                     u885:
  2290  0290  1003               	clrc
  2291  0291  0DDC               	rlf	___awdiv@quotient,f
  2292  0292  0DDD               	rlf	___awdiv@quotient+1,f
  2293  0293  3EFF               	addlw	-1
  2294  0294  1D03               	skipz
  2295  0295  2A90               	goto	u885
  2296  0296  0874               	movf	___awdiv@divisor+1,w
  2297  0297  0276               	subwf	___awdiv@dividend+1,w
  2298  0298  1D03               	skipz
  2299  0299  2A9C               	goto	u895
  2300  029A  0873               	movf	___awdiv@divisor,w
  2301  029B  0275               	subwf	___awdiv@dividend,w
  2302  029C                     u895:
  2303  029C  1C03               	skipc
  2304  029D  2A9F               	goto	u891
  2305  029E  2AA0               	goto	u890
  2306  029F                     u891:
  2307  029F  2AA7               	goto	l1441
  2308  02A0                     u890:
  2309  02A0                     l1437:
  2310  02A0  0873               	movf	___awdiv@divisor,w
  2311  02A1  02F5               	subwf	___awdiv@dividend,f
  2312  02A2  0874               	movf	___awdiv@divisor+1,w
  2313  02A3  1C03               	skipc
  2314  02A4  03F6               	decf	___awdiv@dividend+1,f
  2315  02A5  02F6               	subwf	___awdiv@dividend+1,f
  2316  02A6                     l1439:
  2317  02A6  145C               	bsf	___awdiv@quotient,0
  2318  02A7                     l1441:
  2319  02A7  3001               	movlw	1
  2320  02A8                     u905:
  2321  02A8  1003               	clrc
  2322  02A9  0CF4               	rrf	___awdiv@divisor+1,f
  2323  02AA  0CF3               	rrf	___awdiv@divisor,f
  2324  02AB  3EFF               	addlw	-1
  2325  02AC  1D03               	skipz
  2326  02AD  2AA8               	goto	u905
  2327  02AE                     l1443:
  2328  02AE  3001               	movlw	1
  2329  02AF  02DA               	subwf	___awdiv@counter,f
  2330  02B0  1D03               	btfss	3,2
  2331  02B1  2AB3               	goto	u911
  2332  02B2  2AB4               	goto	u910
  2333  02B3                     u911:
  2334  02B3  2A8F               	goto	l1435
  2335  02B4                     u910:
  2336  02B4                     l1445:
  2337  02B4  085B               	movf	___awdiv@sign,w
  2338  02B5  1903               	btfsc	3,2
  2339  02B6  2AB8               	goto	u921
  2340  02B7  2AB9               	goto	u920
  2341  02B8                     u921:
  2342  02B8  2ABE               	goto	l1449
  2343  02B9                     u920:
  2344  02B9                     l1447:
  2345  02B9  09DC               	comf	___awdiv@quotient,f
  2346  02BA  09DD               	comf	___awdiv@quotient+1,f
  2347  02BB  0ADC               	incf	___awdiv@quotient,f
  2348  02BC  1903               	skipnz
  2349  02BD  0ADD               	incf	___awdiv@quotient+1,f
  2350  02BE                     l1449:
  2351  02BE  085D               	movf	___awdiv@quotient+1,w
  2352  02BF  00F4               	movwf	?___awdiv+1
  2353  02C0  085C               	movf	___awdiv@quotient,w
  2354  02C1  00F3               	movwf	?___awdiv
  2355  02C2                     l502:
  2356  02C2  0008               	return
  2357  02C3                     __end_of___awdiv:
  2358                           
  2359                           	psect	text9
  2360  03D6                     __ptext9:	
  2361 ;; *************** function _Lcd_Write_String *****************
  2362 ;; Defined at:
  2363 ;;		line 71 in file "LCD.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  a               2    6[COMMON] PTR unsigned char 
  2366 ;;		 -> STR_2(3), Date(17), Time(15), STR_1(12), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  i               2    3[BANK0 ] int 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         2       0       0       0       0
  2379 ;;      Locals:         0       2       0       0       0
  2380 ;;      Temps:          0       3       0       0       0
  2381 ;;      Totals:         2       5       0       0       0
  2382 ;;Total ram usage:        7 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    3
  2385 ;; This function calls:
  2386 ;;		_Lcd_Write_Char
  2387 ;; This function is called by:
  2388 ;;		_RTC_display
  2389 ;;		_Show_val_LCD
  2390 ;;		_edit
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function _Lcd_Write_String
  2396  03D6                     _Lcd_Write_String:
  2397  03D6                     l1749:	
  2398                           ;incstack = 0
  2399                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2400                           
  2401                           
  2402                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  2403  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2404  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2405  03D8  01DD               	clrf	Lcd_Write_String@i
  2406  03D9  01DE               	clrf	Lcd_Write_String@i+1
  2407  03DA  2BFF               	goto	l1755
  2408  03DB                     l1751:
  2409                           
  2410                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  2411  03DB  085D               	movf	Lcd_Write_String@i,w
  2412  03DC  0776               	addwf	Lcd_Write_String@a,w
  2413  03DD  00DB               	movwf	??_Lcd_Write_String+1
  2414  03DE  0877               	movf	Lcd_Write_String@a+1,w
  2415  03DF  00DA               	movwf	??_Lcd_Write_String
  2416  03E0  1803               	skipnc
  2417  03E1  0ADA               	incf	??_Lcd_Write_String,f
  2418  03E2  1FDD               	btfss	Lcd_Write_String@i,7
  2419  03E3  2BE5               	goto	u1270
  2420  03E4  03DA               	decf	??_Lcd_Write_String,f
  2421  03E5                     u1270:
  2422  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2423  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2424  03E7  085A               	movf	??_Lcd_Write_String,w
  2425  03E8  00DC               	movwf	??_Lcd_Write_String+2
  2426  03E9  085C               	movf	??_Lcd_Write_String+2,w
  2427  03EA  00FF               	movwf	btemp+1
  2428  03EB  085B               	movf	??_Lcd_Write_String+1,w
  2429  03EC  0084               	movwf	4
  2430  03ED  120A  118A  2500  120A  118A  	fcall	stringtab
  2431  03F2  120A  118A  2555  120A  118A  	fcall	_Lcd_Write_Char
  2432  03F7                     l1753:
  2433  03F7  3001               	movlw	1
  2434  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2435  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2436  03FA  07DD               	addwf	Lcd_Write_String@i,f
  2437  03FB  1803               	skipnc
  2438  03FC  0ADE               	incf	Lcd_Write_String@i+1,f
  2439  03FD  3000               	movlw	0
  2440  03FE  07DE               	addwf	Lcd_Write_String@i+1,f
  2441  03FF                     l1755:
  2442  03FF  085D               	movf	Lcd_Write_String@i,w
  2443  0400  0776               	addwf	Lcd_Write_String@a,w
  2444  0401  00DB               	movwf	??_Lcd_Write_String+1
  2445  0402  0877               	movf	Lcd_Write_String@a+1,w
  2446  0403  00DA               	movwf	??_Lcd_Write_String
  2447  0404  1803               	skipnc
  2448  0405  0ADA               	incf	??_Lcd_Write_String,f
  2449  0406  1FDD               	btfss	Lcd_Write_String@i,7
  2450  0407  2C09               	goto	u1280
  2451  0408  03DA               	decf	??_Lcd_Write_String,f
  2452  0409                     u1280:
  2453  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2454  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2455  040B  085A               	movf	??_Lcd_Write_String,w
  2456  040C  00DC               	movwf	??_Lcd_Write_String+2
  2457  040D  085C               	movf	??_Lcd_Write_String+2,w
  2458  040E  00FF               	movwf	btemp+1
  2459  040F  085B               	movf	??_Lcd_Write_String+1,w
  2460  0410  0084               	movwf	4
  2461  0411  120A  118A  2500  120A  118A  	fcall	stringtab
  2462  0416  3A00               	xorlw	0
  2463  0417  1D03               	skipz
  2464  0418  2C1A               	goto	u1291
  2465  0419  2C1B               	goto	u1290
  2466  041A                     u1291:
  2467  041A  2BDB               	goto	l1751
  2468  041B                     u1290:
  2469  041B                     l251:
  2470  041B  0008               	return
  2471  041C                     __end_of_Lcd_Write_String:
  2472                           
  2473                           	psect	text10
  2474  0555                     __ptext10:	
  2475 ;; *************** function _Lcd_Write_Char *****************
  2476 ;; Defined at:
  2477 ;;		line 62 in file "LCD.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  a               1    wreg     unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  a               1    5[COMMON] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         1       0       0       0       0
  2493 ;;      Temps:          1       0       0       0       0
  2494 ;;      Totals:         2       0       0       0       0
  2495 ;;Total ram usage:        2 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    2
  2498 ;; This function calls:
  2499 ;;		_Lcd_Port
  2500 ;; This function is called by:
  2501 ;;		_Lcd_Write_String
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _Lcd_Write_Char
  2507  0555                     _Lcd_Write_Char:
  2508                           
  2509                           ;incstack = 0
  2510                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2511                           ;Lcd_Write_Char@a stored from wreg
  2512  0555  00F5               	movwf	Lcd_Write_Char@a
  2513  0556                     l1703:
  2514                           
  2515                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  2516  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0558  1409               	bsf	9,0	;volatile
  2519  0559                     l1705:
  2520                           
  2521                           ;LCD.c: 64:    Lcd_Port(a);
  2522  0559  0875               	movf	Lcd_Write_Char@a,w
  2523  055A  120A  118A  25EC  120A  118A  	fcall	_Lcd_Port
  2524  055F                     l1707:
  2525                           
  2526                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  2527  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0560  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0561  1509               	bsf	9,2	;volatile
  2530  0562                     l1709:
  2531                           
  2532                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2533  0562  301A               	movlw	26
  2534  0563  00F4               	movwf	??_Lcd_Write_Char
  2535  0564                     u1597:
  2536  0564  0BF4               	decfsz	??_Lcd_Write_Char,f
  2537  0565  2D64               	goto	u1597
  2538  0566  0000               	nop
  2539  0567                     l1711:
  2540                           
  2541                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  2542  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0569  1109               	bcf	9,2	;volatile
  2545  056A                     l245:
  2546  056A  0008               	return
  2547  056B                     __end_of_Lcd_Write_Char:
  2548                           
  2549                           	psect	text11
  2550  0486                     __ptext11:	
  2551 ;; *************** function _Lcd_Set_Cursor *****************
  2552 ;; Defined at:
  2553 ;;		line 49 in file "LCD.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  a               1    wreg     unsigned char 
  2556 ;;  b               1    7[COMMON] unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  a               1    1[BANK0 ] unsigned char 
  2559 ;;  temp            1    2[BANK0 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         1       0       0       0       0
  2570 ;;      Locals:         0       2       0       0       0
  2571 ;;      Temps:          0       1       0       0       0
  2572 ;;      Totals:         1       3       0       0       0
  2573 ;;Total ram usage:        4 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    3
  2576 ;; This function calls:
  2577 ;;		_Lcd_Cmd
  2578 ;; This function is called by:
  2579 ;;		_RTC_display
  2580 ;;		_Show_val_LCD
  2581 ;;		_edit
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _Lcd_Set_Cursor
  2587  0486                     _Lcd_Set_Cursor:
  2588                           
  2589                           ;incstack = 0
  2590                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2591                           ;Lcd_Set_Cursor@a stored from wreg
  2592  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0488  00DB               	movwf	Lcd_Set_Cursor@a
  2595  0489                     l1737:
  2596                           
  2597                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  2598  0489  035B               	decf	Lcd_Set_Cursor@a,w
  2599  048A  1D03               	btfss	3,2
  2600  048B  2C8D               	goto	u1251
  2601  048C  2C8E               	goto	u1250
  2602  048D                     u1251:
  2603  048D  2C9A               	goto	l1743
  2604  048E                     u1250:
  2605  048E                     l1739:
  2606                           
  2607                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  2608  048E  0877               	movf	Lcd_Set_Cursor@b,w
  2609  048F  3E7F               	addlw	127
  2610  0490  00DA               	movwf	??_Lcd_Set_Cursor
  2611  0491  085A               	movf	??_Lcd_Set_Cursor,w
  2612  0492  00DC               	movwf	Lcd_Set_Cursor@temp
  2613  0493                     l1741:
  2614                           
  2615                           ;LCD.c: 53:         Lcd_Cmd(temp);
  2616  0493  085C               	movf	Lcd_Set_Cursor@temp,w
  2617  0494  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2618                           
  2619                           ;LCD.c: 54:  }
  2620  0499  2CAB               	goto	l242
  2621  049A                     l1743:
  2622  049A  3002               	movlw	2
  2623  049B  065B               	xorwf	Lcd_Set_Cursor@a,w
  2624  049C  1D03               	btfss	3,2
  2625  049D  2C9F               	goto	u1261
  2626  049E  2CA0               	goto	u1260
  2627  049F                     u1261:
  2628  049F  2CAB               	goto	l242
  2629  04A0                     u1260:
  2630  04A0                     l1745:
  2631                           
  2632                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  2633  04A0  0877               	movf	Lcd_Set_Cursor@b,w
  2634  04A1  3EBF               	addlw	191
  2635  04A2  00DA               	movwf	??_Lcd_Set_Cursor
  2636  04A3  085A               	movf	??_Lcd_Set_Cursor,w
  2637  04A4  00DC               	movwf	Lcd_Set_Cursor@temp
  2638  04A5                     l1747:
  2639                           
  2640                           ;LCD.c: 57:   Lcd_Cmd(temp);
  2641  04A5  085C               	movf	Lcd_Set_Cursor@temp,w
  2642  04A6  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2643  04AB                     l242:
  2644  04AB  0008               	return
  2645  04AC                     __end_of_Lcd_Set_Cursor:
  2646                           
  2647                           	psect	text12
  2648  0386                     __ptext12:	
  2649 ;; *************** function _Lcd_Init *****************
  2650 ;; Defined at:
  2651 ;;		line 15 in file "LCD.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2665 ;;      Params:         0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0
  2667 ;;      Temps:          0       2       0       0       0
  2668 ;;      Totals:         0       2       0       0       0
  2669 ;;Total ram usage:        2 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    3
  2672 ;; This function calls:
  2673 ;;		_Lcd_Cmd
  2674 ;;		_Lcd_Port
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _Lcd_Init
  2682  0386                     _Lcd_Init:
  2683  0386                     l1839:	
  2684                           ;incstack = 0
  2685                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2686                           
  2687                           
  2688                           ;LCD.c: 16:   Lcd_Port(0x00);
  2689  0386  3000               	movlw	0
  2690  0387  120A  118A  25EC  120A  118A  	fcall	_Lcd_Port
  2691  038C                     l1841:
  2692                           
  2693                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2694  038C  3034               	movlw	52
  2695  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2696  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2697  038F  00DB               	movwf	??_Lcd_Init+1
  2698  0390  30F1               	movlw	241
  2699  0391  00DA               	movwf	??_Lcd_Init
  2700  0392                     u1607:
  2701  0392  0BDA               	decfsz	??_Lcd_Init,f
  2702  0393  2B92               	goto	u1607
  2703  0394  0BDB               	decfsz	??_Lcd_Init+1,f
  2704  0395  2B92               	goto	u1607
  2705  0396                     l1843:
  2706                           
  2707                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  2708  0396  3030               	movlw	48
  2709  0397  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2710                           
  2711                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2712  039C  300D               	movlw	13
  2713  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2714  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2715  039F  00DB               	movwf	??_Lcd_Init+1
  2716  03A0  30FB               	movlw	251
  2717  03A1  00DA               	movwf	??_Lcd_Init
  2718  03A2                     u1617:
  2719  03A2  0BDA               	decfsz	??_Lcd_Init,f
  2720  03A3  2BA2               	goto	u1617
  2721  03A4  0BDB               	decfsz	??_Lcd_Init+1,f
  2722  03A5  2BA2               	goto	u1617
  2723  03A6                     l1845:
  2724                           
  2725                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  2726  03A6  3030               	movlw	48
  2727  03A7  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2728  03AC                     l1847:
  2729                           
  2730                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2731  03AC  301D               	movlw	29
  2732  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2733  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2734  03AF  00DB               	movwf	??_Lcd_Init+1
  2735  03B0  3090               	movlw	144
  2736  03B1  00DA               	movwf	??_Lcd_Init
  2737  03B2                     u1627:
  2738  03B2  0BDA               	decfsz	??_Lcd_Init,f
  2739  03B3  2BB2               	goto	u1627
  2740  03B4  0BDB               	decfsz	??_Lcd_Init+1,f
  2741  03B5  2BB2               	goto	u1627
  2742  03B6  0000               	nop
  2743                           
  2744                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  2745  03B7  3030               	movlw	48
  2746  03B8  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2747                           
  2748                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  2749  03BD  3038               	movlw	56
  2750  03BE  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2751                           
  2752                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  2753  03C3  300C               	movlw	12
  2754  03C4  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2755                           
  2756                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  2757  03C9  3001               	movlw	1
  2758  03CA  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2759                           
  2760                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  2761  03CF  3006               	movlw	6
  2762  03D0  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2763  03D5                     l227:
  2764  03D5  0008               	return
  2765  03D6                     __end_of_Lcd_Init:
  2766                           
  2767                           	psect	text13
  2768  05A5                     __ptext13:	
  2769 ;; *************** function _Lcd_Clear *****************
  2770 ;; Defined at:
  2771 ;;		line 43 in file "LCD.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    3
  2792 ;; This function calls:
  2793 ;;		_Lcd_Cmd
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _Lcd_Clear
  2801  05A5                     _Lcd_Clear:
  2802  05A5                     l1849:	
  2803                           ;incstack = 0
  2804                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2805                           
  2806                           
  2807                           ;LCD.c: 44:  Lcd_Cmd(0);
  2808  05A5  3000               	movlw	0
  2809  05A6  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2810                           
  2811                           ;LCD.c: 45:  Lcd_Cmd(1);
  2812  05AB  3001               	movlw	1
  2813  05AC  120A  118A  253B  120A  118A  	fcall	_Lcd_Cmd
  2814  05B1                     l236:
  2815  05B1  0008               	return
  2816  05B2                     __end_of_Lcd_Clear:
  2817                           
  2818                           	psect	text14
  2819  053B                     __ptext14:	
  2820 ;; *************** function _Lcd_Cmd *****************
  2821 ;; Defined at:
  2822 ;;		line 34 in file "LCD.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  a               1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  a               1    6[COMMON] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       0       0       0
  2837 ;;      Locals:         1       0       0       0       0
  2838 ;;      Temps:          2       0       0       0       0
  2839 ;;      Totals:         3       0       0       0       0
  2840 ;;Total ram usage:        3 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    2
  2843 ;; This function calls:
  2844 ;;		_Lcd_Port
  2845 ;; This function is called by:
  2846 ;;		_Lcd_Init
  2847 ;;		_Lcd_Clear
  2848 ;;		_Lcd_Set_Cursor
  2849 ;;		_Lcd_Shift_Right
  2850 ;;		_Lcd_Shift_Left
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function _Lcd_Cmd
  2856  053B                     _Lcd_Cmd:
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2860                           ;Lcd_Cmd@a stored from wreg
  2861  053B  00F6               	movwf	Lcd_Cmd@a
  2862  053C                     l1693:
  2863                           
  2864                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  2865  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2866  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2867  053E  1009               	bcf	9,0	;volatile
  2868  053F                     l1695:
  2869                           
  2870                           ;LCD.c: 36:  Lcd_Port(a);
  2871  053F  0876               	movf	Lcd_Cmd@a,w
  2872  0540  120A  118A  25EC  120A  118A  	fcall	_Lcd_Port
  2873  0545                     l1697:
  2874                           
  2875                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  2876  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2877  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2878  0547  1509               	bsf	9,2	;volatile
  2879  0548                     l1699:
  2880                           
  2881                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2882  0548  300B               	movlw	11
  2883  0549  00F5               	movwf	??_Lcd_Cmd+1
  2884  054A  3062               	movlw	98
  2885  054B  00F4               	movwf	??_Lcd_Cmd
  2886  054C                     u1637:
  2887  054C  0BF4               	decfsz	??_Lcd_Cmd,f
  2888  054D  2D4C               	goto	u1637
  2889  054E  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2890  054F  2D4C               	goto	u1637
  2891  0550  0000               	nop
  2892  0551                     l1701:
  2893                           
  2894                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  2895  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2896  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0553  1109               	bcf	9,2	;volatile
  2898  0554                     l233:
  2899  0554  0008               	return
  2900  0555                     __end_of_Lcd_Cmd:
  2901                           
  2902                           	psect	text15
  2903  05EC                     __ptext15:	
  2904 ;; *************** function _Lcd_Port *****************
  2905 ;; Defined at:
  2906 ;;		line 30 in file "LCD.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  a               1    wreg     unsigned char 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  a               1    3[COMMON] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         1       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0
  2923 ;;      Totals:         1       0       0       0       0
  2924 ;;Total ram usage:        1 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_Lcd_Init
  2931 ;;		_Lcd_Cmd
  2932 ;;		_Lcd_Write_Char
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _Lcd_Port
  2938  05EC                     _Lcd_Port:
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _Lcd_Port: [wreg]
  2942                           ;Lcd_Port@a stored from wreg
  2943  05EC  00F3               	movwf	Lcd_Port@a
  2944  05ED                     l1691:
  2945                           
  2946                           ;LCD.c: 31:     PORTD = a;
  2947  05ED  0873               	movf	Lcd_Port@a,w
  2948  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2949  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2950  05F0  0088               	movwf	8	;volatile
  2951  05F1                     l230:
  2952  05F1  0008               	return
  2953  05F2                     __end_of_Lcd_Port:
  2954                           
  2955                           	psect	text16
  2956  05BF                     __ptext16:	
  2957 ;; *************** function _I2C_Master_Write *****************
  2958 ;; Defined at:
  2959 ;;		line 84 in file "I2C.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  d               2    3[COMMON] unsigned int 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0, pclath, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         2       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         2       0       0       0       0
  2977 ;;Total ram usage:        2 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    2
  2980 ;; This function calls:
  2981 ;;		_I2C_Master_Wait
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _I2C_Master_Write
  2989  05BF                     _I2C_Master_Write:
  2990  05BF                     l1855:	
  2991                           ;incstack = 0
  2992                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2993                           
  2994                           
  2995                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2996  05BF  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  2997  05C4                     l1857:
  2998                           
  2999                           ;I2C.c: 87:     SSPBUF = d;
  3000  05C4  0873               	movf	I2C_Master_Write@d,w
  3001  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3002  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3003  05C7  0093               	movwf	19	;volatile
  3004  05C8                     l204:
  3005  05C8  0008               	return
  3006  05C9                     __end_of_I2C_Master_Write:
  3007                           
  3008                           	psect	text17
  3009  05C9                     __ptext17:	
  3010 ;; *************** function _I2C_Master_Stop *****************
  3011 ;; Defined at:
  3012 ;;		line 73 in file "I2C.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    2
  3033 ;; This function calls:
  3034 ;;		_I2C_Master_Wait
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _I2C_Master_Stop
  3042  05C9                     _I2C_Master_Stop:
  3043  05C9                     l1879:	
  3044                           ;incstack = 0
  3045                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3046                           
  3047                           
  3048                           ;I2C.c: 75:     I2C_Master_Wait();
  3049  05C9  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3050  05CE                     l1881:
  3051                           
  3052                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  3053  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3054  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3055  05D0  1511               	bsf	17,2	;volatile
  3056  05D1                     l201:
  3057  05D1  0008               	return
  3058  05D2                     __end_of_I2C_Master_Stop:
  3059                           
  3060                           	psect	text18
  3061  05D2                     __ptext18:	
  3062 ;; *************** function _I2C_Master_Start *****************
  3063 ;; Defined at:
  3064 ;;		line 56 in file "I2C.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       0       0       0       0
  3079 ;;      Locals:         0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         0       0       0       0       0
  3082 ;;Total ram usage:        0 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    2
  3085 ;; This function calls:
  3086 ;;		_I2C_Master_Wait
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function _I2C_Master_Start
  3094  05D2                     _I2C_Master_Start:
  3095  05D2                     l1851:	
  3096                           ;incstack = 0
  3097                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3098                           
  3099                           
  3100                           ;I2C.c: 57:     I2C_Master_Wait();
  3101  05D2  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3102  05D7                     l1853:
  3103                           
  3104                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  3105  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3106  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  3107  05D9  1411               	bsf	17,0	;volatile
  3108  05DA                     l195:
  3109  05DA  0008               	return
  3110  05DB                     __end_of_I2C_Master_Start:
  3111                           
  3112                           	psect	text19
  3113  05DB                     __ptext19:	
  3114 ;; *************** function _I2C_Master_RepeatedStart *****************
  3115 ;; Defined at:
  3116 ;;		line 64 in file "I2C.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0
  3133 ;;      Totals:         0       0       0       0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    2
  3137 ;; This function calls:
  3138 ;;		_I2C_Master_Wait
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _I2C_Master_RepeatedStart
  3146  05DB                     _I2C_Master_RepeatedStart:
  3147  05DB                     l1859:	
  3148                           ;incstack = 0
  3149                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3150                           
  3151                           
  3152                           ;I2C.c: 66:     I2C_Master_Wait();
  3153  05DB  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3154  05E0                     l1861:
  3155                           
  3156                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3157  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3158  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3159  05E2  1491               	bsf	17,1	;volatile
  3160  05E3                     l198:
  3161  05E3  0008               	return
  3162  05E4                     __end_of_I2C_Master_RepeatedStart:
  3163                           
  3164                           	psect	text20
  3165  0456                     __ptext20:	
  3166 ;; *************** function _I2C_Master_Read *****************
  3167 ;; Defined at:
  3168 ;;		line 94 in file "I2C.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  a               2    3[COMMON] unsigned short 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  temp            2    0[BANK0 ] unsigned short 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  2    3[COMMON] unsigned short 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, pclath, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         2       0       0       0       0
  3183 ;;      Locals:         0       2       0       0       0
  3184 ;;      Temps:          2       0       0       0       0
  3185 ;;      Totals:         4       2       0       0       0
  3186 ;;Total ram usage:        6 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    2
  3189 ;; This function calls:
  3190 ;;		_I2C_Master_Wait
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _I2C_Master_Read
  3198  0456                     _I2C_Master_Read:
  3199  0456                     l1863:	
  3200                           ;incstack = 0
  3201                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3202                           
  3203                           
  3204                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3205  0456  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3206  045B                     l1865:
  3207                           
  3208                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3209  045B  1683               	bsf	3,5	;RP0=1, select bank1
  3210  045C  1303               	bcf	3,6	;RP1=0, select bank1
  3211  045D  1591               	bsf	17,3	;volatile
  3212                           
  3213                           ;I2C.c: 99:     I2C_Master_Wait();
  3214  045E  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3215  0463                     l1867:
  3216                           
  3217                           ;I2C.c: 100:     temp = SSPBUF;
  3218  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0465  0813               	movf	19,w	;volatile
  3221  0466  00F5               	movwf	??_I2C_Master_Read
  3222  0467  01F6               	clrf	??_I2C_Master_Read+1
  3223  0468  0875               	movf	??_I2C_Master_Read,w
  3224  0469  00DA               	movwf	I2C_Master_Read@temp
  3225  046A  0876               	movf	??_I2C_Master_Read+1,w
  3226  046B  00DB               	movwf	I2C_Master_Read@temp+1
  3227  046C                     l1869:
  3228                           
  3229                           ;I2C.c: 101:     I2C_Master_Wait();
  3230  046C  120A  118A  25B2  120A  118A  	fcall	_I2C_Master_Wait
  3231  0471                     l1871:
  3232                           
  3233                           ;I2C.c: 102:     if(a == 1){
  3234  0471  0373               	decf	I2C_Master_Read@a,w
  3235  0472  0474               	iorwf	I2C_Master_Read@a+1,w
  3236  0473  1D03               	btfss	3,2
  3237  0474  2C76               	goto	u1431
  3238  0475  2C77               	goto	u1430
  3239  0476                     u1431:
  3240  0476  2C7B               	goto	l207
  3241  0477                     u1430:
  3242  0477                     l1873:
  3243                           
  3244                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3245  0477  1683               	bsf	3,5	;RP0=1, select bank1
  3246  0478  1303               	bcf	3,6	;RP1=0, select bank1
  3247  0479  1291               	bcf	17,5	;volatile
  3248                           
  3249                           ;I2C.c: 104:     }else{
  3250  047A  2C7E               	goto	l208
  3251  047B                     l207:
  3252                           
  3253                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3254  047B  1683               	bsf	3,5	;RP0=1, select bank1
  3255  047C  1303               	bcf	3,6	;RP1=0, select bank1
  3256  047D  1691               	bsf	17,5	;volatile
  3257  047E                     l208:	
  3258                           ;I2C.c: 106:     }
  3259                           
  3260                           
  3261                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3262  047E  1611               	bsf	17,4	;volatile
  3263  047F                     l1875:
  3264                           
  3265                           ;I2C.c: 108:     return temp;
  3266  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0481  085B               	movf	I2C_Master_Read@temp+1,w
  3269  0482  00F4               	movwf	?_I2C_Master_Read+1
  3270  0483  085A               	movf	I2C_Master_Read@temp,w
  3271  0484  00F3               	movwf	?_I2C_Master_Read
  3272  0485                     l209:
  3273  0485  0008               	return
  3274  0486                     __end_of_I2C_Master_Read:
  3275                           
  3276                           	psect	text21
  3277  05B2                     __ptext21:	
  3278 ;; *************** function _I2C_Master_Wait *****************
  3279 ;; Defined at:
  3280 ;;		line 48 in file "I2C.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_I2C_Master_Start
  3305 ;;		_I2C_Master_RepeatedStart
  3306 ;;		_I2C_Master_Stop
  3307 ;;		_I2C_Master_Write
  3308 ;;		_I2C_Master_Read
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _I2C_Master_Wait
  3314  05B2                     _I2C_Master_Wait:
  3315  05B2                     l1773:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3318                           
  3319  05B2                     l189:	
  3320                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3321                           
  3322  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  3323  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  3324  05B4  1914               	btfsc	20,2	;volatile
  3325  05B5  2DB7               	goto	u1321
  3326  05B6  2DB8               	goto	u1320
  3327  05B7                     u1321:
  3328  05B7  2DB2               	goto	l189
  3329  05B8                     u1320:
  3330  05B8                     l1775:
  3331  05B8  0811               	movf	17,w	;volatile
  3332  05B9  391F               	andlw	31
  3333  05BA  1D03               	btfss	3,2
  3334  05BB  2DBD               	goto	u1331
  3335  05BC  2DBE               	goto	u1330
  3336  05BD                     u1331:
  3337  05BD  2DB2               	goto	l189
  3338  05BE                     u1330:
  3339  05BE                     l192:
  3340  05BE  0008               	return
  3341  05BF                     __end_of_I2C_Master_Wait:
  3342                           
  3343                           	psect	text22
  3344  0593                     __ptext22:	
  3345 ;; *************** function _ISR *****************
  3346 ;; Defined at:
  3347 ;;		line 91 in file "main_prueba3_mini2.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0
  3363 ;;      Temps:          3       0       0       0       0
  3364 ;;      Totals:         3       0       0       0       0
  3365 ;;Total ram usage:        3 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		Interrupt level 1
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _ISR
  3376  0593                     _ISR:
  3377  0593                     i1l1565:
  3378                           
  3379                           ;main_prueba3_mini2.c: 92:     if(PIR1bits.RCIF == 1){
  3380  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0594  1303               	bcf	3,6	;RP1=0, select bank0
  3382  0595  1E8C               	btfss	12,5	;volatile
  3383  0596  2D98               	goto	u103_21
  3384  0597  2D99               	goto	u103_20
  3385  0598                     u103_21:
  3386  0598  2D9E               	goto	i1l99
  3387  0599                     u103_20:
  3388  0599                     i1l1567:
  3389                           
  3390                           ;main_prueba3_mini2.c: 93:         data_recive = RCREG;
  3391  0599  081A               	movf	26,w	;volatile
  3392  059A  00F0               	movwf	??_ISR
  3393  059B  0870               	movf	??_ISR,w
  3394  059C  00D4               	movwf	_data_recive
  3395  059D                     i1l1577:	
  3396                           ;main_prueba3_mini2.c: 94:         if (data_recive == 'P11'){
  3397                           
  3398                           
  3399                           ;main_prueba3_mini2.c: 106:         data_recive = 0;
  3400  059D  01D4               	clrf	_data_recive
  3401  059E                     i1l99:
  3402  059E  0872               	movf	??_ISR+2,w
  3403  059F  008A               	movwf	10
  3404  05A0  0E71               	swapf	??_ISR+1,w
  3405  05A1  0083               	movwf	3
  3406  05A2  0EFE               	swapf	btemp,f
  3407  05A3  0E7E               	swapf	btemp,w
  3408  05A4  0009               	retfie
  3409  05A5                     __end_of_ISR:
  3410  007E                     btemp	set	126	;btemp
  3411  007E                     wtemp0	set	126
  3412                           
  3413                           	psect	intentry
  3414  0004                     __pintentry:	
  3415                           ;incstack = 0
  3416                           ; Regs used in _ISR: [wreg+status,2]
  3417                           
  3418  0004                     interrupt_function:
  3419  007E                     saved_w	set	btemp
  3420  0004  00FE               	movwf	btemp
  3421  0005  0E03               	swapf	3,w
  3422  0006  00F1               	movwf	??_ISR+1
  3423  0007  080A               	movf	10,w
  3424  0008  00F2               	movwf	??_ISR+2
  3425  0009  120A  118A  2D93   	ljmp	_ISR
  3426                           
  3427                           	psect	config
  3428                           
  3429                           ;Config register CONFIG1 @ 0x2007
  3430                           ;	Oscillator Selection bits
  3431                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3432                           ;	Watchdog Timer Enable bit
  3433                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3434                           ;	Power-up Timer Enable bit
  3435                           ;	PWRTE = OFF, PWRT disabled
  3436                           ;	RE3/MCLR pin function select bit
  3437                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3438                           ;	Code Protection bit
  3439                           ;	CP = OFF, Program memory code protection is disabled
  3440                           ;	Data Code Protection bit
  3441                           ;	CPD = OFF, Data memory code protection is disabled
  3442                           ;	Brown Out Reset Selection bits
  3443                           ;	BOREN = OFF, BOR disabled
  3444                           ;	Internal External Switchover bit
  3445                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3446                           ;	Fail-Safe Clock Monitor Enabled bit
  3447                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3448                           ;	Low Voltage Programming Enable bit
  3449                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3450                           ;	In-Circuit Debugger Mode bit
  3451                           ;	DEBUG = 0x1, unprogrammed default
  3452  2007                     	org	8199
  3453  2007  20D4               	dw	8404
  3454                           
  3455                           ;Config register CONFIG2 @ 0x2008
  3456                           ;	Brown-out Reset Selection bit
  3457                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3458                           ;	Flash Program Memory Self Write Enable bits
  3459                           ;	WRT = OFF, Write protection off
  3460  2008                     	org	8200
  3461  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        32
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[3]), Date(BANK0[17]), Time(BANK0[15]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->_Lcd_Write_String
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->_Lcd_Write_String

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6924
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    5231
                                              5 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    2013
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1642
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     552
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     794
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 21:37:39 2021

                                _i 007A                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 005B  
                               fsr 0004                        _RTC_display 002C  
                              l201 05D1                                l113 053A  
                              l204 05C8                                l230 05F1  
                              l207 047B                                l119 01A4  
                              l208 047E                                l209 0485  
                              l233 0554                                l242 04AB  
                              l227 03D5                                l251 041B  
                              l236 05B1                                l245 056A  
                              l157 04CD                                l502 02C2  
                              l192 05BE                                l186 0455  
                              l195 05DA                                l515 0385  
                              l189 05B2                                l198 05E3  
                              l375 057F                                l385 032A  
                              _GIE 005F                                _RB0 0030  
                              _RB1 0031                                _ISR 0593  
                              u650 0571                                u651 0570  
                              u660 057E                                u661 057D  
                              u910 02B4                                u830 0261  
                              u911 02B3                                u831 0260  
                              u920 02B9                                u840 026C  
                              u921 02B8                                u905 02A8  
                              u841 026B                                u850 027D  
                              u851 027C                                u870 028F  
                              u871 028E                                u865 0281  
                              u890 02A0                                u891 029F  
                              u885 0290                                u895 029C  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 005B                               ?_ISR 0070  
                             l1411 025D                               l1331 056C  
                             l1421 0271                               l1413 0261  
                             l1341 057E                               l1333 056D  
                             l1431 0287                               l1423 0275  
                             l1415 0266                               l1335 0571  
                             l1441 02A7                               l1433 028B  
                             l1425 0277                               l1417 0268  
                             l1409 025A                               l1337 0575  
                             l1443 02AE                               l1435 028F  
                             l1427 027D                               l1419 026C  
                             l1339 0577                               l1701 0551  
                             l1437 02A0                               l1429 0280  
                             l1445 02B4                               l1711 0567  
                             l1703 0556                               l1447 02B9  
                             l1439 02A6                               l1705 0559  
                             l1449 02BE                               l1801 0364  
                             l1721 02E9                               l1713 02C3  
                             l1707 055F                               l1811 0381  
                             l1803 036A                               l1731 031C  
                             l1723 02F2                               l1715 02D5  
                             l1741 0493                               l1709 0562  
                             l1805 0371                               l1725 0304  
                             l1717 02D8                               l1733 0322  
                             l1821 04B6                               l1901 01C5  
                             l1743 049A                               l1751 03DB  
                             l1807 0377                               l1727 0312  
                             l1719 02E5                               l1831 04BD  
                             l1823 04B7                               l1815 04AC  
                             l1911 01F9                               l1903 01CD  
                             l1841 038C                               l1745 04A0  
                             l1737 0489                               l1753 03F7  
                             l1809 037C                               l1729 0313  
                             l1761 041C                               l1833 04BE  
                             l1825 04B8                               l1817 04B3  
                             l1921 023D                               l1913 0208  
                             l1905 01D2                               l1851 05D2  
                             l1691 05ED                               l1843 0396  
                             l1747 04A5                               l1739 048E  
                             l1755 03FF                               l1771 0454  
                             l1763 0420                               l1835 04BF  
                             l1827 04B9                               l1819 04B5  
                             l1923 0242                               l1915 0211  
                             l1907 01DB                               l1773 05B2  
                             l1861 05E0                               l1853 05D7  
                             l1693 053C                               l1845 03A6  
                             l1749 03D6                               l1781 0332  
                             l1757 0520                               l1765 0423  
                             l1837 04C0                               l1829 04BC  
                             l1925 0247                               l1917 0220  
                             l1909 01EA                               l1775 05B8  
                             l1871 0471                               l1863 0456  
                             l1855 05BF                               l1695 053F  
                             l1847 03AC                               l1839 0386  
                             l1791 0348                               l1783 0337  
                             l1767 0452                               l1919 022F  
                             l1873 0477                               l1865 045B  
                             l1881 05CE                               l1857 05C4  
                             l1697 0545                               l1849 05A5  
                             l1793 034B                               l1785 0339  
                             l1777 032B                               l1769 0453  
                             l1875 047F                               l1867 0463  
                             l1859 05DB                               l1699 0548  
                             l1795 0352                               l1787 033D  
                             l1779 032E                               l1883 002C  
                             l1891 01AA                               l1869 046C  
                             l1797 0356                               l1789 0342  
                             l1885 018A                               l1893 01AD  
                             l1879 05C9                               l1799 035A  
                             l1887 0193                               l1895 01B2  
                             l1897 01B7                               l1889 01A5  
                             l1899 01BC                               STR_1 0510  
                             STR_2 051C                               u1200 02E9  
                             u1201 02E8                               u1220 0304  
                             u1221 0303                               u1310 0433  
                             u1215 02EB                               u1320 05B8  
                             u1240 0322                               u1321 05B7  
                             u1305 052C                               u1241 0321  
                             u1225 0300                               u1330 05BE  
                             u1250 048E                               u1410 0377  
                             u1331 05BD                               u1251 048D  
                             u1411 0376                               u1235 0314  
                             u1315 042E                               u1260 04A0  
                             u1420 037C                               u1340 0332  
                             u1180 02D5                               u1261 049F  
                             u1421 037B                               u1405 036B  
                             u1341 0331                               u1181 02D4  
                             u1430 0477                               u1270 03E5  
                             u1350 033D                               u1431 0476  
                             u1351 033C                               u1280 0409  
                             u1360 0348                               u1361 0347  
                             u1290 041B                               u1291 041A  
                             u1195 02DA                               u1380 035A  
                             u1381 0359                               u1390 0364  
                             u1607 0392                               u1391 0363  
                             u1375 034C                               u1617 03A2  
                             u1627 03B2                               u1395 0360  
                             u1637 054C                               u1587 024F  
                             u1597 0564                               _PEIE 005E  
                             i1l99 059E                               _Date 0020  
                             _Time 0031                  ?_Lcd_Write_String 0076  
 __end_of_I2C_Master_RepeatedStart 05E4                               _cont 0055  
                             _main 01A5                               _hour 0059  
                             _year 0056                               btemp 007E  
                             start 000C                 ??_Lcd_Write_String 005A  
                  __end_of_Lcd_Cmd 0555                  ___bmul@multiplier 0076  
                            ??_ISR 0070                   ?_I2C_Master_Init 0067  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 02C3                    __end_of___awmod 0386  
                            _ANSEL 0188                    __end_of___lldiv 032B  
                  ___awdiv@divisor 0073                    ___awdiv@counter 005A  
                            _RCREG 001A                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
          __size_of_Lcd_Set_Cursor 0026                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _m_day 0058  
                            _month 0057                              _setup 04AC  
                            pclath 000A                              status 0003  
                            wtemp0 007E                   __end_of_Lcd_Init 03D6  
                 __end_of_Lcd_Port 05F2                    __initialization 000F  
                     __end_of_main 025A                             ??_main 006B  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
                           ?_setup 0070                             _ANSELH 0189  
                           u103_20 0599                             u103_21 0598  
                           i1l1565 0593                             i1l1567 0599  
                           i1l1577 059D                          ??_Lcd_Cmd 0074  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 05DB                             ___bmul 056B  
                        ??___awdiv 0077                          ??___awmod 0077  
                        ??___lldiv 0073                   ___awdiv@quotient 005C  
                           _minute 0078                             _second 0079  
                  ___awmod@divisor 0073                    ___awmod@counter 005A  
                           saved_w 007E                    Lcd_Set_Cursor@a 005B  
                  Lcd_Set_Cursor@b 0077            __end_of__initialization 0028  
                __end_of_Lcd_Clear 05B2                ___bmul@multiplicand 0073  
                   __pcstackCOMMON 0070                       __pidataBANK0 04CE  
                    __end_of_setup 04CE                       ?_RTC_display 0070  
                   _Lcd_Set_Cursor 0486                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 0078  
                       __pbssBANK0 0040                         _data_total 0040  
                       __pmaintext 01A5                            ?___bmul 0073  
                       __pintentry 0004          __size_of_Lcd_Write_String 0046  
           __end_of_Lcd_Set_Cursor 04AC            __size_of_bcd_to_decimal 001C  
                       ??_Lcd_Init 005A                         ??_Lcd_Port 0073  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0500                     _Lcd_Write_Char 0555  
                          _Lcd_Cmd 053B                    __size_of___bmul 0015  
                          ___awdiv 025A                            ___awmod 032B  
                          ___lldiv 02C3                    ?_Lcd_Set_Cursor 0077  
                          __ptext1 04AC                            __ptext2 041C  
                          __ptext3 02C3                            __ptext4 002C  
                          __ptext5 051F                            __ptext6 056B  
                          __ptext7 032B                            __ptext8 025A  
                          __ptext9 03D6                       __size_of_ISR 0012  
                 ___awmod@dividend 0075           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 05E5  
           __end_of_Lcd_Write_Char 056B               end_of_initialization 0028  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 005A  
                  ___lldiv@counter 0066                   I2C_Master_Init@c 0067  
                 I2C_Master_Read@a 0073                          Lcd_Port@a 0073  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009               __size_of_RTC_display 0179  
                        _TRISCbits 0087                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0076                  Lcd_Write_String@i 005D  
                        _Lcd_Clear 05A5                     __end_of___bmul 0580  
                 _Lcd_Write_String 03D6                start_initialization 000F  
                   _bcd_to_decimal 051F                        __end_of_ISR 05A5  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                       ?_Lcd_Clear 0070                           ??___bmul 0074  
                       init_fetch0 0580                        __pdataBANK0 0020  
                  Lcd_Write_Char@a 0075             __end_of_bcd_to_decimal 053B  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 005A                        _data_recive 0054  
                         ?_Lcd_Cmd 0070                   _I2C_Master_Start 05D2  
                 _I2C_Master_Write 05BF                   ??_Lcd_Set_Cursor 005A  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 005A                          __pstrings 0500  
                  ?_bcd_to_decimal 0070               bcd_to_decimal@number 0077  
                   __size_of_setup 0022                  interrupt_function 0004  
                        clear_ram0 05E4                           Lcd_Cmd@a 0076  
                         _PIR1bits 000C                        ??_Lcd_Clear 0077  
                      __stringbase 050F                   ??_Lcd_Write_Char 0074  
                         _Lcd_Init 0386                           _Lcd_Port 05EC  
              I2C_Master_Read@temp 005A           __end_of_Lcd_Write_String 041C  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                    ??_RTC_display 005F                 __end_of__stringtab 0510  
                  _I2C_Master_Init 041C                    _I2C_Master_Read 0456  
                  _I2C_Master_Wait 05B2                    _I2C_Master_Stop 05C9  
                         __ptext10 0555                           __ptext11 0486  
                         __ptext20 0456                           __ptext12 0386  
                         __ptext21 05B2                           __ptext13 05A5  
                         __ptext22 0593                           __ptext14 053B  
                         __ptext15 05EC                           __ptext16 05BF  
                         __ptext17 05C9                           __ptext18 05D2  
                         __ptext19 05DB                      __size_of_main 00B5  
         __end_of_I2C_Master_Start 05DB           __end_of_I2C_Master_Write 05C9  
                         init_ram0 0584                __end_of_RTC_display 01A5  
                         intlevel1 0000                   ___lldiv@dividend 005E  
                        stringcode 050A                   ??_bcd_to_decimal 005A  
          __end_of_I2C_Master_Init 0456            __end_of_I2C_Master_Read 0486  
          __end_of_I2C_Master_Wait 05BF            __end_of_I2C_Master_Stop 05D2  
               Lcd_Set_Cursor@temp 005C                   ___lldiv@quotient 0062  
                I2C_Master_Write@d 0073                           stringdir 050A  
                         stringtab 0500                        _SSPCON2bits 0091  
