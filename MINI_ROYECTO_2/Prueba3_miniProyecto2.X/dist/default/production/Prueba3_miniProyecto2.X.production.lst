

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 21:48:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387                           
   388                           	psect	idataBANK0
   389  0531                     __pidataBANK0:
   390                           
   391                           ;initializer for _Date
   392  0531  3444               	retlw	68
   393  0532  3441               	retlw	65
   394  0533  3454               	retlw	84
   395  0534  3445               	retlw	69
   396  0535  343A               	retlw	58
   397  0536  3420               	retlw	32
   398  0537  3430               	retlw	48
   399  0538  3436               	retlw	54
   400  0539  342F               	retlw	47
   401  053A  3430               	retlw	48
   402  053B  3433               	retlw	51
   403  053C  342F               	retlw	47
   404  053D  3432               	retlw	50
   405  053E  3430               	retlw	48
   406  053F  3432               	retlw	50
   407  0540  3431               	retlw	49
   408  0541  3400               	retlw	0
   409                           
   410                           ;initializer for _Time
   411  0542  3454               	retlw	84
   412  0543  3449               	retlw	73
   413  0544  344D               	retlw	77
   414  0545  3445               	retlw	69
   415  0546  343A               	retlw	58
   416  0547  3420               	retlw	32
   417  0548  3432               	retlw	50
   418  0549  3430               	retlw	48
   419  054A  343A               	retlw	58
   420  054B  3433               	retlw	51
   421  054C  3437               	retlw	55
   422  054D  343A               	retlw	58
   423  054E  3430               	retlw	48
   424  054F  3430               	retlw	48
   425  0550  3400               	retlw	0
   426  0008                     _PORTDbits	set	8
   427  0009                     _PORTEbits	set	9
   428  0013                     _SSPBUF	set	19
   429  0014                     _SSPCON	set	20
   430  0009                     _PORTE	set	9
   431  0008                     _PORTD	set	8
   432  0007                     _PORTC	set	7
   433  0006                     _PORTB	set	6
   434  0005                     _PORTA	set	5
   435  0005                     _PORTAbits	set	5
   436  001A                     _RCREG	set	26
   437  000C                     _PIR1bits	set	12
   438  0063                     _SSPIF	set	99
   439  005E                     _PEIE	set	94
   440  005F                     _GIE	set	95
   441  0031                     _RB1	set	49
   442  0030                     _RB0	set	48
   443  0091                     _SSPCON2bits	set	145
   444  0094                     _SSPSTAT	set	148
   445  0093                     _SSPADD	set	147
   446  0091                     _SSPCON2	set	145
   447  0089                     _TRISE	set	137
   448  0087                     _TRISCbits	set	135
   449  0086                     _TRISB	set	134
   450  0085                     _TRISA	set	133
   451  0088                     _TRISD	set	136
   452  0463                     _SSPIE	set	1123
   453  043C                     _TRISC4	set	1084
   454  043B                     _TRISC3	set	1083
   455  0189                     _ANSELH	set	393
   456  0188                     _ANSEL	set	392
   457                           
   458                           	psect	strings
   459  05B2                     __pstrings:
   460  05B2                     stringtab:
   461  05B2                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  05B2  1BFF               	btfsc	btemp+1,7
   465  05B3  2DBC               	ljmp	stringcode
   466  05B4  1383               	bcf	3,7
   467  05B5  187F               	btfsc	btemp+1,0
   468  05B6  1783               	bsf	3,7
   469  05B7  0800               	movf	0,w
   470  05B8  0A84               	incf	4,f
   471  05B9  1903               	skipnz
   472  05BA  0AFF               	incf	btemp+1,f
   473  05BB  0008               	return
   474  05BC                     stringcode:
   475  05BC                     stringdir:
   476  05BC  3005               	movlw	high stringdir
   477  05BD  008A               	movwf	10
   478  05BE  0804               	movf	4,w
   479  05BF  0A84               	incf	4,f
   480  05C0  0782               	addwf	2,f
   481  05C1                     __stringbase:
   482  05C1  3400               	retlw	0
   483  05C2                     __end_of__stringtab:
   484  05C2                     STR_1:
   485  05C2  3420               	retlw	32	;' '
   486  05C3  3420               	retlw	32	;' '
   487  05C4  3400               	retlw	0
   488                           
   489                           	psect	cinit
   490  000F                     start_initialization:	
   491                           ; #config settings
   492                           
   493  000F                     __initialization:
   494                           
   495                           ; Initialize objects allocated to BANK0
   496  000F  1383               	bcf	3,7	;select IRP bank0
   497  0010  3040               	movlw	low (__pdataBANK0+32)
   498  0011  00FD               	movwf	btemp+-1
   499  0012  3005               	movlw	high __pidataBANK0
   500  0013  00FE               	movwf	btemp
   501  0014  3031               	movlw	low __pidataBANK0
   502  0015  00FF               	movwf	btemp+1
   503  0016  3020               	movlw	low __pdataBANK0
   504  0017  0084               	movwf	4
   505  0018  120A  118A  25C9  120A  118A  	fcall	init_ram0
   506                           
   507                           ; Clear objects allocated to BANK0
   508  001D  3040               	movlw	low __pbssBANK0
   509  001E  0084               	movwf	4
   510  001F  305A               	movlw	low (__pbssBANK0+26)
   511  0020  120A  118A  2629  120A  118A  	fcall	clear_ram0
   512                           
   513                           ; Clear objects allocated to COMMON
   514  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   515  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   516  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   517  0028                     end_of_initialization:	
   518                           ;End of C runtime variable initialization code
   519                           
   520  0028                     __end_of__initialization:
   521  0028  0183               	clrf	3
   522  0029  120A  118A  29A5   	ljmp	_main	;jump to C main() function
   523                           
   524                           	psect	bssCOMMON
   525  0078                     __pbssCOMMON:
   526  0078                     _m_day:
   527  0078                     	ds	1
   528  0079                     _second:
   529  0079                     	ds	1
   530  007A                     _i:
   531  007A                     	ds	1
   532                           
   533                           	psect	bssBANK0
   534  0040                     __pbssBANK0:
   535  0040                     _data_total:
   536  0040                     	ds	20
   537  0054                     _data_recive:
   538  0054                     	ds	1
   539  0055                     _cont:
   540  0055                     	ds	1
   541  0056                     _year:
   542  0056                     	ds	1
   543  0057                     _month:
   544  0057                     	ds	1
   545  0058                     _hour:
   546  0058                     	ds	1
   547  0059                     _minute:
   548  0059                     	ds	1
   549                           
   550                           	psect	dataBANK0
   551  0020                     __pdataBANK0:
   552  0020                     _Date:
   553  0020                     	ds	17
   554  0031                     _Time:
   555  0031                     	ds	15
   556                           
   557                           	psect	inittext
   558  05C5                     init_fetch0:	
   559                           ;	Called with low address in FSR and high address in W
   560                           
   561  05C5  087E               	movf	btemp,w
   562  05C6  008A               	movwf	10
   563  05C7  087F               	movf	btemp+1,w
   564  05C8  0082               	movwf	2
   565  05C9                     init_ram0:	
   566                           ;Called with:
   567                           ;	high address of idata address in btemp 
   568                           ;	low address of idata address in btemp+1 
   569                           ;	low address of data in FSR
   570                           ;	high address + 1 of data in btemp-1
   571                           
   572  05C9  120A  118A  25C5  120A  118A  	fcall	init_fetch0
   573  05CE  0080               	movwf	0
   574  05CF  0A84               	incf	4,f
   575  05D0  0804               	movf	4,w
   576  05D1  067D               	xorwf	btemp+-1,w
   577  05D2  1903               	btfsc	3,2
   578  05D3  3400               	retlw	0
   579  05D4  0AFF               	incf	btemp+1,f
   580  05D5  1903               	btfsc	3,2
   581  05D6  0AFE               	incf	btemp,f
   582  05D7  2DC9               	goto	init_ram0
   583                           
   584                           	psect	clrtext
   585  0629                     clear_ram0:	
   586                           ;	Called with FSR containing the base address, and
   587                           ;	W with the last address+1
   588                           
   589  0629  0064               	clrwdt	;clear the watchdog before getting into this loop
   590  062A                     clrloop0:
   591  062A  0180               	clrf	0	;clear RAM location pointed to by FSR
   592  062B  0A84               	incf	4,f	;increment pointer
   593  062C  0604               	xorwf	4,w	;XOR with final address
   594  062D  1903               	btfsc	3,2	;have we reached the end yet?
   595  062E  3400               	retlw	0	;all done for this memory range, return
   596  062F  0604               	xorwf	4,w	;XOR again to restore value
   597  0630  2E2A               	goto	clrloop0	;do the next byte
   598                           
   599                           	psect	cstackCOMMON
   600  0070                     __pcstackCOMMON:
   601  0070                     ?_setup:
   602  0070                     ?_Lcd_Init:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_Lcd_Clear:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_I2C_Master_Start:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_I2C_Master_Stop:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_I2C_Master_RepeatedStart:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_RTC_display:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_Lcd_Port:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_Lcd_Cmd:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_ISR:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ??_ISR:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_main:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_bcd_to_decimal:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Master_Wait:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_Lcd_Write_Char:	
   642                           ; 1 bytes @ 0x0
   643                           
   644                           
   645                           ; 1 bytes @ 0x0
   646  0070                     	ds	3
   647  0073                     ??_I2C_Master_Start:
   648  0073                     ?_I2C_Master_Write:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0073                     ??_I2C_Master_Stop:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ??_I2C_Master_RepeatedStart:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ??_Lcd_Port:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_I2C_Master_Wait:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ?___bmul:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??___lldiv:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ?_I2C_Master_Read:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ?___awdiv:	
   673                           ; 2 bytes @ 0x3
   674                           
   675  0073                     ?___awmod:	
   676                           ; 2 bytes @ 0x3
   677                           
   678  0073                     Lcd_Port@a:	
   679                           ; 2 bytes @ 0x3
   680                           
   681  0073                     ___bmul@multiplicand:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     I2C_Master_Write@d:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     I2C_Master_Read@a:	
   688                           ; 2 bytes @ 0x3
   689                           
   690  0073                     ___awdiv@divisor:	
   691                           ; 2 bytes @ 0x3
   692                           
   693  0073                     ___awmod@divisor:	
   694                           ; 2 bytes @ 0x3
   695                           
   696                           
   697                           ; 2 bytes @ 0x3
   698  0073                     	ds	1
   699  0074                     ??_I2C_Master_Init:
   700  0074                     ??_Lcd_Cmd:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??_Lcd_Write_Char:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ??___bmul:	
   707                           ; 1 bytes @ 0x4
   708                           
   709                           
   710                           ; 1 bytes @ 0x4
   711  0074                     	ds	1
   712  0075                     ??_I2C_Master_Write:
   713  0075                     ??_I2C_Master_Read:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     Lcd_Write_Char@a:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     ___bmul@product:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0075                     ___awdiv@dividend:	
   723                           ; 1 bytes @ 0x5
   724                           
   725  0075                     ___awmod@dividend:	
   726                           ; 2 bytes @ 0x5
   727                           
   728                           
   729                           ; 2 bytes @ 0x5
   730  0075                     	ds	1
   731  0076                     ?_Lcd_Write_String:
   732  0076                     Lcd_Cmd@a:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ___bmul@multiplier:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     Lcd_Write_String@a:	
   739                           ; 1 bytes @ 0x6
   740                           
   741                           
   742                           ; 2 bytes @ 0x6
   743  0076                     	ds	1
   744  0077                     ??_Lcd_Clear:
   745  0077                     ?_Lcd_Set_Cursor:	
   746                           ; 1 bytes @ 0x7
   747                           
   748  0077                     ??___awdiv:	
   749                           ; 1 bytes @ 0x7
   750                           
   751  0077                     ??___awmod:	
   752                           ; 1 bytes @ 0x7
   753                           
   754  0077                     bcd_to_decimal@number:	
   755                           ; 1 bytes @ 0x7
   756                           
   757  0077                     Lcd_Set_Cursor@b:	
   758                           ; 1 bytes @ 0x7
   759                           
   760                           
   761                           ; 1 bytes @ 0x7
   762  0077                     	ds	1
   763  0078                     ??_setup:
   764                           
   765                           	psect	cstackBANK0
   766  005A                     __pcstackBANK0:	
   767                           ; 1 bytes @ 0x8
   768                           
   769  005A                     ??_Lcd_Init:
   770  005A                     ??_Lcd_Set_Cursor:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  005A                     ??_Lcd_Write_String:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  005A                     ??_bcd_to_decimal:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  005A                     ?___lldiv:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  005A                     ___awdiv@counter:	
   783                           ; 4 bytes @ 0x0
   784                           
   785  005A                     ___awmod@counter:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  005A                     I2C_Master_Read@temp:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  005A                     ___lldiv@divisor:	
   792                           ; 2 bytes @ 0x0
   793                           
   794                           
   795                           ; 4 bytes @ 0x0
   796  005A                     	ds	1
   797  005B                     Lcd_Set_Cursor@a:
   798  005B                     ___awdiv@sign:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  005B                     ___awmod@sign:	
   802                           ; 1 bytes @ 0x1
   803                           
   804                           
   805                           ; 1 bytes @ 0x1
   806  005B                     	ds	1
   807  005C                     Lcd_Set_Cursor@temp:
   808  005C                     ___awdiv@quotient:	
   809                           ; 1 bytes @ 0x2
   810                           
   811                           
   812                           ; 2 bytes @ 0x2
   813  005C                     	ds	1
   814  005D                     Lcd_Write_String@i:
   815                           
   816                           ; 2 bytes @ 0x3
   817  005D                     	ds	1
   818  005E                     ___lldiv@dividend:
   819                           
   820                           ; 4 bytes @ 0x4
   821  005E                     	ds	1
   822  005F                     ??_RTC_display:
   823                           
   824                           ; 1 bytes @ 0x5
   825  005F                     	ds	3
   826  0062                     ___lldiv@quotient:
   827                           
   828                           ; 4 bytes @ 0x8
   829  0062                     	ds	4
   830  0066                     ___lldiv@counter:
   831                           
   832                           ; 1 bytes @ 0xC
   833  0066                     	ds	1
   834  0067                     ?_I2C_Master_Init:
   835  0067                     I2C_Master_Init@c:	
   836                           ; 1 bytes @ 0xD
   837                           
   838                           
   839                           ; 4 bytes @ 0xD
   840  0067                     	ds	4
   841  006B                     ??_main:
   842                           
   843                           ; 1 bytes @ 0x11
   844  006B                     	ds	3
   845                           
   846                           	psect	maintext
   847  01A5                     __pmaintext:	
   848 ;;
   849 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   850 ;;
   851 ;; *************** function _main *****************
   852 ;; Defined at:
   853 ;;		line 114 in file "main_prueba3_mini2.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : B00/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       3       0       0       0
   870 ;;      Totals:         0       3       0       0       0
   871 ;;Total ram usage:        3 bytes
   872 ;; Hardware stack levels required when called:    5
   873 ;; This function calls:
   874 ;;		_I2C_Master_Read
   875 ;;		_I2C_Master_RepeatedStart
   876 ;;		_I2C_Master_Start
   877 ;;		_I2C_Master_Stop
   878 ;;		_I2C_Master_Write
   879 ;;		_Lcd_Clear
   880 ;;		_Lcd_Init
   881 ;;		_RTC_display
   882 ;;		_setup
   883 ;; This function is called by:
   884 ;;		Startup code after reset
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _main
   890  01A5                     _main:
   891  01A5                     l1922:	
   892                           ;incstack = 0
   893                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   894                           
   895                           
   896                           ;main_prueba3_mini2.c: 115:     setup();
   897  01A5  120A  118A  250F  120A  118A  	fcall	_setup
   898  01AA                     l1924:
   899                           
   900                           ;main_prueba3_mini2.c: 116:     TRISD = 0x00;
   901  01AA  1683               	bsf	3,5	;RP0=1, select bank1
   902  01AB  1303               	bcf	3,6	;RP1=0, select bank1
   903  01AC  0188               	clrf	8	;volatile
   904  01AD                     l1926:
   905                           
   906                           ;main_prueba3_mini2.c: 117:     Lcd_Init();
   907  01AD  120A  118A  23E9  120A  118A  	fcall	_Lcd_Init
   908  01B2                     l1928:
   909                           
   910                           ;main_prueba3_mini2.c: 118:     Lcd_Clear();
   911  01B2  120A  118A  25EA  120A  118A  	fcall	_Lcd_Clear
   912  01B7                     l1930:
   913                           
   914                           ;main_prueba3_mini2.c: 168:           I2C_Master_Start();
   915  01B7  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Start
   916  01BC                     l1932:
   917                           
   918                           ;main_prueba3_mini2.c: 169:           I2C_Master_Write(0xD0);
   919  01BC  30D0               	movlw	208
   920  01BD  00F3               	movwf	I2C_Master_Write@d
   921  01BE  3000               	movlw	0
   922  01BF  00F4               	movwf	I2C_Master_Write@d+1
   923  01C0  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   924  01C5                     l1934:
   925                           
   926                           ;main_prueba3_mini2.c: 170:           I2C_Master_Write(0);
   927  01C5  3000               	movlw	0
   928  01C6  00F3               	movwf	I2C_Master_Write@d
   929  01C7  00F4               	movwf	I2C_Master_Write@d+1
   930  01C8  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   931  01CD                     l1936:
   932                           
   933                           ;main_prueba3_mini2.c: 171:           I2C_Master_Write(0);
   934  01CD  3000               	movlw	0
   935  01CE  00F3               	movwf	I2C_Master_Write@d
   936  01CF  00F4               	movwf	I2C_Master_Write@d+1
   937  01D0  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   938  01D5                     l1938:
   939                           
   940                           ;main_prueba3_mini2.c: 172:           I2C_Master_Write(minute);
   941  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   942  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   943  01D7  0859               	movf	_minute,w
   944  01D8  00EB               	movwf	??_main
   945  01D9  01EC               	clrf	??_main+1
   946  01DA  086B               	movf	??_main,w
   947  01DB  00F3               	movwf	I2C_Master_Write@d
   948  01DC  086C               	movf	??_main+1,w
   949  01DD  00F4               	movwf	I2C_Master_Write@d+1
   950  01DE  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   951  01E3                     l1940:
   952                           
   953                           ;main_prueba3_mini2.c: 173:           I2C_Master_Write(hour);
   954  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   955  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   956  01E5  0858               	movf	_hour,w
   957  01E6  00EB               	movwf	??_main
   958  01E7  01EC               	clrf	??_main+1
   959  01E8  086B               	movf	??_main,w
   960  01E9  00F3               	movwf	I2C_Master_Write@d
   961  01EA  086C               	movf	??_main+1,w
   962  01EB  00F4               	movwf	I2C_Master_Write@d+1
   963  01EC  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   964  01F1                     l1942:
   965                           
   966                           ;main_prueba3_mini2.c: 174:           I2C_Master_Write(1);
   967  01F1  3001               	movlw	1
   968  01F2  00F3               	movwf	I2C_Master_Write@d
   969  01F3  3000               	movlw	0
   970  01F4  00F4               	movwf	I2C_Master_Write@d+1
   971  01F5  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   972  01FA                     l1944:
   973                           
   974                           ;main_prueba3_mini2.c: 175:           I2C_Master_Write(6);
   975  01FA  3006               	movlw	6
   976  01FB  00F3               	movwf	I2C_Master_Write@d
   977  01FC  3000               	movlw	0
   978  01FD  00F4               	movwf	I2C_Master_Write@d+1
   979  01FE  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   980  0203                     l1946:
   981                           
   982                           ;main_prueba3_mini2.c: 176:           I2C_Master_Write(3);
   983  0203  3003               	movlw	3
   984  0204  00F3               	movwf	I2C_Master_Write@d
   985  0205  3000               	movlw	0
   986  0206  00F4               	movwf	I2C_Master_Write@d+1
   987  0207  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   988  020C                     l1948:
   989                           
   990                           ;main_prueba3_mini2.c: 177:           I2C_Master_Write(27);
   991  020C  301B               	movlw	27
   992  020D  00F3               	movwf	I2C_Master_Write@d
   993  020E  3000               	movlw	0
   994  020F  00F4               	movwf	I2C_Master_Write@d+1
   995  0210  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
   996  0215                     l1950:
   997                           
   998                           ;main_prueba3_mini2.c: 178:           I2C_Master_Stop();
   999  0215  120A  118A  260E  120A  118A  	fcall	_I2C_Master_Stop
  1000  021A                     l1952:
  1001                           
  1002                           ;main_prueba3_mini2.c: 180:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1003  021A  3003               	movlw	3
  1004  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1005  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1006  021D  00ED               	movwf	??_main+2
  1007  021E  3008               	movlw	8
  1008  021F  00EC               	movwf	??_main+1
  1009  0220  3076               	movlw	118
  1010  0221  00EB               	movwf	??_main
  1011  0222                     u1587:
  1012  0222  0BEB               	decfsz	??_main,f
  1013  0223  2A22               	goto	u1587
  1014  0224  0BEC               	decfsz	??_main+1,f
  1015  0225  2A22               	goto	u1587
  1016  0226  0BED               	decfsz	??_main+2,f
  1017  0227  2A22               	goto	u1587
  1018  0228  0000               	nop
  1019  0229                     l1954:
  1020                           
  1021                           ;main_prueba3_mini2.c: 182:         I2C_Master_Start();
  1022  0229  120A  118A  2617  120A  118A  	fcall	_I2C_Master_Start
  1023  022E                     l1956:
  1024                           
  1025                           ;main_prueba3_mini2.c: 183:         I2C_Master_Write(0xD0);
  1026  022E  30D0               	movlw	208
  1027  022F  00F3               	movwf	I2C_Master_Write@d
  1028  0230  3000               	movlw	0
  1029  0231  00F4               	movwf	I2C_Master_Write@d+1
  1030  0232  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
  1031  0237                     l1958:
  1032                           
  1033                           ;main_prueba3_mini2.c: 184:         I2C_Master_Write(0);
  1034  0237  3000               	movlw	0
  1035  0238  00F3               	movwf	I2C_Master_Write@d
  1036  0239  00F4               	movwf	I2C_Master_Write@d+1
  1037  023A  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
  1038  023F                     l1960:
  1039                           
  1040                           ;main_prueba3_mini2.c: 185:         I2C_Master_RepeatedStart();
  1041  023F  120A  118A  2620  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1042  0244                     l1962:
  1043                           
  1044                           ;main_prueba3_mini2.c: 186:         I2C_Master_Write(0xD1);
  1045  0244  30D1               	movlw	209
  1046  0245  00F3               	movwf	I2C_Master_Write@d
  1047  0246  3000               	movlw	0
  1048  0247  00F4               	movwf	I2C_Master_Write@d+1
  1049  0248  120A  118A  2604  120A  118A  	fcall	_I2C_Master_Write
  1050  024D                     l1964:
  1051                           
  1052                           ;main_prueba3_mini2.c: 187:         second = I2C_Master_Read(1);
  1053  024D  3001               	movlw	1
  1054  024E  00F3               	movwf	I2C_Master_Read@a
  1055  024F  3000               	movlw	0
  1056  0250  00F4               	movwf	I2C_Master_Read@a+1
  1057  0251  120A  118A  24B9  120A  118A  	fcall	_I2C_Master_Read
  1058  0256  0873               	movf	?_I2C_Master_Read,w
  1059  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0259  00EB               	movwf	??_main
  1062  025A  086B               	movf	??_main,w
  1063  025B  00F9               	movwf	_second
  1064  025C                     l1966:
  1065                           
  1066                           ;main_prueba3_mini2.c: 188:         minute = I2C_Master_Read(1);
  1067  025C  3001               	movlw	1
  1068  025D  00F3               	movwf	I2C_Master_Read@a
  1069  025E  3000               	movlw	0
  1070  025F  00F4               	movwf	I2C_Master_Read@a+1
  1071  0260  120A  118A  24B9  120A  118A  	fcall	_I2C_Master_Read
  1072  0265  0873               	movf	?_I2C_Master_Read,w
  1073  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0268  00EB               	movwf	??_main
  1076  0269  086B               	movf	??_main,w
  1077  026A  00D9               	movwf	_minute
  1078  026B                     l1968:
  1079                           
  1080                           ;main_prueba3_mini2.c: 189:         hour = I2C_Master_Read(1);
  1081  026B  3001               	movlw	1
  1082  026C  00F3               	movwf	I2C_Master_Read@a
  1083  026D  3000               	movlw	0
  1084  026E  00F4               	movwf	I2C_Master_Read@a+1
  1085  026F  120A  118A  24B9  120A  118A  	fcall	_I2C_Master_Read
  1086  0274  0873               	movf	?_I2C_Master_Read,w
  1087  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0277  00EB               	movwf	??_main
  1090  0278  086B               	movf	??_main,w
  1091  0279  00D8               	movwf	_hour
  1092  027A                     l1970:
  1093                           
  1094                           ;main_prueba3_mini2.c: 190:         I2C_Master_Read(1);
  1095  027A  3001               	movlw	1
  1096  027B  00F3               	movwf	I2C_Master_Read@a
  1097  027C  3000               	movlw	0
  1098  027D  00F4               	movwf	I2C_Master_Read@a+1
  1099  027E  120A  118A  24B9  120A  118A  	fcall	_I2C_Master_Read
  1100  0283                     l1972:
  1101                           
  1102                           ;main_prueba3_mini2.c: 191:         m_day = I2C_Master_Read(1);
  1103  0283  3001               	movlw	1
  1104  0284  00F3               	movwf	I2C_Master_Read@a
  1105  0285  3000               	movlw	0
  1106  0286  00F4               	movwf	I2C_Master_Read@a+1
  1107  0287  120A  118A  24B9  120A  118A  	fcall	_I2C_Master_Read
  1108  028C  0873               	movf	?_I2C_Master_Read,w
  1109  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1110  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1111  028F  00EB               	movwf	??_main
  1112  0290  086B               	movf	??_main,w
  1113  0291  00F8               	movwf	_m_day
  1114  0292                     l1974:
  1115                           
  1116                           ;main_prueba3_mini2.c: 192:         month = I2C_Master_Read(1);
  1117  0292  3001               	movlw	1
  1118  0293  00F3               	movwf	I2C_Master_Read@a
  1119  0294  3000               	movlw	0
  1120  0295  00F4               	movwf	I2C_Master_Read@a+1
  1121  0296  120A  118A  24B9  120A  118A  	fcall	_I2C_Master_Read
  1122  029B  0873               	movf	?_I2C_Master_Read,w
  1123  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1124  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1125  029E  00EB               	movwf	??_main
  1126  029F  086B               	movf	??_main,w
  1127  02A0  00D7               	movwf	_month
  1128  02A1                     l1976:
  1129                           
  1130                           ;main_prueba3_mini2.c: 193:         year = I2C_Master_Read(0);
  1131  02A1  3000               	movlw	0
  1132  02A2  00F3               	movwf	I2C_Master_Read@a
  1133  02A3  00F4               	movwf	I2C_Master_Read@a+1
  1134  02A4  120A  118A  24B9  120A  118A  	fcall	_I2C_Master_Read
  1135  02A9  0873               	movf	?_I2C_Master_Read,w
  1136  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1137  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1138  02AC  00EB               	movwf	??_main
  1139  02AD  086B               	movf	??_main,w
  1140  02AE  00D6               	movwf	_year
  1141  02AF                     l1978:
  1142                           
  1143                           ;main_prueba3_mini2.c: 194:         I2C_Master_Stop();
  1144  02AF  120A  118A  260E  120A  118A  	fcall	_I2C_Master_Stop
  1145  02B4                     l1980:
  1146                           
  1147                           ;main_prueba3_mini2.c: 196:         RTC_display();
  1148  02B4  120A  118A  202C  120A  118A  	fcall	_RTC_display
  1149  02B9  29B7               	goto	l1930
  1150  02BA  120A  118A  280C   	ljmp	start
  1151  02BD                     __end_of_main:
  1152                           
  1153                           	psect	text1
  1154  050F                     __ptext1:	
  1155 ;; *************** function _setup *****************
  1156 ;; Defined at:
  1157 ;;		line 318 in file "main_prueba3_mini2.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0
  1174 ;;      Totals:         0       0       0       0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    3
  1178 ;; This function calls:
  1179 ;;		_I2C_Master_Init
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _setup
  1187  050F                     _setup:
  1188  050F                     l1848:	
  1189                           ;incstack = 0
  1190                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1191                           
  1192                           
  1193                           ;main_prueba3_mini2.c: 320:     ANSEL = 0;
  1194  050F  1683               	bsf	3,5	;RP0=1, select bank3
  1195  0510  1703               	bsf	3,6	;RP1=1, select bank3
  1196  0511  0188               	clrf	8	;volatile
  1197                           
  1198                           ;main_prueba3_mini2.c: 321:     ANSELH = 0;
  1199  0512  0189               	clrf	9	;volatile
  1200                           
  1201                           ;main_prueba3_mini2.c: 322:     TRISA = 0;
  1202  0513  1683               	bsf	3,5	;RP0=1, select bank1
  1203  0514  1303               	bcf	3,6	;RP1=0, select bank1
  1204  0515  0185               	clrf	5	;volatile
  1205  0516                     l1850:
  1206                           
  1207                           ;main_prueba3_mini2.c: 323:     TRISB = 0b00000011;
  1208  0516  3003               	movlw	3
  1209  0517  0086               	movwf	6	;volatile
  1210  0518                     l1852:
  1211                           
  1212                           ;main_prueba3_mini2.c: 324:     TRISCbits.TRISC6 = 0;
  1213  0518  1307               	bcf	7,6	;volatile
  1214  0519                     l1854:
  1215                           
  1216                           ;main_prueba3_mini2.c: 325:     TRISCbits.TRISC7 = 1;
  1217  0519  1787               	bsf	7,7	;volatile
  1218  051A                     l1856:
  1219                           
  1220                           ;main_prueba3_mini2.c: 326:     TRISD = 0;
  1221  051A  0188               	clrf	8	;volatile
  1222  051B                     l1858:
  1223                           
  1224                           ;main_prueba3_mini2.c: 327:     TRISE = 0;
  1225  051B  0189               	clrf	9	;volatile
  1226  051C                     l1860:
  1227                           
  1228                           ;main_prueba3_mini2.c: 328:     PORTA = 0;
  1229  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1230  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1231  051E  0185               	clrf	5	;volatile
  1232  051F                     l1862:
  1233                           
  1234                           ;main_prueba3_mini2.c: 329:     PORTB = 0;
  1235  051F  0186               	clrf	6	;volatile
  1236  0520                     l1864:
  1237                           
  1238                           ;main_prueba3_mini2.c: 330:     PORTC = 0;
  1239  0520  0187               	clrf	7	;volatile
  1240  0521                     l1866:
  1241                           
  1242                           ;main_prueba3_mini2.c: 331:     PORTD = 0;
  1243  0521  0188               	clrf	8	;volatile
  1244  0522                     l1868:
  1245                           
  1246                           ;main_prueba3_mini2.c: 332:     PORTE = 0;
  1247  0522  0189               	clrf	9	;volatile
  1248  0523                     l1870:
  1249                           
  1250                           ;main_prueba3_mini2.c: 333:     I2C_Master_Init(100000);
  1251  0523  3000               	movlw	0
  1252  0524  00EA               	movwf	I2C_Master_Init@c+3
  1253  0525  3001               	movlw	1
  1254  0526  00E9               	movwf	I2C_Master_Init@c+2
  1255  0527  3086               	movlw	134
  1256  0528  00E8               	movwf	I2C_Master_Init@c+1
  1257  0529  30A0               	movlw	160
  1258  052A  00E7               	movwf	I2C_Master_Init@c
  1259  052B  120A  118A  247F  120A  118A  	fcall	_I2C_Master_Init
  1260  0530                     l154:
  1261  0530  0008               	return
  1262  0531                     __end_of_setup:
  1263                           
  1264                           	psect	text2
  1265  047F                     __ptext2:	
  1266 ;; *************** function _I2C_Master_Init *****************
  1267 ;; Defined at:
  1268 ;;		line 21 in file "I2C.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  c               4   13[BANK0 ] const unsigned long 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       4       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          4       0       0       0       0
  1285 ;;      Totals:         4       4       0       0       0
  1286 ;;Total ram usage:        8 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    2
  1289 ;; This function calls:
  1290 ;;		___lldiv
  1291 ;; This function is called by:
  1292 ;;		_setup
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _I2C_Master_Init
  1298  047F                     _I2C_Master_Init:
  1299  047F                     l1794:	
  1300                           ;incstack = 0
  1301                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1302                           
  1303                           
  1304                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1305  047F  3028               	movlw	40
  1306  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0482  0094               	movwf	20	;volatile
  1309  0483                     l1796:
  1310                           
  1311                           ;I2C.c: 28:     SSPCON2 = 0;
  1312  0483  1683               	bsf	3,5	;RP0=1, select bank1
  1313  0484  1303               	bcf	3,6	;RP1=0, select bank1
  1314  0485  0191               	clrf	17	;volatile
  1315  0486                     l1798:
  1316                           
  1317                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1318  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0488  0867               	movf	I2C_Master_Init@c,w
  1321  0489  00F4               	movwf	??_I2C_Master_Init
  1322  048A  0868               	movf	I2C_Master_Init@c+1,w
  1323  048B  00F5               	movwf	??_I2C_Master_Init+1
  1324  048C  0869               	movf	I2C_Master_Init@c+2,w
  1325  048D  00F6               	movwf	??_I2C_Master_Init+2
  1326  048E  086A               	movf	I2C_Master_Init@c+3,w
  1327  048F  00F7               	movwf	??_I2C_Master_Init+3
  1328  0490  3002               	movlw	2
  1329  0491                     u1315:
  1330  0491  1003               	clrc
  1331  0492  0DF4               	rlf	??_I2C_Master_Init,f
  1332  0493  0DF5               	rlf	??_I2C_Master_Init+1,f
  1333  0494  0DF6               	rlf	??_I2C_Master_Init+2,f
  1334  0495  0DF7               	rlf	??_I2C_Master_Init+3,f
  1335  0496                     u1310:
  1336  0496  3EFF               	addlw	-1
  1337  0497  1D03               	skipz
  1338  0498  2C91               	goto	u1315
  1339  0499  0877               	movf	??_I2C_Master_Init+3,w
  1340  049A  00DD               	movwf	___lldiv@divisor+3
  1341  049B  0876               	movf	??_I2C_Master_Init+2,w
  1342  049C  00DC               	movwf	___lldiv@divisor+2
  1343  049D  0875               	movf	??_I2C_Master_Init+1,w
  1344  049E  00DB               	movwf	___lldiv@divisor+1
  1345  049F  0874               	movf	??_I2C_Master_Init,w
  1346  04A0  00DA               	movwf	___lldiv@divisor
  1347  04A1  3000               	movlw	0
  1348  04A2  00E1               	movwf	___lldiv@dividend+3
  1349  04A3  307A               	movlw	122
  1350  04A4  00E0               	movwf	___lldiv@dividend+2
  1351  04A5  3012               	movlw	18
  1352  04A6  00DF               	movwf	___lldiv@dividend+1
  1353  04A7  3000               	movlw	0
  1354  04A8  00DE               	movwf	___lldiv@dividend
  1355  04A9  120A  118A  2326  120A  118A  	fcall	___lldiv
  1356  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1357  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1358  04B0  085A               	movf	?___lldiv,w
  1359  04B1  3EFF               	addlw	255
  1360  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  1361  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  1362  04B4  0093               	movwf	19	;volatile
  1363  04B5                     l1800:
  1364                           
  1365                           ;I2C.c: 36:     SSPSTAT = 0;
  1366  04B5  0194               	clrf	20	;volatile
  1367  04B6                     l1802:
  1368                           
  1369                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1370  04B6  1587               	bsf	7,3	;volatile
  1371  04B7                     l1804:
  1372                           
  1373                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1374  04B7  1607               	bsf	7,4	;volatile
  1375  04B8                     l183:
  1376  04B8  0008               	return
  1377  04B9                     __end_of_I2C_Master_Init:
  1378                           
  1379                           	psect	text3
  1380  0326                     __ptext3:	
  1381 ;; *************** function ___lldiv *****************
  1382 ;; Defined at:
  1383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  divisor         4    0[BANK0 ] unsigned long 
  1386 ;;  dividend        4    4[BANK0 ] unsigned long 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  quotient        4    8[BANK0 ] unsigned long 
  1389 ;;  counter         1   12[BANK0 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  4    0[BANK0 ] unsigned long 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       8       0       0       0
  1400 ;;      Locals:         0       5       0       0       0
  1401 ;;      Temps:          1       0       0       0       0
  1402 ;;      Totals:         1      13       0       0       0
  1403 ;;Total ram usage:       14 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_I2C_Master_Init
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function ___lldiv
  1415  0326                     ___lldiv:
  1416  0326                     l1746:	
  1417                           ;incstack = 0
  1418                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1419                           
  1420  0326  3000               	movlw	0
  1421  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0329  00E5               	movwf	___lldiv@quotient+3
  1424  032A  3000               	movlw	0
  1425  032B  00E4               	movwf	___lldiv@quotient+2
  1426  032C  3000               	movlw	0
  1427  032D  00E3               	movwf	___lldiv@quotient+1
  1428  032E  3000               	movlw	0
  1429  032F  00E2               	movwf	___lldiv@quotient
  1430  0330  085D               	movf	___lldiv@divisor+3,w
  1431  0331  045C               	iorwf	___lldiv@divisor+2,w
  1432  0332  045B               	iorwf	___lldiv@divisor+1,w
  1433  0333  045A               	iorwf	___lldiv@divisor,w
  1434  0334  1903               	skipnz
  1435  0335  2B37               	goto	u1181
  1436  0336  2B38               	goto	u1180
  1437  0337                     u1181:
  1438  0337  2B85               	goto	l1766
  1439  0338                     u1180:
  1440  0338                     l1748:
  1441  0338  01E6               	clrf	___lldiv@counter
  1442  0339  0AE6               	incf	___lldiv@counter,f
  1443  033A  2B48               	goto	l1752
  1444  033B                     l1750:
  1445  033B  3001               	movlw	1
  1446  033C  00F3               	movwf	??___lldiv
  1447  033D                     u1195:
  1448  033D  1003               	clrc
  1449  033E  0DDA               	rlf	___lldiv@divisor,f
  1450  033F  0DDB               	rlf	___lldiv@divisor+1,f
  1451  0340  0DDC               	rlf	___lldiv@divisor+2,f
  1452  0341  0DDD               	rlf	___lldiv@divisor+3,f
  1453  0342  0BF3               	decfsz	??___lldiv,f
  1454  0343  2B3D               	goto	u1195
  1455  0344  3001               	movlw	1
  1456  0345  00F3               	movwf	??___lldiv
  1457  0346  0873               	movf	??___lldiv,w
  1458  0347  07E6               	addwf	___lldiv@counter,f
  1459  0348                     l1752:
  1460  0348  1FDD               	btfss	___lldiv@divisor+3,7
  1461  0349  2B4B               	goto	u1201
  1462  034A  2B4C               	goto	u1200
  1463  034B                     u1201:
  1464  034B  2B3B               	goto	l1750
  1465  034C                     u1200:
  1466  034C                     l1754:
  1467  034C  3001               	movlw	1
  1468  034D  00F3               	movwf	??___lldiv
  1469  034E                     u1215:
  1470  034E  1003               	clrc
  1471  034F  0DE2               	rlf	___lldiv@quotient,f
  1472  0350  0DE3               	rlf	___lldiv@quotient+1,f
  1473  0351  0DE4               	rlf	___lldiv@quotient+2,f
  1474  0352  0DE5               	rlf	___lldiv@quotient+3,f
  1475  0353  0BF3               	decfsz	??___lldiv,f
  1476  0354  2B4E               	goto	u1215
  1477  0355                     l1756:
  1478  0355  085D               	movf	___lldiv@divisor+3,w
  1479  0356  0261               	subwf	___lldiv@dividend+3,w
  1480  0357  1D03               	skipz
  1481  0358  2B63               	goto	u1225
  1482  0359  085C               	movf	___lldiv@divisor+2,w
  1483  035A  0260               	subwf	___lldiv@dividend+2,w
  1484  035B  1D03               	skipz
  1485  035C  2B63               	goto	u1225
  1486  035D  085B               	movf	___lldiv@divisor+1,w
  1487  035E  025F               	subwf	___lldiv@dividend+1,w
  1488  035F  1D03               	skipz
  1489  0360  2B63               	goto	u1225
  1490  0361  085A               	movf	___lldiv@divisor,w
  1491  0362  025E               	subwf	___lldiv@dividend,w
  1492  0363                     u1225:
  1493  0363  1C03               	skipc
  1494  0364  2B66               	goto	u1221
  1495  0365  2B67               	goto	u1220
  1496  0366                     u1221:
  1497  0366  2B76               	goto	l1762
  1498  0367                     u1220:
  1499  0367                     l1758:
  1500  0367  085A               	movf	___lldiv@divisor,w
  1501  0368  02DE               	subwf	___lldiv@dividend,f
  1502  0369  085B               	movf	___lldiv@divisor+1,w
  1503  036A  1C03               	skipc
  1504  036B  0F5B               	incfsz	___lldiv@divisor+1,w
  1505  036C  02DF               	subwf	___lldiv@dividend+1,f
  1506  036D  085C               	movf	___lldiv@divisor+2,w
  1507  036E  1C03               	skipc
  1508  036F  0F5C               	incfsz	___lldiv@divisor+2,w
  1509  0370  02E0               	subwf	___lldiv@dividend+2,f
  1510  0371  085D               	movf	___lldiv@divisor+3,w
  1511  0372  1C03               	skipc
  1512  0373  0F5D               	incfsz	___lldiv@divisor+3,w
  1513  0374  02E1               	subwf	___lldiv@dividend+3,f
  1514  0375                     l1760:
  1515  0375  1462               	bsf	___lldiv@quotient,0
  1516  0376                     l1762:
  1517  0376  3001               	movlw	1
  1518  0377                     u1235:
  1519  0377  1003               	clrc
  1520  0378  0CDD               	rrf	___lldiv@divisor+3,f
  1521  0379  0CDC               	rrf	___lldiv@divisor+2,f
  1522  037A  0CDB               	rrf	___lldiv@divisor+1,f
  1523  037B  0CDA               	rrf	___lldiv@divisor,f
  1524  037C  3EFF               	addlw	-1
  1525  037D  1D03               	skipz
  1526  037E  2B77               	goto	u1235
  1527  037F                     l1764:
  1528  037F  3001               	movlw	1
  1529  0380  02E6               	subwf	___lldiv@counter,f
  1530  0381  1D03               	btfss	3,2
  1531  0382  2B84               	goto	u1241
  1532  0383  2B85               	goto	u1240
  1533  0384                     u1241:
  1534  0384  2B4C               	goto	l1754
  1535  0385                     u1240:
  1536  0385                     l1766:
  1537  0385  0865               	movf	___lldiv@quotient+3,w
  1538  0386  00DD               	movwf	?___lldiv+3
  1539  0387  0864               	movf	___lldiv@quotient+2,w
  1540  0388  00DC               	movwf	?___lldiv+2
  1541  0389  0863               	movf	___lldiv@quotient+1,w
  1542  038A  00DB               	movwf	?___lldiv+1
  1543  038B  0862               	movf	___lldiv@quotient,w
  1544  038C  00DA               	movwf	?___lldiv
  1545  038D                     l382:
  1546  038D  0008               	return
  1547  038E                     __end_of___lldiv:
  1548                           
  1549                           	psect	text4
  1550  002C                     __ptext4:	
  1551 ;; *************** function _RTC_display *****************
  1552 ;; Defined at:
  1553 ;;		line 218 in file "main_prueba3_mini2.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0
  1569 ;;      Temps:          0       3       0       0       0
  1570 ;;      Totals:         0       3       0       0       0
  1571 ;;Total ram usage:        3 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    4
  1574 ;; This function calls:
  1575 ;;		_Lcd_Set_Cursor
  1576 ;;		_Lcd_Write_String
  1577 ;;		___awdiv
  1578 ;;		___awmod
  1579 ;;		_bcd_to_decimal
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           
  1586                           ;psect for function _RTC_display
  1587  002C                     _RTC_display:
  1588  002C                     l1916:	
  1589                           ;incstack = 0
  1590                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1591                           
  1592                           
  1593                           ;main_prueba3_mini2.c: 220:     second = bcd_to_decimal(second);
  1594  002C  0879               	movf	_second,w
  1595  002D  120A  118A  2551  120A  118A  	fcall	_bcd_to_decimal
  1596  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0034  00DF               	movwf	??_RTC_display
  1599  0035  085F               	movf	??_RTC_display,w
  1600  0036  00F9               	movwf	_second
  1601                           
  1602                           ;main_prueba3_mini2.c: 221:     minute = bcd_to_decimal(minute);
  1603  0037  0859               	movf	_minute,w
  1604  0038  120A  118A  2551  120A  118A  	fcall	_bcd_to_decimal
  1605  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1606  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1607  003F  00DF               	movwf	??_RTC_display
  1608  0040  085F               	movf	??_RTC_display,w
  1609  0041  00D9               	movwf	_minute
  1610                           
  1611                           ;main_prueba3_mini2.c: 222:     hour = bcd_to_decimal(hour);
  1612  0042  0858               	movf	_hour,w
  1613  0043  120A  118A  2551  120A  118A  	fcall	_bcd_to_decimal
  1614  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1616  004A  00DF               	movwf	??_RTC_display
  1617  004B  085F               	movf	??_RTC_display,w
  1618  004C  00D8               	movwf	_hour
  1619                           
  1620                           ;main_prueba3_mini2.c: 223:     m_day = bcd_to_decimal(m_day);
  1621  004D  0878               	movf	_m_day,w
  1622  004E  120A  118A  2551  120A  118A  	fcall	_bcd_to_decimal
  1623  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0055  00DF               	movwf	??_RTC_display
  1626  0056  085F               	movf	??_RTC_display,w
  1627  0057  00F8               	movwf	_m_day
  1628                           
  1629                           ;main_prueba3_mini2.c: 224:     month = bcd_to_decimal(month);
  1630  0058  0857               	movf	_month,w
  1631  0059  120A  118A  2551  120A  118A  	fcall	_bcd_to_decimal
  1632  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1633  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0060  00DF               	movwf	??_RTC_display
  1635  0061  085F               	movf	??_RTC_display,w
  1636  0062  00D7               	movwf	_month
  1637                           
  1638                           ;main_prueba3_mini2.c: 225:     year = bcd_to_decimal(year);
  1639  0063  0856               	movf	_year,w
  1640  0064  120A  118A  2551  120A  118A  	fcall	_bcd_to_decimal
  1641  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1642  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1643  006B  00DF               	movwf	??_RTC_display
  1644  006C  085F               	movf	??_RTC_display,w
  1645  006D  00D6               	movwf	_year
  1646                           
  1647                           ;main_prueba3_mini2.c: 229:     Time[6] = hour / 10 + '0';
  1648  006E  300A               	movlw	10
  1649  006F  00F3               	movwf	___awdiv@divisor
  1650  0070  3000               	movlw	0
  1651  0071  00F4               	movwf	___awdiv@divisor+1
  1652  0072  0858               	movf	_hour,w
  1653  0073  00DF               	movwf	??_RTC_display
  1654  0074  01E0               	clrf	??_RTC_display+1
  1655  0075  085F               	movf	??_RTC_display,w
  1656  0076  00F5               	movwf	___awdiv@dividend
  1657  0077  0860               	movf	??_RTC_display+1,w
  1658  0078  00F6               	movwf	___awdiv@dividend+1
  1659  0079  120A  118A  22BD  120A  118A  	fcall	___awdiv
  1660  007E  0873               	movf	?___awdiv,w
  1661  007F  3E30               	addlw	48
  1662  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0082  00E1               	movwf	??_RTC_display+2
  1665  0083  0861               	movf	??_RTC_display+2,w
  1666  0084  00B7               	movwf	_Time+6
  1667                           
  1668                           ;main_prueba3_mini2.c: 230:     Time[7] = hour % 10 + '0';
  1669  0085  300A               	movlw	10
  1670  0086  00F3               	movwf	___awmod@divisor
  1671  0087  3000               	movlw	0
  1672  0088  00F4               	movwf	___awmod@divisor+1
  1673  0089  0858               	movf	_hour,w
  1674  008A  00DF               	movwf	??_RTC_display
  1675  008B  01E0               	clrf	??_RTC_display+1
  1676  008C  085F               	movf	??_RTC_display,w
  1677  008D  00F5               	movwf	___awmod@dividend
  1678  008E  0860               	movf	??_RTC_display+1,w
  1679  008F  00F6               	movwf	___awmod@dividend+1
  1680  0090  120A  118A  238E  120A  118A  	fcall	___awmod
  1681  0095  0873               	movf	?___awmod,w
  1682  0096  3E30               	addlw	48
  1683  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0099  00E1               	movwf	??_RTC_display+2
  1686  009A  0861               	movf	??_RTC_display+2,w
  1687  009B  00B8               	movwf	_Time+7
  1688                           
  1689                           ;main_prueba3_mini2.c: 231:     Time[9] = minute / 10 + '0';
  1690  009C  300A               	movlw	10
  1691  009D  00F3               	movwf	___awdiv@divisor
  1692  009E  3000               	movlw	0
  1693  009F  00F4               	movwf	___awdiv@divisor+1
  1694  00A0  0859               	movf	_minute,w
  1695  00A1  00DF               	movwf	??_RTC_display
  1696  00A2  01E0               	clrf	??_RTC_display+1
  1697  00A3  085F               	movf	??_RTC_display,w
  1698  00A4  00F5               	movwf	___awdiv@dividend
  1699  00A5  0860               	movf	??_RTC_display+1,w
  1700  00A6  00F6               	movwf	___awdiv@dividend+1
  1701  00A7  120A  118A  22BD  120A  118A  	fcall	___awdiv
  1702  00AC  0873               	movf	?___awdiv,w
  1703  00AD  3E30               	addlw	48
  1704  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1705  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1706  00B0  00E1               	movwf	??_RTC_display+2
  1707  00B1  0861               	movf	??_RTC_display+2,w
  1708  00B2  00BA               	movwf	_Time+9
  1709                           
  1710                           ;main_prueba3_mini2.c: 232:     Time[10] = minute % 10 + '0';
  1711  00B3  300A               	movlw	10
  1712  00B4  00F3               	movwf	___awmod@divisor
  1713  00B5  3000               	movlw	0
  1714  00B6  00F4               	movwf	___awmod@divisor+1
  1715  00B7  0859               	movf	_minute,w
  1716  00B8  00DF               	movwf	??_RTC_display
  1717  00B9  01E0               	clrf	??_RTC_display+1
  1718  00BA  085F               	movf	??_RTC_display,w
  1719  00BB  00F5               	movwf	___awmod@dividend
  1720  00BC  0860               	movf	??_RTC_display+1,w
  1721  00BD  00F6               	movwf	___awmod@dividend+1
  1722  00BE  120A  118A  238E  120A  118A  	fcall	___awmod
  1723  00C3  0873               	movf	?___awmod,w
  1724  00C4  3E30               	addlw	48
  1725  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1726  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1727  00C7  00E1               	movwf	??_RTC_display+2
  1728  00C8  0861               	movf	??_RTC_display+2,w
  1729  00C9  00BB               	movwf	_Time+10
  1730                           
  1731                           ;main_prueba3_mini2.c: 233:     Time[12] = second / 10 + '0';
  1732  00CA  300A               	movlw	10
  1733  00CB  00F3               	movwf	___awdiv@divisor
  1734  00CC  3000               	movlw	0
  1735  00CD  00F4               	movwf	___awdiv@divisor+1
  1736  00CE  0879               	movf	_second,w
  1737  00CF  00DF               	movwf	??_RTC_display
  1738  00D0  01E0               	clrf	??_RTC_display+1
  1739  00D1  085F               	movf	??_RTC_display,w
  1740  00D2  00F5               	movwf	___awdiv@dividend
  1741  00D3  0860               	movf	??_RTC_display+1,w
  1742  00D4  00F6               	movwf	___awdiv@dividend+1
  1743  00D5  120A  118A  22BD  120A  118A  	fcall	___awdiv
  1744  00DA  0873               	movf	?___awdiv,w
  1745  00DB  3E30               	addlw	48
  1746  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1747  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1748  00DE  00E1               	movwf	??_RTC_display+2
  1749  00DF  0861               	movf	??_RTC_display+2,w
  1750  00E0  00BD               	movwf	_Time+12
  1751                           
  1752                           ;main_prueba3_mini2.c: 234:     Time[13] = second % 10 + '0';
  1753  00E1  300A               	movlw	10
  1754  00E2  00F3               	movwf	___awmod@divisor
  1755  00E3  3000               	movlw	0
  1756  00E4  00F4               	movwf	___awmod@divisor+1
  1757  00E5  0879               	movf	_second,w
  1758  00E6  00DF               	movwf	??_RTC_display
  1759  00E7  01E0               	clrf	??_RTC_display+1
  1760  00E8  085F               	movf	??_RTC_display,w
  1761  00E9  00F5               	movwf	___awmod@dividend
  1762  00EA  0860               	movf	??_RTC_display+1,w
  1763  00EB  00F6               	movwf	___awmod@dividend+1
  1764  00EC  120A  118A  238E  120A  118A  	fcall	___awmod
  1765  00F1  0873               	movf	?___awmod,w
  1766  00F2  3E30               	addlw	48
  1767  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1768  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1769  00F5  00E1               	movwf	??_RTC_display+2
  1770  00F6  0861               	movf	??_RTC_display+2,w
  1771  00F7  00BE               	movwf	_Time+13
  1772                           
  1773                           ;main_prueba3_mini2.c: 236:     Date[6] = m_day / 10 + '0';
  1774  00F8  300A               	movlw	10
  1775  00F9  00F3               	movwf	___awdiv@divisor
  1776  00FA  3000               	movlw	0
  1777  00FB  00F4               	movwf	___awdiv@divisor+1
  1778  00FC  0878               	movf	_m_day,w
  1779  00FD  00DF               	movwf	??_RTC_display
  1780  00FE  01E0               	clrf	??_RTC_display+1
  1781  00FF  085F               	movf	??_RTC_display,w
  1782  0100  00F5               	movwf	___awdiv@dividend
  1783  0101  0860               	movf	??_RTC_display+1,w
  1784  0102  00F6               	movwf	___awdiv@dividend+1
  1785  0103  120A  118A  22BD  120A  118A  	fcall	___awdiv
  1786  0108  0873               	movf	?___awdiv,w
  1787  0109  3E30               	addlw	48
  1788  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1789  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1790  010C  00E1               	movwf	??_RTC_display+2
  1791  010D  0861               	movf	??_RTC_display+2,w
  1792  010E  00A6               	movwf	_Date+6
  1793                           
  1794                           ;main_prueba3_mini2.c: 237:     Date[7] = m_day % 10 + '0';
  1795  010F  300A               	movlw	10
  1796  0110  00F3               	movwf	___awmod@divisor
  1797  0111  3000               	movlw	0
  1798  0112  00F4               	movwf	___awmod@divisor+1
  1799  0113  0878               	movf	_m_day,w
  1800  0114  00DF               	movwf	??_RTC_display
  1801  0115  01E0               	clrf	??_RTC_display+1
  1802  0116  085F               	movf	??_RTC_display,w
  1803  0117  00F5               	movwf	___awmod@dividend
  1804  0118  0860               	movf	??_RTC_display+1,w
  1805  0119  00F6               	movwf	___awmod@dividend+1
  1806  011A  120A  118A  238E  120A  118A  	fcall	___awmod
  1807  011F  0873               	movf	?___awmod,w
  1808  0120  3E30               	addlw	48
  1809  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0123  00E1               	movwf	??_RTC_display+2
  1812  0124  0861               	movf	??_RTC_display+2,w
  1813  0125  00A7               	movwf	_Date+7
  1814                           
  1815                           ;main_prueba3_mini2.c: 238:     Date[9] = month / 10 + '0';
  1816  0126  300A               	movlw	10
  1817  0127  00F3               	movwf	___awdiv@divisor
  1818  0128  3000               	movlw	0
  1819  0129  00F4               	movwf	___awdiv@divisor+1
  1820  012A  0857               	movf	_month,w
  1821  012B  00DF               	movwf	??_RTC_display
  1822  012C  01E0               	clrf	??_RTC_display+1
  1823  012D  085F               	movf	??_RTC_display,w
  1824  012E  00F5               	movwf	___awdiv@dividend
  1825  012F  0860               	movf	??_RTC_display+1,w
  1826  0130  00F6               	movwf	___awdiv@dividend+1
  1827  0131  120A  118A  22BD  120A  118A  	fcall	___awdiv
  1828  0136  0873               	movf	?___awdiv,w
  1829  0137  3E30               	addlw	48
  1830  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1832  013A  00E1               	movwf	??_RTC_display+2
  1833  013B  0861               	movf	??_RTC_display+2,w
  1834  013C  00A9               	movwf	_Date+9
  1835                           
  1836                           ;main_prueba3_mini2.c: 239:     Date[10] = month % 10 + '0';
  1837  013D  300A               	movlw	10
  1838  013E  00F3               	movwf	___awmod@divisor
  1839  013F  3000               	movlw	0
  1840  0140  00F4               	movwf	___awmod@divisor+1
  1841  0141  0857               	movf	_month,w
  1842  0142  00DF               	movwf	??_RTC_display
  1843  0143  01E0               	clrf	??_RTC_display+1
  1844  0144  085F               	movf	??_RTC_display,w
  1845  0145  00F5               	movwf	___awmod@dividend
  1846  0146  0860               	movf	??_RTC_display+1,w
  1847  0147  00F6               	movwf	___awmod@dividend+1
  1848  0148  120A  118A  238E  120A  118A  	fcall	___awmod
  1849  014D  0873               	movf	?___awmod,w
  1850  014E  3E30               	addlw	48
  1851  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0151  00E1               	movwf	??_RTC_display+2
  1854  0152  0861               	movf	??_RTC_display+2,w
  1855  0153  00AA               	movwf	_Date+10
  1856                           
  1857                           ;main_prueba3_mini2.c: 240:     Date[14] = year / 10 + '0';
  1858  0154  300A               	movlw	10
  1859  0155  00F3               	movwf	___awdiv@divisor
  1860  0156  3000               	movlw	0
  1861  0157  00F4               	movwf	___awdiv@divisor+1
  1862  0158  0856               	movf	_year,w
  1863  0159  00DF               	movwf	??_RTC_display
  1864  015A  01E0               	clrf	??_RTC_display+1
  1865  015B  085F               	movf	??_RTC_display,w
  1866  015C  00F5               	movwf	___awdiv@dividend
  1867  015D  0860               	movf	??_RTC_display+1,w
  1868  015E  00F6               	movwf	___awdiv@dividend+1
  1869  015F  120A  118A  22BD  120A  118A  	fcall	___awdiv
  1870  0164  0873               	movf	?___awdiv,w
  1871  0165  3E30               	addlw	48
  1872  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0168  00E1               	movwf	??_RTC_display+2
  1875  0169  0861               	movf	??_RTC_display+2,w
  1876  016A  00AE               	movwf	_Date+14
  1877                           
  1878                           ;main_prueba3_mini2.c: 241:     Date[15] = year % 10 + '0';
  1879  016B  300A               	movlw	10
  1880  016C  00F3               	movwf	___awmod@divisor
  1881  016D  3000               	movlw	0
  1882  016E  00F4               	movwf	___awmod@divisor+1
  1883  016F  0856               	movf	_year,w
  1884  0170  00DF               	movwf	??_RTC_display
  1885  0171  01E0               	clrf	??_RTC_display+1
  1886  0172  085F               	movf	??_RTC_display,w
  1887  0173  00F5               	movwf	___awmod@dividend
  1888  0174  0860               	movf	??_RTC_display+1,w
  1889  0175  00F6               	movwf	___awmod@dividend+1
  1890  0176  120A  118A  238E  120A  118A  	fcall	___awmod
  1891  017B  0873               	movf	?___awmod,w
  1892  017C  3E30               	addlw	48
  1893  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1894  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1895  017F  00E1               	movwf	??_RTC_display+2
  1896  0180  0861               	movf	??_RTC_display+2,w
  1897  0181  00AF               	movwf	_Date+15
  1898                           
  1899                           ;main_prueba3_mini2.c: 243:     Lcd_Set_Cursor(1,1);
  1900  0182  01F7               	clrf	Lcd_Set_Cursor@b
  1901  0183  0AF7               	incf	Lcd_Set_Cursor@b,f
  1902  0184  3001               	movlw	1
  1903  0185  120A  118A  24E9  120A  118A  	fcall	_Lcd_Set_Cursor
  1904  018A                     l1918:
  1905                           
  1906                           ;main_prueba3_mini2.c: 244:     Lcd_Write_String(Time);
  1907  018A  3031               	movlw	(low (_Time| 0))& (0+255)
  1908  018B  00F6               	movwf	Lcd_Write_String@a
  1909  018C  3000               	movlw	0
  1910  018D  00F7               	movwf	Lcd_Write_String@a+1
  1911  018E  120A  118A  2439  120A  118A  	fcall	_Lcd_Write_String
  1912  0193                     l1920:
  1913                           
  1914                           ;main_prueba3_mini2.c: 245:     Lcd_Set_Cursor(2,1);
  1915  0193  01F7               	clrf	Lcd_Set_Cursor@b
  1916  0194  0AF7               	incf	Lcd_Set_Cursor@b,f
  1917  0195  3002               	movlw	2
  1918  0196  120A  118A  24E9  120A  118A  	fcall	_Lcd_Set_Cursor
  1919                           
  1920                           ;main_prueba3_mini2.c: 246:     Lcd_Write_String(Date);
  1921  019B  3020               	movlw	(low (_Date| 0))& (0+255)
  1922  019C  00F6               	movwf	Lcd_Write_String@a
  1923  019D  3000               	movlw	0
  1924  019E  00F7               	movwf	Lcd_Write_String@a+1
  1925  019F  120A  118A  2439  120A  118A  	fcall	_Lcd_Write_String
  1926  01A4                     l116:
  1927  01A4  0008               	return
  1928  01A5                     __end_of_RTC_display:
  1929                           
  1930                           	psect	text5
  1931  0551                     __ptext5:	
  1932 ;; *************** function _bcd_to_decimal *****************
  1933 ;; Defined at:
  1934 ;;		line 209 in file "main_prueba3_mini2.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  number          1    wreg     unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  number          1    7[COMMON] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      unsigned char 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         0       0       0       0       0
  1949 ;;      Locals:         1       0       0       0       0
  1950 ;;      Temps:          0       3       0       0       0
  1951 ;;      Totals:         1       3       0       0       0
  1952 ;;Total ram usage:        4 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    2
  1955 ;; This function calls:
  1956 ;;		___bmul
  1957 ;; This function is called by:
  1958 ;;		_RTC_display
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _bcd_to_decimal
  1964  0551                     _bcd_to_decimal:
  1965                           
  1966                           ;incstack = 0
  1967                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1968                           ;bcd_to_decimal@number stored from wreg
  1969  0551  00F7               	movwf	bcd_to_decimal@number
  1970  0552                     l1770:
  1971                           
  1972                           ;main_prueba3_mini2.c: 210:   return((number >> 4) * 10 + (number & 0x0F));
  1973  0552  300F               	movlw	15
  1974  0553  0577               	andwf	bcd_to_decimal@number,w
  1975  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0556  00DA               	movwf	??_bcd_to_decimal
  1978  0557  300A               	movlw	10
  1979  0558  00DB               	movwf	??_bcd_to_decimal+1
  1980  0559  085B               	movf	??_bcd_to_decimal+1,w
  1981  055A  00F3               	movwf	___bmul@multiplicand
  1982  055B  0877               	movf	bcd_to_decimal@number,w
  1983  055C  00DC               	movwf	??_bcd_to_decimal+2
  1984  055D  3004               	movlw	4
  1985  055E                     u1255:
  1986  055E  1003               	clrc
  1987  055F  0CDC               	rrf	??_bcd_to_decimal+2,f
  1988  0560  3EFF               	addlw	-1
  1989  0561  1D03               	skipz
  1990  0562  2D5E               	goto	u1255
  1991  0563  085C               	movf	??_bcd_to_decimal+2,w
  1992  0564  120A  118A  259D  120A  118A  	fcall	___bmul
  1993  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1994  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1995  056B  075A               	addwf	??_bcd_to_decimal,w
  1996  056C                     l110:
  1997  056C  0008               	return
  1998  056D                     __end_of_bcd_to_decimal:
  1999                           
  2000                           	psect	text6
  2001  059D                     __ptext6:	
  2002 ;; *************** function ___bmul *****************
  2003 ;; Defined at:
  2004 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  multiplier      1    wreg     unsigned char 
  2007 ;;  multiplicand    1    3[COMMON] unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  multiplier      1    6[COMMON] unsigned char 
  2010 ;;  product         1    5[COMMON] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      unsigned char 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         1       0       0       0       0
  2021 ;;      Locals:         2       0       0       0       0
  2022 ;;      Temps:          1       0       0       0       0
  2023 ;;      Totals:         4       0       0       0       0
  2024 ;;Total ram usage:        4 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_bcd_to_decimal
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function ___bmul
  2036  059D                     ___bmul:
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2040                           ;___bmul@multiplier stored from wreg
  2041  059D  00F6               	movwf	___bmul@multiplier
  2042  059E                     l1346:
  2043  059E  01F5               	clrf	___bmul@product
  2044  059F                     l1348:
  2045  059F  1C76               	btfss	___bmul@multiplier,0
  2046  05A0  2DA2               	goto	u651
  2047  05A1  2DA3               	goto	u650
  2048  05A2                     u651:
  2049  05A2  2DA7               	goto	l1352
  2050  05A3                     u650:
  2051  05A3                     l1350:
  2052  05A3  0873               	movf	___bmul@multiplicand,w
  2053  05A4  00F4               	movwf	??___bmul
  2054  05A5  0874               	movf	??___bmul,w
  2055  05A6  07F5               	addwf	___bmul@product,f
  2056  05A7                     l1352:
  2057  05A7  1003               	clrc
  2058  05A8  0DF3               	rlf	___bmul@multiplicand,f
  2059  05A9                     l1354:
  2060  05A9  1003               	clrc
  2061  05AA  0CF6               	rrf	___bmul@multiplier,f
  2062  05AB  0876               	movf	___bmul@multiplier,w
  2063  05AC  1D03               	btfss	3,2
  2064  05AD  2DAF               	goto	u661
  2065  05AE  2DB0               	goto	u660
  2066  05AF                     u661:
  2067  05AF  2D9F               	goto	l1348
  2068  05B0                     u660:
  2069  05B0                     l1356:
  2070  05B0  0875               	movf	___bmul@product,w
  2071  05B1                     l372:
  2072  05B1  0008               	return
  2073  05B2                     __end_of___bmul:
  2074                           
  2075                           	psect	text7
  2076  038E                     __ptext7:	
  2077 ;; *************** function ___awmod *****************
  2078 ;; Defined at:
  2079 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  divisor         2    3[COMMON] int 
  2082 ;;  dividend        2    5[COMMON] int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  sign            1    1[BANK0 ] unsigned char 
  2085 ;;  counter         1    0[BANK0 ] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2    3[COMMON] int 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         4       0       0       0       0
  2096 ;;      Locals:         0       2       0       0       0
  2097 ;;      Temps:          1       0       0       0       0
  2098 ;;      Totals:         5       2       0       0       0
  2099 ;;Total ram usage:        7 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_RTC_display
  2106 ;;		_edit
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function ___awmod
  2112  038E                     ___awmod:
  2113  038E                     l1810:	
  2114                           ;incstack = 0
  2115                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2116                           
  2117  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2118  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0390  01DB               	clrf	___awmod@sign
  2120  0391                     l1812:
  2121  0391  1FF6               	btfss	___awmod@dividend+1,7
  2122  0392  2B94               	goto	u1341
  2123  0393  2B95               	goto	u1340
  2124  0394                     u1341:
  2125  0394  2B9C               	goto	l1818
  2126  0395                     u1340:
  2127  0395                     l1814:
  2128  0395  09F5               	comf	___awmod@dividend,f
  2129  0396  09F6               	comf	___awmod@dividend+1,f
  2130  0397  0AF5               	incf	___awmod@dividend,f
  2131  0398  1903               	skipnz
  2132  0399  0AF6               	incf	___awmod@dividend+1,f
  2133  039A                     l1816:
  2134  039A  01DB               	clrf	___awmod@sign
  2135  039B  0ADB               	incf	___awmod@sign,f
  2136  039C                     l1818:
  2137  039C  1FF4               	btfss	___awmod@divisor+1,7
  2138  039D  2B9F               	goto	u1351
  2139  039E  2BA0               	goto	u1350
  2140  039F                     u1351:
  2141  039F  2BA5               	goto	l1822
  2142  03A0                     u1350:
  2143  03A0                     l1820:
  2144  03A0  09F3               	comf	___awmod@divisor,f
  2145  03A1  09F4               	comf	___awmod@divisor+1,f
  2146  03A2  0AF3               	incf	___awmod@divisor,f
  2147  03A3  1903               	skipnz
  2148  03A4  0AF4               	incf	___awmod@divisor+1,f
  2149  03A5                     l1822:
  2150  03A5  0873               	movf	___awmod@divisor,w
  2151  03A6  0474               	iorwf	___awmod@divisor+1,w
  2152  03A7  1903               	btfsc	3,2
  2153  03A8  2BAA               	goto	u1361
  2154  03A9  2BAB               	goto	u1360
  2155  03AA                     u1361:
  2156  03AA  2BDA               	goto	l1840
  2157  03AB                     u1360:
  2158  03AB                     l1824:
  2159  03AB  01DA               	clrf	___awmod@counter
  2160  03AC  0ADA               	incf	___awmod@counter,f
  2161  03AD  2BB9               	goto	l1830
  2162  03AE                     l1826:
  2163  03AE  3001               	movlw	1
  2164  03AF                     u1375:
  2165  03AF  1003               	clrc
  2166  03B0  0DF3               	rlf	___awmod@divisor,f
  2167  03B1  0DF4               	rlf	___awmod@divisor+1,f
  2168  03B2  3EFF               	addlw	-1
  2169  03B3  1D03               	skipz
  2170  03B4  2BAF               	goto	u1375
  2171  03B5                     l1828:
  2172  03B5  3001               	movlw	1
  2173  03B6  00F7               	movwf	??___awmod
  2174  03B7  0877               	movf	??___awmod,w
  2175  03B8  07DA               	addwf	___awmod@counter,f
  2176  03B9                     l1830:
  2177  03B9  1FF4               	btfss	___awmod@divisor+1,7
  2178  03BA  2BBC               	goto	u1381
  2179  03BB  2BBD               	goto	u1380
  2180  03BC                     u1381:
  2181  03BC  2BAE               	goto	l1826
  2182  03BD                     u1380:
  2183  03BD                     l1832:
  2184  03BD  0874               	movf	___awmod@divisor+1,w
  2185  03BE  0276               	subwf	___awmod@dividend+1,w
  2186  03BF  1D03               	skipz
  2187  03C0  2BC3               	goto	u1395
  2188  03C1  0873               	movf	___awmod@divisor,w
  2189  03C2  0275               	subwf	___awmod@dividend,w
  2190  03C3                     u1395:
  2191  03C3  1C03               	skipc
  2192  03C4  2BC6               	goto	u1391
  2193  03C5  2BC7               	goto	u1390
  2194  03C6                     u1391:
  2195  03C6  2BCD               	goto	l1836
  2196  03C7                     u1390:
  2197  03C7                     l1834:
  2198  03C7  0873               	movf	___awmod@divisor,w
  2199  03C8  02F5               	subwf	___awmod@dividend,f
  2200  03C9  0874               	movf	___awmod@divisor+1,w
  2201  03CA  1C03               	skipc
  2202  03CB  03F6               	decf	___awmod@dividend+1,f
  2203  03CC  02F6               	subwf	___awmod@dividend+1,f
  2204  03CD                     l1836:
  2205  03CD  3001               	movlw	1
  2206  03CE                     u1405:
  2207  03CE  1003               	clrc
  2208  03CF  0CF4               	rrf	___awmod@divisor+1,f
  2209  03D0  0CF3               	rrf	___awmod@divisor,f
  2210  03D1  3EFF               	addlw	-1
  2211  03D2  1D03               	skipz
  2212  03D3  2BCE               	goto	u1405
  2213  03D4                     l1838:
  2214  03D4  3001               	movlw	1
  2215  03D5  02DA               	subwf	___awmod@counter,f
  2216  03D6  1D03               	btfss	3,2
  2217  03D7  2BD9               	goto	u1411
  2218  03D8  2BDA               	goto	u1410
  2219  03D9                     u1411:
  2220  03D9  2BBD               	goto	l1832
  2221  03DA                     u1410:
  2222  03DA                     l1840:
  2223  03DA  085B               	movf	___awmod@sign,w
  2224  03DB  1903               	btfsc	3,2
  2225  03DC  2BDE               	goto	u1421
  2226  03DD  2BDF               	goto	u1420
  2227  03DE                     u1421:
  2228  03DE  2BE4               	goto	l1844
  2229  03DF                     u1420:
  2230  03DF                     l1842:
  2231  03DF  09F5               	comf	___awmod@dividend,f
  2232  03E0  09F6               	comf	___awmod@dividend+1,f
  2233  03E1  0AF5               	incf	___awmod@dividend,f
  2234  03E2  1903               	skipnz
  2235  03E3  0AF6               	incf	___awmod@dividend+1,f
  2236  03E4                     l1844:
  2237  03E4  0876               	movf	___awmod@dividend+1,w
  2238  03E5  00F4               	movwf	?___awmod+1
  2239  03E6  0875               	movf	___awmod@dividend,w
  2240  03E7  00F3               	movwf	?___awmod
  2241  03E8                     l512:
  2242  03E8  0008               	return
  2243  03E9                     __end_of___awmod:
  2244                           
  2245                           	psect	text8
  2246  02BD                     __ptext8:	
  2247 ;; *************** function ___awdiv *****************
  2248 ;; Defined at:
  2249 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  divisor         2    3[COMMON] int 
  2252 ;;  dividend        2    5[COMMON] int 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  quotient        2    2[BANK0 ] int 
  2255 ;;  sign            1    1[BANK0 ] unsigned char 
  2256 ;;  counter         1    0[BANK0 ] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2    3[COMMON] int 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         4       0       0       0       0
  2267 ;;      Locals:         0       4       0       0       0
  2268 ;;      Temps:          1       0       0       0       0
  2269 ;;      Totals:         5       4       0       0       0
  2270 ;;Total ram usage:        9 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_RTC_display
  2277 ;;		_edit
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function ___awdiv
  2283  02BD                     ___awdiv:
  2284  02BD                     l1424:	
  2285                           ;incstack = 0
  2286                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2287                           
  2288  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2289  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2290  02BF  01DB               	clrf	___awdiv@sign
  2291  02C0                     l1426:
  2292  02C0  1FF4               	btfss	___awdiv@divisor+1,7
  2293  02C1  2AC3               	goto	u831
  2294  02C2  2AC4               	goto	u830
  2295  02C3                     u831:
  2296  02C3  2ACB               	goto	l1432
  2297  02C4                     u830:
  2298  02C4                     l1428:
  2299  02C4  09F3               	comf	___awdiv@divisor,f
  2300  02C5  09F4               	comf	___awdiv@divisor+1,f
  2301  02C6  0AF3               	incf	___awdiv@divisor,f
  2302  02C7  1903               	skipnz
  2303  02C8  0AF4               	incf	___awdiv@divisor+1,f
  2304  02C9                     l1430:
  2305  02C9  01DB               	clrf	___awdiv@sign
  2306  02CA  0ADB               	incf	___awdiv@sign,f
  2307  02CB                     l1432:
  2308  02CB  1FF6               	btfss	___awdiv@dividend+1,7
  2309  02CC  2ACE               	goto	u841
  2310  02CD  2ACF               	goto	u840
  2311  02CE                     u841:
  2312  02CE  2AD8               	goto	l1438
  2313  02CF                     u840:
  2314  02CF                     l1434:
  2315  02CF  09F5               	comf	___awdiv@dividend,f
  2316  02D0  09F6               	comf	___awdiv@dividend+1,f
  2317  02D1  0AF5               	incf	___awdiv@dividend,f
  2318  02D2  1903               	skipnz
  2319  02D3  0AF6               	incf	___awdiv@dividend+1,f
  2320  02D4                     l1436:
  2321  02D4  3001               	movlw	1
  2322  02D5  00F7               	movwf	??___awdiv
  2323  02D6  0877               	movf	??___awdiv,w
  2324  02D7  06DB               	xorwf	___awdiv@sign,f
  2325  02D8                     l1438:
  2326  02D8  01DC               	clrf	___awdiv@quotient
  2327  02D9  01DD               	clrf	___awdiv@quotient+1
  2328  02DA                     l1440:
  2329  02DA  0873               	movf	___awdiv@divisor,w
  2330  02DB  0474               	iorwf	___awdiv@divisor+1,w
  2331  02DC  1903               	btfsc	3,2
  2332  02DD  2ADF               	goto	u851
  2333  02DE  2AE0               	goto	u850
  2334  02DF                     u851:
  2335  02DF  2B17               	goto	l1460
  2336  02E0                     u850:
  2337  02E0                     l1442:
  2338  02E0  01DA               	clrf	___awdiv@counter
  2339  02E1  0ADA               	incf	___awdiv@counter,f
  2340  02E2  2AEE               	goto	l1448
  2341  02E3                     l1444:
  2342  02E3  3001               	movlw	1
  2343  02E4                     u865:
  2344  02E4  1003               	clrc
  2345  02E5  0DF3               	rlf	___awdiv@divisor,f
  2346  02E6  0DF4               	rlf	___awdiv@divisor+1,f
  2347  02E7  3EFF               	addlw	-1
  2348  02E8  1D03               	skipz
  2349  02E9  2AE4               	goto	u865
  2350  02EA                     l1446:
  2351  02EA  3001               	movlw	1
  2352  02EB  00F7               	movwf	??___awdiv
  2353  02EC  0877               	movf	??___awdiv,w
  2354  02ED  07DA               	addwf	___awdiv@counter,f
  2355  02EE                     l1448:
  2356  02EE  1FF4               	btfss	___awdiv@divisor+1,7
  2357  02EF  2AF1               	goto	u871
  2358  02F0  2AF2               	goto	u870
  2359  02F1                     u871:
  2360  02F1  2AE3               	goto	l1444
  2361  02F2                     u870:
  2362  02F2                     l1450:
  2363  02F2  3001               	movlw	1
  2364  02F3                     u885:
  2365  02F3  1003               	clrc
  2366  02F4  0DDC               	rlf	___awdiv@quotient,f
  2367  02F5  0DDD               	rlf	___awdiv@quotient+1,f
  2368  02F6  3EFF               	addlw	-1
  2369  02F7  1D03               	skipz
  2370  02F8  2AF3               	goto	u885
  2371  02F9  0874               	movf	___awdiv@divisor+1,w
  2372  02FA  0276               	subwf	___awdiv@dividend+1,w
  2373  02FB  1D03               	skipz
  2374  02FC  2AFF               	goto	u895
  2375  02FD  0873               	movf	___awdiv@divisor,w
  2376  02FE  0275               	subwf	___awdiv@dividend,w
  2377  02FF                     u895:
  2378  02FF  1C03               	skipc
  2379  0300  2B02               	goto	u891
  2380  0301  2B03               	goto	u890
  2381  0302                     u891:
  2382  0302  2B0A               	goto	l1456
  2383  0303                     u890:
  2384  0303                     l1452:
  2385  0303  0873               	movf	___awdiv@divisor,w
  2386  0304  02F5               	subwf	___awdiv@dividend,f
  2387  0305  0874               	movf	___awdiv@divisor+1,w
  2388  0306  1C03               	skipc
  2389  0307  03F6               	decf	___awdiv@dividend+1,f
  2390  0308  02F6               	subwf	___awdiv@dividend+1,f
  2391  0309                     l1454:
  2392  0309  145C               	bsf	___awdiv@quotient,0
  2393  030A                     l1456:
  2394  030A  3001               	movlw	1
  2395  030B                     u905:
  2396  030B  1003               	clrc
  2397  030C  0CF4               	rrf	___awdiv@divisor+1,f
  2398  030D  0CF3               	rrf	___awdiv@divisor,f
  2399  030E  3EFF               	addlw	-1
  2400  030F  1D03               	skipz
  2401  0310  2B0B               	goto	u905
  2402  0311                     l1458:
  2403  0311  3001               	movlw	1
  2404  0312  02DA               	subwf	___awdiv@counter,f
  2405  0313  1D03               	btfss	3,2
  2406  0314  2B16               	goto	u911
  2407  0315  2B17               	goto	u910
  2408  0316                     u911:
  2409  0316  2AF2               	goto	l1450
  2410  0317                     u910:
  2411  0317                     l1460:
  2412  0317  085B               	movf	___awdiv@sign,w
  2413  0318  1903               	btfsc	3,2
  2414  0319  2B1B               	goto	u921
  2415  031A  2B1C               	goto	u920
  2416  031B                     u921:
  2417  031B  2B21               	goto	l1464
  2418  031C                     u920:
  2419  031C                     l1462:
  2420  031C  09DC               	comf	___awdiv@quotient,f
  2421  031D  09DD               	comf	___awdiv@quotient+1,f
  2422  031E  0ADC               	incf	___awdiv@quotient,f
  2423  031F  1903               	skipnz
  2424  0320  0ADD               	incf	___awdiv@quotient+1,f
  2425  0321                     l1464:
  2426  0321  085D               	movf	___awdiv@quotient+1,w
  2427  0322  00F4               	movwf	?___awdiv+1
  2428  0323  085C               	movf	___awdiv@quotient,w
  2429  0324  00F3               	movwf	?___awdiv
  2430  0325                     l499:
  2431  0325  0008               	return
  2432  0326                     __end_of___awdiv:
  2433                           
  2434                           	psect	text9
  2435  0439                     __ptext9:	
  2436 ;; *************** function _Lcd_Write_String *****************
  2437 ;; Defined at:
  2438 ;;		line 71 in file "LCD.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  a               2    6[COMMON] PTR unsigned char 
  2441 ;;		 -> STR_1(3), Date(17), Time(15), 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  i               2    3[BANK0 ] int 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         2       0       0       0       0
  2454 ;;      Locals:         0       2       0       0       0
  2455 ;;      Temps:          0       3       0       0       0
  2456 ;;      Totals:         2       5       0       0       0
  2457 ;;Total ram usage:        7 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    3
  2460 ;; This function calls:
  2461 ;;		_Lcd_Write_Char
  2462 ;; This function is called by:
  2463 ;;		_RTC_display
  2464 ;;		_edit
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _Lcd_Write_String
  2470  0439                     _Lcd_Write_String:
  2471  0439                     l1786:	
  2472                           ;incstack = 0
  2473                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2474                           
  2475                           
  2476                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  2477  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2478  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2479  043B  01DD               	clrf	Lcd_Write_String@i
  2480  043C  01DE               	clrf	Lcd_Write_String@i+1
  2481  043D  2C62               	goto	l1792
  2482  043E                     l1788:
  2483                           
  2484                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  2485  043E  085D               	movf	Lcd_Write_String@i,w
  2486  043F  0776               	addwf	Lcd_Write_String@a,w
  2487  0440  00DB               	movwf	??_Lcd_Write_String+1
  2488  0441  0877               	movf	Lcd_Write_String@a+1,w
  2489  0442  00DA               	movwf	??_Lcd_Write_String
  2490  0443  1803               	skipnc
  2491  0444  0ADA               	incf	??_Lcd_Write_String,f
  2492  0445  1FDD               	btfss	Lcd_Write_String@i,7
  2493  0446  2C48               	goto	u1280
  2494  0447  03DA               	decf	??_Lcd_Write_String,f
  2495  0448                     u1280:
  2496  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2498  044A  085A               	movf	??_Lcd_Write_String,w
  2499  044B  00DC               	movwf	??_Lcd_Write_String+2
  2500  044C  085C               	movf	??_Lcd_Write_String+2,w
  2501  044D  00FF               	movwf	btemp+1
  2502  044E  085B               	movf	??_Lcd_Write_String+1,w
  2503  044F  0084               	movwf	4
  2504  0450  120A  118A  25B2  120A  118A  	fcall	stringtab
  2505  0455  120A  118A  2587  120A  118A  	fcall	_Lcd_Write_Char
  2506  045A                     l1790:
  2507  045A  3001               	movlw	1
  2508  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2509  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2510  045D  07DD               	addwf	Lcd_Write_String@i,f
  2511  045E  1803               	skipnc
  2512  045F  0ADE               	incf	Lcd_Write_String@i+1,f
  2513  0460  3000               	movlw	0
  2514  0461  07DE               	addwf	Lcd_Write_String@i+1,f
  2515  0462                     l1792:
  2516  0462  085D               	movf	Lcd_Write_String@i,w
  2517  0463  0776               	addwf	Lcd_Write_String@a,w
  2518  0464  00DB               	movwf	??_Lcd_Write_String+1
  2519  0465  0877               	movf	Lcd_Write_String@a+1,w
  2520  0466  00DA               	movwf	??_Lcd_Write_String
  2521  0467  1803               	skipnc
  2522  0468  0ADA               	incf	??_Lcd_Write_String,f
  2523  0469  1FDD               	btfss	Lcd_Write_String@i,7
  2524  046A  2C6C               	goto	u1290
  2525  046B  03DA               	decf	??_Lcd_Write_String,f
  2526  046C                     u1290:
  2527  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2528  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2529  046E  085A               	movf	??_Lcd_Write_String,w
  2530  046F  00DC               	movwf	??_Lcd_Write_String+2
  2531  0470  085C               	movf	??_Lcd_Write_String+2,w
  2532  0471  00FF               	movwf	btemp+1
  2533  0472  085B               	movf	??_Lcd_Write_String+1,w
  2534  0473  0084               	movwf	4
  2535  0474  120A  118A  25B2  120A  118A  	fcall	stringtab
  2536  0479  3A00               	xorlw	0
  2537  047A  1D03               	skipz
  2538  047B  2C7D               	goto	u1301
  2539  047C  2C7E               	goto	u1300
  2540  047D                     u1301:
  2541  047D  2C3E               	goto	l1788
  2542  047E                     u1300:
  2543  047E                     l248:
  2544  047E  0008               	return
  2545  047F                     __end_of_Lcd_Write_String:
  2546                           
  2547                           	psect	text10
  2548  0587                     __ptext10:	
  2549 ;; *************** function _Lcd_Write_Char *****************
  2550 ;; Defined at:
  2551 ;;		line 62 in file "LCD.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  a               1    wreg     unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  a               1    5[COMMON] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         1       0       0       0       0
  2567 ;;      Temps:          1       0       0       0       0
  2568 ;;      Totals:         2       0       0       0       0
  2569 ;;Total ram usage:        2 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    2
  2572 ;; This function calls:
  2573 ;;		_Lcd_Port
  2574 ;; This function is called by:
  2575 ;;		_Lcd_Write_String
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _Lcd_Write_Char
  2581  0587                     _Lcd_Write_Char:
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2585                           ;Lcd_Write_Char@a stored from wreg
  2586  0587  00F5               	movwf	Lcd_Write_Char@a
  2587  0588                     l1736:
  2588                           
  2589                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  2590  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2592  058A  1409               	bsf	9,0	;volatile
  2593  058B                     l1738:
  2594                           
  2595                           ;LCD.c: 64:    Lcd_Port(a);
  2596  058B  0875               	movf	Lcd_Write_Char@a,w
  2597  058C  120A  118A  2631  120A  118A  	fcall	_Lcd_Port
  2598  0591                     l1740:
  2599                           
  2600                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  2601  0591  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0592  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0593  1509               	bsf	9,2	;volatile
  2604  0594                     l1742:
  2605                           
  2606                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2607  0594  301A               	movlw	26
  2608  0595  00F4               	movwf	??_Lcd_Write_Char
  2609  0596                     u1597:
  2610  0596  0BF4               	decfsz	??_Lcd_Write_Char,f
  2611  0597  2D96               	goto	u1597
  2612  0598  0000               	nop
  2613  0599                     l1744:
  2614                           
  2615                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  2616  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2617  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2618  059B  1109               	bcf	9,2	;volatile
  2619  059C                     l242:
  2620  059C  0008               	return
  2621  059D                     __end_of_Lcd_Write_Char:
  2622                           
  2623                           	psect	text11
  2624  04E9                     __ptext11:	
  2625 ;; *************** function _Lcd_Set_Cursor *****************
  2626 ;; Defined at:
  2627 ;;		line 49 in file "LCD.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  a               1    wreg     unsigned char 
  2630 ;;  b               1    7[COMMON] unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  a               1    1[BANK0 ] unsigned char 
  2633 ;;  temp            1    2[BANK0 ] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         1       0       0       0       0
  2644 ;;      Locals:         0       2       0       0       0
  2645 ;;      Temps:          0       1       0       0       0
  2646 ;;      Totals:         1       3       0       0       0
  2647 ;;Total ram usage:        4 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    3
  2650 ;; This function calls:
  2651 ;;		_Lcd_Cmd
  2652 ;; This function is called by:
  2653 ;;		_RTC_display
  2654 ;;		_edit
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           
  2659                           ;psect for function _Lcd_Set_Cursor
  2660  04E9                     _Lcd_Set_Cursor:
  2661                           
  2662                           ;incstack = 0
  2663                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2664                           ;Lcd_Set_Cursor@a stored from wreg
  2665  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2666  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2667  04EB  00DB               	movwf	Lcd_Set_Cursor@a
  2668  04EC                     l1774:
  2669                           
  2670                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  2671  04EC  035B               	decf	Lcd_Set_Cursor@a,w
  2672  04ED  1D03               	btfss	3,2
  2673  04EE  2CF0               	goto	u1261
  2674  04EF  2CF1               	goto	u1260
  2675  04F0                     u1261:
  2676  04F0  2CFD               	goto	l1780
  2677  04F1                     u1260:
  2678  04F1                     l1776:
  2679                           
  2680                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  2681  04F1  0877               	movf	Lcd_Set_Cursor@b,w
  2682  04F2  3E7F               	addlw	127
  2683  04F3  00DA               	movwf	??_Lcd_Set_Cursor
  2684  04F4  085A               	movf	??_Lcd_Set_Cursor,w
  2685  04F5  00DC               	movwf	Lcd_Set_Cursor@temp
  2686  04F6                     l1778:
  2687                           
  2688                           ;LCD.c: 53:         Lcd_Cmd(temp);
  2689  04F6  085C               	movf	Lcd_Set_Cursor@temp,w
  2690  04F7  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2691                           
  2692                           ;LCD.c: 54:  }
  2693  04FC  2D0E               	goto	l239
  2694  04FD                     l1780:
  2695  04FD  3002               	movlw	2
  2696  04FE  065B               	xorwf	Lcd_Set_Cursor@a,w
  2697  04FF  1D03               	btfss	3,2
  2698  0500  2D02               	goto	u1271
  2699  0501  2D03               	goto	u1270
  2700  0502                     u1271:
  2701  0502  2D0E               	goto	l239
  2702  0503                     u1270:
  2703  0503                     l1782:
  2704                           
  2705                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  2706  0503  0877               	movf	Lcd_Set_Cursor@b,w
  2707  0504  3EBF               	addlw	191
  2708  0505  00DA               	movwf	??_Lcd_Set_Cursor
  2709  0506  085A               	movf	??_Lcd_Set_Cursor,w
  2710  0507  00DC               	movwf	Lcd_Set_Cursor@temp
  2711  0508                     l1784:
  2712                           
  2713                           ;LCD.c: 57:   Lcd_Cmd(temp);
  2714  0508  085C               	movf	Lcd_Set_Cursor@temp,w
  2715  0509  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2716  050E                     l239:
  2717  050E  0008               	return
  2718  050F                     __end_of_Lcd_Set_Cursor:
  2719                           
  2720                           	psect	text12
  2721  03E9                     __ptext12:	
  2722 ;; *************** function _Lcd_Init *****************
  2723 ;; Defined at:
  2724 ;;		line 15 in file "LCD.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, pclath, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0
  2740 ;;      Temps:          0       2       0       0       0
  2741 ;;      Totals:         0       2       0       0       0
  2742 ;;Total ram usage:        2 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    3
  2745 ;; This function calls:
  2746 ;;		_Lcd_Cmd
  2747 ;;		_Lcd_Port
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _Lcd_Init
  2755  03E9                     _Lcd_Init:
  2756  03E9                     l1872:	
  2757                           ;incstack = 0
  2758                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2759                           
  2760                           
  2761                           ;LCD.c: 16:   Lcd_Port(0x00);
  2762  03E9  3000               	movlw	0
  2763  03EA  120A  118A  2631  120A  118A  	fcall	_Lcd_Port
  2764  03EF                     l1874:
  2765                           
  2766                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2767  03EF  3034               	movlw	52
  2768  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2769  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2770  03F2  00DB               	movwf	??_Lcd_Init+1
  2771  03F3  30F1               	movlw	241
  2772  03F4  00DA               	movwf	??_Lcd_Init
  2773  03F5                     u1607:
  2774  03F5  0BDA               	decfsz	??_Lcd_Init,f
  2775  03F6  2BF5               	goto	u1607
  2776  03F7  0BDB               	decfsz	??_Lcd_Init+1,f
  2777  03F8  2BF5               	goto	u1607
  2778  03F9                     l1876:
  2779                           
  2780                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  2781  03F9  3030               	movlw	48
  2782  03FA  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2783                           
  2784                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2785  03FF  300D               	movlw	13
  2786  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0402  00DB               	movwf	??_Lcd_Init+1
  2789  0403  30FB               	movlw	251
  2790  0404  00DA               	movwf	??_Lcd_Init
  2791  0405                     u1617:
  2792  0405  0BDA               	decfsz	??_Lcd_Init,f
  2793  0406  2C05               	goto	u1617
  2794  0407  0BDB               	decfsz	??_Lcd_Init+1,f
  2795  0408  2C05               	goto	u1617
  2796  0409                     l1878:
  2797                           
  2798                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  2799  0409  3030               	movlw	48
  2800  040A  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2801  040F                     l1880:
  2802                           
  2803                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2804  040F  301D               	movlw	29
  2805  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2807  0412  00DB               	movwf	??_Lcd_Init+1
  2808  0413  3090               	movlw	144
  2809  0414  00DA               	movwf	??_Lcd_Init
  2810  0415                     u1627:
  2811  0415  0BDA               	decfsz	??_Lcd_Init,f
  2812  0416  2C15               	goto	u1627
  2813  0417  0BDB               	decfsz	??_Lcd_Init+1,f
  2814  0418  2C15               	goto	u1627
  2815  0419  0000               	nop
  2816                           
  2817                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  2818  041A  3030               	movlw	48
  2819  041B  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2820                           
  2821                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  2822  0420  3038               	movlw	56
  2823  0421  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2824                           
  2825                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  2826  0426  300C               	movlw	12
  2827  0427  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2828                           
  2829                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  2830  042C  3001               	movlw	1
  2831  042D  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2832                           
  2833                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  2834  0432  3006               	movlw	6
  2835  0433  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2836  0438                     l224:
  2837  0438  0008               	return
  2838  0439                     __end_of_Lcd_Init:
  2839                           
  2840                           	psect	text13
  2841  05EA                     __ptext13:	
  2842 ;; *************** function _Lcd_Clear *****************
  2843 ;; Defined at:
  2844 ;;		line 43 in file "LCD.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    3
  2865 ;; This function calls:
  2866 ;;		_Lcd_Cmd
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _Lcd_Clear
  2874  05EA                     _Lcd_Clear:
  2875  05EA                     l1882:	
  2876                           ;incstack = 0
  2877                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2878                           
  2879                           
  2880                           ;LCD.c: 44:  Lcd_Cmd(0);
  2881  05EA  3000               	movlw	0
  2882  05EB  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2883                           
  2884                           ;LCD.c: 45:  Lcd_Cmd(1);
  2885  05F0  3001               	movlw	1
  2886  05F1  120A  118A  256D  120A  118A  	fcall	_Lcd_Cmd
  2887  05F6                     l233:
  2888  05F6  0008               	return
  2889  05F7                     __end_of_Lcd_Clear:
  2890                           
  2891                           	psect	text14
  2892  056D                     __ptext14:	
  2893 ;; *************** function _Lcd_Cmd *****************
  2894 ;; Defined at:
  2895 ;;		line 34 in file "LCD.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  a               1    wreg     unsigned char 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  a               1    6[COMMON] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       0       0       0       0
  2910 ;;      Locals:         1       0       0       0       0
  2911 ;;      Temps:          2       0       0       0       0
  2912 ;;      Totals:         3       0       0       0       0
  2913 ;;Total ram usage:        3 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    2
  2916 ;; This function calls:
  2917 ;;		_Lcd_Port
  2918 ;; This function is called by:
  2919 ;;		_Lcd_Init
  2920 ;;		_Lcd_Clear
  2921 ;;		_Lcd_Set_Cursor
  2922 ;;		_Lcd_Shift_Right
  2923 ;;		_Lcd_Shift_Left
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _Lcd_Cmd
  2929  056D                     _Lcd_Cmd:
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2933                           ;Lcd_Cmd@a stored from wreg
  2934  056D  00F6               	movwf	Lcd_Cmd@a
  2935  056E                     l1726:
  2936                           
  2937                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  2938  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2939  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0570  1009               	bcf	9,0	;volatile
  2941  0571                     l1728:
  2942                           
  2943                           ;LCD.c: 36:  Lcd_Port(a);
  2944  0571  0876               	movf	Lcd_Cmd@a,w
  2945  0572  120A  118A  2631  120A  118A  	fcall	_Lcd_Port
  2946  0577                     l1730:
  2947                           
  2948                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  2949  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0579  1509               	bsf	9,2	;volatile
  2952  057A                     l1732:
  2953                           
  2954                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2955  057A  300B               	movlw	11
  2956  057B  00F5               	movwf	??_Lcd_Cmd+1
  2957  057C  3062               	movlw	98
  2958  057D  00F4               	movwf	??_Lcd_Cmd
  2959  057E                     u1637:
  2960  057E  0BF4               	decfsz	??_Lcd_Cmd,f
  2961  057F  2D7E               	goto	u1637
  2962  0580  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2963  0581  2D7E               	goto	u1637
  2964  0582  0000               	nop
  2965  0583                     l1734:
  2966                           
  2967                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  2968  0583  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0584  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0585  1109               	bcf	9,2	;volatile
  2971  0586                     l230:
  2972  0586  0008               	return
  2973  0587                     __end_of_Lcd_Cmd:
  2974                           
  2975                           	psect	text15
  2976  0631                     __ptext15:	
  2977 ;; *************** function _Lcd_Port *****************
  2978 ;; Defined at:
  2979 ;;		line 30 in file "LCD.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  a               1    wreg     unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  a               1    3[COMMON] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       0       0       0       0
  2994 ;;      Locals:         1       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0
  2996 ;;      Totals:         1       0       0       0       0
  2997 ;;Total ram usage:        1 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_Lcd_Init
  3004 ;;		_Lcd_Cmd
  3005 ;;		_Lcd_Write_Char
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           
  3010                           ;psect for function _Lcd_Port
  3011  0631                     _Lcd_Port:
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _Lcd_Port: [wreg]
  3015                           ;Lcd_Port@a stored from wreg
  3016  0631  00F3               	movwf	Lcd_Port@a
  3017  0632                     l1724:
  3018                           
  3019                           ;LCD.c: 31:     PORTD = a;
  3020  0632  0873               	movf	Lcd_Port@a,w
  3021  0633  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0635  0088               	movwf	8	;volatile
  3024  0636                     l227:
  3025  0636  0008               	return
  3026  0637                     __end_of_Lcd_Port:
  3027                           
  3028                           	psect	text16
  3029  0604                     __ptext16:	
  3030 ;; *************** function _I2C_Master_Write *****************
  3031 ;; Defined at:
  3032 ;;		line 84 in file "I2C.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  d               2    3[COMMON] unsigned int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, pclath, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         2       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0
  3049 ;;      Totals:         2       0       0       0       0
  3050 ;;Total ram usage:        2 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    2
  3053 ;; This function calls:
  3054 ;;		_I2C_Master_Wait
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _I2C_Master_Write
  3062  0604                     _I2C_Master_Write:
  3063  0604                     l1888:	
  3064                           ;incstack = 0
  3065                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3066                           
  3067                           
  3068                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  3069  0604  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Wait
  3070  0609                     l1890:
  3071                           
  3072                           ;I2C.c: 87:     SSPBUF = d;
  3073  0609  0873               	movf	I2C_Master_Write@d,w
  3074  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3075  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3076  060C  0093               	movwf	19	;volatile
  3077  060D                     l201:
  3078  060D  0008               	return
  3079  060E                     __end_of_I2C_Master_Write:
  3080                           
  3081                           	psect	text17
  3082  060E                     __ptext17:	
  3083 ;; *************** function _I2C_Master_Stop *****************
  3084 ;; Defined at:
  3085 ;;		line 73 in file "I2C.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    2
  3106 ;; This function calls:
  3107 ;;		_I2C_Master_Wait
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function _I2C_Master_Stop
  3115  060E                     _I2C_Master_Stop:
  3116  060E                     l1892:	
  3117                           ;incstack = 0
  3118                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3119                           
  3120                           
  3121                           ;I2C.c: 75:     I2C_Master_Wait();
  3122  060E  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Wait
  3123  0613                     l1894:
  3124                           
  3125                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  3126  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3127  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3128  0615  1511               	bsf	17,2	;volatile
  3129  0616                     l198:
  3130  0616  0008               	return
  3131  0617                     __end_of_I2C_Master_Stop:
  3132                           
  3133                           	psect	text18
  3134  0617                     __ptext18:	
  3135 ;; *************** function _I2C_Master_Start *****************
  3136 ;; Defined at:
  3137 ;;		line 56 in file "I2C.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         0       0       0       0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    2
  3158 ;; This function calls:
  3159 ;;		_I2C_Master_Wait
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _I2C_Master_Start
  3167  0617                     _I2C_Master_Start:
  3168  0617                     l1884:	
  3169                           ;incstack = 0
  3170                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3171                           
  3172                           
  3173                           ;I2C.c: 57:     I2C_Master_Wait();
  3174  0617  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Wait
  3175  061C                     l1886:
  3176                           
  3177                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  3178  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3179  061D  1303               	bcf	3,6	;RP1=0, select bank1
  3180  061E  1411               	bsf	17,0	;volatile
  3181  061F                     l192:
  3182  061F  0008               	return
  3183  0620                     __end_of_I2C_Master_Start:
  3184                           
  3185                           	psect	text19
  3186  0620                     __ptext19:	
  3187 ;; *************** function _I2C_Master_RepeatedStart *****************
  3188 ;; Defined at:
  3189 ;;		line 64 in file "I2C.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0, pclath, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3203 ;;      Params:         0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    2
  3210 ;; This function calls:
  3211 ;;		_I2C_Master_Wait
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _I2C_Master_RepeatedStart
  3219  0620                     _I2C_Master_RepeatedStart:
  3220  0620                     l1896:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3223                           
  3224                           
  3225                           ;I2C.c: 66:     I2C_Master_Wait();
  3226  0620  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Wait
  3227  0625                     l1898:
  3228                           
  3229                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3230  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3232  0627  1491               	bsf	17,1	;volatile
  3233  0628                     l195:
  3234  0628  0008               	return
  3235  0629                     __end_of_I2C_Master_RepeatedStart:
  3236                           
  3237                           	psect	text20
  3238  04B9                     __ptext20:	
  3239 ;; *************** function _I2C_Master_Read *****************
  3240 ;; Defined at:
  3241 ;;		line 94 in file "I2C.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  a               2    3[COMMON] unsigned short 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  temp            2    0[BANK0 ] unsigned short 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  2    3[COMMON] unsigned short 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         2       0       0       0       0
  3256 ;;      Locals:         0       2       0       0       0
  3257 ;;      Temps:          2       0       0       0       0
  3258 ;;      Totals:         4       2       0       0       0
  3259 ;;Total ram usage:        6 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    2
  3262 ;; This function calls:
  3263 ;;		_I2C_Master_Wait
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _I2C_Master_Read
  3271  04B9                     _I2C_Master_Read:
  3272  04B9                     l1900:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3275                           
  3276                           
  3277                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3278  04B9  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Wait
  3279  04BE                     l1902:
  3280                           
  3281                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3282  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  3283  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  3284  04C0  1591               	bsf	17,3	;volatile
  3285                           
  3286                           ;I2C.c: 99:     I2C_Master_Wait();
  3287  04C1  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Wait
  3288  04C6                     l1904:
  3289                           
  3290                           ;I2C.c: 100:     temp = SSPBUF;
  3291  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3292  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  3293  04C8  0813               	movf	19,w	;volatile
  3294  04C9  00F5               	movwf	??_I2C_Master_Read
  3295  04CA  01F6               	clrf	??_I2C_Master_Read+1
  3296  04CB  0875               	movf	??_I2C_Master_Read,w
  3297  04CC  00DA               	movwf	I2C_Master_Read@temp
  3298  04CD  0876               	movf	??_I2C_Master_Read+1,w
  3299  04CE  00DB               	movwf	I2C_Master_Read@temp+1
  3300  04CF                     l1906:
  3301                           
  3302                           ;I2C.c: 101:     I2C_Master_Wait();
  3303  04CF  120A  118A  25F7  120A  118A  	fcall	_I2C_Master_Wait
  3304  04D4                     l1908:
  3305                           
  3306                           ;I2C.c: 102:     if(a == 1){
  3307  04D4  0373               	decf	I2C_Master_Read@a,w
  3308  04D5  0474               	iorwf	I2C_Master_Read@a+1,w
  3309  04D6  1D03               	btfss	3,2
  3310  04D7  2CD9               	goto	u1431
  3311  04D8  2CDA               	goto	u1430
  3312  04D9                     u1431:
  3313  04D9  2CDE               	goto	l204
  3314  04DA                     u1430:
  3315  04DA                     l1910:
  3316                           
  3317                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3318  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3319  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3320  04DC  1291               	bcf	17,5	;volatile
  3321                           
  3322                           ;I2C.c: 104:     }else{
  3323  04DD  2CE1               	goto	l205
  3324  04DE                     l204:
  3325                           
  3326                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3327  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  3328  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  3329  04E0  1691               	bsf	17,5	;volatile
  3330  04E1                     l205:	
  3331                           ;I2C.c: 106:     }
  3332                           
  3333                           
  3334                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3335  04E1  1611               	bsf	17,4	;volatile
  3336  04E2                     l1912:
  3337                           
  3338                           ;I2C.c: 108:     return temp;
  3339  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3340  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3341  04E4  085B               	movf	I2C_Master_Read@temp+1,w
  3342  04E5  00F4               	movwf	?_I2C_Master_Read+1
  3343  04E6  085A               	movf	I2C_Master_Read@temp,w
  3344  04E7  00F3               	movwf	?_I2C_Master_Read
  3345  04E8                     l206:
  3346  04E8  0008               	return
  3347  04E9                     __end_of_I2C_Master_Read:
  3348                           
  3349                           	psect	text21
  3350  05F7                     __ptext21:	
  3351 ;; *************** function _I2C_Master_Wait *****************
  3352 ;; Defined at:
  3353 ;;		line 48 in file "I2C.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_I2C_Master_Start
  3378 ;;		_I2C_Master_RepeatedStart
  3379 ;;		_I2C_Master_Stop
  3380 ;;		_I2C_Master_Write
  3381 ;;		_I2C_Master_Read
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function _I2C_Master_Wait
  3387  05F7                     _I2C_Master_Wait:
  3388  05F7                     l1806:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3391                           
  3392  05F7                     l186:	
  3393                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3394                           
  3395  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3396  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3397  05F9  1914               	btfsc	20,2	;volatile
  3398  05FA  2DFC               	goto	u1321
  3399  05FB  2DFD               	goto	u1320
  3400  05FC                     u1321:
  3401  05FC  2DF7               	goto	l186
  3402  05FD                     u1320:
  3403  05FD                     l1808:
  3404  05FD  0811               	movf	17,w	;volatile
  3405  05FE  391F               	andlw	31
  3406  05FF  1D03               	btfss	3,2
  3407  0600  2E02               	goto	u1331
  3408  0601  2E03               	goto	u1330
  3409  0602                     u1331:
  3410  0602  2DF7               	goto	l186
  3411  0603                     u1330:
  3412  0603                     l189:
  3413  0603  0008               	return
  3414  0604                     __end_of_I2C_Master_Wait:
  3415                           
  3416                           	psect	text22
  3417  05D8                     __ptext22:	
  3418 ;; *************** function _ISR *****************
  3419 ;; Defined at:
  3420 ;;		line 91 in file "main_prueba3_mini2.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;		None
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3434 ;;      Params:         0       0       0       0       0
  3435 ;;      Locals:         0       0       0       0       0
  3436 ;;      Temps:          3       0       0       0       0
  3437 ;;      Totals:         3       0       0       0       0
  3438 ;;Total ram usage:        3 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		Interrupt level 1
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _ISR
  3449  05D8                     _ISR:
  3450  05D8                     i1l1580:
  3451                           
  3452                           ;main_prueba3_mini2.c: 92:     if(PIR1bits.RCIF == 1){
  3453  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3454  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3455  05DA  1E8C               	btfss	12,5	;volatile
  3456  05DB  2DDD               	goto	u103_21
  3457  05DC  2DDE               	goto	u103_20
  3458  05DD                     u103_21:
  3459  05DD  2DE3               	goto	i1l99
  3460  05DE                     u103_20:
  3461  05DE                     i1l1582:
  3462                           
  3463                           ;main_prueba3_mini2.c: 93:         data_recive = RCREG;
  3464  05DE  081A               	movf	26,w	;volatile
  3465  05DF  00F0               	movwf	??_ISR
  3466  05E0  0870               	movf	??_ISR,w
  3467  05E1  00D4               	movwf	_data_recive
  3468  05E2                     i1l1592:	
  3469                           ;main_prueba3_mini2.c: 94:         if (data_recive == 'P11'){
  3470                           
  3471                           
  3472                           ;main_prueba3_mini2.c: 106:         data_recive = 0;
  3473  05E2  01D4               	clrf	_data_recive
  3474  05E3                     i1l99:
  3475  05E3  0872               	movf	??_ISR+2,w
  3476  05E4  008A               	movwf	10
  3477  05E5  0E71               	swapf	??_ISR+1,w
  3478  05E6  0083               	movwf	3
  3479  05E7  0EFE               	swapf	btemp,f
  3480  05E8  0E7E               	swapf	btemp,w
  3481  05E9  0009               	retfie
  3482  05EA                     __end_of_ISR:
  3483  007E                     btemp	set	126	;btemp
  3484  007E                     wtemp0	set	126
  3485                           
  3486                           	psect	intentry
  3487  0004                     __pintentry:	
  3488                           ;incstack = 0
  3489                           ; Regs used in _ISR: [wreg+status,2]
  3490                           
  3491  0004                     interrupt_function:
  3492  007E                     saved_w	set	btemp
  3493  0004  00FE               	movwf	btemp
  3494  0005  0E03               	swapf	3,w
  3495  0006  00F1               	movwf	??_ISR+1
  3496  0007  080A               	movf	10,w
  3497  0008  00F2               	movwf	??_ISR+2
  3498  0009  120A  118A  2DD8   	ljmp	_ISR
  3499                           
  3500                           	psect	config
  3501                           
  3502                           ;Config register CONFIG1 @ 0x2007
  3503                           ;	Oscillator Selection bits
  3504                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3505                           ;	Watchdog Timer Enable bit
  3506                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3507                           ;	Power-up Timer Enable bit
  3508                           ;	PWRTE = OFF, PWRT disabled
  3509                           ;	RE3/MCLR pin function select bit
  3510                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3511                           ;	Code Protection bit
  3512                           ;	CP = OFF, Program memory code protection is disabled
  3513                           ;	Data Code Protection bit
  3514                           ;	CPD = OFF, Data memory code protection is disabled
  3515                           ;	Brown Out Reset Selection bits
  3516                           ;	BOREN = OFF, BOR disabled
  3517                           ;	Internal External Switchover bit
  3518                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3519                           ;	Fail-Safe Clock Monitor Enabled bit
  3520                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3521                           ;	Low Voltage Programming Enable bit
  3522                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3523                           ;	In-Circuit Debugger Mode bit
  3524                           ;	DEBUG = 0x1, unprogrammed default
  3525  2007                     	org	8199
  3526  2007  20D4               	dw	8404
  3527                           
  3528                           ;Config register CONFIG2 @ 0x2008
  3529                           ;	Brown-out Reset Selection bit
  3530                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3531                           ;	Flash Program Memory Self Write Enable bits
  3532                           ;	WRT = OFF, Write protection off
  3533  2008                     	org	8200
  3534  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        32
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[3]), Date(BANK0[17]), Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->_Lcd_Write_String
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->_Lcd_Write_String

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7554
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    5051
                                              5 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    2013
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1642
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     462
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     704
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 21:48:31 2021

                                _i 007A                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 005B  
                               fsr 0004                        _RTC_display 002C  
                              l110 056C                                l201 060D  
                              l204 04DE                                l116 01A4  
                              l205 04E1                                l206 04E8  
                              l230 0586                                l224 0438  
                              l233 05F6                                l242 059C  
                              l154 0530                                l227 0636  
                              l239 050E                                l183 04B8  
                              l192 061F                                l248 047E  
                              l512 03E8                                l186 05F7  
                              l195 0628                                l372 05B1  
                              l189 0603                                l198 0616  
                              l382 038D                                l499 0325  
                              _GIE 005F                                _RB0 0030  
                              _RB1 0031                                _ISR 05D8  
                              u650 05A3                                u651 05A2  
                              u660 05B0                                u661 05AF  
                              u910 0317                                u830 02C4  
                              u911 0316                                u831 02C3  
                              u920 031C                                u840 02CF  
                              u921 031B                                u905 030B  
                              u841 02CE                                u850 02E0  
                              u851 02DF                                u870 02F2  
                              u871 02F1                                u865 02E4  
                              u890 0303                                u891 0302  
                              u885 02F3                                u895 02FF  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 005B                               ?_ISR 0070  
                             l1430 02C9                               l1350 05A3  
                             l1440 02DA                               l1432 02CB  
                             l1424 02BD                               l1352 05A7  
                             l1450 02F2                               l1442 02E0  
                             l1434 02CF                               l1426 02C0  
                             l1354 05A9                               l1346 059E  
                             l1452 0303                               l1444 02E3  
                             l1460 0317                               l1436 02D4  
                             l1428 02C4                               l1356 05B0  
                             l1348 059F                               l1462 031C  
                             l1454 0309                               l1446 02EA  
                             l1438 02D8                               l1464 0321  
                             l1456 030A                               l1448 02EE  
                             l1800 04B5                               l1730 0577  
                             l1458 0311                               l1810 038E  
                             l1802 04B6                               l1900 04B9  
                             l1724 0632                               l1732 057A  
                             l1740 0591                               l1820 03A0  
                             l1812 0391                               l1804 04B7  
                             l1806 05F7                               l1910 04DA  
                             l1902 04BE                               l1734 0583  
                             l1726 056E                               l1742 0594  
                             l1830 03B9                               l1822 03A5  
                             l1814 0395                               l1750 033B  
                             l1808 05FD                               l1912 04E2  
                             l1904 04C6                               l1728 0571  
                             l1744 0599                               l1736 0588  
                             l1832 03BD                               l1824 03AB  
                             l1840 03DA                               l1816 039A  
                             l1920 0193                               l1760 0375  
                             l1752 0348                               l1906 04CF  
                             l1738 058B                               l1842 03DF  
                             l1834 03C7                               l1826 03AE  
                             l1818 039C                               l1770 0552  
                             l1762 0376                               l1754 034C  
                             l1746 0326                               l1850 0516  
                             l1930 01B7                               l1922 01A5  
                             l1908 04D4                               l1780 04FD  
                             l1844 03E4                               l1836 03CD  
                             l1828 03B5                               l1916 002C  
                             l1764 037F                               l1756 0355  
                             l1748 0338                               l1860 051C  
                             l1852 0518                               l1940 01E3  
                             l1932 01BC                               l1924 01AA  
                             l1782 0503                               l1774 04EC  
                             l1790 045A                               l1838 03D4  
                             l1918 018A                               l1758 0367  
                             l1766 0385                               l1870 0523  
                             l1862 051F                               l1854 0519  
                             l1950 0215                               l1942 01F1  
                             l1934 01C5                               l1926 01AD  
                             l1880 040F                               l1872 03E9  
                             l1784 0508                               l1776 04F1  
                             l1792 0462                               l1864 0520  
                             l1856 051A                               l1848 050F  
                             l1960 023F                               l1952 021A  
                             l1944 01FA                               l1936 01CD  
                             l1928 01B2                               l1890 0609  
                             l1882 05EA                               l1874 03EF  
                             l1778 04F6                               l1786 0439  
                             l1794 047F                               l1866 0521  
                             l1858 051B                               l1970 027A  
                             l1962 0244                               l1954 0229  
                             l1946 0203                               l1938 01D5  
                             l1884 0617                               l1892 060E  
                             l1876 03F9                               l1788 043E  
                             l1796 0483                               l1868 0522  
                             l1980 02B4                               l1972 0283  
                             l1964 024D                               l1956 022E  
                             l1948 020C                               l1886 061C  
                             l1894 0613                               l1878 0409  
                             l1798 0486                               l1974 0292  
                             l1966 025C                               l1958 0237  
                             l1896 0620                               l1888 0604  
                             l1976 02A1                               l1968 026B  
                             l1898 0625                               l1978 02AF  
                             STR_1 05C2                               u1200 034C  
                             u1201 034B                               u1300 047E  
                             u1220 0367                               u1301 047D  
                             u1221 0366                               u1310 0496  
                             u1215 034E                               u1320 05FD  
                             u1240 0385                               u1321 05FC  
                             u1241 0384                               u1225 0363  
                             u1330 0603                               u1410 03DA  
                             u1331 0602                               u1411 03D9  
                             u1235 0377                               u1315 0491  
                             u1260 04F1                               u1420 03DF  
                             u1340 0395                               u1180 0338  
                             u1261 04F0                               u1421 03DE  
                             u1405 03CE                               u1341 0394  
                             u1181 0337                               u1430 04DA  
                             u1270 0503                               u1350 03A0  
                             u1431 04D9                               u1271 0502  
                             u1351 039F                               u1255 055E  
                             u1280 0448                               u1360 03AB  
                             u1361 03AA                               u1290 046C  
                             u1195 033D                               u1380 03BD  
                             u1381 03BC                               u1390 03C7  
                             u1607 03F5                               u1391 03C6  
                             u1375 03AF                               u1617 0405  
                             u1627 0415                               u1395 03C3  
                             u1637 057E                               u1587 0222  
                             u1597 0596                               _PEIE 005E  
                             i1l99 05E3                               _Date 0020  
                             _Time 0031                  ?_Lcd_Write_String 0076  
 __end_of_I2C_Master_RepeatedStart 0629                               _cont 0055  
                             _main 01A5                               _hour 0058  
                             _year 0056                               btemp 007E  
                             start 000C                 ??_Lcd_Write_String 005A  
                  __end_of_Lcd_Cmd 0587                  ___bmul@multiplier 0076  
                            ??_ISR 0070                   ?_I2C_Master_Init 0067  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 0326                    __end_of___awmod 03E9  
                            _ANSEL 0188                    __end_of___lldiv 038E  
                  ___awdiv@divisor 0073                    ___awdiv@counter 005A  
                            _RCREG 001A                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
          __size_of_Lcd_Set_Cursor 0026                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _m_day 0078  
                            _month 0057                              _setup 050F  
                            pclath 000A                              status 0003  
                            wtemp0 007E                   __end_of_Lcd_Init 0439  
                 __end_of_Lcd_Port 0637                    __initialization 000F  
                     __end_of_main 02BD                             ??_main 006B  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
                           ?_setup 0070                             _ANSELH 0189  
                           u103_20 05DE                             u103_21 05DD  
                           i1l1580 05D8                             i1l1582 05DE  
                           i1l1592 05E2                          ??_Lcd_Cmd 0074  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0620                             ___bmul 059D  
                        ??___awdiv 0077                          ??___awmod 0077  
                        ??___lldiv 0073                   ___awdiv@quotient 005C  
                           _minute 0059                             _second 0079  
                  ___awmod@divisor 0073                    ___awmod@counter 005A  
                           saved_w 007E                    Lcd_Set_Cursor@a 005B  
                  Lcd_Set_Cursor@b 0077            __end_of__initialization 0028  
                __end_of_Lcd_Clear 05F7                ___bmul@multiplicand 0073  
                   __pcstackCOMMON 0070                       __pidataBANK0 0531  
                    __end_of_setup 0531                       ?_RTC_display 0070  
                   _Lcd_Set_Cursor 04E9                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 0078  
                       __pbssBANK0 0040                         _data_total 0040  
                       __pmaintext 01A5                            ?___bmul 0073  
                       __pintentry 0004          __size_of_Lcd_Write_String 0046  
           __end_of_Lcd_Set_Cursor 050F            __size_of_bcd_to_decimal 001C  
                       ??_Lcd_Init 005A                         ??_Lcd_Port 0073  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 05B2                     _Lcd_Write_Char 0587  
                          _Lcd_Cmd 056D                    __size_of___bmul 0015  
                          ___awdiv 02BD                            ___awmod 038E  
                          ___lldiv 0326                    ?_Lcd_Set_Cursor 0077  
                          __ptext1 050F                            __ptext2 047F  
                          __ptext3 0326                            __ptext4 002C  
                          __ptext5 0551                            __ptext6 059D  
                          __ptext7 038E                            __ptext8 02BD  
                          __ptext9 0439                       __size_of_ISR 0012  
                 ___awmod@dividend 0075           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 062A  
           __end_of_Lcd_Write_Char 059D               end_of_initialization 0028  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 005A  
                  ___lldiv@counter 0066                   I2C_Master_Init@c 0067  
                 I2C_Master_Read@a 0073                          Lcd_Port@a 0073  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009               __size_of_RTC_display 0179  
                        _TRISCbits 0087                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0076                  Lcd_Write_String@i 005D  
                        _Lcd_Clear 05EA                     __end_of___bmul 05B2  
                 _Lcd_Write_String 0439                start_initialization 000F  
                   _bcd_to_decimal 0551                        __end_of_ISR 05EA  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                       ?_Lcd_Clear 0070                           ??___bmul 0074  
                       init_fetch0 05C5                        __pdataBANK0 0020  
                  Lcd_Write_Char@a 0075             __end_of_bcd_to_decimal 056D  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 005A                        _data_recive 0054  
                         ?_Lcd_Cmd 0070                   _I2C_Master_Start 0617  
                 _I2C_Master_Write 0604                   ??_Lcd_Set_Cursor 005A  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 005A                          __pstrings 05B2  
                  ?_bcd_to_decimal 0070               bcd_to_decimal@number 0077  
                   __size_of_setup 0022                  interrupt_function 0004  
                        clear_ram0 0629                           Lcd_Cmd@a 0076  
                         _PIR1bits 000C                        ??_Lcd_Clear 0077  
                      __stringbase 05C1                   ??_Lcd_Write_Char 0074  
                         _Lcd_Init 03E9                           _Lcd_Port 0631  
              I2C_Master_Read@temp 005A           __end_of_Lcd_Write_String 047F  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                    ??_RTC_display 005F                 __end_of__stringtab 05C2  
                  _I2C_Master_Init 047F                    _I2C_Master_Read 04B9  
                  _I2C_Master_Wait 05F7                    _I2C_Master_Stop 060E  
                         __ptext10 0587                           __ptext11 04E9  
                         __ptext20 04B9                           __ptext12 03E9  
                         __ptext21 05F7                           __ptext13 05EA  
                         __ptext22 05D8                           __ptext14 056D  
                         __ptext15 0631                           __ptext16 0604  
                         __ptext17 060E                           __ptext18 0617  
                         __ptext19 0620                      __size_of_main 0118  
         __end_of_I2C_Master_Start 0620           __end_of_I2C_Master_Write 060E  
                         init_ram0 05C9                __end_of_RTC_display 01A5  
                         intlevel1 0000                   ___lldiv@dividend 005E  
                        stringcode 05BC                   ??_bcd_to_decimal 005A  
          __end_of_I2C_Master_Init 04B9            __end_of_I2C_Master_Read 04E9  
          __end_of_I2C_Master_Wait 0604            __end_of_I2C_Master_Stop 0617  
               Lcd_Set_Cursor@temp 005C                   ___lldiv@quotient 0062  
                I2C_Master_Write@d 0073                           stringdir 05BC  
                         stringtab 05B2                        _SSPCON2bits 0091  
