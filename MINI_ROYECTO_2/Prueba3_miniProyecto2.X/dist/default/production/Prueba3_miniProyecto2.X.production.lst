

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 19:24:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392                           
   393                           	psect	idataBANK0
   394  069F                     __pidataBANK0:
   395                           
   396                           ;initializer for RTC_display@Date
   397  069F  3444               	retlw	68
   398  06A0  3441               	retlw	65
   399  06A1  3454               	retlw	84
   400  06A2  3445               	retlw	69
   401  06A3  343A               	retlw	58
   402  06A4  3420               	retlw	32
   403  06A5  3430               	retlw	48
   404  06A6  3430               	retlw	48
   405  06A7  342F               	retlw	47
   406  06A8  3430               	retlw	48
   407  06A9  3430               	retlw	48
   408  06AA  342F               	retlw	47
   409  06AB  3432               	retlw	50
   410  06AC  3430               	retlw	48
   411  06AD  3430               	retlw	48
   412  06AE  3430               	retlw	48
   413  06AF  3400               	retlw	0
   414                           
   415                           ;initializer for RTC_display@Time
   416  06B0  3454               	retlw	84
   417  06B1  3449               	retlw	73
   418  06B2  344D               	retlw	77
   419  06B3  3445               	retlw	69
   420  06B4  343A               	retlw	58
   421  06B5  3420               	retlw	32
   422  06B6  3430               	retlw	48
   423  06B7  3430               	retlw	48
   424  06B8  343A               	retlw	58
   425  06B9  3430               	retlw	48
   426  06BA  3430               	retlw	48
   427  06BB  343A               	retlw	58
   428  06BC  3430               	retlw	48
   429  06BD  3430               	retlw	48
   430  06BE  3400               	retlw	0
   431                           
   432                           	psect	strings
   433  0600                     __pstrings:
   434  0600                     stringtab:
   435  0600                     __stringtab:
   436                           
   437                           ;	String table - string pointers are 1 byte each
   438  0600  1BFF               	btfsc	btemp+1,7
   439  0601  2E0A               	ljmp	stringcode
   440  0602  1383               	bcf	3,7
   441  0603  187F               	btfsc	btemp+1,0
   442  0604  1783               	bsf	3,7
   443  0605  0800               	movf	0,w
   444  0606  0A84               	incf	4,f
   445  0607  1903               	skipnz
   446  0608  0AFF               	incf	btemp+1,f
   447  0609  0008               	return
   448  060A                     stringcode:
   449  060A                     stringdir:
   450  060A  3006               	movlw	high stringdir
   451  060B  008A               	movwf	10
   452  060C  0804               	movf	4,w
   453  060D  0A84               	incf	4,f
   454  060E  0782               	addwf	2,f
   455  060F                     __stringbase:
   456  060F  3400               	retlw	0
   457  0610                     __end_of__stringtab:
   458  0610                     _dpowers:
   459  0610  3401               	retlw	1
   460  0611  3400               	retlw	0
   461  0612  340A               	retlw	10
   462  0613  3400               	retlw	0
   463  0614  3464               	retlw	100
   464  0615  3400               	retlw	0
   465  0616  34E8               	retlw	232
   466  0617  3403               	retlw	3
   467  0618  3410               	retlw	16
   468  0619  3427               	retlw	39
   469  061A                     __end_of_dpowers:
   470  0009                     _PORTEbits	set	9
   471  0013                     _SSPBUF	set	19
   472  0014                     _SSPCON	set	20
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0005                     _PORTAbits	set	5
   479  001A                     _RCREG	set	26
   480  000C                     _PIR1bits	set	12
   481  0063                     _SSPIF	set	99
   482  005E                     _PEIE	set	94
   483  005F                     _GIE	set	95
   484  0091                     _SSPCON2bits	set	145
   485  0094                     _SSPSTAT	set	148
   486  0093                     _SSPADD	set	147
   487  0091                     _SSPCON2	set	145
   488  0089                     _TRISE	set	137
   489  0087                     _TRISCbits	set	135
   490  0086                     _TRISB	set	134
   491  0085                     _TRISA	set	133
   492  0088                     _TRISD	set	136
   493  0463                     _SSPIE	set	1123
   494  043C                     _TRISC4	set	1084
   495  043B                     _TRISC3	set	1083
   496  0189                     _ANSELH	set	393
   497  0188                     _ANSEL	set	392
   498  061A                     STR_1:
   499  061A  3454               	retlw	84	;'T'
   500  061B  3449               	retlw	73	;'I'
   501  061C  344D               	retlw	77	;'M'
   502  061D  3445               	retlw	69	;'E'
   503  061E  343A               	retlw	58	;':'
   504  061F  3420               	retlw	32	;' '
   505  0620  3430               	retlw	48	;'0'
   506  0621  3430               	retlw	48	;'0'
   507  0622  343A               	retlw	58	;':'
   508  0623  3430               	retlw	48	;'0'
   509  0624  3430               	retlw	48	;'0'
   510  0625  343A               	retlw	58	;':'
   511  0626  3430               	retlw	48	;'0'
   512  0627  3430               	retlw	48	;'0'
   513  0628  3400               	retlw	0
   514  0629                     STR_2:
   515  0629  3420               	retlw	32	;' '
   516  062A  3425               	retlw	37	;'%'
   517  062B  3464               	retlw	100	;'d'
   518  062C  3400               	retlw	0
   519                           
   520                           	psect	cinit
   521  000F                     start_initialization:	
   522                           ; #config settings
   523                           
   524  000F                     __initialization:
   525                           
   526                           ; Initialize objects allocated to BANK0
   527  000F  1383               	bcf	3,7	;select IRP bank0
   528  0010  3040               	movlw	low (__pdataBANK0+32)
   529  0011  00FD               	movwf	btemp+-1
   530  0012  3006               	movlw	high __pidataBANK0
   531  0013  00FE               	movwf	btemp
   532  0014  309F               	movlw	low __pidataBANK0
   533  0015  00FF               	movwf	btemp+1
   534  0016  3020               	movlw	low __pdataBANK0
   535  0017  0084               	movwf	4
   536  0018  120A  118A  2724  120A  118A  	fcall	init_ram0
   537                           
   538                           ; Clear objects allocated to BANK1
   539  001D  30A0               	movlw	low __pbssBANK1
   540  001E  0084               	movwf	4
   541  001F  30C8               	movlw	low (__pbssBANK1+40)
   542  0020  120A  118A  2784  120A  118A  	fcall	clear_ram0
   543                           
   544                           ; Clear objects allocated to BANK0
   545  0025  305C               	movlw	low __pbssBANK0
   546  0026  0084               	movwf	4
   547  0027  306A               	movlw	low (__pbssBANK0+14)
   548  0028  120A  118A  2784  120A  118A  	fcall	clear_ram0
   549                           
   550                           ; Clear objects allocated to COMMON
   551  002D  01F8               	clrf	__pbssCOMMON& (0+127)
   552  002E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   553  002F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   554  0030                     end_of_initialization:	
   555                           ;End of C runtime variable initialization code
   556                           
   557  0030                     __end_of__initialization:
   558  0030  0183               	clrf	3
   559  0031  120A  118A  2A75   	ljmp	_main	;jump to C main() function
   560                           
   561                           	psect	bssCOMMON
   562  0078                     __pbssCOMMON:
   563  0078                     _hour:
   564  0078                     	ds	1
   565  0079                     _minute:
   566  0079                     	ds	1
   567  007A                     _second:
   568  007A                     	ds	1
   569                           
   570                           	psect	bssBANK0
   571  005C                     __pbssBANK0:
   572  005C                     _S2_val:
   573  005C                     	ds	4
   574  0060                     _S1_val:
   575  0060                     	ds	4
   576  0064                     _data_recive:
   577  0064                     	ds	1
   578  0065                     _cont:
   579  0065                     	ds	1
   580  0066                     _year:
   581  0066                     	ds	1
   582  0067                     _month:
   583  0067                     	ds	1
   584  0068                     _m_day:
   585  0068                     	ds	1
   586  0069                     _i:
   587  0069                     	ds	1
   588                           
   589                           	psect	dataBANK0
   590  0020                     __pdataBANK0:
   591  0020                     RTC_display@Date:
   592  0020                     	ds	17
   593  0031                     RTC_display@Time:
   594  0031                     	ds	15
   595                           
   596                           	psect	bssBANK1
   597  00A0                     __pbssBANK1:
   598  00A0                     _Time:
   599  00A0                     	ds	20
   600  00B4                     _data_total:
   601  00B4                     	ds	20
   602                           
   603                           	psect	inittext
   604  0720                     init_fetch0:	
   605                           ;	Called with low address in FSR and high address in W
   606                           
   607  0720  087E               	movf	btemp,w
   608  0721  008A               	movwf	10
   609  0722  087F               	movf	btemp+1,w
   610  0723  0082               	movwf	2
   611  0724                     init_ram0:	
   612                           ;Called with:
   613                           ;	high address of idata address in btemp 
   614                           ;	low address of idata address in btemp+1 
   615                           ;	low address of data in FSR
   616                           ;	high address + 1 of data in btemp-1
   617                           
   618  0724  120A  118A  2720  120A  118A  	fcall	init_fetch0
   619  0729  0080               	movwf	0
   620  072A  0A84               	incf	4,f
   621  072B  0804               	movf	4,w
   622  072C  067D               	xorwf	btemp+-1,w
   623  072D  1903               	btfsc	3,2
   624  072E  3400               	retlw	0
   625  072F  0AFF               	incf	btemp+1,f
   626  0730  1903               	btfsc	3,2
   627  0731  0AFE               	incf	btemp,f
   628  0732  2F24               	goto	init_ram0
   629                           
   630                           	psect	clrtext
   631  0784                     clear_ram0:	
   632                           ;	Called with FSR containing the base address, and
   633                           ;	W with the last address+1
   634                           
   635  0784  0064               	clrwdt	;clear the watchdog before getting into this loop
   636  0785                     clrloop0:
   637  0785  0180               	clrf	0	;clear RAM location pointed to by FSR
   638  0786  0A84               	incf	4,f	;increment pointer
   639  0787  0604               	xorwf	4,w	;XOR with final address
   640  0788  1903               	btfsc	3,2	;have we reached the end yet?
   641  0789  3400               	retlw	0	;all done for this memory range, return
   642  078A  0604               	xorwf	4,w	;XOR again to restore value
   643  078B  2F85               	goto	clrloop0	;do the next byte
   644                           
   645                           	psect	cstackCOMMON
   646  0070                     __pcstackCOMMON:
   647  0070                     ?_setup:
   648  0070                     ?_Lcd_Init:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_Lcd_Clear:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_I2C_Master_Start:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_I2C_Master_RepeatedStart:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_I2C_Master_Stop:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_RTC_display:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_Show_val_LCD:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_Lcd_Port:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Lcd_Cmd:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_ISR:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_ISR:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_bcd_to_decimal:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_I2C_Master_Wait:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_Lcd_Write_Char:	
   691                           ; 1 bytes @ 0x0
   692                           
   693                           
   694                           ; 1 bytes @ 0x0
   695  0070                     	ds	3
   696  0073                     ??_I2C_Master_Start:
   697  0073                     ?_I2C_Master_Write:	
   698                           ; 1 bytes @ 0x3
   699                           
   700  0073                     ??_I2C_Master_RepeatedStart:	
   701                           ; 1 bytes @ 0x3
   702                           
   703  0073                     ??_I2C_Master_Stop:	
   704                           ; 1 bytes @ 0x3
   705                           
   706  0073                     ??_Lcd_Port:	
   707                           ; 1 bytes @ 0x3
   708                           
   709  0073                     ??_I2C_Master_Wait:	
   710                           ; 1 bytes @ 0x3
   711                           
   712  0073                     ?___bmul:	
   713                           ; 1 bytes @ 0x3
   714                           
   715  0073                     ??___lldiv:	
   716                           ; 1 bytes @ 0x3
   717                           
   718  0073                     ?_I2C_Master_Read:	
   719                           ; 1 bytes @ 0x3
   720                           
   721  0073                     ?___awdiv:	
   722                           ; 2 bytes @ 0x3
   723                           
   724  0073                     ?___awmod:	
   725                           ; 2 bytes @ 0x3
   726                           
   727  0073                     ?___lwdiv:	
   728                           ; 2 bytes @ 0x3
   729                           
   730  0073                     Lcd_Port@a:	
   731                           ; 2 bytes @ 0x3
   732                           
   733  0073                     ___bmul@multiplicand:	
   734                           ; 1 bytes @ 0x3
   735                           
   736  0073                     I2C_Master_Write@d:	
   737                           ; 1 bytes @ 0x3
   738                           
   739  0073                     I2C_Master_Read@a:	
   740                           ; 2 bytes @ 0x3
   741                           
   742  0073                     ___awdiv@divisor:	
   743                           ; 2 bytes @ 0x3
   744                           
   745  0073                     ___awmod@divisor:	
   746                           ; 2 bytes @ 0x3
   747                           
   748  0073                     ___lwdiv@divisor:	
   749                           ; 2 bytes @ 0x3
   750                           
   751                           
   752                           ; 2 bytes @ 0x3
   753  0073                     	ds	1
   754  0074                     ??_I2C_Master_Init:
   755  0074                     ??_Lcd_Cmd:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     ??_Lcd_Write_Char:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0074                     ??___bmul:	
   762                           ; 1 bytes @ 0x4
   763                           
   764                           
   765                           ; 1 bytes @ 0x4
   766  0074                     	ds	1
   767  0075                     ??_I2C_Master_Write:
   768  0075                     ??_I2C_Master_Read:	
   769                           ; 1 bytes @ 0x5
   770                           
   771  0075                     Lcd_Write_Char@a:	
   772                           ; 1 bytes @ 0x5
   773                           
   774  0075                     ___bmul@product:	
   775                           ; 1 bytes @ 0x5
   776                           
   777  0075                     ___awdiv@dividend:	
   778                           ; 1 bytes @ 0x5
   779                           
   780  0075                     ___awmod@dividend:	
   781                           ; 2 bytes @ 0x5
   782                           
   783  0075                     ___lwdiv@dividend:	
   784                           ; 2 bytes @ 0x5
   785                           
   786                           
   787                           ; 2 bytes @ 0x5
   788  0075                     	ds	1
   789  0076                     ?_Lcd_Write_String:
   790  0076                     Lcd_Cmd@a:	
   791                           ; 1 bytes @ 0x6
   792                           
   793  0076                     ___bmul@multiplier:	
   794                           ; 1 bytes @ 0x6
   795                           
   796  0076                     Lcd_Write_String@a:	
   797                           ; 1 bytes @ 0x6
   798                           
   799                           
   800                           ; 2 bytes @ 0x6
   801  0076                     	ds	1
   802  0077                     ??_Lcd_Clear:
   803  0077                     ?_Lcd_Set_Cursor:	
   804                           ; 1 bytes @ 0x7
   805                           
   806  0077                     ??___awdiv:	
   807                           ; 1 bytes @ 0x7
   808                           
   809  0077                     ??___awmod:	
   810                           ; 1 bytes @ 0x7
   811                           
   812  0077                     ??___lwdiv:	
   813                           ; 1 bytes @ 0x7
   814                           
   815  0077                     bcd_to_decimal@number:	
   816                           ; 1 bytes @ 0x7
   817                           
   818  0077                     Lcd_Set_Cursor@b:	
   819                           ; 1 bytes @ 0x7
   820                           
   821                           
   822                           ; 1 bytes @ 0x7
   823  0077                     	ds	1
   824  0078                     ??_setup:
   825                           
   826                           	psect	cstackBANK0
   827  0040                     __pcstackBANK0:	
   828                           ; 1 bytes @ 0x8
   829                           
   830  0040                     ??_Lcd_Init:
   831  0040                     ??_Lcd_Set_Cursor:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0040                     ??_Lcd_Write_String:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0040                     ??_bcd_to_decimal:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0040                     ?___lldiv:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0040                     ___awdiv@counter:	
   844                           ; 4 bytes @ 0x0
   845                           
   846  0040                     ___awmod@counter:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0040                     ___lwdiv@counter:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0040                     I2C_Master_Read@temp:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0040                     ___lldiv@divisor:	
   856                           ; 2 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860  0040                     	ds	1
   861  0041                     Lcd_Set_Cursor@a:
   862  0041                     ___awdiv@sign:	
   863                           ; 1 bytes @ 0x1
   864                           
   865  0041                     ___awmod@sign:	
   866                           ; 1 bytes @ 0x1
   867                           
   868  0041                     ___lwdiv@quotient:	
   869                           ; 1 bytes @ 0x1
   870                           
   871                           
   872                           ; 2 bytes @ 0x1
   873  0041                     	ds	1
   874  0042                     Lcd_Set_Cursor@temp:
   875  0042                     ___awdiv@quotient:	
   876                           ; 1 bytes @ 0x2
   877                           
   878                           
   879                           ; 2 bytes @ 0x2
   880  0042                     	ds	1
   881  0043                     ?___lwmod:
   882  0043                     Lcd_Write_String@i:	
   883                           ; 2 bytes @ 0x3
   884                           
   885  0043                     ___lwmod@divisor:	
   886                           ; 2 bytes @ 0x3
   887                           
   888                           
   889                           ; 2 bytes @ 0x3
   890  0043                     	ds	1
   891  0044                     ??_RTC_display:
   892  0044                     ___lldiv@dividend:	
   893                           ; 1 bytes @ 0x4
   894                           
   895                           
   896                           ; 4 bytes @ 0x4
   897  0044                     	ds	1
   898  0045                     ___lwmod@dividend:
   899                           
   900                           ; 2 bytes @ 0x5
   901  0045                     	ds	2
   902  0047                     ??___lwmod:
   903                           
   904                           ; 1 bytes @ 0x7
   905  0047                     	ds	1
   906  0048                     ___lwmod@counter:
   907  0048                     ___lldiv@quotient:	
   908                           ; 1 bytes @ 0x8
   909                           
   910                           
   911                           ; 4 bytes @ 0x8
   912  0048                     	ds	1
   913  0049                     ?_sprintf:
   914  0049                     sprintf@f:	
   915                           ; 2 bytes @ 0x9
   916                           
   917                           
   918                           ; 1 bytes @ 0x9
   919  0049                     	ds	3
   920  004C                     ??_sprintf:
   921  004C                     ___lldiv@counter:	
   922                           ; 1 bytes @ 0xC
   923                           
   924                           
   925                           ; 1 bytes @ 0xC
   926  004C                     	ds	1
   927  004D                     ?_I2C_Master_Init:
   928  004D                     I2C_Master_Init@c:	
   929                           ; 1 bytes @ 0xD
   930                           
   931                           
   932                           ; 4 bytes @ 0xD
   933  004D                     	ds	2
   934  004F                     sprintf@ap:
   935                           
   936                           ; 1 bytes @ 0xF
   937  004F                     	ds	1
   938  0050                     sprintf@flag:
   939                           
   940                           ; 1 bytes @ 0x10
   941  0050                     	ds	1
   942  0051                     sprintf@prec:
   943                           
   944                           ; 1 bytes @ 0x11
   945  0051                     	ds	1
   946  0052                     sprintf@val:
   947                           
   948                           ; 2 bytes @ 0x12
   949  0052                     	ds	2
   950  0054                     sprintf@sp:
   951                           
   952                           ; 1 bytes @ 0x14
   953  0054                     	ds	1
   954  0055                     sprintf@c:
   955                           
   956                           ; 1 bytes @ 0x15
   957  0055                     	ds	1
   958  0056                     ??_Show_val_LCD:
   959                           
   960                           ; 1 bytes @ 0x16
   961  0056                     	ds	3
   962  0059                     ??_main:
   963                           
   964                           ; 1 bytes @ 0x19
   965  0059                     	ds	3
   966                           
   967                           	psect	maintext
   968  0275                     __pmaintext:	
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   971 ;;
   972 ;; *************** function _main *****************
   973 ;; Defined at:
   974 ;;		line 108 in file "main_prueba3_mini2.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : B00/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0
   990 ;;      Temps:          0       3       0       0       0
   991 ;;      Totals:         0       3       0       0       0
   992 ;;Total ram usage:        3 bytes
   993 ;; Hardware stack levels required when called:    5
   994 ;; This function calls:
   995 ;;		_I2C_Master_Read
   996 ;;		_I2C_Master_RepeatedStart
   997 ;;		_I2C_Master_Start
   998 ;;		_I2C_Master_Stop
   999 ;;		_I2C_Master_Write
  1000 ;;		_Lcd_Clear
  1001 ;;		_Lcd_Init
  1002 ;;		_Lcd_Set_Cursor
  1003 ;;		_Lcd_Write_String
  1004 ;;		_RTC_display
  1005 ;;		_Show_val_LCD
  1006 ;;		_setup
  1007 ;; This function is called by:
  1008 ;;		Startup code after reset
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _main
  1014  0275                     _main:
  1015  0275                     l2006:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1018                           
  1019                           
  1020                           ;main_prueba3_mini2.c: 109:     setup();
  1021  0275  120A  118A  267E  120A  118A  	fcall	_setup
  1022  027A                     l2008:
  1023                           
  1024                           ;main_prueba3_mini2.c: 110:     TRISD = 0x00;
  1025  027A  1683               	bsf	3,5	;RP0=1, select bank1
  1026  027B  1303               	bcf	3,6	;RP1=0, select bank1
  1027  027C  0188               	clrf	8	;volatile
  1028  027D                     l2010:
  1029                           
  1030                           ;main_prueba3_mini2.c: 111:     Lcd_Init();
  1031  027D  120A  118A  246C  120A  118A  	fcall	_Lcd_Init
  1032  0282                     l2012:
  1033                           
  1034                           ;main_prueba3_mini2.c: 112:     Lcd_Clear();
  1035  0282  120A  118A  2745  120A  118A  	fcall	_Lcd_Clear
  1036  0287                     l2014:
  1037                           
  1038                           ;main_prueba3_mini2.c: 113:     Lcd_Set_Cursor(1,1);
  1039  0287  01F7               	clrf	Lcd_Set_Cursor@b
  1040  0288  0AF7               	incf	Lcd_Set_Cursor@b,f
  1041  0289  3001               	movlw	1
  1042  028A  120A  118A  2658  120A  118A  	fcall	_Lcd_Set_Cursor
  1043  028F                     l2016:
  1044                           
  1045                           ;main_prueba3_mini2.c: 114:     Lcd_Write_String("TIME: 00:00:00");
  1046  028F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1047  0290  00F6               	movwf	Lcd_Write_String@a
  1048  0291  3080               	movlw	128
  1049  0292  00F7               	movwf	Lcd_Write_String@a+1
  1050  0293  120A  118A  2502  120A  118A  	fcall	_Lcd_Write_String
  1051  0298                     l2018:
  1052                           
  1053                           ;main_prueba3_mini2.c: 117:         I2C_Master_Start();
  1054  0298  120A  118A  2772  120A  118A  	fcall	_I2C_Master_Start
  1055  029D                     l2020:
  1056                           
  1057                           ;main_prueba3_mini2.c: 118:         I2C_Master_Write(0xD0);
  1058  029D  30D0               	movlw	208
  1059  029E  00F3               	movwf	I2C_Master_Write@d
  1060  029F  3000               	movlw	0
  1061  02A0  00F4               	movwf	I2C_Master_Write@d+1
  1062  02A1  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Write
  1063  02A6                     l2022:
  1064                           
  1065                           ;main_prueba3_mini2.c: 119:         I2C_Master_Write(0);
  1066  02A6  3000               	movlw	0
  1067  02A7  00F3               	movwf	I2C_Master_Write@d
  1068  02A8  00F4               	movwf	I2C_Master_Write@d+1
  1069  02A9  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Write
  1070  02AE                     l2024:
  1071                           
  1072                           ;main_prueba3_mini2.c: 120:         I2C_Master_RepeatedStart();
  1073  02AE  120A  118A  277B  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1074  02B3                     l2026:
  1075                           
  1076                           ;main_prueba3_mini2.c: 121:         I2C_Master_Write(0xD1);
  1077  02B3  30D1               	movlw	209
  1078  02B4  00F3               	movwf	I2C_Master_Write@d
  1079  02B5  3000               	movlw	0
  1080  02B6  00F4               	movwf	I2C_Master_Write@d+1
  1081  02B7  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Write
  1082  02BC                     l2028:
  1083                           
  1084                           ;main_prueba3_mini2.c: 122:         second = I2C_Master_Read(1);
  1085  02BC  3001               	movlw	1
  1086  02BD  00F3               	movwf	I2C_Master_Read@a
  1087  02BE  3000               	movlw	0
  1088  02BF  00F4               	movwf	I2C_Master_Read@a+1
  1089  02C0  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1090  02C5  0873               	movf	?_I2C_Master_Read,w
  1091  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1092  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1093  02C8  00D9               	movwf	??_main
  1094  02C9  0859               	movf	??_main,w
  1095  02CA  00FA               	movwf	_second
  1096  02CB                     l2030:
  1097                           
  1098                           ;main_prueba3_mini2.c: 123:         minute = I2C_Master_Read(1);
  1099  02CB  3001               	movlw	1
  1100  02CC  00F3               	movwf	I2C_Master_Read@a
  1101  02CD  3000               	movlw	0
  1102  02CE  00F4               	movwf	I2C_Master_Read@a+1
  1103  02CF  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1104  02D4  0873               	movf	?_I2C_Master_Read,w
  1105  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1106  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1107  02D7  00D9               	movwf	??_main
  1108  02D8  0859               	movf	??_main,w
  1109  02D9  00F9               	movwf	_minute
  1110  02DA                     l2032:
  1111                           
  1112                           ;main_prueba3_mini2.c: 124:         hour = I2C_Master_Read(1);
  1113  02DA  3001               	movlw	1
  1114  02DB  00F3               	movwf	I2C_Master_Read@a
  1115  02DC  3000               	movlw	0
  1116  02DD  00F4               	movwf	I2C_Master_Read@a+1
  1117  02DE  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1118  02E3  0873               	movf	?_I2C_Master_Read,w
  1119  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1120  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1121  02E6  00D9               	movwf	??_main
  1122  02E7  0859               	movf	??_main,w
  1123  02E8  00F8               	movwf	_hour
  1124  02E9                     l2034:
  1125                           
  1126                           ;main_prueba3_mini2.c: 125:         I2C_Master_Read(1);
  1127  02E9  3001               	movlw	1
  1128  02EA  00F3               	movwf	I2C_Master_Read@a
  1129  02EB  3000               	movlw	0
  1130  02EC  00F4               	movwf	I2C_Master_Read@a+1
  1131  02ED  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1132  02F2                     l2036:
  1133                           
  1134                           ;main_prueba3_mini2.c: 126:         m_day = I2C_Master_Read(1);
  1135  02F2  3001               	movlw	1
  1136  02F3  00F3               	movwf	I2C_Master_Read@a
  1137  02F4  3000               	movlw	0
  1138  02F5  00F4               	movwf	I2C_Master_Read@a+1
  1139  02F6  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1140  02FB  0873               	movf	?_I2C_Master_Read,w
  1141  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1142  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1143  02FE  00D9               	movwf	??_main
  1144  02FF  0859               	movf	??_main,w
  1145  0300  00E8               	movwf	_m_day
  1146  0301                     l2038:
  1147                           
  1148                           ;main_prueba3_mini2.c: 127:         month = I2C_Master_Read(1);
  1149  0301  3001               	movlw	1
  1150  0302  00F3               	movwf	I2C_Master_Read@a
  1151  0303  3000               	movlw	0
  1152  0304  00F4               	movwf	I2C_Master_Read@a+1
  1153  0305  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1154  030A  0873               	movf	?_I2C_Master_Read,w
  1155  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1156  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1157  030D  00D9               	movwf	??_main
  1158  030E  0859               	movf	??_main,w
  1159  030F  00E7               	movwf	_month
  1160  0310                     l2040:
  1161                           
  1162                           ;main_prueba3_mini2.c: 128:         year = I2C_Master_Read(0);
  1163  0310  3000               	movlw	0
  1164  0311  00F3               	movwf	I2C_Master_Read@a
  1165  0312  00F4               	movwf	I2C_Master_Read@a+1
  1166  0313  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1167  0318  0873               	movf	?_I2C_Master_Read,w
  1168  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1169  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1170  031B  00D9               	movwf	??_main
  1171  031C  0859               	movf	??_main,w
  1172  031D  00E6               	movwf	_year
  1173  031E                     l2042:
  1174                           
  1175                           ;main_prueba3_mini2.c: 129:         I2C_Master_Stop();
  1176  031E  120A  118A  2769  120A  118A  	fcall	_I2C_Master_Stop
  1177  0323                     l2044:
  1178                           
  1179                           ;main_prueba3_mini2.c: 131:         RTC_display();
  1180  0323  120A  118A  2034  120A  118A  	fcall	_RTC_display
  1181  0328                     l2046:
  1182                           
  1183                           ;main_prueba3_mini2.c: 135:         Show_val_LCD();
  1184  0328  120A  118A  262D  120A  118A  	fcall	_Show_val_LCD
  1185  032D                     l2048:
  1186                           
  1187                           ;main_prueba3_mini2.c: 136:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1188  032D  3002               	movlw	2
  1189  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1190  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0330  00DB               	movwf	??_main+2
  1192  0331  3004               	movlw	4
  1193  0332  00DA               	movwf	??_main+1
  1194  0333  30B9               	movlw	185
  1195  0334  00D9               	movwf	??_main
  1196  0335                     u1597:
  1197  0335  0BD9               	decfsz	??_main,f
  1198  0336  2B35               	goto	u1597
  1199  0337  0BDA               	decfsz	??_main+1,f
  1200  0338  2B35               	goto	u1597
  1201  0339  0BDB               	decfsz	??_main+2,f
  1202  033A  2B35               	goto	u1597
  1203  033B  2B3C               	nop2
  1204  033C  2A98               	goto	l2018
  1205  033D  120A  118A  280C   	ljmp	start
  1206  0340                     __end_of_main:
  1207                           
  1208                           	psect	text1
  1209  067E                     __ptext1:	
  1210 ;; *************** function _setup *****************
  1211 ;; Defined at:
  1212 ;;		line 205 in file "main_prueba3_mini2.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    3
  1233 ;; This function calls:
  1234 ;;		_I2C_Master_Init
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _setup
  1242  067E                     _setup:
  1243  067E                     l1944:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1246                           
  1247                           
  1248                           ;main_prueba3_mini2.c: 207:     ANSEL = 0;
  1249  067E  1683               	bsf	3,5	;RP0=1, select bank3
  1250  067F  1703               	bsf	3,6	;RP1=1, select bank3
  1251  0680  0188               	clrf	8	;volatile
  1252                           
  1253                           ;main_prueba3_mini2.c: 208:     ANSELH = 0;
  1254  0681  0189               	clrf	9	;volatile
  1255                           
  1256                           ;main_prueba3_mini2.c: 209:     TRISA = 0;
  1257  0682  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0683  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0684  0185               	clrf	5	;volatile
  1260                           
  1261                           ;main_prueba3_mini2.c: 210:     TRISB = 0;
  1262  0685  0186               	clrf	6	;volatile
  1263  0686                     l1946:
  1264                           
  1265                           ;main_prueba3_mini2.c: 211:     TRISCbits.TRISC6 = 0;
  1266  0686  1307               	bcf	7,6	;volatile
  1267  0687                     l1948:
  1268                           
  1269                           ;main_prueba3_mini2.c: 212:     TRISCbits.TRISC7 = 1;
  1270  0687  1787               	bsf	7,7	;volatile
  1271                           
  1272                           ;main_prueba3_mini2.c: 213:     TRISD = 0;
  1273  0688  0188               	clrf	8	;volatile
  1274                           
  1275                           ;main_prueba3_mini2.c: 214:     TRISE = 0;
  1276  0689  0189               	clrf	9	;volatile
  1277                           
  1278                           ;main_prueba3_mini2.c: 215:     PORTA = 0;
  1279  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1280  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1281  068C  0185               	clrf	5	;volatile
  1282                           
  1283                           ;main_prueba3_mini2.c: 216:     PORTB = 0;
  1284  068D  0186               	clrf	6	;volatile
  1285                           
  1286                           ;main_prueba3_mini2.c: 217:     PORTC = 0;
  1287  068E  0187               	clrf	7	;volatile
  1288                           
  1289                           ;main_prueba3_mini2.c: 218:     PORTD = 0;
  1290  068F  0188               	clrf	8	;volatile
  1291                           
  1292                           ;main_prueba3_mini2.c: 219:     PORTE = 0;
  1293  0690  0189               	clrf	9	;volatile
  1294  0691                     l1950:
  1295                           
  1296                           ;main_prueba3_mini2.c: 220:     I2C_Master_Init(100000);
  1297  0691  3000               	movlw	0
  1298  0692  00D0               	movwf	I2C_Master_Init@c+3
  1299  0693  3001               	movlw	1
  1300  0694  00CF               	movwf	I2C_Master_Init@c+2
  1301  0695  3086               	movlw	134
  1302  0696  00CE               	movwf	I2C_Master_Init@c+1
  1303  0697  30A0               	movlw	160
  1304  0698  00CD               	movwf	I2C_Master_Init@c
  1305  0699  120A  118A  2584  120A  118A  	fcall	_I2C_Master_Init
  1306  069E                     l126:
  1307  069E  0008               	return
  1308  069F                     __end_of_setup:
  1309                           
  1310                           	psect	text2
  1311  0584                     __ptext2:	
  1312 ;; *************** function _I2C_Master_Init *****************
  1313 ;; Defined at:
  1314 ;;		line 21 in file "I2C.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  c               4   13[BANK0 ] const unsigned long 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0, pclath, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       4       0       0       0
  1329 ;;      Locals:         0       0       0       0       0
  1330 ;;      Temps:          4       0       0       0       0
  1331 ;;      Totals:         4       4       0       0       0
  1332 ;;Total ram usage:        8 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		___lldiv
  1337 ;; This function is called by:
  1338 ;;		_setup
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _I2C_Master_Init
  1344  0584                     _I2C_Master_Init:
  1345  0584                     l1890:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1348                           
  1349                           
  1350                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1351  0584  3028               	movlw	40
  1352  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0587  0094               	movwf	20	;volatile
  1355  0588                     l1892:
  1356                           
  1357                           ;I2C.c: 28:     SSPCON2 = 0;
  1358  0588  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0589  1303               	bcf	3,6	;RP1=0, select bank1
  1360  058A  0191               	clrf	17	;volatile
  1361  058B                     l1894:
  1362                           
  1363                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1364  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1365  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1366  058D  084D               	movf	I2C_Master_Init@c,w
  1367  058E  00F4               	movwf	??_I2C_Master_Init
  1368  058F  084E               	movf	I2C_Master_Init@c+1,w
  1369  0590  00F5               	movwf	??_I2C_Master_Init+1
  1370  0591  084F               	movf	I2C_Master_Init@c+2,w
  1371  0592  00F6               	movwf	??_I2C_Master_Init+2
  1372  0593  0850               	movf	I2C_Master_Init@c+3,w
  1373  0594  00F7               	movwf	??_I2C_Master_Init+3
  1374  0595  3002               	movlw	2
  1375  0596                     u1465:
  1376  0596  1003               	clrc
  1377  0597  0DF4               	rlf	??_I2C_Master_Init,f
  1378  0598  0DF5               	rlf	??_I2C_Master_Init+1,f
  1379  0599  0DF6               	rlf	??_I2C_Master_Init+2,f
  1380  059A  0DF7               	rlf	??_I2C_Master_Init+3,f
  1381  059B                     u1460:
  1382  059B  3EFF               	addlw	-1
  1383  059C  1D03               	skipz
  1384  059D  2D96               	goto	u1465
  1385  059E  0877               	movf	??_I2C_Master_Init+3,w
  1386  059F  00C3               	movwf	___lldiv@divisor+3
  1387  05A0  0876               	movf	??_I2C_Master_Init+2,w
  1388  05A1  00C2               	movwf	___lldiv@divisor+2
  1389  05A2  0875               	movf	??_I2C_Master_Init+1,w
  1390  05A3  00C1               	movwf	___lldiv@divisor+1
  1391  05A4  0874               	movf	??_I2C_Master_Init,w
  1392  05A5  00C0               	movwf	___lldiv@divisor
  1393  05A6  3000               	movlw	0
  1394  05A7  00C7               	movwf	___lldiv@dividend+3
  1395  05A8  307A               	movlw	122
  1396  05A9  00C6               	movwf	___lldiv@dividend+2
  1397  05AA  3012               	movlw	18
  1398  05AB  00C5               	movwf	___lldiv@dividend+1
  1399  05AC  3000               	movlw	0
  1400  05AD  00C4               	movwf	___lldiv@dividend
  1401  05AE  120A  118A  23A9  120A  118A  	fcall	___lldiv
  1402  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1403  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1404  05B5  0840               	movf	?___lldiv,w
  1405  05B6  3EFF               	addlw	255
  1406  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1407  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1408  05B9  0093               	movwf	19	;volatile
  1409  05BA                     l1896:
  1410                           
  1411                           ;I2C.c: 36:     SSPSTAT = 0;
  1412  05BA  0194               	clrf	20	;volatile
  1413  05BB                     l1898:
  1414                           
  1415                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1416  05BB  1587               	bsf	7,3	;volatile
  1417  05BC                     l1900:
  1418                           
  1419                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1420  05BC  1607               	bsf	7,4	;volatile
  1421  05BD                     l155:
  1422  05BD  0008               	return
  1423  05BE                     __end_of_I2C_Master_Init:
  1424                           
  1425                           	psect	text3
  1426  03A9                     __ptext3:	
  1427 ;; *************** function ___lldiv *****************
  1428 ;; Defined at:
  1429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  divisor         4    0[BANK0 ] unsigned long 
  1432 ;;  dividend        4    4[BANK0 ] unsigned long 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  quotient        4    8[BANK0 ] unsigned long 
  1435 ;;  counter         1   12[BANK0 ] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  4    0[BANK0 ] unsigned long 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       8       0       0       0
  1446 ;;      Locals:         0       5       0       0       0
  1447 ;;      Temps:          1       0       0       0       0
  1448 ;;      Totals:         1      13       0       0       0
  1449 ;;Total ram usage:       14 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_I2C_Master_Init
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function ___lldiv
  1461  03A9                     ___lldiv:
  1462  03A9                     l1754:	
  1463                           ;incstack = 0
  1464                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1465                           
  1466  03A9  3000               	movlw	0
  1467  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1468  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1469  03AC  00CB               	movwf	___lldiv@quotient+3
  1470  03AD  3000               	movlw	0
  1471  03AE  00CA               	movwf	___lldiv@quotient+2
  1472  03AF  3000               	movlw	0
  1473  03B0  00C9               	movwf	___lldiv@quotient+1
  1474  03B1  3000               	movlw	0
  1475  03B2  00C8               	movwf	___lldiv@quotient
  1476  03B3  0843               	movf	___lldiv@divisor+3,w
  1477  03B4  0442               	iorwf	___lldiv@divisor+2,w
  1478  03B5  0441               	iorwf	___lldiv@divisor+1,w
  1479  03B6  0440               	iorwf	___lldiv@divisor,w
  1480  03B7  1903               	skipnz
  1481  03B8  2BBA               	goto	u1191
  1482  03B9  2BBB               	goto	u1190
  1483  03BA                     u1191:
  1484  03BA  2C08               	goto	l1774
  1485  03BB                     u1190:
  1486  03BB                     l1756:
  1487  03BB  01CC               	clrf	___lldiv@counter
  1488  03BC  0ACC               	incf	___lldiv@counter,f
  1489  03BD  2BCB               	goto	l1760
  1490  03BE                     l1758:
  1491  03BE  3001               	movlw	1
  1492  03BF  00F3               	movwf	??___lldiv
  1493  03C0                     u1205:
  1494  03C0  1003               	clrc
  1495  03C1  0DC0               	rlf	___lldiv@divisor,f
  1496  03C2  0DC1               	rlf	___lldiv@divisor+1,f
  1497  03C3  0DC2               	rlf	___lldiv@divisor+2,f
  1498  03C4  0DC3               	rlf	___lldiv@divisor+3,f
  1499  03C5  0BF3               	decfsz	??___lldiv,f
  1500  03C6  2BC0               	goto	u1205
  1501  03C7  3001               	movlw	1
  1502  03C8  00F3               	movwf	??___lldiv
  1503  03C9  0873               	movf	??___lldiv,w
  1504  03CA  07CC               	addwf	___lldiv@counter,f
  1505  03CB                     l1760:
  1506  03CB  1FC3               	btfss	___lldiv@divisor+3,7
  1507  03CC  2BCE               	goto	u1211
  1508  03CD  2BCF               	goto	u1210
  1509  03CE                     u1211:
  1510  03CE  2BBE               	goto	l1758
  1511  03CF                     u1210:
  1512  03CF                     l1762:
  1513  03CF  3001               	movlw	1
  1514  03D0  00F3               	movwf	??___lldiv
  1515  03D1                     u1225:
  1516  03D1  1003               	clrc
  1517  03D2  0DC8               	rlf	___lldiv@quotient,f
  1518  03D3  0DC9               	rlf	___lldiv@quotient+1,f
  1519  03D4  0DCA               	rlf	___lldiv@quotient+2,f
  1520  03D5  0DCB               	rlf	___lldiv@quotient+3,f
  1521  03D6  0BF3               	decfsz	??___lldiv,f
  1522  03D7  2BD1               	goto	u1225
  1523  03D8                     l1764:
  1524  03D8  0843               	movf	___lldiv@divisor+3,w
  1525  03D9  0247               	subwf	___lldiv@dividend+3,w
  1526  03DA  1D03               	skipz
  1527  03DB  2BE6               	goto	u1235
  1528  03DC  0842               	movf	___lldiv@divisor+2,w
  1529  03DD  0246               	subwf	___lldiv@dividend+2,w
  1530  03DE  1D03               	skipz
  1531  03DF  2BE6               	goto	u1235
  1532  03E0  0841               	movf	___lldiv@divisor+1,w
  1533  03E1  0245               	subwf	___lldiv@dividend+1,w
  1534  03E2  1D03               	skipz
  1535  03E3  2BE6               	goto	u1235
  1536  03E4  0840               	movf	___lldiv@divisor,w
  1537  03E5  0244               	subwf	___lldiv@dividend,w
  1538  03E6                     u1235:
  1539  03E6  1C03               	skipc
  1540  03E7  2BE9               	goto	u1231
  1541  03E8  2BEA               	goto	u1230
  1542  03E9                     u1231:
  1543  03E9  2BF9               	goto	l1770
  1544  03EA                     u1230:
  1545  03EA                     l1766:
  1546  03EA  0840               	movf	___lldiv@divisor,w
  1547  03EB  02C4               	subwf	___lldiv@dividend,f
  1548  03EC  0841               	movf	___lldiv@divisor+1,w
  1549  03ED  1C03               	skipc
  1550  03EE  0F41               	incfsz	___lldiv@divisor+1,w
  1551  03EF  02C5               	subwf	___lldiv@dividend+1,f
  1552  03F0  0842               	movf	___lldiv@divisor+2,w
  1553  03F1  1C03               	skipc
  1554  03F2  0F42               	incfsz	___lldiv@divisor+2,w
  1555  03F3  02C6               	subwf	___lldiv@dividend+2,f
  1556  03F4  0843               	movf	___lldiv@divisor+3,w
  1557  03F5  1C03               	skipc
  1558  03F6  0F43               	incfsz	___lldiv@divisor+3,w
  1559  03F7  02C7               	subwf	___lldiv@dividend+3,f
  1560  03F8                     l1768:
  1561  03F8  1448               	bsf	___lldiv@quotient,0
  1562  03F9                     l1770:
  1563  03F9  3001               	movlw	1
  1564  03FA                     u1245:
  1565  03FA  1003               	clrc
  1566  03FB  0CC3               	rrf	___lldiv@divisor+3,f
  1567  03FC  0CC2               	rrf	___lldiv@divisor+2,f
  1568  03FD  0CC1               	rrf	___lldiv@divisor+1,f
  1569  03FE  0CC0               	rrf	___lldiv@divisor,f
  1570  03FF  3EFF               	addlw	-1
  1571  0400  1D03               	skipz
  1572  0401  2BFA               	goto	u1245
  1573  0402                     l1772:
  1574  0402  3001               	movlw	1
  1575  0403  02CC               	subwf	___lldiv@counter,f
  1576  0404  1D03               	btfss	3,2
  1577  0405  2C07               	goto	u1251
  1578  0406  2C08               	goto	u1250
  1579  0407                     u1251:
  1580  0407  2BCF               	goto	l1762
  1581  0408                     u1250:
  1582  0408                     l1774:
  1583  0408  084B               	movf	___lldiv@quotient+3,w
  1584  0409  00C3               	movwf	?___lldiv+3
  1585  040A  084A               	movf	___lldiv@quotient+2,w
  1586  040B  00C2               	movwf	?___lldiv+2
  1587  040C  0849               	movf	___lldiv@quotient+1,w
  1588  040D  00C1               	movwf	?___lldiv+1
  1589  040E  0848               	movf	___lldiv@quotient,w
  1590  040F  00C0               	movwf	?___lldiv
  1591  0410                     l374:
  1592  0410  0008               	return
  1593  0411                     __end_of___lldiv:
  1594                           
  1595                           	psect	text4
  1596  062D                     __ptext4:	
  1597 ;; *************** function _Show_val_LCD *****************
  1598 ;; Defined at:
  1599 ;;		line 147 in file "main_prueba3_mini2.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0
  1615 ;;      Temps:          0       3       0       0       0
  1616 ;;      Totals:         0       3       0       0       0
  1617 ;;Total ram usage:        3 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    4
  1620 ;; This function calls:
  1621 ;;		_Lcd_Set_Cursor
  1622 ;;		_Lcd_Write_String
  1623 ;;		_sprintf
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _Show_val_LCD
  1631  062D                     _Show_val_LCD:
  1632  062D                     l1998:	
  1633                           ;incstack = 0
  1634                           ; Regs used in _Show_val_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1635                           
  1636                           
  1637                           ;main_prueba3_mini2.c: 149:     sprintf(data_total, " %d", cont);
  1638  062D  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1639  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1640  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0630  00D6               	movwf	??_Show_val_LCD
  1642  0631  0856               	movf	??_Show_val_LCD,w
  1643  0632  00C9               	movwf	sprintf@f
  1644  0633  0865               	movf	_cont,w
  1645  0634  00D7               	movwf	??_Show_val_LCD+1
  1646  0635  01D8               	clrf	??_Show_val_LCD+2
  1647  0636  0857               	movf	??_Show_val_LCD+1,w
  1648  0637  00CA               	movwf	?_sprintf+1
  1649  0638  0858               	movf	??_Show_val_LCD+2,w
  1650  0639  00CB               	movwf	?_sprintf+2
  1651  063A  30B4               	movlw	(low (_data_total| 0))& (0+255)
  1652  063B  120A  118A  218B  120A  118A  	fcall	_sprintf
  1653  0640                     l2000:
  1654                           
  1655                           ;main_prueba3_mini2.c: 150:     Lcd_Set_Cursor(2,1);
  1656  0640  01F7               	clrf	Lcd_Set_Cursor@b
  1657  0641  0AF7               	incf	Lcd_Set_Cursor@b,f
  1658  0642  3002               	movlw	2
  1659  0643  120A  118A  2658  120A  118A  	fcall	_Lcd_Set_Cursor
  1660  0648                     l2002:
  1661                           
  1662                           ;main_prueba3_mini2.c: 151:     Lcd_Write_String(data_total);
  1663  0648  30B4               	movlw	(low (_data_total| 0))& (0+255)
  1664  0649  00F6               	movwf	Lcd_Write_String@a
  1665  064A  3000               	movlw	0
  1666  064B  00F7               	movwf	Lcd_Write_String@a+1
  1667  064C  120A  118A  2502  120A  118A  	fcall	_Lcd_Write_String
  1668  0651                     l2004:
  1669                           
  1670                           ;main_prueba3_mini2.c: 152:     cont++;
  1671  0651  3001               	movlw	1
  1672  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0654  00D6               	movwf	??_Show_val_LCD
  1675  0655  0856               	movf	??_Show_val_LCD,w
  1676  0656  07E5               	addwf	_cont,f
  1677  0657                     l110:
  1678  0657  0008               	return
  1679  0658                     __end_of_Show_val_LCD:
  1680                           
  1681                           	psect	text5
  1682  018B                     __ptext5:	
  1683 ;; *************** function _sprintf *****************
  1684 ;; Defined at:
  1685 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  sp              1    wreg     PTR unsigned char 
  1688 ;;		 -> data_total(20), 
  1689 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1690 ;;		 -> STR_2(4), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1693 ;;		 -> data_total(20), 
  1694 ;;  tmpval          4    0        struct .
  1695 ;;  val             2   18[BANK0 ] unsigned int 
  1696 ;;  cp              2    0        PTR const unsigned char 
  1697 ;;  len             2    0        unsigned int 
  1698 ;;  c               1   21[BANK0 ] unsigned char 
  1699 ;;  prec            1   17[BANK0 ] char 
  1700 ;;  flag            1   16[BANK0 ] unsigned char 
  1701 ;;  ap              1   15[BANK0 ] PTR void [1]
  1702 ;;		 -> ?_sprintf(2), 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  2    9[BANK0 ] int 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       3       0       0       0
  1713 ;;      Locals:         0       7       0       0       0
  1714 ;;      Temps:          0       3       0       0       0
  1715 ;;      Totals:         0      13       0       0       0
  1716 ;;Total ram usage:       13 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    2
  1719 ;; This function calls:
  1720 ;;		___lwdiv
  1721 ;;		___lwmod
  1722 ;; This function is called by:
  1723 ;;		_Show_val_LCD
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _sprintf
  1729  018B                     _sprintf:
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1733                           ;sprintf@sp stored from wreg
  1734  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1735  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1736  018D  00D4               	movwf	sprintf@sp
  1737  018E                     l1824:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1740  018E  304A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1741  018F  00CC               	movwf	??_sprintf
  1742  0190  084C               	movf	??_sprintf,w
  1743  0191  00CF               	movwf	sprintf@ap
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1746  0192  2A5E               	goto	l1876
  1747  0193                     l1826:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1750  0193  3025               	movlw	37
  1751  0194  0655               	xorwf	sprintf@c,w
  1752  0195  1903               	btfsc	3,2
  1753  0196  2998               	goto	u1381
  1754  0197  2999               	goto	u1380
  1755  0198                     u1381:
  1756  0198  29A5               	goto	l1832
  1757  0199                     u1380:
  1758  0199                     l1828:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1761  0199  0855               	movf	sprintf@c,w
  1762  019A  00CC               	movwf	??_sprintf
  1763  019B  0854               	movf	sprintf@sp,w
  1764  019C  0084               	movwf	4
  1765  019D  084C               	movf	??_sprintf,w
  1766  019E  1383               	bcf	3,7	;select IRP bank0
  1767  019F  0080               	movwf	0
  1768  01A0                     l1830:
  1769  01A0  3001               	movlw	1
  1770  01A1  00CC               	movwf	??_sprintf
  1771  01A2  084C               	movf	??_sprintf,w
  1772  01A3  07D4               	addwf	sprintf@sp,f
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1775  01A4  2A5E               	goto	l1876
  1776  01A5                     l1832:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1779  01A5  01D0               	clrf	sprintf@flag
  1780  01A6                     l1836:	
  1781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1782                           
  1783  01A6  3001               	movlw	1
  1784  01A7  07C9               	addwf	sprintf@f,f
  1785  01A8  30FF               	movlw	-1
  1786  01A9  0749               	addwf	sprintf@f,w
  1787  01AA  0084               	movwf	4
  1788  01AB  120A  118A  260A  120A  118A  	fcall	stringdir
  1789  01B0  00D5               	movwf	sprintf@c
  1790  01B1  00CC               	movwf	??_sprintf
  1791  01B2  01CD               	clrf	??_sprintf+1
  1792                           
  1793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1794                           ; Switch size 1, requested type "simple"
  1795                           ; Number of cases is 1, Range of values is 0 to 0
  1796                           ; switch strategies available:
  1797                           ; Name         Instructions Cycles
  1798                           ; simple_byte            4     3 (average)
  1799                           ; direct_byte           11     8 (fixed)
  1800                           ; jumptable            260     6 (fixed)
  1801                           ;	Chosen strategy is simple_byte
  1802  01B3  084D               	movf	??_sprintf+1,w
  1803  01B4  3A00               	xorlw	0	; case 0
  1804  01B5  1903               	skipnz
  1805  01B6  29B8               	goto	l2074
  1806  01B7  2A5E               	goto	l1876
  1807  01B8                     l2074:
  1808                           
  1809                           ; Switch size 1, requested type "simple"
  1810                           ; Number of cases is 3, Range of values is 0 to 105
  1811                           ; switch strategies available:
  1812                           ; Name         Instructions Cycles
  1813                           ; simple_byte           10     6 (average)
  1814                           ; jumptable            260     6 (fixed)
  1815                           ;	Chosen strategy is simple_byte
  1816  01B8  084C               	movf	??_sprintf,w
  1817  01B9  3A00               	xorlw	0	; case 0
  1818  01BA  1903               	skipnz
  1819  01BB  2A70               	goto	l1878
  1820  01BC  3A64               	xorlw	100	; case 100
  1821  01BD  1903               	skipnz
  1822  01BE  29C3               	goto	l1838
  1823  01BF  3A0D               	xorlw	13	; case 105
  1824  01C0  1903               	skipnz
  1825  01C1  29C3               	goto	l1838
  1826  01C2  2A5E               	goto	l1876
  1827  01C3                     l1838:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1830  01C3  084F               	movf	sprintf@ap,w
  1831  01C4  0084               	movwf	4
  1832  01C5  1383               	bcf	3,7	;select IRP bank0
  1833  01C6  0800               	movf	0,w
  1834  01C7  00D2               	movwf	sprintf@val
  1835  01C8  0A84               	incf	4,f
  1836  01C9  0800               	movf	0,w
  1837  01CA  00D3               	movwf	sprintf@val+1
  1838  01CB                     l1840:
  1839  01CB  3002               	movlw	2
  1840  01CC  00CC               	movwf	??_sprintf
  1841  01CD  084C               	movf	??_sprintf,w
  1842  01CE  07CF               	addwf	sprintf@ap,f
  1843  01CF                     l1842:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1846  01CF  1FD3               	btfss	sprintf@val+1,7
  1847  01D0  29D2               	goto	u1391
  1848  01D1  29D3               	goto	u1390
  1849  01D2                     u1391:
  1850  01D2  29DC               	goto	l1848
  1851  01D3                     u1390:
  1852  01D3                     l1844:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1855  01D3  3003               	movlw	3
  1856  01D4  00CC               	movwf	??_sprintf
  1857  01D5  084C               	movf	??_sprintf,w
  1858  01D6  04D0               	iorwf	sprintf@flag,f
  1859  01D7                     l1846:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1862  01D7  09D2               	comf	sprintf@val,f
  1863  01D8  09D3               	comf	sprintf@val+1,f
  1864  01D9  0AD2               	incf	sprintf@val,f
  1865  01DA  1903               	skipnz
  1866  01DB  0AD3               	incf	sprintf@val+1,f
  1867  01DC                     l1848:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1870  01DC  01D5               	clrf	sprintf@c
  1871  01DD  0AD5               	incf	sprintf@c,f
  1872  01DE                     l1854:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1875  01DE  0855               	movf	sprintf@c,w
  1876  01DF  00CC               	movwf	??_sprintf
  1877  01E0  074C               	addwf	??_sprintf,w
  1878  01E1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1879  01E2  0084               	movwf	4
  1880  01E3  120A  118A  260A  120A  118A  	fcall	stringdir
  1881  01E8  00CD               	movwf	??_sprintf+1
  1882  01E9  120A  118A  260A  120A  118A  	fcall	stringdir
  1883  01EE  00CE               	movwf	??_sprintf+2
  1884  01EF  084E               	movf	??_sprintf+2,w
  1885  01F0  0253               	subwf	sprintf@val+1,w
  1886  01F1  1D03               	skipz
  1887  01F2  29F5               	goto	u1405
  1888  01F3  084D               	movf	??_sprintf+1,w
  1889  01F4  0252               	subwf	sprintf@val,w
  1890  01F5                     u1405:
  1891  01F5  1803               	skipnc
  1892  01F6  29F8               	goto	u1401
  1893  01F7  29F9               	goto	u1400
  1894  01F8                     u1401:
  1895  01F8  29FA               	goto	l1858
  1896  01F9                     u1400:
  1897  01F9  2A04               	goto	l1860
  1898  01FA                     l1858:
  1899  01FA  3001               	movlw	1
  1900  01FB  00CC               	movwf	??_sprintf
  1901  01FC  084C               	movf	??_sprintf,w
  1902  01FD  07D5               	addwf	sprintf@c,f
  1903  01FE  3005               	movlw	5
  1904  01FF  0655               	xorwf	sprintf@c,w
  1905  0200  1D03               	btfss	3,2
  1906  0201  2A03               	goto	u1411
  1907  0202  2A04               	goto	u1410
  1908  0203                     u1411:
  1909  0203  29DE               	goto	l1854
  1910  0204                     u1410:
  1911  0204                     l1860:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1914  0204  0850               	movf	sprintf@flag,w
  1915  0205  3903               	andlw	3
  1916  0206  1903               	btfsc	3,2
  1917  0207  2A09               	goto	u1421
  1918  0208  2A0A               	goto	u1420
  1919  0209                     u1421:
  1920  0209  2A15               	goto	l1866
  1921  020A                     u1420:
  1922  020A                     l1862:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1925  020A  302D               	movlw	45
  1926  020B  00CC               	movwf	??_sprintf
  1927  020C  0854               	movf	sprintf@sp,w
  1928  020D  0084               	movwf	4
  1929  020E  084C               	movf	??_sprintf,w
  1930  020F  1383               	bcf	3,7	;select IRP bank0
  1931  0210  0080               	movwf	0
  1932  0211                     l1864:
  1933  0211  3001               	movlw	1
  1934  0212  00CC               	movwf	??_sprintf
  1935  0213  084C               	movf	??_sprintf,w
  1936  0214  07D4               	addwf	sprintf@sp,f
  1937  0215                     l1866:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1940  0215  0855               	movf	sprintf@c,w
  1941  0216  00CC               	movwf	??_sprintf
  1942  0217  084C               	movf	??_sprintf,w
  1943  0218  00D1               	movwf	sprintf@prec
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1946  0219  2A55               	goto	l1874
  1947  021A                     l1868:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1950  021A  300A               	movlw	10
  1951  021B  00C3               	movwf	___lwmod@divisor
  1952  021C  3000               	movlw	0
  1953  021D  00C4               	movwf	___lwmod@divisor+1
  1954  021E  0851               	movf	sprintf@prec,w
  1955  021F  00CC               	movwf	??_sprintf
  1956  0220  074C               	addwf	??_sprintf,w
  1957  0221  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1958  0222  0084               	movwf	4
  1959  0223  120A  118A  260A  120A  118A  	fcall	stringdir
  1960  0228  00F3               	movwf	___lwdiv@divisor
  1961  0229  120A  118A  260A  120A  118A  	fcall	stringdir
  1962  022E  00F4               	movwf	___lwdiv@divisor+1
  1963  022F  0853               	movf	sprintf@val+1,w
  1964  0230  00F6               	movwf	___lwdiv@dividend+1
  1965  0231  0852               	movf	sprintf@val,w
  1966  0232  00F5               	movwf	___lwdiv@dividend
  1967  0233  120A  118A  24BC  120A  118A  	fcall	___lwdiv
  1968  0238  0874               	movf	?___lwdiv+1,w
  1969  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1970  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1971  023B  00C6               	movwf	___lwmod@dividend+1
  1972  023C  0873               	movf	?___lwdiv,w
  1973  023D  00C5               	movwf	___lwmod@dividend
  1974  023E  120A  118A  2548  120A  118A  	fcall	___lwmod
  1975  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0245  0843               	movf	?___lwmod,w
  1978  0246  3E30               	addlw	48
  1979  0247  00CD               	movwf	??_sprintf+1
  1980  0248  084D               	movf	??_sprintf+1,w
  1981  0249  00D5               	movwf	sprintf@c
  1982  024A                     l1870:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1985  024A  0855               	movf	sprintf@c,w
  1986  024B  00CC               	movwf	??_sprintf
  1987  024C  0854               	movf	sprintf@sp,w
  1988  024D  0084               	movwf	4
  1989  024E  084C               	movf	??_sprintf,w
  1990  024F  1383               	bcf	3,7	;select IRP bank0
  1991  0250  0080               	movwf	0
  1992  0251                     l1872:
  1993  0251  3001               	movlw	1
  1994  0252  00CC               	movwf	??_sprintf
  1995  0253  084C               	movf	??_sprintf,w
  1996  0254  07D4               	addwf	sprintf@sp,f
  1997  0255                     l1874:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2000  0255  30FF               	movlw	255
  2001  0256  00CC               	movwf	??_sprintf
  2002  0257  084C               	movf	??_sprintf,w
  2003  0258  07D1               	addwf	sprintf@prec,f
  2004  0259  0A51               	incf	sprintf@prec,w
  2005  025A  1D03               	btfss	3,2
  2006  025B  2A5D               	goto	u1431
  2007  025C  2A5E               	goto	u1430
  2008  025D                     u1431:
  2009  025D  2A1A               	goto	l1868
  2010  025E                     u1430:
  2011  025E                     l1876:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2014  025E  3001               	movlw	1
  2015  025F  07C9               	addwf	sprintf@f,f
  2016  0260  30FF               	movlw	-1
  2017  0261  0749               	addwf	sprintf@f,w
  2018  0262  0084               	movwf	4
  2019  0263  120A  118A  260A  120A  118A  	fcall	stringdir
  2020  0268  00CC               	movwf	??_sprintf
  2021  0269  084C               	movf	??_sprintf,w
  2022  026A  00D5               	movwf	sprintf@c
  2023  026B  0855               	movf	sprintf@c,w
  2024  026C  1D03               	btfss	3,2
  2025  026D  2A6F               	goto	u1441
  2026  026E  2A70               	goto	u1440
  2027  026F                     u1441:
  2028  026F  2993               	goto	l1826
  2029  0270                     u1440:
  2030  0270                     l1878:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2033  0270  0854               	movf	sprintf@sp,w
  2034  0271  0084               	movwf	4
  2035  0272  1383               	bcf	3,7	;select IRP bank0
  2036  0273  0180               	clrf	0
  2037  0274                     l334:
  2038  0274  0008               	return
  2039  0275                     __end_of_sprintf:
  2040                           
  2041                           	psect	text6
  2042  0548                     __ptext6:	
  2043 ;; *************** function ___lwmod *****************
  2044 ;; Defined at:
  2045 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  divisor         2    3[BANK0 ] unsigned int 
  2048 ;;  dividend        2    5[BANK0 ] unsigned int 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  counter         1    8[BANK0 ] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  2    3[BANK0 ] unsigned int 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       4       0       0       0
  2061 ;;      Locals:         0       1       0       0       0
  2062 ;;      Temps:          0       1       0       0       0
  2063 ;;      Totals:         0       6       0       0       0
  2064 ;;Total ram usage:        6 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_sprintf
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function ___lwmod
  2076  0548                     ___lwmod:
  2077  0548                     l1382:	
  2078                           ;incstack = 0
  2079                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2080                           
  2081  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2083  054A  0843               	movf	___lwmod@divisor,w
  2084  054B  0444               	iorwf	___lwmod@divisor+1,w
  2085  054C  1903               	btfsc	3,2
  2086  054D  2D4F               	goto	u761
  2087  054E  2D50               	goto	u760
  2088  054F                     u761:
  2089  054F  2D7F               	goto	l1400
  2090  0550                     u760:
  2091  0550                     l1384:
  2092  0550  01C8               	clrf	___lwmod@counter
  2093  0551  0AC8               	incf	___lwmod@counter,f
  2094  0552  2D5E               	goto	l1390
  2095  0553                     l1386:
  2096  0553  3001               	movlw	1
  2097  0554                     u775:
  2098  0554  1003               	clrc
  2099  0555  0DC3               	rlf	___lwmod@divisor,f
  2100  0556  0DC4               	rlf	___lwmod@divisor+1,f
  2101  0557  3EFF               	addlw	-1
  2102  0558  1D03               	skipz
  2103  0559  2D54               	goto	u775
  2104  055A                     l1388:
  2105  055A  3001               	movlw	1
  2106  055B  00C7               	movwf	??___lwmod
  2107  055C  0847               	movf	??___lwmod,w
  2108  055D  07C8               	addwf	___lwmod@counter,f
  2109  055E                     l1390:
  2110  055E  1FC4               	btfss	___lwmod@divisor+1,7
  2111  055F  2D61               	goto	u781
  2112  0560  2D62               	goto	u780
  2113  0561                     u781:
  2114  0561  2D53               	goto	l1386
  2115  0562                     u780:
  2116  0562                     l1392:
  2117  0562  0844               	movf	___lwmod@divisor+1,w
  2118  0563  0246               	subwf	___lwmod@dividend+1,w
  2119  0564  1D03               	skipz
  2120  0565  2D68               	goto	u795
  2121  0566  0843               	movf	___lwmod@divisor,w
  2122  0567  0245               	subwf	___lwmod@dividend,w
  2123  0568                     u795:
  2124  0568  1C03               	skipc
  2125  0569  2D6B               	goto	u791
  2126  056A  2D6C               	goto	u790
  2127  056B                     u791:
  2128  056B  2D72               	goto	l1396
  2129  056C                     u790:
  2130  056C                     l1394:
  2131  056C  0843               	movf	___lwmod@divisor,w
  2132  056D  02C5               	subwf	___lwmod@dividend,f
  2133  056E  0844               	movf	___lwmod@divisor+1,w
  2134  056F  1C03               	skipc
  2135  0570  03C6               	decf	___lwmod@dividend+1,f
  2136  0571  02C6               	subwf	___lwmod@dividend+1,f
  2137  0572                     l1396:
  2138  0572  3001               	movlw	1
  2139  0573                     u805:
  2140  0573  1003               	clrc
  2141  0574  0CC4               	rrf	___lwmod@divisor+1,f
  2142  0575  0CC3               	rrf	___lwmod@divisor,f
  2143  0576  3EFF               	addlw	-1
  2144  0577  1D03               	skipz
  2145  0578  2D73               	goto	u805
  2146  0579                     l1398:
  2147  0579  3001               	movlw	1
  2148  057A  02C8               	subwf	___lwmod@counter,f
  2149  057B  1D03               	btfss	3,2
  2150  057C  2D7E               	goto	u811
  2151  057D  2D7F               	goto	u810
  2152  057E                     u811:
  2153  057E  2D62               	goto	l1392
  2154  057F                     u810:
  2155  057F                     l1400:
  2156  057F  0846               	movf	___lwmod@dividend+1,w
  2157  0580  00C4               	movwf	?___lwmod+1
  2158  0581  0845               	movf	___lwmod@dividend,w
  2159  0582  00C3               	movwf	?___lwmod
  2160  0583                     l620:
  2161  0583  0008               	return
  2162  0584                     __end_of___lwmod:
  2163                           
  2164                           	psect	text7
  2165  04BC                     __ptext7:	
  2166 ;; *************** function ___lwdiv *****************
  2167 ;; Defined at:
  2168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  divisor         2    3[COMMON] unsigned int 
  2171 ;;  dividend        2    5[COMMON] unsigned int 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  quotient        2    1[BANK0 ] unsigned int 
  2174 ;;  counter         1    0[BANK0 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  2    3[COMMON] unsigned int 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         4       0       0       0       0
  2185 ;;      Locals:         0       3       0       0       0
  2186 ;;      Temps:          1       0       0       0       0
  2187 ;;      Totals:         5       3       0       0       0
  2188 ;;Total ram usage:        8 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_sprintf
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function ___lwdiv
  2200  04BC                     ___lwdiv:
  2201  04BC                     l1778:	
  2202                           ;incstack = 0
  2203                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2204                           
  2205  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2206  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2207  04BE  01C1               	clrf	___lwdiv@quotient
  2208  04BF  01C2               	clrf	___lwdiv@quotient+1
  2209  04C0                     l1780:
  2210  04C0  0873               	movf	___lwdiv@divisor,w
  2211  04C1  0474               	iorwf	___lwdiv@divisor+1,w
  2212  04C2  1903               	btfsc	3,2
  2213  04C3  2CC5               	goto	u1261
  2214  04C4  2CC6               	goto	u1260
  2215  04C5                     u1261:
  2216  04C5  2CFD               	goto	l1800
  2217  04C6                     u1260:
  2218  04C6                     l1782:
  2219  04C6  01C0               	clrf	___lwdiv@counter
  2220  04C7  0AC0               	incf	___lwdiv@counter,f
  2221  04C8  2CD4               	goto	l1788
  2222  04C9                     l1784:
  2223  04C9  3001               	movlw	1
  2224  04CA                     u1275:
  2225  04CA  1003               	clrc
  2226  04CB  0DF3               	rlf	___lwdiv@divisor,f
  2227  04CC  0DF4               	rlf	___lwdiv@divisor+1,f
  2228  04CD  3EFF               	addlw	-1
  2229  04CE  1D03               	skipz
  2230  04CF  2CCA               	goto	u1275
  2231  04D0                     l1786:
  2232  04D0  3001               	movlw	1
  2233  04D1  00F7               	movwf	??___lwdiv
  2234  04D2  0877               	movf	??___lwdiv,w
  2235  04D3  07C0               	addwf	___lwdiv@counter,f
  2236  04D4                     l1788:
  2237  04D4  1FF4               	btfss	___lwdiv@divisor+1,7
  2238  04D5  2CD7               	goto	u1281
  2239  04D6  2CD8               	goto	u1280
  2240  04D7                     u1281:
  2241  04D7  2CC9               	goto	l1784
  2242  04D8                     u1280:
  2243  04D8                     l1790:
  2244  04D8  3001               	movlw	1
  2245  04D9                     u1295:
  2246  04D9  1003               	clrc
  2247  04DA  0DC1               	rlf	___lwdiv@quotient,f
  2248  04DB  0DC2               	rlf	___lwdiv@quotient+1,f
  2249  04DC  3EFF               	addlw	-1
  2250  04DD  1D03               	skipz
  2251  04DE  2CD9               	goto	u1295
  2252  04DF  0874               	movf	___lwdiv@divisor+1,w
  2253  04E0  0276               	subwf	___lwdiv@dividend+1,w
  2254  04E1  1D03               	skipz
  2255  04E2  2CE5               	goto	u1305
  2256  04E3  0873               	movf	___lwdiv@divisor,w
  2257  04E4  0275               	subwf	___lwdiv@dividend,w
  2258  04E5                     u1305:
  2259  04E5  1C03               	skipc
  2260  04E6  2CE8               	goto	u1301
  2261  04E7  2CE9               	goto	u1300
  2262  04E8                     u1301:
  2263  04E8  2CF0               	goto	l1796
  2264  04E9                     u1300:
  2265  04E9                     l1792:
  2266  04E9  0873               	movf	___lwdiv@divisor,w
  2267  04EA  02F5               	subwf	___lwdiv@dividend,f
  2268  04EB  0874               	movf	___lwdiv@divisor+1,w
  2269  04EC  1C03               	skipc
  2270  04ED  03F6               	decf	___lwdiv@dividend+1,f
  2271  04EE  02F6               	subwf	___lwdiv@dividend+1,f
  2272  04EF                     l1794:
  2273  04EF  1441               	bsf	___lwdiv@quotient,0
  2274  04F0                     l1796:
  2275  04F0  3001               	movlw	1
  2276  04F1                     u1315:
  2277  04F1  1003               	clrc
  2278  04F2  0CF4               	rrf	___lwdiv@divisor+1,f
  2279  04F3  0CF3               	rrf	___lwdiv@divisor,f
  2280  04F4  3EFF               	addlw	-1
  2281  04F5  1D03               	skipz
  2282  04F6  2CF1               	goto	u1315
  2283  04F7                     l1798:
  2284  04F7  3001               	movlw	1
  2285  04F8  02C0               	subwf	___lwdiv@counter,f
  2286  04F9  1D03               	btfss	3,2
  2287  04FA  2CFC               	goto	u1321
  2288  04FB  2CFD               	goto	u1320
  2289  04FC                     u1321:
  2290  04FC  2CD8               	goto	l1790
  2291  04FD                     u1320:
  2292  04FD                     l1800:
  2293  04FD  0842               	movf	___lwdiv@quotient+1,w
  2294  04FE  00F4               	movwf	?___lwdiv+1
  2295  04FF  0841               	movf	___lwdiv@quotient,w
  2296  0500  00F3               	movwf	?___lwdiv
  2297  0501                     l610:
  2298  0501  0008               	return
  2299  0502                     __end_of___lwdiv:
  2300                           
  2301                           	psect	text8
  2302  0502                     __ptext8:	
  2303 ;; *************** function _Lcd_Write_String *****************
  2304 ;; Defined at:
  2305 ;;		line 71 in file "LCD.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  a               2    6[COMMON] PTR unsigned char 
  2308 ;;		 -> data_total(20), STR_1(15), 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  i               2    3[BANK0 ] int 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         2       0       0       0       0
  2321 ;;      Locals:         0       2       0       0       0
  2322 ;;      Temps:          0       3       0       0       0
  2323 ;;      Totals:         2       5       0       0       0
  2324 ;;Total ram usage:        7 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    3
  2327 ;; This function calls:
  2328 ;;		_Lcd_Write_Char
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;;		_Show_val_LCD
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           
  2336                           ;psect for function _Lcd_Write_String
  2337  0502                     _Lcd_Write_String:
  2338  0502                     l1816:	
  2339                           ;incstack = 0
  2340                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2341                           
  2342                           
  2343                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  2344  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2345  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2346  0504  01C3               	clrf	Lcd_Write_String@i
  2347  0505  01C4               	clrf	Lcd_Write_String@i+1
  2348  0506  2D2B               	goto	l1822
  2349  0507                     l1818:
  2350                           
  2351                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  2352  0507  0843               	movf	Lcd_Write_String@i,w
  2353  0508  0776               	addwf	Lcd_Write_String@a,w
  2354  0509  00C1               	movwf	??_Lcd_Write_String+1
  2355  050A  0877               	movf	Lcd_Write_String@a+1,w
  2356  050B  00C0               	movwf	??_Lcd_Write_String
  2357  050C  1803               	skipnc
  2358  050D  0AC0               	incf	??_Lcd_Write_String,f
  2359  050E  1FC3               	btfss	Lcd_Write_String@i,7
  2360  050F  2D11               	goto	u1350
  2361  0510  03C0               	decf	??_Lcd_Write_String,f
  2362  0511                     u1350:
  2363  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0513  0840               	movf	??_Lcd_Write_String,w
  2366  0514  00C2               	movwf	??_Lcd_Write_String+2
  2367  0515  0842               	movf	??_Lcd_Write_String+2,w
  2368  0516  00FF               	movwf	btemp+1
  2369  0517  0841               	movf	??_Lcd_Write_String+1,w
  2370  0518  0084               	movwf	4
  2371  0519  120A  118A  2600  120A  118A  	fcall	stringtab
  2372  051E  120A  118A  26F5  120A  118A  	fcall	_Lcd_Write_Char
  2373  0523                     l1820:
  2374  0523  3001               	movlw	1
  2375  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0526  07C3               	addwf	Lcd_Write_String@i,f
  2378  0527  1803               	skipnc
  2379  0528  0AC4               	incf	Lcd_Write_String@i+1,f
  2380  0529  3000               	movlw	0
  2381  052A  07C4               	addwf	Lcd_Write_String@i+1,f
  2382  052B                     l1822:
  2383  052B  0843               	movf	Lcd_Write_String@i,w
  2384  052C  0776               	addwf	Lcd_Write_String@a,w
  2385  052D  00C1               	movwf	??_Lcd_Write_String+1
  2386  052E  0877               	movf	Lcd_Write_String@a+1,w
  2387  052F  00C0               	movwf	??_Lcd_Write_String
  2388  0530  1803               	skipnc
  2389  0531  0AC0               	incf	??_Lcd_Write_String,f
  2390  0532  1FC3               	btfss	Lcd_Write_String@i,7
  2391  0533  2D35               	goto	u1360
  2392  0534  03C0               	decf	??_Lcd_Write_String,f
  2393  0535                     u1360:
  2394  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0537  0840               	movf	??_Lcd_Write_String,w
  2397  0538  00C2               	movwf	??_Lcd_Write_String+2
  2398  0539  0842               	movf	??_Lcd_Write_String+2,w
  2399  053A  00FF               	movwf	btemp+1
  2400  053B  0841               	movf	??_Lcd_Write_String+1,w
  2401  053C  0084               	movwf	4
  2402  053D  120A  118A  2600  120A  118A  	fcall	stringtab
  2403  0542  3A00               	xorlw	0
  2404  0543  1D03               	skipz
  2405  0544  2D46               	goto	u1371
  2406  0545  2D47               	goto	u1370
  2407  0546                     u1371:
  2408  0546  2D07               	goto	l1818
  2409  0547                     u1370:
  2410  0547                     l218:
  2411  0547  0008               	return
  2412  0548                     __end_of_Lcd_Write_String:
  2413                           
  2414                           	psect	text9
  2415  06F5                     __ptext9:	
  2416 ;; *************** function _Lcd_Write_Char *****************
  2417 ;; Defined at:
  2418 ;;		line 62 in file "LCD.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  a               1    wreg     unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  a               1    5[COMMON] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         1       0       0       0       0
  2434 ;;      Temps:          1       0       0       0       0
  2435 ;;      Totals:         2       0       0       0       0
  2436 ;;Total ram usage:        2 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    2
  2439 ;; This function calls:
  2440 ;;		_Lcd_Port
  2441 ;; This function is called by:
  2442 ;;		_Lcd_Write_String
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _Lcd_Write_Char
  2448  06F5                     _Lcd_Write_Char:
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2452                           ;Lcd_Write_Char@a stored from wreg
  2453  06F5  00F5               	movwf	Lcd_Write_Char@a
  2454  06F6                     l1744:
  2455                           
  2456                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  2457  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2458  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2459  06F8  1409               	bsf	9,0	;volatile
  2460  06F9                     l1746:
  2461                           
  2462                           ;LCD.c: 64:    Lcd_Port(a);
  2463  06F9  0875               	movf	Lcd_Write_Char@a,w
  2464  06FA  120A  118A  278C  120A  118A  	fcall	_Lcd_Port
  2465  06FF                     l1748:
  2466                           
  2467                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  2468  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0700  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0701  1509               	bsf	9,2	;volatile
  2471  0702                     l1750:
  2472                           
  2473                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2474  0702  301A               	movlw	26
  2475  0703  00F4               	movwf	??_Lcd_Write_Char
  2476  0704                     u1607:
  2477  0704  0BF4               	decfsz	??_Lcd_Write_Char,f
  2478  0705  2F04               	goto	u1607
  2479  0706  0000               	nop
  2480  0707                     l1752:
  2481                           
  2482                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  2483  0707  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0708  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0709  1109               	bcf	9,2	;volatile
  2486  070A                     l212:
  2487  070A  0008               	return
  2488  070B                     __end_of_Lcd_Write_Char:
  2489                           
  2490                           	psect	text10
  2491  0658                     __ptext10:	
  2492 ;; *************** function _Lcd_Set_Cursor *****************
  2493 ;; Defined at:
  2494 ;;		line 49 in file "LCD.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  a               1    wreg     unsigned char 
  2497 ;;  b               1    7[COMMON] unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  a               1    1[BANK0 ] unsigned char 
  2500 ;;  temp            1    2[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         1       0       0       0       0
  2511 ;;      Locals:         0       2       0       0       0
  2512 ;;      Temps:          0       1       0       0       0
  2513 ;;      Totals:         1       3       0       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    3
  2517 ;; This function calls:
  2518 ;;		_Lcd_Cmd
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;;		_Show_val_LCD
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _Lcd_Set_Cursor
  2527  0658                     _Lcd_Set_Cursor:
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2531                           ;Lcd_Set_Cursor@a stored from wreg
  2532  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2534  065A  00C1               	movwf	Lcd_Set_Cursor@a
  2535  065B                     l1804:
  2536                           
  2537                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  2538  065B  0341               	decf	Lcd_Set_Cursor@a,w
  2539  065C  1D03               	btfss	3,2
  2540  065D  2E5F               	goto	u1331
  2541  065E  2E60               	goto	u1330
  2542  065F                     u1331:
  2543  065F  2E6C               	goto	l1810
  2544  0660                     u1330:
  2545  0660                     l1806:
  2546                           
  2547                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  2548  0660  0877               	movf	Lcd_Set_Cursor@b,w
  2549  0661  3E7F               	addlw	127
  2550  0662  00C0               	movwf	??_Lcd_Set_Cursor
  2551  0663  0840               	movf	??_Lcd_Set_Cursor,w
  2552  0664  00C2               	movwf	Lcd_Set_Cursor@temp
  2553  0665                     l1808:
  2554                           
  2555                           ;LCD.c: 53:         Lcd_Cmd(temp);
  2556  0665  0842               	movf	Lcd_Set_Cursor@temp,w
  2557  0666  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  2558                           
  2559                           ;LCD.c: 54:  }
  2560  066B  2E7D               	goto	l209
  2561  066C                     l1810:
  2562  066C  3002               	movlw	2
  2563  066D  0641               	xorwf	Lcd_Set_Cursor@a,w
  2564  066E  1D03               	btfss	3,2
  2565  066F  2E71               	goto	u1341
  2566  0670  2E72               	goto	u1340
  2567  0671                     u1341:
  2568  0671  2E7D               	goto	l209
  2569  0672                     u1340:
  2570  0672                     l1812:
  2571                           
  2572                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  2573  0672  0877               	movf	Lcd_Set_Cursor@b,w
  2574  0673  3EBF               	addlw	191
  2575  0674  00C0               	movwf	??_Lcd_Set_Cursor
  2576  0675  0840               	movf	??_Lcd_Set_Cursor,w
  2577  0676  00C2               	movwf	Lcd_Set_Cursor@temp
  2578  0677                     l1814:
  2579                           
  2580                           ;LCD.c: 57:   Lcd_Cmd(temp);
  2581  0677  0842               	movf	Lcd_Set_Cursor@temp,w
  2582  0678  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  2583  067D                     l209:
  2584  067D  0008               	return
  2585  067E                     __end_of_Lcd_Set_Cursor:
  2586                           
  2587                           	psect	text11
  2588  0034                     __ptext11:	
  2589 ;; *************** function _RTC_display *****************
  2590 ;; Defined at:
  2591 ;;		line 164 in file "main_prueba3_mini2.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0
  2607 ;;      Temps:          0       3       0       0       0
  2608 ;;      Totals:         0       3       0       0       0
  2609 ;;Total ram usage:        3 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    3
  2612 ;; This function calls:
  2613 ;;		___awdiv
  2614 ;;		___awmod
  2615 ;;		_bcd_to_decimal
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function _RTC_display
  2623  0034                     _RTC_display:
  2624  0034                     l1996:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _RTC_display: [wreg+status,2+status,0+pclath+cstack]
  2627                           
  2628                           
  2629                           ;main_prueba3_mini2.c: 165:     static char Time[] = "TIME: 00:00:00";;main_prueba3_mini
      +                          2.c: 166:     static char Date[] = "DATE: 00/00/2000";;main_prueba3_mini2.c: 169:     se
      +                          cond = bcd_to_decimal(second);
  2630  0034  087A               	movf	_second,w
  2631  0035  120A  118A  26BF  120A  118A  	fcall	_bcd_to_decimal
  2632  003A  1283               	bcf	3,5	;RP0=0, select bank0
  2633  003B  1303               	bcf	3,6	;RP1=0, select bank0
  2634  003C  00C4               	movwf	??_RTC_display
  2635  003D  0844               	movf	??_RTC_display,w
  2636  003E  00FA               	movwf	_second
  2637                           
  2638                           ;main_prueba3_mini2.c: 170:     minute = bcd_to_decimal(minute);
  2639  003F  0879               	movf	_minute,w
  2640  0040  120A  118A  26BF  120A  118A  	fcall	_bcd_to_decimal
  2641  0045  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0046  1303               	bcf	3,6	;RP1=0, select bank0
  2643  0047  00C4               	movwf	??_RTC_display
  2644  0048  0844               	movf	??_RTC_display,w
  2645  0049  00F9               	movwf	_minute
  2646                           
  2647                           ;main_prueba3_mini2.c: 171:     hour = bcd_to_decimal(hour);
  2648  004A  0878               	movf	_hour,w
  2649  004B  120A  118A  26BF  120A  118A  	fcall	_bcd_to_decimal
  2650  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0052  00C4               	movwf	??_RTC_display
  2653  0053  0844               	movf	??_RTC_display,w
  2654  0054  00F8               	movwf	_hour
  2655                           
  2656                           ;main_prueba3_mini2.c: 172:     m_day = bcd_to_decimal(m_day);
  2657  0055  0868               	movf	_m_day,w
  2658  0056  120A  118A  26BF  120A  118A  	fcall	_bcd_to_decimal
  2659  005B  1283               	bcf	3,5	;RP0=0, select bank0
  2660  005C  1303               	bcf	3,6	;RP1=0, select bank0
  2661  005D  00C4               	movwf	??_RTC_display
  2662  005E  0844               	movf	??_RTC_display,w
  2663  005F  00E8               	movwf	_m_day
  2664                           
  2665                           ;main_prueba3_mini2.c: 173:     month = bcd_to_decimal(month);
  2666  0060  0867               	movf	_month,w
  2667  0061  120A  118A  26BF  120A  118A  	fcall	_bcd_to_decimal
  2668  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0067  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0068  00C4               	movwf	??_RTC_display
  2671  0069  0844               	movf	??_RTC_display,w
  2672  006A  00E7               	movwf	_month
  2673                           
  2674                           ;main_prueba3_mini2.c: 174:     year = bcd_to_decimal(year);
  2675  006B  0866               	movf	_year,w
  2676  006C  120A  118A  26BF  120A  118A  	fcall	_bcd_to_decimal
  2677  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0073  00C4               	movwf	??_RTC_display
  2680  0074  0844               	movf	??_RTC_display,w
  2681  0075  00E6               	movwf	_year
  2682                           
  2683                           ;main_prueba3_mini2.c: 178:     Time[6] = hour / 10 + '0';
  2684  0076  300A               	movlw	10
  2685  0077  00F3               	movwf	___awdiv@divisor
  2686  0078  3000               	movlw	0
  2687  0079  00F4               	movwf	___awdiv@divisor+1
  2688  007A  0878               	movf	_hour,w
  2689  007B  00C4               	movwf	??_RTC_display
  2690  007C  01C5               	clrf	??_RTC_display+1
  2691  007D  0844               	movf	??_RTC_display,w
  2692  007E  00F5               	movwf	___awdiv@dividend
  2693  007F  0845               	movf	??_RTC_display+1,w
  2694  0080  00F6               	movwf	___awdiv@dividend+1
  2695  0081  120A  118A  2340  120A  118A  	fcall	___awdiv
  2696  0086  0873               	movf	?___awdiv,w
  2697  0087  3E30               	addlw	48
  2698  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2700  008A  00C6               	movwf	??_RTC_display+2
  2701  008B  0846               	movf	??_RTC_display+2,w
  2702  008C  00B7               	movwf	RTC_display@Time+6
  2703                           
  2704                           ;main_prueba3_mini2.c: 179:     Time[7] = hour % 10 + '0';
  2705  008D  300A               	movlw	10
  2706  008E  00F3               	movwf	___awmod@divisor
  2707  008F  3000               	movlw	0
  2708  0090  00F4               	movwf	___awmod@divisor+1
  2709  0091  0878               	movf	_hour,w
  2710  0092  00C4               	movwf	??_RTC_display
  2711  0093  01C5               	clrf	??_RTC_display+1
  2712  0094  0844               	movf	??_RTC_display,w
  2713  0095  00F5               	movwf	___awmod@dividend
  2714  0096  0845               	movf	??_RTC_display+1,w
  2715  0097  00F6               	movwf	___awmod@dividend+1
  2716  0098  120A  118A  2411  120A  118A  	fcall	___awmod
  2717  009D  0873               	movf	?___awmod,w
  2718  009E  3E30               	addlw	48
  2719  009F  1283               	bcf	3,5	;RP0=0, select bank0
  2720  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2721  00A1  00C6               	movwf	??_RTC_display+2
  2722  00A2  0846               	movf	??_RTC_display+2,w
  2723  00A3  00B8               	movwf	RTC_display@Time+7
  2724                           
  2725                           ;main_prueba3_mini2.c: 180:     Time[9] = minute / 10 + '0';
  2726  00A4  300A               	movlw	10
  2727  00A5  00F3               	movwf	___awdiv@divisor
  2728  00A6  3000               	movlw	0
  2729  00A7  00F4               	movwf	___awdiv@divisor+1
  2730  00A8  0879               	movf	_minute,w
  2731  00A9  00C4               	movwf	??_RTC_display
  2732  00AA  01C5               	clrf	??_RTC_display+1
  2733  00AB  0844               	movf	??_RTC_display,w
  2734  00AC  00F5               	movwf	___awdiv@dividend
  2735  00AD  0845               	movf	??_RTC_display+1,w
  2736  00AE  00F6               	movwf	___awdiv@dividend+1
  2737  00AF  120A  118A  2340  120A  118A  	fcall	___awdiv
  2738  00B4  0873               	movf	?___awdiv,w
  2739  00B5  3E30               	addlw	48
  2740  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2741  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2742  00B8  00C6               	movwf	??_RTC_display+2
  2743  00B9  0846               	movf	??_RTC_display+2,w
  2744  00BA  00BA               	movwf	RTC_display@Time+9
  2745                           
  2746                           ;main_prueba3_mini2.c: 181:     Time[10] = minute % 10 + '0';
  2747  00BB  300A               	movlw	10
  2748  00BC  00F3               	movwf	___awmod@divisor
  2749  00BD  3000               	movlw	0
  2750  00BE  00F4               	movwf	___awmod@divisor+1
  2751  00BF  0879               	movf	_minute,w
  2752  00C0  00C4               	movwf	??_RTC_display
  2753  00C1  01C5               	clrf	??_RTC_display+1
  2754  00C2  0844               	movf	??_RTC_display,w
  2755  00C3  00F5               	movwf	___awmod@dividend
  2756  00C4  0845               	movf	??_RTC_display+1,w
  2757  00C5  00F6               	movwf	___awmod@dividend+1
  2758  00C6  120A  118A  2411  120A  118A  	fcall	___awmod
  2759  00CB  0873               	movf	?___awmod,w
  2760  00CC  3E30               	addlw	48
  2761  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2762  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2763  00CF  00C6               	movwf	??_RTC_display+2
  2764  00D0  0846               	movf	??_RTC_display+2,w
  2765  00D1  00BB               	movwf	RTC_display@Time+10
  2766                           
  2767                           ;main_prueba3_mini2.c: 182:     Time[12] = second / 10 + '0';
  2768  00D2  300A               	movlw	10
  2769  00D3  00F3               	movwf	___awdiv@divisor
  2770  00D4  3000               	movlw	0
  2771  00D5  00F4               	movwf	___awdiv@divisor+1
  2772  00D6  087A               	movf	_second,w
  2773  00D7  00C4               	movwf	??_RTC_display
  2774  00D8  01C5               	clrf	??_RTC_display+1
  2775  00D9  0844               	movf	??_RTC_display,w
  2776  00DA  00F5               	movwf	___awdiv@dividend
  2777  00DB  0845               	movf	??_RTC_display+1,w
  2778  00DC  00F6               	movwf	___awdiv@dividend+1
  2779  00DD  120A  118A  2340  120A  118A  	fcall	___awdiv
  2780  00E2  0873               	movf	?___awdiv,w
  2781  00E3  3E30               	addlw	48
  2782  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2783  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2784  00E6  00C6               	movwf	??_RTC_display+2
  2785  00E7  0846               	movf	??_RTC_display+2,w
  2786  00E8  00BD               	movwf	RTC_display@Time+12
  2787                           
  2788                           ;main_prueba3_mini2.c: 183:     Time[13] = second % 10 + '0';
  2789  00E9  300A               	movlw	10
  2790  00EA  00F3               	movwf	___awmod@divisor
  2791  00EB  3000               	movlw	0
  2792  00EC  00F4               	movwf	___awmod@divisor+1
  2793  00ED  087A               	movf	_second,w
  2794  00EE  00C4               	movwf	??_RTC_display
  2795  00EF  01C5               	clrf	??_RTC_display+1
  2796  00F0  0844               	movf	??_RTC_display,w
  2797  00F1  00F5               	movwf	___awmod@dividend
  2798  00F2  0845               	movf	??_RTC_display+1,w
  2799  00F3  00F6               	movwf	___awmod@dividend+1
  2800  00F4  120A  118A  2411  120A  118A  	fcall	___awmod
  2801  00F9  0873               	movf	?___awmod,w
  2802  00FA  3E30               	addlw	48
  2803  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2804  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2805  00FD  00C6               	movwf	??_RTC_display+2
  2806  00FE  0846               	movf	??_RTC_display+2,w
  2807  00FF  00BE               	movwf	RTC_display@Time+13
  2808                           
  2809                           ;main_prueba3_mini2.c: 185:     Date[6] = m_day / 10 + '0';
  2810  0100  300A               	movlw	10
  2811  0101  00F3               	movwf	___awdiv@divisor
  2812  0102  3000               	movlw	0
  2813  0103  00F4               	movwf	___awdiv@divisor+1
  2814  0104  0868               	movf	_m_day,w
  2815  0105  00C4               	movwf	??_RTC_display
  2816  0106  01C5               	clrf	??_RTC_display+1
  2817  0107  0844               	movf	??_RTC_display,w
  2818  0108  00F5               	movwf	___awdiv@dividend
  2819  0109  0845               	movf	??_RTC_display+1,w
  2820  010A  00F6               	movwf	___awdiv@dividend+1
  2821  010B  120A  118A  2340  120A  118A  	fcall	___awdiv
  2822  0110  0873               	movf	?___awdiv,w
  2823  0111  3E30               	addlw	48
  2824  0112  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0113  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0114  00C6               	movwf	??_RTC_display+2
  2827  0115  0846               	movf	??_RTC_display+2,w
  2828  0116  00A6               	movwf	RTC_display@Date+6
  2829                           
  2830                           ;main_prueba3_mini2.c: 186:     Date[7] = m_day % 10 + '0';
  2831  0117  300A               	movlw	10
  2832  0118  00F3               	movwf	___awmod@divisor
  2833  0119  3000               	movlw	0
  2834  011A  00F4               	movwf	___awmod@divisor+1
  2835  011B  0868               	movf	_m_day,w
  2836  011C  00C4               	movwf	??_RTC_display
  2837  011D  01C5               	clrf	??_RTC_display+1
  2838  011E  0844               	movf	??_RTC_display,w
  2839  011F  00F5               	movwf	___awmod@dividend
  2840  0120  0845               	movf	??_RTC_display+1,w
  2841  0121  00F6               	movwf	___awmod@dividend+1
  2842  0122  120A  118A  2411  120A  118A  	fcall	___awmod
  2843  0127  0873               	movf	?___awmod,w
  2844  0128  3E30               	addlw	48
  2845  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2846  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2847  012B  00C6               	movwf	??_RTC_display+2
  2848  012C  0846               	movf	??_RTC_display+2,w
  2849  012D  00A7               	movwf	RTC_display@Date+7
  2850                           
  2851                           ;main_prueba3_mini2.c: 187:     Date[9] = month / 10 + '0';
  2852  012E  300A               	movlw	10
  2853  012F  00F3               	movwf	___awdiv@divisor
  2854  0130  3000               	movlw	0
  2855  0131  00F4               	movwf	___awdiv@divisor+1
  2856  0132  0867               	movf	_month,w
  2857  0133  00C4               	movwf	??_RTC_display
  2858  0134  01C5               	clrf	??_RTC_display+1
  2859  0135  0844               	movf	??_RTC_display,w
  2860  0136  00F5               	movwf	___awdiv@dividend
  2861  0137  0845               	movf	??_RTC_display+1,w
  2862  0138  00F6               	movwf	___awdiv@dividend+1
  2863  0139  120A  118A  2340  120A  118A  	fcall	___awdiv
  2864  013E  0873               	movf	?___awdiv,w
  2865  013F  3E30               	addlw	48
  2866  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0141  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0142  00C6               	movwf	??_RTC_display+2
  2869  0143  0846               	movf	??_RTC_display+2,w
  2870  0144  00A9               	movwf	RTC_display@Date+9
  2871                           
  2872                           ;main_prueba3_mini2.c: 188:     Date[10] = month % 10 + '0';
  2873  0145  300A               	movlw	10
  2874  0146  00F3               	movwf	___awmod@divisor
  2875  0147  3000               	movlw	0
  2876  0148  00F4               	movwf	___awmod@divisor+1
  2877  0149  0867               	movf	_month,w
  2878  014A  00C4               	movwf	??_RTC_display
  2879  014B  01C5               	clrf	??_RTC_display+1
  2880  014C  0844               	movf	??_RTC_display,w
  2881  014D  00F5               	movwf	___awmod@dividend
  2882  014E  0845               	movf	??_RTC_display+1,w
  2883  014F  00F6               	movwf	___awmod@dividend+1
  2884  0150  120A  118A  2411  120A  118A  	fcall	___awmod
  2885  0155  0873               	movf	?___awmod,w
  2886  0156  3E30               	addlw	48
  2887  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0159  00C6               	movwf	??_RTC_display+2
  2890  015A  0846               	movf	??_RTC_display+2,w
  2891  015B  00AA               	movwf	RTC_display@Date+10
  2892                           
  2893                           ;main_prueba3_mini2.c: 189:     Date[14] = year / 10 + '0';
  2894  015C  300A               	movlw	10
  2895  015D  00F3               	movwf	___awdiv@divisor
  2896  015E  3000               	movlw	0
  2897  015F  00F4               	movwf	___awdiv@divisor+1
  2898  0160  0866               	movf	_year,w
  2899  0161  00C4               	movwf	??_RTC_display
  2900  0162  01C5               	clrf	??_RTC_display+1
  2901  0163  0844               	movf	??_RTC_display,w
  2902  0164  00F5               	movwf	___awdiv@dividend
  2903  0165  0845               	movf	??_RTC_display+1,w
  2904  0166  00F6               	movwf	___awdiv@dividend+1
  2905  0167  120A  118A  2340  120A  118A  	fcall	___awdiv
  2906  016C  0873               	movf	?___awdiv,w
  2907  016D  3E30               	addlw	48
  2908  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2909  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0170  00C6               	movwf	??_RTC_display+2
  2911  0171  0846               	movf	??_RTC_display+2,w
  2912  0172  00AE               	movwf	RTC_display@Date+14
  2913                           
  2914                           ;main_prueba3_mini2.c: 190:     Date[15] = year % 10 + '0';
  2915  0173  300A               	movlw	10
  2916  0174  00F3               	movwf	___awmod@divisor
  2917  0175  3000               	movlw	0
  2918  0176  00F4               	movwf	___awmod@divisor+1
  2919  0177  0866               	movf	_year,w
  2920  0178  00C4               	movwf	??_RTC_display
  2921  0179  01C5               	clrf	??_RTC_display+1
  2922  017A  0844               	movf	??_RTC_display,w
  2923  017B  00F5               	movwf	___awmod@dividend
  2924  017C  0845               	movf	??_RTC_display+1,w
  2925  017D  00F6               	movwf	___awmod@dividend+1
  2926  017E  120A  118A  2411  120A  118A  	fcall	___awmod
  2927  0183  0873               	movf	?___awmod,w
  2928  0184  3E30               	addlw	48
  2929  0185  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0186  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0187  00C6               	movwf	??_RTC_display+2
  2932  0188  0846               	movf	??_RTC_display+2,w
  2933  0189  00AF               	movwf	RTC_display@Date+15
  2934  018A                     l123:
  2935  018A  0008               	return
  2936  018B                     __end_of_RTC_display:
  2937                           
  2938                           	psect	text12
  2939  06BF                     __ptext12:	
  2940 ;; *************** function _bcd_to_decimal *****************
  2941 ;; Defined at:
  2942 ;;		line 155 in file "main_prueba3_mini2.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  number          1    wreg     unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  number          1    7[COMMON] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         1       0       0       0       0
  2958 ;;      Temps:          0       3       0       0       0
  2959 ;;      Totals:         1       3       0       0       0
  2960 ;;Total ram usage:        4 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    2
  2963 ;; This function calls:
  2964 ;;		___bmul
  2965 ;; This function is called by:
  2966 ;;		_RTC_display
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _bcd_to_decimal
  2972  06BF                     _bcd_to_decimal:
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2976                           ;bcd_to_decimal@number stored from wreg
  2977  06BF  00F7               	movwf	bcd_to_decimal@number
  2978  06C0                     l1886:
  2979                           
  2980                           ;main_prueba3_mini2.c: 156:   return((number >> 4) * 10 + (number & 0x0F));
  2981  06C0  300F               	movlw	15
  2982  06C1  0577               	andwf	bcd_to_decimal@number,w
  2983  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2984  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2985  06C4  00C0               	movwf	??_bcd_to_decimal
  2986  06C5  300A               	movlw	10
  2987  06C6  00C1               	movwf	??_bcd_to_decimal+1
  2988  06C7  0841               	movf	??_bcd_to_decimal+1,w
  2989  06C8  00F3               	movwf	___bmul@multiplicand
  2990  06C9  0877               	movf	bcd_to_decimal@number,w
  2991  06CA  00C2               	movwf	??_bcd_to_decimal+2
  2992  06CB  3004               	movlw	4
  2993  06CC                     u1455:
  2994  06CC  1003               	clrc
  2995  06CD  0CC2               	rrf	??_bcd_to_decimal+2,f
  2996  06CE  3EFF               	addlw	-1
  2997  06CF  1D03               	skipz
  2998  06D0  2ECC               	goto	u1455
  2999  06D1  0842               	movf	??_bcd_to_decimal+2,w
  3000  06D2  120A  118A  270B  120A  118A  	fcall	___bmul
  3001  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3002  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3003  06D9  0740               	addwf	??_bcd_to_decimal,w
  3004  06DA                     l113:
  3005  06DA  0008               	return
  3006  06DB                     __end_of_bcd_to_decimal:
  3007                           
  3008                           	psect	text13
  3009  070B                     __ptext13:	
  3010 ;; *************** function ___bmul *****************
  3011 ;; Defined at:
  3012 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  multiplier      1    wreg     unsigned char 
  3015 ;;  multiplicand    1    3[COMMON] unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  multiplier      1    6[COMMON] unsigned char 
  3018 ;;  product         1    5[COMMON] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      unsigned char 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3028 ;;      Params:         1       0       0       0       0
  3029 ;;      Locals:         2       0       0       0       0
  3030 ;;      Temps:          1       0       0       0       0
  3031 ;;      Totals:         4       0       0       0       0
  3032 ;;Total ram usage:        4 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_bcd_to_decimal
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function ___bmul
  3044  070B                     ___bmul:
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3048                           ;___bmul@multiplier stored from wreg
  3049  070B  00F6               	movwf	___bmul@multiplier
  3050  070C                     l1318:
  3051  070C  01F5               	clrf	___bmul@product
  3052  070D                     l1320:
  3053  070D  1C76               	btfss	___bmul@multiplier,0
  3054  070E  2F10               	goto	u601
  3055  070F  2F11               	goto	u600
  3056  0710                     u601:
  3057  0710  2F15               	goto	l1324
  3058  0711                     u600:
  3059  0711                     l1322:
  3060  0711  0873               	movf	___bmul@multiplicand,w
  3061  0712  00F4               	movwf	??___bmul
  3062  0713  0874               	movf	??___bmul,w
  3063  0714  07F5               	addwf	___bmul@product,f
  3064  0715                     l1324:
  3065  0715  1003               	clrc
  3066  0716  0DF3               	rlf	___bmul@multiplicand,f
  3067  0717                     l1326:
  3068  0717  1003               	clrc
  3069  0718  0CF6               	rrf	___bmul@multiplier,f
  3070  0719  0876               	movf	___bmul@multiplier,w
  3071  071A  1D03               	btfss	3,2
  3072  071B  2F1D               	goto	u611
  3073  071C  2F1E               	goto	u610
  3074  071D                     u611:
  3075  071D  2F0D               	goto	l1320
  3076  071E                     u610:
  3077  071E                     l1328:
  3078  071E  0875               	movf	___bmul@product,w
  3079  071F                     l364:
  3080  071F  0008               	return
  3081  0720                     __end_of___bmul:
  3082                           
  3083                           	psect	text14
  3084  0411                     __ptext14:	
  3085 ;; *************** function ___awmod *****************
  3086 ;; Defined at:
  3087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  divisor         2    3[COMMON] int 
  3090 ;;  dividend        2    5[COMMON] int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  sign            1    1[BANK0 ] unsigned char 
  3093 ;;  counter         1    0[BANK0 ] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2    3[COMMON] int 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         4       0       0       0       0
  3104 ;;      Locals:         0       2       0       0       0
  3105 ;;      Temps:          1       0       0       0       0
  3106 ;;      Totals:         5       2       0       0       0
  3107 ;;Total ram usage:        7 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_RTC_display
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function ___awmod
  3119  0411                     ___awmod:
  3120  0411                     l1906:	
  3121                           ;incstack = 0
  3122                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3123                           
  3124  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0413  01C1               	clrf	___awmod@sign
  3127  0414                     l1908:
  3128  0414  1FF6               	btfss	___awmod@dividend+1,7
  3129  0415  2C17               	goto	u1491
  3130  0416  2C18               	goto	u1490
  3131  0417                     u1491:
  3132  0417  2C1F               	goto	l1914
  3133  0418                     u1490:
  3134  0418                     l1910:
  3135  0418  09F5               	comf	___awmod@dividend,f
  3136  0419  09F6               	comf	___awmod@dividend+1,f
  3137  041A  0AF5               	incf	___awmod@dividend,f
  3138  041B  1903               	skipnz
  3139  041C  0AF6               	incf	___awmod@dividend+1,f
  3140  041D                     l1912:
  3141  041D  01C1               	clrf	___awmod@sign
  3142  041E  0AC1               	incf	___awmod@sign,f
  3143  041F                     l1914:
  3144  041F  1FF4               	btfss	___awmod@divisor+1,7
  3145  0420  2C22               	goto	u1501
  3146  0421  2C23               	goto	u1500
  3147  0422                     u1501:
  3148  0422  2C28               	goto	l1918
  3149  0423                     u1500:
  3150  0423                     l1916:
  3151  0423  09F3               	comf	___awmod@divisor,f
  3152  0424  09F4               	comf	___awmod@divisor+1,f
  3153  0425  0AF3               	incf	___awmod@divisor,f
  3154  0426  1903               	skipnz
  3155  0427  0AF4               	incf	___awmod@divisor+1,f
  3156  0428                     l1918:
  3157  0428  0873               	movf	___awmod@divisor,w
  3158  0429  0474               	iorwf	___awmod@divisor+1,w
  3159  042A  1903               	btfsc	3,2
  3160  042B  2C2D               	goto	u1511
  3161  042C  2C2E               	goto	u1510
  3162  042D                     u1511:
  3163  042D  2C5D               	goto	l1936
  3164  042E                     u1510:
  3165  042E                     l1920:
  3166  042E  01C0               	clrf	___awmod@counter
  3167  042F  0AC0               	incf	___awmod@counter,f
  3168  0430  2C3C               	goto	l1926
  3169  0431                     l1922:
  3170  0431  3001               	movlw	1
  3171  0432                     u1525:
  3172  0432  1003               	clrc
  3173  0433  0DF3               	rlf	___awmod@divisor,f
  3174  0434  0DF4               	rlf	___awmod@divisor+1,f
  3175  0435  3EFF               	addlw	-1
  3176  0436  1D03               	skipz
  3177  0437  2C32               	goto	u1525
  3178  0438                     l1924:
  3179  0438  3001               	movlw	1
  3180  0439  00F7               	movwf	??___awmod
  3181  043A  0877               	movf	??___awmod,w
  3182  043B  07C0               	addwf	___awmod@counter,f
  3183  043C                     l1926:
  3184  043C  1FF4               	btfss	___awmod@divisor+1,7
  3185  043D  2C3F               	goto	u1531
  3186  043E  2C40               	goto	u1530
  3187  043F                     u1531:
  3188  043F  2C31               	goto	l1922
  3189  0440                     u1530:
  3190  0440                     l1928:
  3191  0440  0874               	movf	___awmod@divisor+1,w
  3192  0441  0276               	subwf	___awmod@dividend+1,w
  3193  0442  1D03               	skipz
  3194  0443  2C46               	goto	u1545
  3195  0444  0873               	movf	___awmod@divisor,w
  3196  0445  0275               	subwf	___awmod@dividend,w
  3197  0446                     u1545:
  3198  0446  1C03               	skipc
  3199  0447  2C49               	goto	u1541
  3200  0448  2C4A               	goto	u1540
  3201  0449                     u1541:
  3202  0449  2C50               	goto	l1932
  3203  044A                     u1540:
  3204  044A                     l1930:
  3205  044A  0873               	movf	___awmod@divisor,w
  3206  044B  02F5               	subwf	___awmod@dividend,f
  3207  044C  0874               	movf	___awmod@divisor+1,w
  3208  044D  1C03               	skipc
  3209  044E  03F6               	decf	___awmod@dividend+1,f
  3210  044F  02F6               	subwf	___awmod@dividend+1,f
  3211  0450                     l1932:
  3212  0450  3001               	movlw	1
  3213  0451                     u1555:
  3214  0451  1003               	clrc
  3215  0452  0CF4               	rrf	___awmod@divisor+1,f
  3216  0453  0CF3               	rrf	___awmod@divisor,f
  3217  0454  3EFF               	addlw	-1
  3218  0455  1D03               	skipz
  3219  0456  2C51               	goto	u1555
  3220  0457                     l1934:
  3221  0457  3001               	movlw	1
  3222  0458  02C0               	subwf	___awmod@counter,f
  3223  0459  1D03               	btfss	3,2
  3224  045A  2C5C               	goto	u1561
  3225  045B  2C5D               	goto	u1560
  3226  045C                     u1561:
  3227  045C  2C40               	goto	l1928
  3228  045D                     u1560:
  3229  045D                     l1936:
  3230  045D  0841               	movf	___awmod@sign,w
  3231  045E  1903               	btfsc	3,2
  3232  045F  2C61               	goto	u1571
  3233  0460  2C62               	goto	u1570
  3234  0461                     u1571:
  3235  0461  2C67               	goto	l1940
  3236  0462                     u1570:
  3237  0462                     l1938:
  3238  0462  09F5               	comf	___awmod@dividend,f
  3239  0463  09F6               	comf	___awmod@dividend+1,f
  3240  0464  0AF5               	incf	___awmod@dividend,f
  3241  0465  1903               	skipnz
  3242  0466  0AF6               	incf	___awmod@dividend+1,f
  3243  0467                     l1940:
  3244  0467  0876               	movf	___awmod@dividend+1,w
  3245  0468  00F4               	movwf	?___awmod+1
  3246  0469  0875               	movf	___awmod@dividend,w
  3247  046A  00F3               	movwf	?___awmod
  3248  046B                     l504:
  3249  046B  0008               	return
  3250  046C                     __end_of___awmod:
  3251                           
  3252                           	psect	text15
  3253  0340                     __ptext15:	
  3254 ;; *************** function ___awdiv *****************
  3255 ;; Defined at:
  3256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  divisor         2    3[COMMON] int 
  3259 ;;  dividend        2    5[COMMON] int 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  quotient        2    2[BANK0 ] int 
  3262 ;;  sign            1    1[BANK0 ] unsigned char 
  3263 ;;  counter         1    0[BANK0 ] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2    3[COMMON] int 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         4       0       0       0       0
  3274 ;;      Locals:         0       4       0       0       0
  3275 ;;      Temps:          1       0       0       0       0
  3276 ;;      Totals:         5       4       0       0       0
  3277 ;;Total ram usage:        9 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_RTC_display
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function ___awdiv
  3289  0340                     ___awdiv:
  3290  0340                     l1506:	
  3291                           ;incstack = 0
  3292                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3293                           
  3294  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0342  01C1               	clrf	___awdiv@sign
  3297  0343                     l1508:
  3298  0343  1FF4               	btfss	___awdiv@divisor+1,7
  3299  0344  2B46               	goto	u981
  3300  0345  2B47               	goto	u980
  3301  0346                     u981:
  3302  0346  2B4E               	goto	l1514
  3303  0347                     u980:
  3304  0347                     l1510:
  3305  0347  09F3               	comf	___awdiv@divisor,f
  3306  0348  09F4               	comf	___awdiv@divisor+1,f
  3307  0349  0AF3               	incf	___awdiv@divisor,f
  3308  034A  1903               	skipnz
  3309  034B  0AF4               	incf	___awdiv@divisor+1,f
  3310  034C                     l1512:
  3311  034C  01C1               	clrf	___awdiv@sign
  3312  034D  0AC1               	incf	___awdiv@sign,f
  3313  034E                     l1514:
  3314  034E  1FF6               	btfss	___awdiv@dividend+1,7
  3315  034F  2B51               	goto	u991
  3316  0350  2B52               	goto	u990
  3317  0351                     u991:
  3318  0351  2B5B               	goto	l1520
  3319  0352                     u990:
  3320  0352                     l1516:
  3321  0352  09F5               	comf	___awdiv@dividend,f
  3322  0353  09F6               	comf	___awdiv@dividend+1,f
  3323  0354  0AF5               	incf	___awdiv@dividend,f
  3324  0355  1903               	skipnz
  3325  0356  0AF6               	incf	___awdiv@dividend+1,f
  3326  0357                     l1518:
  3327  0357  3001               	movlw	1
  3328  0358  00F7               	movwf	??___awdiv
  3329  0359  0877               	movf	??___awdiv,w
  3330  035A  06C1               	xorwf	___awdiv@sign,f
  3331  035B                     l1520:
  3332  035B  01C2               	clrf	___awdiv@quotient
  3333  035C  01C3               	clrf	___awdiv@quotient+1
  3334  035D                     l1522:
  3335  035D  0873               	movf	___awdiv@divisor,w
  3336  035E  0474               	iorwf	___awdiv@divisor+1,w
  3337  035F  1903               	btfsc	3,2
  3338  0360  2B62               	goto	u1001
  3339  0361  2B63               	goto	u1000
  3340  0362                     u1001:
  3341  0362  2B9A               	goto	l1542
  3342  0363                     u1000:
  3343  0363                     l1524:
  3344  0363  01C0               	clrf	___awdiv@counter
  3345  0364  0AC0               	incf	___awdiv@counter,f
  3346  0365  2B71               	goto	l1530
  3347  0366                     l1526:
  3348  0366  3001               	movlw	1
  3349  0367                     u1015:
  3350  0367  1003               	clrc
  3351  0368  0DF3               	rlf	___awdiv@divisor,f
  3352  0369  0DF4               	rlf	___awdiv@divisor+1,f
  3353  036A  3EFF               	addlw	-1
  3354  036B  1D03               	skipz
  3355  036C  2B67               	goto	u1015
  3356  036D                     l1528:
  3357  036D  3001               	movlw	1
  3358  036E  00F7               	movwf	??___awdiv
  3359  036F  0877               	movf	??___awdiv,w
  3360  0370  07C0               	addwf	___awdiv@counter,f
  3361  0371                     l1530:
  3362  0371  1FF4               	btfss	___awdiv@divisor+1,7
  3363  0372  2B74               	goto	u1021
  3364  0373  2B75               	goto	u1020
  3365  0374                     u1021:
  3366  0374  2B66               	goto	l1526
  3367  0375                     u1020:
  3368  0375                     l1532:
  3369  0375  3001               	movlw	1
  3370  0376                     u1035:
  3371  0376  1003               	clrc
  3372  0377  0DC2               	rlf	___awdiv@quotient,f
  3373  0378  0DC3               	rlf	___awdiv@quotient+1,f
  3374  0379  3EFF               	addlw	-1
  3375  037A  1D03               	skipz
  3376  037B  2B76               	goto	u1035
  3377  037C  0874               	movf	___awdiv@divisor+1,w
  3378  037D  0276               	subwf	___awdiv@dividend+1,w
  3379  037E  1D03               	skipz
  3380  037F  2B82               	goto	u1045
  3381  0380  0873               	movf	___awdiv@divisor,w
  3382  0381  0275               	subwf	___awdiv@dividend,w
  3383  0382                     u1045:
  3384  0382  1C03               	skipc
  3385  0383  2B85               	goto	u1041
  3386  0384  2B86               	goto	u1040
  3387  0385                     u1041:
  3388  0385  2B8D               	goto	l1538
  3389  0386                     u1040:
  3390  0386                     l1534:
  3391  0386  0873               	movf	___awdiv@divisor,w
  3392  0387  02F5               	subwf	___awdiv@dividend,f
  3393  0388  0874               	movf	___awdiv@divisor+1,w
  3394  0389  1C03               	skipc
  3395  038A  03F6               	decf	___awdiv@dividend+1,f
  3396  038B  02F6               	subwf	___awdiv@dividend+1,f
  3397  038C                     l1536:
  3398  038C  1442               	bsf	___awdiv@quotient,0
  3399  038D                     l1538:
  3400  038D  3001               	movlw	1
  3401  038E                     u1055:
  3402  038E  1003               	clrc
  3403  038F  0CF4               	rrf	___awdiv@divisor+1,f
  3404  0390  0CF3               	rrf	___awdiv@divisor,f
  3405  0391  3EFF               	addlw	-1
  3406  0392  1D03               	skipz
  3407  0393  2B8E               	goto	u1055
  3408  0394                     l1540:
  3409  0394  3001               	movlw	1
  3410  0395  02C0               	subwf	___awdiv@counter,f
  3411  0396  1D03               	btfss	3,2
  3412  0397  2B99               	goto	u1061
  3413  0398  2B9A               	goto	u1060
  3414  0399                     u1061:
  3415  0399  2B75               	goto	l1532
  3416  039A                     u1060:
  3417  039A                     l1542:
  3418  039A  0841               	movf	___awdiv@sign,w
  3419  039B  1903               	btfsc	3,2
  3420  039C  2B9E               	goto	u1071
  3421  039D  2B9F               	goto	u1070
  3422  039E                     u1071:
  3423  039E  2BA4               	goto	l1546
  3424  039F                     u1070:
  3425  039F                     l1544:
  3426  039F  09C2               	comf	___awdiv@quotient,f
  3427  03A0  09C3               	comf	___awdiv@quotient+1,f
  3428  03A1  0AC2               	incf	___awdiv@quotient,f
  3429  03A2  1903               	skipnz
  3430  03A3  0AC3               	incf	___awdiv@quotient+1,f
  3431  03A4                     l1546:
  3432  03A4  0843               	movf	___awdiv@quotient+1,w
  3433  03A5  00F4               	movwf	?___awdiv+1
  3434  03A6  0842               	movf	___awdiv@quotient,w
  3435  03A7  00F3               	movwf	?___awdiv
  3436  03A8                     l491:
  3437  03A8  0008               	return
  3438  03A9                     __end_of___awdiv:
  3439                           
  3440                           	psect	text16
  3441  046C                     __ptext16:	
  3442 ;; *************** function _Lcd_Init *****************
  3443 ;; Defined at:
  3444 ;;		line 15 in file "LCD.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0, pclath, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3458 ;;      Params:         0       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0
  3460 ;;      Temps:          0       2       0       0       0
  3461 ;;      Totals:         0       2       0       0       0
  3462 ;;Total ram usage:        2 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    3
  3465 ;; This function calls:
  3466 ;;		_Lcd_Cmd
  3467 ;;		_Lcd_Port
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _Lcd_Init
  3475  046C                     _Lcd_Init:
  3476  046C                     l1952:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3479                           
  3480                           
  3481                           ;LCD.c: 16:   Lcd_Port(0x00);
  3482  046C  3000               	movlw	0
  3483  046D  120A  118A  278C  120A  118A  	fcall	_Lcd_Port
  3484  0472                     l1954:
  3485                           
  3486                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3487  0472  3034               	movlw	52
  3488  0473  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0474  1303               	bcf	3,6	;RP1=0, select bank0
  3490  0475  00C1               	movwf	??_Lcd_Init+1
  3491  0476  30F1               	movlw	241
  3492  0477  00C0               	movwf	??_Lcd_Init
  3493  0478                     u1617:
  3494  0478  0BC0               	decfsz	??_Lcd_Init,f
  3495  0479  2C78               	goto	u1617
  3496  047A  0BC1               	decfsz	??_Lcd_Init+1,f
  3497  047B  2C78               	goto	u1617
  3498  047C                     l1956:
  3499                           
  3500                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  3501  047C  3030               	movlw	48
  3502  047D  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3503                           
  3504                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3505  0482  300D               	movlw	13
  3506  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0485  00C1               	movwf	??_Lcd_Init+1
  3509  0486  30FB               	movlw	251
  3510  0487  00C0               	movwf	??_Lcd_Init
  3511  0488                     u1627:
  3512  0488  0BC0               	decfsz	??_Lcd_Init,f
  3513  0489  2C88               	goto	u1627
  3514  048A  0BC1               	decfsz	??_Lcd_Init+1,f
  3515  048B  2C88               	goto	u1627
  3516  048C                     l1958:
  3517                           
  3518                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  3519  048C  3030               	movlw	48
  3520  048D  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3521  0492                     l1960:
  3522                           
  3523                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3524  0492  301D               	movlw	29
  3525  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0495  00C1               	movwf	??_Lcd_Init+1
  3528  0496  3090               	movlw	144
  3529  0497  00C0               	movwf	??_Lcd_Init
  3530  0498                     u1637:
  3531  0498  0BC0               	decfsz	??_Lcd_Init,f
  3532  0499  2C98               	goto	u1637
  3533  049A  0BC1               	decfsz	??_Lcd_Init+1,f
  3534  049B  2C98               	goto	u1637
  3535  049C  0000               	nop
  3536                           
  3537                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  3538  049D  3030               	movlw	48
  3539  049E  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3540                           
  3541                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  3542  04A3  3038               	movlw	56
  3543  04A4  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3544                           
  3545                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  3546  04A9  300C               	movlw	12
  3547  04AA  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3548                           
  3549                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  3550  04AF  3001               	movlw	1
  3551  04B0  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3552                           
  3553                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  3554  04B5  3006               	movlw	6
  3555  04B6  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3556  04BB                     l194:
  3557  04BB  0008               	return
  3558  04BC                     __end_of_Lcd_Init:
  3559                           
  3560                           	psect	text17
  3561  0745                     __ptext17:	
  3562 ;; *************** function _Lcd_Clear *****************
  3563 ;; Defined at:
  3564 ;;		line 43 in file "LCD.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    3
  3585 ;; This function calls:
  3586 ;;		_Lcd_Cmd
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _Lcd_Clear
  3594  0745                     _Lcd_Clear:
  3595  0745                     l1962:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3598                           
  3599                           
  3600                           ;LCD.c: 44:  Lcd_Cmd(0);
  3601  0745  3000               	movlw	0
  3602  0746  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3603                           
  3604                           ;LCD.c: 45:  Lcd_Cmd(1);
  3605  074B  3001               	movlw	1
  3606  074C  120A  118A  26DB  120A  118A  	fcall	_Lcd_Cmd
  3607  0751                     l203:
  3608  0751  0008               	return
  3609  0752                     __end_of_Lcd_Clear:
  3610                           
  3611                           	psect	text18
  3612  06DB                     __ptext18:	
  3613 ;; *************** function _Lcd_Cmd *****************
  3614 ;; Defined at:
  3615 ;;		line 34 in file "LCD.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  a               1    wreg     unsigned char 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  a               1    6[COMMON] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         0       0       0       0       0
  3630 ;;      Locals:         1       0       0       0       0
  3631 ;;      Temps:          2       0       0       0       0
  3632 ;;      Totals:         3       0       0       0       0
  3633 ;;Total ram usage:        3 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    2
  3636 ;; This function calls:
  3637 ;;		_Lcd_Port
  3638 ;; This function is called by:
  3639 ;;		_Lcd_Init
  3640 ;;		_Lcd_Clear
  3641 ;;		_Lcd_Set_Cursor
  3642 ;;		_Lcd_Shift_Right
  3643 ;;		_Lcd_Shift_Left
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           
  3648                           ;psect for function _Lcd_Cmd
  3649  06DB                     _Lcd_Cmd:
  3650                           
  3651                           ;incstack = 0
  3652                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3653                           ;Lcd_Cmd@a stored from wreg
  3654  06DB  00F6               	movwf	Lcd_Cmd@a
  3655  06DC                     l1734:
  3656                           
  3657                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  3658  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  3659  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  3660  06DE  1009               	bcf	9,0	;volatile
  3661  06DF                     l1736:
  3662                           
  3663                           ;LCD.c: 36:  Lcd_Port(a);
  3664  06DF  0876               	movf	Lcd_Cmd@a,w
  3665  06E0  120A  118A  278C  120A  118A  	fcall	_Lcd_Port
  3666  06E5                     l1738:
  3667                           
  3668                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  3669  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3670  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  3671  06E7  1509               	bsf	9,2	;volatile
  3672  06E8                     l1740:
  3673                           
  3674                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3675  06E8  300B               	movlw	11
  3676  06E9  00F5               	movwf	??_Lcd_Cmd+1
  3677  06EA  3062               	movlw	98
  3678  06EB  00F4               	movwf	??_Lcd_Cmd
  3679  06EC                     u1647:
  3680  06EC  0BF4               	decfsz	??_Lcd_Cmd,f
  3681  06ED  2EEC               	goto	u1647
  3682  06EE  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3683  06EF  2EEC               	goto	u1647
  3684  06F0  0000               	nop
  3685  06F1                     l1742:
  3686                           
  3687                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  3688  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3689  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  3690  06F3  1109               	bcf	9,2	;volatile
  3691  06F4                     l200:
  3692  06F4  0008               	return
  3693  06F5                     __end_of_Lcd_Cmd:
  3694                           
  3695                           	psect	text19
  3696  078C                     __ptext19:	
  3697 ;; *************** function _Lcd_Port *****************
  3698 ;; Defined at:
  3699 ;;		line 30 in file "LCD.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  a               1    wreg     unsigned char 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  a               1    3[COMMON] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         0       0       0       0       0
  3714 ;;      Locals:         1       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0
  3716 ;;      Totals:         1       0       0       0       0
  3717 ;;Total ram usage:        1 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_Lcd_Init
  3724 ;;		_Lcd_Cmd
  3725 ;;		_Lcd_Write_Char
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _Lcd_Port
  3731  078C                     _Lcd_Port:
  3732                           
  3733                           ;incstack = 0
  3734                           ; Regs used in _Lcd_Port: [wreg]
  3735                           ;Lcd_Port@a stored from wreg
  3736  078C  00F3               	movwf	Lcd_Port@a
  3737  078D                     l1732:
  3738                           
  3739                           ;LCD.c: 31:     PORTD = a;
  3740  078D  0873               	movf	Lcd_Port@a,w
  3741  078E  1283               	bcf	3,5	;RP0=0, select bank0
  3742  078F  1303               	bcf	3,6	;RP1=0, select bank0
  3743  0790  0088               	movwf	8	;volatile
  3744  0791                     l197:
  3745  0791  0008               	return
  3746  0792                     __end_of_Lcd_Port:
  3747                           
  3748                           	psect	text20
  3749  075F                     __ptext20:	
  3750 ;; *************** function _I2C_Master_Write *****************
  3751 ;; Defined at:
  3752 ;;		line 84 in file "I2C.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  d               2    3[COMMON] unsigned int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3766 ;;      Params:         2       0       0       0       0
  3767 ;;      Locals:         0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0
  3769 ;;      Totals:         2       0       0       0       0
  3770 ;;Total ram usage:        2 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    2
  3773 ;; This function calls:
  3774 ;;		_I2C_Master_Wait
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _I2C_Master_Write
  3782  075F                     _I2C_Master_Write:
  3783  075F                     l1968:	
  3784                           ;incstack = 0
  3785                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3786                           
  3787                           
  3788                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  3789  075F  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Wait
  3790  0764                     l1970:
  3791                           
  3792                           ;I2C.c: 87:     SSPBUF = d;
  3793  0764  0873               	movf	I2C_Master_Write@d,w
  3794  0765  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0766  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0767  0093               	movwf	19	;volatile
  3797  0768                     l173:
  3798  0768  0008               	return
  3799  0769                     __end_of_I2C_Master_Write:
  3800                           
  3801                           	psect	text21
  3802  0769                     __ptext21:	
  3803 ;; *************** function _I2C_Master_Stop *****************
  3804 ;; Defined at:
  3805 ;;		line 73 in file "I2C.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0, pclath, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3819 ;;      Params:         0       0       0       0       0
  3820 ;;      Locals:         0       0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0
  3822 ;;      Totals:         0       0       0       0       0
  3823 ;;Total ram usage:        0 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    2
  3826 ;; This function calls:
  3827 ;;		_I2C_Master_Wait
  3828 ;; This function is called by:
  3829 ;;		_main
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           
  3834                           ;psect for function _I2C_Master_Stop
  3835  0769                     _I2C_Master_Stop:
  3836  0769                     l1992:	
  3837                           ;incstack = 0
  3838                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3839                           
  3840                           
  3841                           ;I2C.c: 75:     I2C_Master_Wait();
  3842  0769  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Wait
  3843  076E                     l1994:
  3844                           
  3845                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  3846  076E  1683               	bsf	3,5	;RP0=1, select bank1
  3847  076F  1303               	bcf	3,6	;RP1=0, select bank1
  3848  0770  1511               	bsf	17,2	;volatile
  3849  0771                     l170:
  3850  0771  0008               	return
  3851  0772                     __end_of_I2C_Master_Stop:
  3852                           
  3853                           	psect	text22
  3854  0772                     __ptext22:	
  3855 ;; *************** function _I2C_Master_Start *****************
  3856 ;; Defined at:
  3857 ;;		line 56 in file "I2C.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    2
  3878 ;; This function calls:
  3879 ;;		_I2C_Master_Wait
  3880 ;; This function is called by:
  3881 ;;		_main
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _I2C_Master_Start
  3887  0772                     _I2C_Master_Start:
  3888  0772                     l1964:	
  3889                           ;incstack = 0
  3890                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3891                           
  3892                           
  3893                           ;I2C.c: 57:     I2C_Master_Wait();
  3894  0772  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Wait
  3895  0777                     l1966:
  3896                           
  3897                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  3898  0777  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0778  1303               	bcf	3,6	;RP1=0, select bank1
  3900  0779  1411               	bsf	17,0	;volatile
  3901  077A                     l164:
  3902  077A  0008               	return
  3903  077B                     __end_of_I2C_Master_Start:
  3904                           
  3905                           	psect	text23
  3906  077B                     __ptext23:	
  3907 ;; *************** function _I2C_Master_RepeatedStart *****************
  3908 ;; Defined at:
  3909 ;;		line 64 in file "I2C.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    2
  3930 ;; This function calls:
  3931 ;;		_I2C_Master_Wait
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _I2C_Master_RepeatedStart
  3939  077B                     _I2C_Master_RepeatedStart:
  3940  077B                     l1972:	
  3941                           ;incstack = 0
  3942                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3943                           
  3944                           
  3945                           ;I2C.c: 66:     I2C_Master_Wait();
  3946  077B  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Wait
  3947  0780                     l1974:
  3948                           
  3949                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3950  0780  1683               	bsf	3,5	;RP0=1, select bank1
  3951  0781  1303               	bcf	3,6	;RP1=0, select bank1
  3952  0782  1491               	bsf	17,1	;volatile
  3953  0783                     l167:
  3954  0783  0008               	return
  3955  0784                     __end_of_I2C_Master_RepeatedStart:
  3956                           
  3957                           	psect	text24
  3958  05BE                     __ptext24:	
  3959 ;; *************** function _I2C_Master_Read *****************
  3960 ;; Defined at:
  3961 ;;		line 94 in file "I2C.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  a               2    3[COMMON] unsigned short 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  temp            2    0[BANK0 ] unsigned short 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  2    3[COMMON] unsigned short 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, pclath, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         2       0       0       0       0
  3976 ;;      Locals:         0       2       0       0       0
  3977 ;;      Temps:          2       0       0       0       0
  3978 ;;      Totals:         4       2       0       0       0
  3979 ;;Total ram usage:        6 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    2
  3982 ;; This function calls:
  3983 ;;		_I2C_Master_Wait
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function _I2C_Master_Read
  3991  05BE                     _I2C_Master_Read:
  3992  05BE                     l1976:	
  3993                           ;incstack = 0
  3994                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3995                           
  3996                           
  3997                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3998  05BE  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Wait
  3999  05C3                     l1978:
  4000                           
  4001                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  4002  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  4003  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  4004  05C5  1591               	bsf	17,3	;volatile
  4005                           
  4006                           ;I2C.c: 99:     I2C_Master_Wait();
  4007  05C6  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Wait
  4008  05CB                     l1980:
  4009                           
  4010                           ;I2C.c: 100:     temp = SSPBUF;
  4011  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  4012  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  4013  05CD  0813               	movf	19,w	;volatile
  4014  05CE  00F5               	movwf	??_I2C_Master_Read
  4015  05CF  01F6               	clrf	??_I2C_Master_Read+1
  4016  05D0  0875               	movf	??_I2C_Master_Read,w
  4017  05D1  00C0               	movwf	I2C_Master_Read@temp
  4018  05D2  0876               	movf	??_I2C_Master_Read+1,w
  4019  05D3  00C1               	movwf	I2C_Master_Read@temp+1
  4020  05D4                     l1982:
  4021                           
  4022                           ;I2C.c: 101:     I2C_Master_Wait();
  4023  05D4  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Wait
  4024  05D9                     l1984:
  4025                           
  4026                           ;I2C.c: 102:     if(a == 1){
  4027  05D9  0373               	decf	I2C_Master_Read@a,w
  4028  05DA  0474               	iorwf	I2C_Master_Read@a+1,w
  4029  05DB  1D03               	btfss	3,2
  4030  05DC  2DDE               	goto	u1581
  4031  05DD  2DDF               	goto	u1580
  4032  05DE                     u1581:
  4033  05DE  2DE3               	goto	l176
  4034  05DF                     u1580:
  4035  05DF                     l1986:
  4036                           
  4037                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  4038  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  4039  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  4040  05E1  1291               	bcf	17,5	;volatile
  4041                           
  4042                           ;I2C.c: 104:     }else{
  4043  05E2  2DE6               	goto	l177
  4044  05E3                     l176:
  4045                           
  4046                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  4047  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  4048  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  4049  05E5  1691               	bsf	17,5	;volatile
  4050  05E6                     l177:	
  4051                           ;I2C.c: 106:     }
  4052                           
  4053                           
  4054                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  4055  05E6  1611               	bsf	17,4	;volatile
  4056  05E7                     l1988:
  4057                           
  4058                           ;I2C.c: 108:     return temp;
  4059  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  4060  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  4061  05E9  0841               	movf	I2C_Master_Read@temp+1,w
  4062  05EA  00F4               	movwf	?_I2C_Master_Read+1
  4063  05EB  0840               	movf	I2C_Master_Read@temp,w
  4064  05EC  00F3               	movwf	?_I2C_Master_Read
  4065  05ED                     l178:
  4066  05ED  0008               	return
  4067  05EE                     __end_of_I2C_Master_Read:
  4068                           
  4069                           	psect	text25
  4070  0752                     __ptext25:	
  4071 ;; *************** function _I2C_Master_Wait *****************
  4072 ;; Defined at:
  4073 ;;		line 48 in file "I2C.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_I2C_Master_Start
  4098 ;;		_I2C_Master_RepeatedStart
  4099 ;;		_I2C_Master_Stop
  4100 ;;		_I2C_Master_Write
  4101 ;;		_I2C_Master_Read
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           
  4106                           ;psect for function _I2C_Master_Wait
  4107  0752                     _I2C_Master_Wait:
  4108  0752                     l1902:	
  4109                           ;incstack = 0
  4110                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4111                           
  4112  0752                     l158:	
  4113                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4114                           
  4115  0752  1683               	bsf	3,5	;RP0=1, select bank1
  4116  0753  1303               	bcf	3,6	;RP1=0, select bank1
  4117  0754  1914               	btfsc	20,2	;volatile
  4118  0755  2F57               	goto	u1471
  4119  0756  2F58               	goto	u1470
  4120  0757                     u1471:
  4121  0757  2F52               	goto	l158
  4122  0758                     u1470:
  4123  0758                     l1904:
  4124  0758  0811               	movf	17,w	;volatile
  4125  0759  391F               	andlw	31
  4126  075A  1D03               	btfss	3,2
  4127  075B  2F5D               	goto	u1481
  4128  075C  2F5E               	goto	u1480
  4129  075D                     u1481:
  4130  075D  2F52               	goto	l158
  4131  075E                     u1480:
  4132  075E                     l161:
  4133  075E  0008               	return
  4134  075F                     __end_of_I2C_Master_Wait:
  4135                           
  4136                           	psect	text26
  4137  0733                     __ptext26:	
  4138 ;; *************** function _ISR *****************
  4139 ;; Defined at:
  4140 ;;		line 85 in file "main_prueba3_mini2.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4154 ;;      Params:         0       0       0       0       0
  4155 ;;      Locals:         0       0       0       0       0
  4156 ;;      Temps:          3       0       0       0       0
  4157 ;;      Totals:         3       0       0       0       0
  4158 ;;Total ram usage:        3 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		Interrupt level 1
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _ISR
  4169  0733                     _ISR:
  4170  0733                     i1l1650:
  4171                           
  4172                           ;main_prueba3_mini2.c: 86:     if(PIR1bits.RCIF == 1){
  4173  0733  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0734  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0735  1E8C               	btfss	12,5	;volatile
  4176  0736  2F38               	goto	u118_21
  4177  0737  2F39               	goto	u118_20
  4178  0738                     u118_21:
  4179  0738  2F3E               	goto	i1l99
  4180  0739                     u118_20:
  4181  0739                     i1l1652:
  4182                           
  4183                           ;main_prueba3_mini2.c: 87:         data_recive = RCREG;
  4184  0739  081A               	movf	26,w	;volatile
  4185  073A  00F0               	movwf	??_ISR
  4186  073B  0870               	movf	??_ISR,w
  4187  073C  00E4               	movwf	_data_recive
  4188  073D                     i1l1662:	
  4189                           ;main_prueba3_mini2.c: 88:         if (data_recive == 'P11'){
  4190                           
  4191                           
  4192                           ;main_prueba3_mini2.c: 100:         data_recive = 0;
  4193  073D  01E4               	clrf	_data_recive
  4194  073E                     i1l99:
  4195  073E  0872               	movf	??_ISR+2,w
  4196  073F  008A               	movwf	10
  4197  0740  0E71               	swapf	??_ISR+1,w
  4198  0741  0083               	movwf	3
  4199  0742  0EFE               	swapf	btemp,f
  4200  0743  0E7E               	swapf	btemp,w
  4201  0744  0009               	retfie
  4202  0745                     __end_of_ISR:
  4203  007E                     btemp	set	126	;btemp
  4204  007E                     wtemp0	set	126
  4205                           
  4206                           	psect	intentry
  4207  0004                     __pintentry:	
  4208                           ;incstack = 0
  4209                           ; Regs used in _ISR: [wreg+status,2]
  4210                           
  4211  0004                     interrupt_function:
  4212  007E                     saved_w	set	btemp
  4213  0004  00FE               	movwf	btemp
  4214  0005  0E03               	swapf	3,w
  4215  0006  00F1               	movwf	??_ISR+1
  4216  0007  080A               	movf	10,w
  4217  0008  00F2               	movwf	??_ISR+2
  4218  0009  120A  118A  2F33   	ljmp	_ISR
  4219                           
  4220                           	psect	config
  4221                           
  4222                           ;Config register CONFIG1 @ 0x2007
  4223                           ;	Oscillator Selection bits
  4224                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4225                           ;	Watchdog Timer Enable bit
  4226                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4227                           ;	Power-up Timer Enable bit
  4228                           ;	PWRTE = OFF, PWRT disabled
  4229                           ;	RE3/MCLR pin function select bit
  4230                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4231                           ;	Code Protection bit
  4232                           ;	CP = OFF, Program memory code protection is disabled
  4233                           ;	Data Code Protection bit
  4234                           ;	CPD = OFF, Data memory code protection is disabled
  4235                           ;	Brown Out Reset Selection bits
  4236                           ;	BOREN = OFF, BOR disabled
  4237                           ;	Internal External Switchover bit
  4238                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4239                           ;	Fail-Safe Clock Monitor Enabled bit
  4240                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4241                           ;	Low Voltage Programming Enable bit
  4242                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4243                           ;	In-Circuit Debugger Mode bit
  4244                           ;	DEBUG = 0x1, unprogrammed default
  4245  2007                     	org	8199
  4246  2007  20D4               	dw	8404
  4247                           
  4248                           ;Config register CONFIG2 @ 0x2008
  4249                           ;	Brown-out Reset Selection bit
  4250                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4251                           ;	Flash Program Memory Self Write Enable bits
  4252                           ;	WRT = OFF, Write protection off
  4253  2008                     	org	8200
  4254  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    10
    Data        32
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     28      74
    BANK1            80      0      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data_total(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data_total(BANK1[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Show_val_LCD->_Lcd_Set_Cursor
    _Show_val_LCD->_Lcd_Write_String
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Show_val_LCD
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Show_val_LCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RTC_display->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8080
                                             25 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _RTC_display
                       _Show_val_LCD
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Show_val_LCD                                         3     3      0    2360
                                             22 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1554
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     372
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    3221
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1338
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _RTC_display
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _Show_val_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      28       7       50.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7D      12        0.0%
ABS                  0      0      7D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 19:24:40 2021

                                _i 0069                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 0041  
                               fsr 0004                        _RTC_display 0034  
                              l110 0657                                l200 06F4  
                              l113 06DA                                l203 0751  
                              l123 018A                                l212 070A  
                              l126 069E                                l161 075E  
                              l209 067D                                l170 0771  
                              l218 0547                                l155 05BD  
                              l164 077A                                l173 0768  
                              l158 0752                                l334 0274  
                              l167 0783                                l176 05E3  
                              l504 046B                                l177 05E6  
                              l178 05ED                                l194 04BB  
                              l610 0501                                l364 071F  
                              l620 0583                                l197 0791  
                              l374 0410                                l491 03A8  
                              _GIE 005F                                u600 0711  
                              u601 0710                                u610 071E  
                              u611 071D                                _ISR 0733  
                              u810 057F                                u811 057E  
                              u805 0573                                u760 0550  
                              u761 054F                                u780 0562  
                              u781 0561                                u790 056C  
                              u791 056B                                u775 0554  
                              u795 0568                                u980 0347  
                              u981 0346                                u990 0352  
                              u991 0351                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0041  
                             ?_ISR 0070                               l2000 0640  
                             l2002 0648                               l2010 027D  
                             l2004 0651                               l2020 029D  
                             l2012 0282                               l2030 02CB  
                             l2022 02A6                               l2014 0287  
                             l2006 0275                               l1320 070D  
                             l1400 057F                               l2040 0310  
                             l2032 02DA                               l2024 02AE  
                             l2016 028F                               l2008 027A  
                             l1322 0711                               l2042 031E  
                             l2034 02E9                               l2026 02B3  
                             l2018 0298                               l1324 0715  
                             l2044 0323                               l2036 02F2  
                             l2028 02BC                               l1510 0347  
                             l1326 0717                               l1318 070C  
                             l2046 0328                               l2038 0301  
                             l1520 035B                               l1512 034C  
                             l1328 071E                               l2048 032D  
                             l1530 0371                               l1522 035D  
                             l1514 034E                               l1506 0340  
                             l2074 01B8                               l1540 0394  
                             l1532 0375                               l1524 0363  
                             l1516 0352                               l1508 0343  
                             l1534 0386                               l1526 0366  
                             l1542 039A                               l1518 0357  
                             l1390 055E                               l1382 0548  
                             l1544 039F                               l1536 038C  
                             l1528 036D                               l1800 04FD  
                             l1392 0562                               l1384 0550  
                             l1546 03A4                               l1538 038D  
                             l1810 066C                               l1394 056C  
                             l1386 0553                               l1732 078D  
                             l1740 06E8                               l1812 0672  
                             l1804 065B                               l1820 0523  
                             l1396 0572                               l1388 055A  
                             l1900 05BC                               l1902 0752  
                             l1742 06F1                               l1734 06DC  
                             l1910 0418                               l1814 0677  
                             l1806 0660                               l1750 0702  
                             l1822 052B                               l1398 0579  
                             l1830 01A0                               l1904 0758  
                             l1736 06DF                               l1920 042E  
                             l1912 041D                               l1808 0665  
                             l1752 0707                               l1744 06F6  
                             l1816 0502                               l1840 01CB  
                             l1832 01A5                               l1824 018E  
                             l1760 03CB                               l1738 06E5  
                             l1930 044A                               l1922 0431  
                             l1914 041F                               l1906 0411  
                             l1746 06F9                               l1818 0507  
                             l1842 01CF                               l1826 0193  
                             l1770 03F9                               l1762 03CF  
                             l1754 03A9                               l1940 0467  
                             l1932 0450                               l1924 0438  
                             l1916 0423                               l1908 0414  
                             l1748 06FF                               l1780 04C0  
                             l1860 0204                               l1844 01D3  
                             l1836 01A6                               l1828 0199  
                             l1772 0402                               l1764 03D8  
                             l1756 03BB                               l1934 0457  
                             l1926 043C                               l1918 0428  
                             l1790 04D8                               l1782 04C6  
                             l1870 024A                               l1862 020A  
                             l1854 01DE                               l1846 01D7  
                             l1838 01C3                               l1766 03EA  
                             l1758 03BE                               l1774 0408  
                             l1950 0691                               l1960 0492  
                             l1952 046C                               l1928 0440  
                             l1936 045D                               l1792 04E9  
                             l1784 04C9                               l1872 0251  
                             l1864 0211                               l1848 01DC  
                             l1768 03F8                               l1944 067E  
                             l1970 0764                               l1962 0745  
                             l1954 0472                               l1938 0462  
                             l1794 04EF                               l1786 04D0  
                             l1778 04BC                               l1874 0255  
                             l1866 0215                               l1858 01FA  
                             l1890 0584                               l1946 0686  
                             l1980 05CB                               l1972 077B  
                             l1964 0772                               l1956 047C  
                             l1796 04F0                               l1788 04D4  
                             l1868 021A                               l1876 025E  
                             l1892 0588                               l1948 0687  
                             l1982 05D4                               l1974 0780  
                             l1966 0777                               l1958 048C  
                             l1886 06C0                               l1798 04F7  
                             l1878 0270                               l1894 058B  
                             l1984 05D9                               l1976 05BE  
                             l1992 0769                               l1968 075F  
                             l1896 05BA                               l1986 05DF  
                             l1978 05C3                               l1994 076E  
                             l1898 05BB                               l1988 05E7  
                             l1996 0034                               l1998 062D  
                             STR_1 061A                               STR_2 0629  
                             u1000 0363                               u1001 0362  
                             u1020 0375                               u1021 0374  
                             u1015 0367                               u1040 0386  
                             u1041 0385                               u1210 03CF  
                             u1035 0376                               u1211 03CE  
                             u1060 039A                               u1300 04E9  
                             u1061 0399                               u1045 0382  
                             u1301 04E8                               u1205 03C0  
                             u1070 039F                               u1230 03EA  
                             u1071 039E                               u1055 038E  
                             u1231 03E9                               u1320 04FD  
                             u1400 01F9                               u1321 04FC  
                             u1305 04E5                               u1401 01F8  
                             u1225 03D1                               u1330 0660  
                             u1410 0204                               u1250 0408  
                             u1331 065F                               u1315 04F1  
                             u1411 0203                               u1251 0407  
                             u1235 03E6                               u1500 0423  
                             u1340 0672                               u1260 04C6  
                             u1420 020A                               u1501 0422  
                             u1341 0671                               u1261 04C5  
                             u1421 0209                               u1405 01F5  
                             u1245 03FA                               u1510 042E  
                             u1350 0511                               u1430 025E  
                             u1190 03BB                               u1511 042D  
                             u1431 025D                               u1191 03BA  
                             u1360 0535                               u1280 04D8  
                             u1440 0270                               u1281 04D7  
                             u1441 026F                               u1530 0440  
                             u1370 0547                               u1531 043F  
                             u1371 0546                               u1275 04CA  
                             u1540 044A                               u1380 0199  
                             u1460 059B                               u1541 0449  
                             u1525 0432                               u1381 0198  
                             u1470 0758                               u1390 01D3  
                             u1471 0757                               u1455 06CC  
                             u1607 0704                               u1295 04D9  
                             u1391 01D2                               u1480 075E  
                             u1560 045D                               u1481 075D  
                             u1617 0478                               u1561 045C  
                             u1545 0446                               u1465 0596  
                             u1570 0462                               u1490 0418  
                             u1627 0488                               u1571 0461  
                             u1555 0451                               u1491 0417  
                             u1580 05DF                               u1581 05DE  
                             u1637 0498                               u1647 06EC  
                             u1597 0335                               _PEIE 005E  
                             i1l99 073E                               _Time 00A0  
                ?_Lcd_Write_String 0076   __end_of_I2C_Master_RepeatedStart 0784  
                             _cont 0065                               _main 0275  
                             _hour 0078                               _year 0066  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0040                    __end_of_Lcd_Cmd 06F5  
                ___bmul@multiplier 0076                              ??_ISR 0070  
                 ?_I2C_Master_Init 004D                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                    __end_of___awdiv 03A9  
                  __end_of___awmod 046C                              _ANSEL 0188  
                  __end_of___lldiv 0411                    ___awdiv@divisor 0073  
                  __end_of___lwdiv 0502                    __end_of___lwmod 0584  
                  ___awdiv@counter 0040                              _RCREG 001A  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009            __size_of_Lcd_Set_Cursor 0026  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                            _m_day 0068                    __end_of_dpowers 061A  
                            _month 0067                              _setup 067E  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0275  
                 __end_of_Lcd_Init 04BC                   __end_of_Lcd_Port 0792  
                  __initialization 000F                       __end_of_main 0340  
                           ??_main 0059                 __size_of_Lcd_Clear 000D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
                 ___awdiv@dividend 0075                             ?_setup 0070  
                           _ANSELH 0189                             i1l1650 0733  
                           i1l1652 0739                             i1l1662 073D  
                           u118_20 0739                             u118_21 0738  
                        ??_Lcd_Cmd 0074                             _S1_val 0060  
                           _S2_val 005C            __size_of_Lcd_Write_Char 0016  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 077B  
                           ___bmul 070B                          ??___awdiv 0077  
                        ??___awmod 0077                          ??___lldiv 0073  
                        ??___lwdiv 0077                          ??___lwmod 0047  
                 ___awdiv@quotient 0042                             _minute 0079  
                           _second 007A                    ___awmod@divisor 0073  
                  ___awmod@counter 0040                             saved_w 007E  
                        ??_sprintf 004C                    Lcd_Set_Cursor@a 0041  
                  Lcd_Set_Cursor@b 0077            __end_of__initialization 0030  
                __end_of_Lcd_Clear 0752                ___bmul@multiplicand 0073  
                   __pcstackCOMMON 0070                       __pidataBANK0 069F  
                    __end_of_setup 069F                       ?_RTC_display 0070  
                   _Lcd_Set_Cursor 0658                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 0078  
                       __pbssBANK0 005C                         __pbssBANK1 00A0  
                       _data_total 00B4                         __pmaintext 0275  
                          ?___bmul 0073                         __pintentry 0004  
        __size_of_Lcd_Write_String 0046             __end_of_Lcd_Set_Cursor 067E  
          __size_of_bcd_to_decimal 001C                         ??_Lcd_Init 0040  
                       ??_Lcd_Port 0073                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0600  
                   _Lcd_Write_Char 06F5                            _Lcd_Cmd 06DB  
                  __size_of___bmul 0015                      ?_Show_val_LCD 0070  
                          ___awdiv 0340                            ___awmod 0411  
                          ___lldiv 03A9                            ___lwdiv 04BC  
                          ___lwmod 0548                    ?_Lcd_Set_Cursor 0077  
                          __ptext1 067E                            __ptext2 0584  
                          __ptext3 03A9                            __ptext4 062D  
                          __ptext5 018B                            __ptext6 0548  
                          __ptext7 04BC                            __ptext8 0502  
                          __ptext9 06F5                       __size_of_ISR 0012  
                          _dpowers 0610                   ___awmod@dividend 0075  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          _sprintf 018B                            clrloop0 0785  
           __end_of_Lcd_Write_Char 070B               end_of_initialization 0030  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0040  
                  ___lldiv@counter 004C                     ??_Show_val_LCD 0056  
                 I2C_Master_Init@c 004D                   I2C_Master_Read@a 0073  
                        Lcd_Port@a 0073                          _PORTAbits 0005  
                        _PORTEbits 0009               __size_of_RTC_display 0157  
                        _TRISCbits 0087                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0076                  Lcd_Write_String@i 0043  
                        _Lcd_Clear 0745                     __end_of___bmul 0720  
                 _Lcd_Write_String 0502                start_initialization 000F  
                   _bcd_to_decimal 06BF                        __end_of_ISR 0745  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                       ?_Lcd_Clear 0070                           ??___bmul 0074  
                       init_fetch0 0720                        __pdataBANK0 0020  
                  Lcd_Write_Char@a 0075             __end_of_bcd_to_decimal 06DB  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 0040               __end_of_Show_val_LCD 0658  
                      _data_recive 0064                           ?_Lcd_Cmd 0070  
                      sprintf@flag 0050                        sprintf@prec 0051  
                 _I2C_Master_Start 0772                   _I2C_Master_Write 075F  
                 ___lwdiv@dividend 0075                   ??_Lcd_Set_Cursor 0040  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 0040                           ?___lwdiv 0073  
                         ?___lwmod 0043                          __pstrings 0600  
                  ?_bcd_to_decimal 0070                   ___lwdiv@quotient 0041  
                         ?_sprintf 0049               bcd_to_decimal@number 0077  
                   __size_of_setup 0021                  interrupt_function 0004  
                  RTC_display@Date 0020                    RTC_display@Time 0031  
                        clear_ram0 0784                           Lcd_Cmd@a 0076  
                         _PIR1bits 000C                        ??_Lcd_Clear 0077  
                      __stringbase 060F                   ??_Lcd_Write_Char 0074  
                         _Lcd_Init 046C                           _Lcd_Port 078C  
              I2C_Master_Read@temp 0040           __end_of_Lcd_Write_String 0548  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
                    ??_RTC_display 0044                 __end_of__stringtab 0610  
            __size_of_Show_val_LCD 002B                         sprintf@val 0052  
                  _I2C_Master_Init 0584                    _I2C_Master_Read 05BE  
                  _I2C_Master_Wait 0752                    _I2C_Master_Stop 0769  
                  ___lwdiv@divisor 0073                    ___lwdiv@counter 0040  
                         __ptext10 0658                           __ptext11 0034  
                         __ptext20 075F                           __ptext12 06BF  
                         __ptext21 0769                           __ptext13 070B  
                         __ptext22 0772                           __ptext14 0411  
                         __ptext23 077B                           __ptext15 0340  
                         __ptext24 05BE                           __ptext16 046C  
                         __ptext25 0752                           __ptext17 0745  
                         __ptext26 0733                           __ptext18 06DB  
                         __ptext19 078C                   __size_of_sprintf 00EA  
                    __size_of_main 00CB                       _Show_val_LCD 062D  
         __end_of_I2C_Master_Start 077B           __end_of_I2C_Master_Write 0769  
                         init_ram0 0724                __end_of_RTC_display 018B  
                         intlevel1 0000                          sprintf@ap 004F  
                        sprintf@sp 0054                   ___lwmod@dividend 0045  
                 ___lldiv@dividend 0044                          stringcode 060A  
                 ??_bcd_to_decimal 0040            __end_of_I2C_Master_Init 05BE  
          __end_of_I2C_Master_Read 05EE            __end_of_I2C_Master_Wait 075F  
          __end_of_I2C_Master_Stop 0772                 Lcd_Set_Cursor@temp 0042  
                         sprintf@c 0055                           sprintf@f 0049  
                 ___lldiv@quotient 0048                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 0043                    ___lwmod@counter 0048  
                         stringdir 060A                           stringtab 0600  
                      _SSPCON2bits 0091  
