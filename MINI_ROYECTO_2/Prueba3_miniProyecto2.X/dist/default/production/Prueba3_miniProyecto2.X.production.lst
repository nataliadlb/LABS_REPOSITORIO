

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 22:46:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  000E                     	;# 
   409  000F                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001D                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  0081                     	;# 
   429  0085                     	;# 
   430  0086                     	;# 
   431  0087                     	;# 
   432  0088                     	;# 
   433  0089                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  008F                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  0105                     	;# 
   457  0107                     	;# 
   458  0108                     	;# 
   459  0109                     	;# 
   460  010C                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  0185                     	;# 
   466  0187                     	;# 
   467  0188                     	;# 
   468  0189                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0000                     	;# 
   472  0001                     	;# 
   473  0002                     	;# 
   474  0003                     	;# 
   475  0004                     	;# 
   476  0005                     	;# 
   477  0006                     	;# 
   478  0007                     	;# 
   479  0008                     	;# 
   480  0009                     	;# 
   481  000A                     	;# 
   482  000B                     	;# 
   483  000C                     	;# 
   484  000D                     	;# 
   485  000E                     	;# 
   486  000E                     	;# 
   487  000F                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001B                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  001D                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  0081                     	;# 
   507  0085                     	;# 
   508  0086                     	;# 
   509  0087                     	;# 
   510  0088                     	;# 
   511  0089                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  008F                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0093                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  0105                     	;# 
   535  0107                     	;# 
   536  0108                     	;# 
   537  0109                     	;# 
   538  010C                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  0185                     	;# 
   544  0187                     	;# 
   545  0188                     	;# 
   546  0189                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549                           
   550                           	psect	idataBANK0
   551  0599                     __pidataBANK0:
   552                           
   553                           ;initializer for _Date
   554  0599  3444               	retlw	68
   555  059A  3441               	retlw	65
   556  059B  3454               	retlw	84
   557  059C  3445               	retlw	69
   558  059D  343A               	retlw	58
   559  059E  3420               	retlw	32
   560  059F  3430               	retlw	48
   561  05A0  3430               	retlw	48
   562  05A1  342F               	retlw	47
   563  05A2  3430               	retlw	48
   564  05A3  3430               	retlw	48
   565  05A4  342F               	retlw	47
   566  05A5  3432               	retlw	50
   567  05A6  3430               	retlw	48
   568  05A7  3430               	retlw	48
   569  05A8  3430               	retlw	48
   570  05A9  3400               	retlw	0
   571                           
   572                           ;initializer for _Time
   573  05AA  3454               	retlw	84
   574  05AB  3449               	retlw	73
   575  05AC  344D               	retlw	77
   576  05AD  3445               	retlw	69
   577  05AE  343A               	retlw	58
   578  05AF  3420               	retlw	32
   579  05B0  3430               	retlw	48
   580  05B1  3430               	retlw	48
   581  05B2  343A               	retlw	58
   582  05B3  3430               	retlw	48
   583  05B4  3430               	retlw	48
   584  05B5  343A               	retlw	58
   585  05B6  3430               	retlw	48
   586  05B7  3430               	retlw	48
   587  05B8  3400               	retlw	0
   588  0019                     _TXREG	set	25
   589  000B                     _INTCONbits	set	11
   590  0018                     _RCSTAbits	set	24
   591  0008                     _PORTDbits	set	8
   592  0009                     _PORTEbits	set	9
   593  0013                     _SSPBUF	set	19
   594  0014                     _SSPCON	set	20
   595  0009                     _PORTE	set	9
   596  0008                     _PORTD	set	8
   597  0007                     _PORTC	set	7
   598  0006                     _PORTB	set	6
   599  0005                     _PORTA	set	5
   600  0005                     _PORTAbits	set	5
   601  001A                     _RCREG	set	26
   602  000C                     _PIR1bits	set	12
   603  0065                     _RCIF	set	101
   604  0063                     _SSPIF	set	99
   605  005E                     _PEIE	set	94
   606  005F                     _GIE	set	95
   607  008C                     _PIE1bits	set	140
   608  0099                     _SPBRG	set	153
   609  009A                     _SPBRGH	set	154
   610  0098                     _TXSTAbits	set	152
   611  008F                     _OSCCONbits	set	143
   612  0091                     _SSPCON2bits	set	145
   613  0094                     _SSPSTAT	set	148
   614  0093                     _SSPADD	set	147
   615  0091                     _SSPCON2	set	145
   616  0089                     _TRISE	set	137
   617  0087                     _TRISCbits	set	135
   618  0086                     _TRISB	set	134
   619  0085                     _TRISA	set	133
   620  0088                     _TRISD	set	136
   621  04C1                     _TRMT	set	1217
   622  0463                     _SSPIE	set	1123
   623  043C                     _TRISC4	set	1084
   624  043B                     _TRISC3	set	1083
   625  0189                     _ANSELH	set	393
   626  0188                     _ANSEL	set	392
   627                           
   628                           	psect	strings
   629  061A                     __pstrings:
   630  061A                     stringtab:
   631  061A                     __stringtab:
   632                           
   633                           ;	String table - string pointers are 1 byte each
   634  061A  1BFF               	btfsc	btemp+1,7
   635  061B  2E24               	ljmp	stringcode
   636  061C  1383               	bcf	3,7
   637  061D  187F               	btfsc	btemp+1,0
   638  061E  1783               	bsf	3,7
   639  061F  0800               	movf	0,w
   640  0620  0A84               	incf	4,f
   641  0621  1903               	skipnz
   642  0622  0AFF               	incf	btemp+1,f
   643  0623  0008               	return
   644  0624                     stringcode:
   645  0624                     stringdir:
   646  0624  3006               	movlw	high stringdir
   647  0625  008A               	movwf	10
   648  0626  0804               	movf	4,w
   649  0627  0A84               	incf	4,f
   650  0628  0782               	addwf	2,f
   651  0629                     __stringbase:
   652  0629  3400               	retlw	0
   653  062A                     __end_of__stringtab:
   654  062A                     STR_1:
   655  062A  3420               	retlw	32	;' '
   656  062B  3420               	retlw	32	;' '
   657  062C  3400               	retlw	0
   658                           
   659                           	psect	cinit
   660  000F                     start_initialization:	
   661                           ; #config settings
   662                           
   663  000F                     __initialization:
   664                           
   665                           ; Initialize objects allocated to BANK0
   666  000F  1383               	bcf	3,7	;select IRP bank0
   667  0010  3040               	movlw	low (__pdataBANK0+32)
   668  0011  00FD               	movwf	btemp+-1
   669  0012  3005               	movlw	high __pidataBANK0
   670  0013  00FE               	movwf	btemp
   671  0014  3099               	movlw	low __pidataBANK0
   672  0015  00FF               	movwf	btemp+1
   673  0016  3020               	movlw	low __pdataBANK0
   674  0017  0084               	movwf	4
   675  0018  120A  118A  2631  120A  118A  	fcall	init_ram0
   676                           
   677                           ; Clear objects allocated to BANK0
   678  001D  3040               	movlw	low __pbssBANK0
   679  001E  0084               	movwf	4
   680  001F  305A               	movlw	low (__pbssBANK0+26)
   681  0020  120A  118A  2697  120A  118A  	fcall	clear_ram0
   682                           
   683                           ; Clear objects allocated to COMMON
   684  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   685  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   686  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   687  0028                     end_of_initialization:	
   688                           ;End of C runtime variable initialization code
   689                           
   690  0028                     __end_of__initialization:
   691  0028  0183               	clrf	3
   692  0029  120A  118A  299F   	ljmp	_main	;jump to C main() function
   693                           
   694                           	psect	bssCOMMON
   695  0078                     __pbssCOMMON:
   696  0078                     _data_recive:
   697  0078                     	ds	1
   698  0079                     _minute:
   699  0079                     	ds	1
   700  007A                     _second:
   701  007A                     	ds	1
   702                           
   703                           	psect	bssBANK0
   704  0040                     __pbssBANK0:
   705  0040                     _data_total:
   706  0040                     	ds	20
   707  0054                     _cont:
   708  0054                     	ds	1
   709  0055                     _year:
   710  0055                     	ds	1
   711  0056                     _month:
   712  0056                     	ds	1
   713  0057                     _m_day:
   714  0057                     	ds	1
   715  0058                     _hour:
   716  0058                     	ds	1
   717  0059                     _i:
   718  0059                     	ds	1
   719                           
   720                           	psect	dataBANK0
   721  0020                     __pdataBANK0:
   722  0020                     _Date:
   723  0020                     	ds	17
   724  0031                     _Time:
   725  0031                     	ds	15
   726                           
   727                           	psect	inittext
   728  062D                     init_fetch0:	
   729                           ;	Called with low address in FSR and high address in W
   730                           
   731  062D  087E               	movf	btemp,w
   732  062E  008A               	movwf	10
   733  062F  087F               	movf	btemp+1,w
   734  0630  0082               	movwf	2
   735  0631                     init_ram0:	
   736                           ;Called with:
   737                           ;	high address of idata address in btemp 
   738                           ;	low address of idata address in btemp+1 
   739                           ;	low address of data in FSR
   740                           ;	high address + 1 of data in btemp-1
   741                           
   742  0631  120A  118A  262D  120A  118A  	fcall	init_fetch0
   743  0636  0080               	movwf	0
   744  0637  0A84               	incf	4,f
   745  0638  0804               	movf	4,w
   746  0639  067D               	xorwf	btemp+-1,w
   747  063A  1903               	btfsc	3,2
   748  063B  3400               	retlw	0
   749  063C  0AFF               	incf	btemp+1,f
   750  063D  1903               	btfsc	3,2
   751  063E  0AFE               	incf	btemp,f
   752  063F  2E31               	goto	init_ram0
   753                           
   754                           	psect	clrtext
   755  0697                     clear_ram0:	
   756                           ;	Called with FSR containing the base address, and
   757                           ;	W with the last address+1
   758                           
   759  0697  0064               	clrwdt	;clear the watchdog before getting into this loop
   760  0698                     clrloop0:
   761  0698  0180               	clrf	0	;clear RAM location pointed to by FSR
   762  0699  0A84               	incf	4,f	;increment pointer
   763  069A  0604               	xorwf	4,w	;XOR with final address
   764  069B  1903               	btfsc	3,2	;have we reached the end yet?
   765  069C  3400               	retlw	0	;all done for this memory range, return
   766  069D  0604               	xorwf	4,w	;XOR again to restore value
   767  069E  2E98               	goto	clrloop0	;do the next byte
   768                           
   769                           	psect	cstackCOMMON
   770  0070                     __pcstackCOMMON:
   771  0070                     ?_setup:
   772  0070                     ?_Lcd_Init:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_Lcd_Clear:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_Write_to_RTC:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_I2C_Master_Start:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_I2C_Master_RepeatedStart:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_I2C_Master_Stop:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_RTC_display:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_Write_USART:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_Lcd_Write_String:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_USART_Init_BaudRate:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_USART_Init:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_USART_INTERRUPT:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_Lcd_Port:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_Lcd_Cmd:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_ISR:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ??_ISR:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_main:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_bcd_to_decimal:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_I2C_Master_Wait:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_Lcd_Write_Char:	
   830                           ; 1 bytes @ 0x0
   831                           
   832                           
   833                           ; 1 bytes @ 0x0
   834  0070                     	ds	3
   835  0073                     ??_I2C_Master_Start:
   836  0073                     ?_I2C_Master_Write:	
   837                           ; 1 bytes @ 0x3
   838                           
   839  0073                     ??_I2C_Master_RepeatedStart:	
   840                           ; 1 bytes @ 0x3
   841                           
   842  0073                     ??_I2C_Master_Stop:	
   843                           ; 1 bytes @ 0x3
   844                           
   845  0073                     ??_Write_USART:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0073                     ??_USART_Init_BaudRate:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0073                     ??_USART_Init:	
   852                           ; 1 bytes @ 0x3
   853                           
   854  0073                     ??_USART_INTERRUPT:	
   855                           ; 1 bytes @ 0x3
   856                           
   857  0073                     ??_Lcd_Port:	
   858                           ; 1 bytes @ 0x3
   859                           
   860  0073                     ??_I2C_Master_Wait:	
   861                           ; 1 bytes @ 0x3
   862                           
   863  0073                     ?___bmul:	
   864                           ; 1 bytes @ 0x3
   865                           
   866  0073                     ??___lldiv:	
   867                           ; 1 bytes @ 0x3
   868                           
   869  0073                     ?_I2C_Master_Read:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0073                     ?___awdiv:	
   873                           ; 2 bytes @ 0x3
   874                           
   875  0073                     ?___awmod:	
   876                           ; 2 bytes @ 0x3
   877                           
   878  0073                     Lcd_Port@a:	
   879                           ; 2 bytes @ 0x3
   880                           
   881  0073                     Write_USART@a:	
   882                           ; 1 bytes @ 0x3
   883                           
   884  0073                     ___bmul@multiplicand:	
   885                           ; 1 bytes @ 0x3
   886                           
   887  0073                     I2C_Master_Write@d:	
   888                           ; 1 bytes @ 0x3
   889                           
   890  0073                     I2C_Master_Read@a:	
   891                           ; 2 bytes @ 0x3
   892                           
   893  0073                     ___awdiv@divisor:	
   894                           ; 2 bytes @ 0x3
   895                           
   896  0073                     ___awmod@divisor:	
   897                           ; 2 bytes @ 0x3
   898                           
   899                           
   900                           ; 2 bytes @ 0x3
   901  0073                     	ds	1
   902  0074                     ?_Write_USART_String:
   903  0074                     ??_I2C_Master_Init:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0074                     ??_Lcd_Cmd:	
   907                           ; 1 bytes @ 0x4
   908                           
   909  0074                     ??_Lcd_Write_Char:	
   910                           ; 1 bytes @ 0x4
   911                           
   912  0074                     ??___bmul:	
   913                           ; 1 bytes @ 0x4
   914                           
   915  0074                     Write_USART_String@a:	
   916                           ; 1 bytes @ 0x4
   917                           
   918                           
   919                           ; 2 bytes @ 0x4
   920  0074                     	ds	1
   921  0075                     ??_Write_to_RTC:
   922  0075                     ??_I2C_Master_Write:	
   923                           ; 1 bytes @ 0x5
   924                           
   925  0075                     ??_I2C_Master_Read:	
   926                           ; 1 bytes @ 0x5
   927                           
   928  0075                     Lcd_Write_Char@a:	
   929                           ; 1 bytes @ 0x5
   930                           
   931  0075                     ___bmul@product:	
   932                           ; 1 bytes @ 0x5
   933                           
   934  0075                     ___awdiv@dividend:	
   935                           ; 1 bytes @ 0x5
   936                           
   937  0075                     ___awmod@dividend:	
   938                           ; 2 bytes @ 0x5
   939                           
   940                           
   941                           ; 2 bytes @ 0x5
   942  0075                     	ds	1
   943  0076                     ??_Write_USART_String:
   944  0076                     ??_Lcd_Write_String:	
   945                           ; 1 bytes @ 0x6
   946                           
   947  0076                     Lcd_Cmd@a:	
   948                           ; 1 bytes @ 0x6
   949                           
   950  0076                     ___bmul@multiplier:	
   951                           ; 1 bytes @ 0x6
   952                           
   953                           
   954                           ; 1 bytes @ 0x6
   955  0076                     	ds	1
   956  0077                     ??_Lcd_Clear:
   957  0077                     ?_Lcd_Set_Cursor:	
   958                           ; 1 bytes @ 0x7
   959                           
   960  0077                     ??___awdiv:	
   961                           ; 1 bytes @ 0x7
   962                           
   963  0077                     ??___awmod:	
   964                           ; 1 bytes @ 0x7
   965                           
   966  0077                     bcd_to_decimal@number:	
   967                           ; 1 bytes @ 0x7
   968                           
   969  0077                     Lcd_Set_Cursor@b:	
   970                           ; 1 bytes @ 0x7
   971                           
   972  0077                     Write_USART_String@i:	
   973                           ; 1 bytes @ 0x7
   974                           
   975                           
   976                           ; 1 bytes @ 0x7
   977  0077                     	ds	1
   978  0078                     ??_setup:
   979                           
   980                           	psect	cstackBANK0
   981  005A                     __pcstackBANK0:	
   982                           ; 1 bytes @ 0x8
   983                           
   984  005A                     ??_Lcd_Init:
   985  005A                     ??_Lcd_Set_Cursor:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  005A                     ??_bcd_to_decimal:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  005A                     ?___lldiv:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  005A                     ___awdiv@counter:	
   995                           ; 4 bytes @ 0x0
   996                           
   997  005A                     ___awmod@counter:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  005A                     I2C_Master_Read@temp:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  005A                     Lcd_Write_String@i:	
  1004                           ; 2 bytes @ 0x0
  1005                           
  1006  005A                     ___lldiv@divisor:	
  1007                           ; 2 bytes @ 0x0
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x0
  1011  005A                     	ds	1
  1012  005B                     Lcd_Set_Cursor@a:
  1013  005B                     ___awdiv@sign:	
  1014                           ; 1 bytes @ 0x1
  1015                           
  1016  005B                     ___awmod@sign:	
  1017                           ; 1 bytes @ 0x1
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x1
  1021  005B                     	ds	1
  1022  005C                     Lcd_Set_Cursor@temp:
  1023  005C                     Lcd_Write_String@a:	
  1024                           ; 1 bytes @ 0x2
  1025                           
  1026  005C                     ___awdiv@quotient:	
  1027                           ; 1 bytes @ 0x2
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x2
  1031  005C                     	ds	2
  1032  005E                     ??_RTC_display:
  1033  005E                     ___lldiv@dividend:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x4
  1038  005E                     	ds	4
  1039  0062                     ___lldiv@quotient:
  1040                           
  1041                           ; 4 bytes @ 0x8
  1042  0062                     	ds	4
  1043  0066                     ___lldiv@counter:
  1044                           
  1045                           ; 1 bytes @ 0xC
  1046  0066                     	ds	1
  1047  0067                     ?_I2C_Master_Init:
  1048  0067                     I2C_Master_Init@c:	
  1049                           ; 1 bytes @ 0xD
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0xD
  1053  0067                     	ds	4
  1054  006B                     ??_main:
  1055                           
  1056                           ; 1 bytes @ 0x11
  1057  006B                     	ds	3
  1058                           
  1059                           	psect	maintext
  1060  019F                     __pmaintext:	
  1061 ;;
  1062 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1063 ;;
  1064 ;; *************** function _main *****************
  1065 ;; Defined at:
  1066 ;;		line 113 in file "main_prueba3_mini2.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : B00/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0
  1082 ;;      Temps:          0       3       0       0       0
  1083 ;;      Totals:         0       3       0       0       0
  1084 ;;Total ram usage:        3 bytes
  1085 ;; Hardware stack levels required when called:    5
  1086 ;; This function calls:
  1087 ;;		_I2C_Master_Read
  1088 ;;		_I2C_Master_RepeatedStart
  1089 ;;		_I2C_Master_Start
  1090 ;;		_I2C_Master_Stop
  1091 ;;		_I2C_Master_Write
  1092 ;;		_Lcd_Clear
  1093 ;;		_Lcd_Init
  1094 ;;		_RTC_display
  1095 ;;		_Write_USART
  1096 ;;		_Write_USART_String
  1097 ;;		_Write_to_RTC
  1098 ;;		_setup
  1099 ;; This function is called by:
  1100 ;;		Startup code after reset
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _main
  1106  019F                     _main:
  1107  019F                     l1849:	
  1108                           ;incstack = 0
  1109                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110                           
  1111                           
  1112                           ;main_prueba3_mini2.c: 114:     setup();
  1113  019F  120A  118A  24C2  120A  118A  	fcall	_setup
  1114  01A4                     l1851:
  1115                           
  1116                           ;main_prueba3_mini2.c: 115:     TRISD = 0x00;
  1117  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1118  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1119  01A6  0188               	clrf	8	;volatile
  1120  01A7                     l1853:
  1121                           
  1122                           ;main_prueba3_mini2.c: 116:     Lcd_Init();
  1123  01A7  120A  118A  2406  120A  118A  	fcall	_Lcd_Init
  1124  01AC                     l1855:
  1125                           
  1126                           ;main_prueba3_mini2.c: 117:     Lcd_Clear();
  1127  01AC  120A  118A  2640  120A  118A  	fcall	_Lcd_Clear
  1128  01B1                     l1857:
  1129                           
  1130                           ;main_prueba3_mini2.c: 118:     Write_to_RTC();
  1131  01B1  120A  118A  23AC  120A  118A  	fcall	_Write_to_RTC
  1132  01B6                     l1859:
  1133                           
  1134                           ;main_prueba3_mini2.c: 124:         I2C_Master_Start();
  1135  01B6  120A  118A  2685  120A  118A  	fcall	_I2C_Master_Start
  1136  01BB                     l1861:
  1137                           
  1138                           ;main_prueba3_mini2.c: 125:         I2C_Master_Write(0xD0);
  1139  01BB  30D0               	movlw	208
  1140  01BC  00F3               	movwf	I2C_Master_Write@d
  1141  01BD  3000               	movlw	0
  1142  01BE  00F4               	movwf	I2C_Master_Write@d+1
  1143  01BF  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1144  01C4                     l1863:
  1145                           
  1146                           ;main_prueba3_mini2.c: 126:         I2C_Master_Write(0);
  1147  01C4  3000               	movlw	0
  1148  01C5  00F3               	movwf	I2C_Master_Write@d
  1149  01C6  00F4               	movwf	I2C_Master_Write@d+1
  1150  01C7  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1151  01CC                     l1865:
  1152                           
  1153                           ;main_prueba3_mini2.c: 127:         I2C_Master_RepeatedStart();
  1154  01CC  120A  118A  268E  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1155  01D1                     l1867:
  1156                           
  1157                           ;main_prueba3_mini2.c: 128:         I2C_Master_Write(0xD1);
  1158  01D1  30D1               	movlw	209
  1159  01D2  00F3               	movwf	I2C_Master_Write@d
  1160  01D3  3000               	movlw	0
  1161  01D4  00F4               	movwf	I2C_Master_Write@d+1
  1162  01D5  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1163  01DA                     l1869:
  1164                           
  1165                           ;main_prueba3_mini2.c: 129:         second = I2C_Master_Read(1);
  1166  01DA  3001               	movlw	1
  1167  01DB  00F3               	movwf	I2C_Master_Read@a
  1168  01DC  3000               	movlw	0
  1169  01DD  00F4               	movwf	I2C_Master_Read@a+1
  1170  01DE  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Read
  1171  01E3  0873               	movf	?_I2C_Master_Read,w
  1172  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1173  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1174  01E6  00EB               	movwf	??_main
  1175  01E7  086B               	movf	??_main,w
  1176  01E8  00FA               	movwf	_second
  1177  01E9                     l1871:
  1178                           
  1179                           ;main_prueba3_mini2.c: 130:         minute = I2C_Master_Read(1);
  1180  01E9  3001               	movlw	1
  1181  01EA  00F3               	movwf	I2C_Master_Read@a
  1182  01EB  3000               	movlw	0
  1183  01EC  00F4               	movwf	I2C_Master_Read@a+1
  1184  01ED  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Read
  1185  01F2  0873               	movf	?_I2C_Master_Read,w
  1186  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1187  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1188  01F5  00EB               	movwf	??_main
  1189  01F6  086B               	movf	??_main,w
  1190  01F7  00F9               	movwf	_minute
  1191  01F8                     l1873:
  1192                           
  1193                           ;main_prueba3_mini2.c: 131:         hour = I2C_Master_Read(1);
  1194  01F8  3001               	movlw	1
  1195  01F9  00F3               	movwf	I2C_Master_Read@a
  1196  01FA  3000               	movlw	0
  1197  01FB  00F4               	movwf	I2C_Master_Read@a+1
  1198  01FC  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Read
  1199  0201  0873               	movf	?_I2C_Master_Read,w
  1200  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0204  00EB               	movwf	??_main
  1203  0205  086B               	movf	??_main,w
  1204  0206  00D8               	movwf	_hour
  1205  0207                     l1875:
  1206                           
  1207                           ;main_prueba3_mini2.c: 132:         I2C_Master_Read(1);
  1208  0207  3001               	movlw	1
  1209  0208  00F3               	movwf	I2C_Master_Read@a
  1210  0209  3000               	movlw	0
  1211  020A  00F4               	movwf	I2C_Master_Read@a+1
  1212  020B  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Read
  1213  0210                     l1877:
  1214                           
  1215                           ;main_prueba3_mini2.c: 133:         m_day = I2C_Master_Read(1);
  1216  0210  3001               	movlw	1
  1217  0211  00F3               	movwf	I2C_Master_Read@a
  1218  0212  3000               	movlw	0
  1219  0213  00F4               	movwf	I2C_Master_Read@a+1
  1220  0214  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Read
  1221  0219  0873               	movf	?_I2C_Master_Read,w
  1222  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1223  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1224  021C  00EB               	movwf	??_main
  1225  021D  086B               	movf	??_main,w
  1226  021E  00D7               	movwf	_m_day
  1227  021F                     l1879:
  1228                           
  1229                           ;main_prueba3_mini2.c: 134:         month = I2C_Master_Read(1);
  1230  021F  3001               	movlw	1
  1231  0220  00F3               	movwf	I2C_Master_Read@a
  1232  0221  3000               	movlw	0
  1233  0222  00F4               	movwf	I2C_Master_Read@a+1
  1234  0223  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Read
  1235  0228  0873               	movf	?_I2C_Master_Read,w
  1236  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1237  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1238  022B  00EB               	movwf	??_main
  1239  022C  086B               	movf	??_main,w
  1240  022D  00D6               	movwf	_month
  1241  022E                     l1881:
  1242                           
  1243                           ;main_prueba3_mini2.c: 135:         year = I2C_Master_Read(0);
  1244  022E  3000               	movlw	0
  1245  022F  00F3               	movwf	I2C_Master_Read@a
  1246  0230  00F4               	movwf	I2C_Master_Read@a+1
  1247  0231  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Read
  1248  0236  0873               	movf	?_I2C_Master_Read,w
  1249  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0239  00EB               	movwf	??_main
  1252  023A  086B               	movf	??_main,w
  1253  023B  00D5               	movwf	_year
  1254  023C                     l1883:
  1255                           
  1256                           ;main_prueba3_mini2.c: 136:         I2C_Master_Stop();
  1257  023C  120A  118A  267C  120A  118A  	fcall	_I2C_Master_Stop
  1258  0241                     l1885:
  1259                           
  1260                           ;main_prueba3_mini2.c: 138:         RTC_display();
  1261  0241  120A  118A  202C  120A  118A  	fcall	_RTC_display
  1262  0246                     l1887:
  1263                           
  1264                           ;main_prueba3_mini2.c: 139:         Write_USART_String(Time);
  1265  0246  3031               	movlw	(low (_Time| 0))& (0+255)
  1266  0247  00F4               	movwf	Write_USART_String@a
  1267  0248  3000               	movlw	0
  1268  0249  00F5               	movwf	Write_USART_String@a+1
  1269  024A  120A  118A  2523  120A  118A  	fcall	_Write_USART_String
  1270  024F                     l1889:
  1271                           
  1272                           ;main_prueba3_mini2.c: 140:         Write_USART_String("  ");
  1273  024F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1274  0250  00F4               	movwf	Write_USART_String@a
  1275  0251  3080               	movlw	128
  1276  0252  00F5               	movwf	Write_USART_String@a+1
  1277  0253  120A  118A  2523  120A  118A  	fcall	_Write_USART_String
  1278  0258                     l1891:
  1279                           
  1280                           ;main_prueba3_mini2.c: 141:         Write_USART_String(Date);
  1281  0258  3020               	movlw	(low (_Date| 0))& (0+255)
  1282  0259  00F4               	movwf	Write_USART_String@a
  1283  025A  3000               	movlw	0
  1284  025B  00F5               	movwf	Write_USART_String@a+1
  1285  025C  120A  118A  2523  120A  118A  	fcall	_Write_USART_String
  1286  0261                     l1893:
  1287                           
  1288                           ;main_prueba3_mini2.c: 142:         Write_USART(13);
  1289  0261  300D               	movlw	13
  1290  0262  120A  118A  2666  120A  118A  	fcall	_Write_USART
  1291  0267                     l1895:
  1292                           
  1293                           ;main_prueba3_mini2.c: 143:         Write_USART(10);
  1294  0267  300A               	movlw	10
  1295  0268  120A  118A  2666  120A  118A  	fcall	_Write_USART
  1296  026D                     l1897:
  1297                           
  1298                           ;main_prueba3_mini2.c: 144:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1299  026D  3002               	movlw	2
  1300  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1301  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0270  00ED               	movwf	??_main+2
  1303  0271  3004               	movlw	4
  1304  0272  00EC               	movwf	??_main+1
  1305  0273  30B9               	movlw	185
  1306  0274  00EB               	movwf	??_main
  1307  0275                     u1127:
  1308  0275  0BEB               	decfsz	??_main,f
  1309  0276  2A75               	goto	u1127
  1310  0277  0BEC               	decfsz	??_main+1,f
  1311  0278  2A75               	goto	u1127
  1312  0279  0BED               	decfsz	??_main+2,f
  1313  027A  2A75               	goto	u1127
  1314  027B  2A7C               	nop2
  1315  027C  29B6               	goto	l1859
  1316  027D  120A  118A  280C   	ljmp	start
  1317  0280                     __end_of_main:
  1318                           
  1319                           	psect	text1
  1320  04C2                     __ptext1:	
  1321 ;; *************** function _setup *****************
  1322 ;; Defined at:
  1323 ;;		line 212 in file "main_prueba3_mini2.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0, pclath, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    3
  1344 ;; This function calls:
  1345 ;;		_I2C_Master_Init
  1346 ;;		_USART_INTERRUPT
  1347 ;;		_USART_Init
  1348 ;;		_USART_Init_BaudRate
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function _setup
  1356  04C2                     _setup:
  1357  04C2                     l1779:	
  1358                           ;incstack = 0
  1359                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1360                           
  1361                           
  1362                           ;main_prueba3_mini2.c: 214:     ANSEL = 0;
  1363  04C2  1683               	bsf	3,5	;RP0=1, select bank3
  1364  04C3  1703               	bsf	3,6	;RP1=1, select bank3
  1365  04C4  0188               	clrf	8	;volatile
  1366                           
  1367                           ;main_prueba3_mini2.c: 215:     ANSELH = 0;
  1368  04C5  0189               	clrf	9	;volatile
  1369                           
  1370                           ;main_prueba3_mini2.c: 216:     TRISA = 0;
  1371  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  1372  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  1373  04C8  0185               	clrf	5	;volatile
  1374  04C9                     l1781:
  1375                           
  1376                           ;main_prueba3_mini2.c: 217:     TRISB = 0b00000011;
  1377  04C9  3003               	movlw	3
  1378  04CA  0086               	movwf	6	;volatile
  1379  04CB                     l1783:
  1380                           
  1381                           ;main_prueba3_mini2.c: 218:     TRISCbits.TRISC6 = 0;
  1382  04CB  1307               	bcf	7,6	;volatile
  1383  04CC                     l1785:
  1384                           
  1385                           ;main_prueba3_mini2.c: 219:     TRISCbits.TRISC7 = 1;
  1386  04CC  1787               	bsf	7,7	;volatile
  1387  04CD                     l1787:
  1388                           
  1389                           ;main_prueba3_mini2.c: 220:     TRISD = 0;
  1390  04CD  0188               	clrf	8	;volatile
  1391  04CE                     l1789:
  1392                           
  1393                           ;main_prueba3_mini2.c: 221:     TRISE = 0;
  1394  04CE  0189               	clrf	9	;volatile
  1395  04CF                     l1791:
  1396                           
  1397                           ;main_prueba3_mini2.c: 222:     PORTA = 0;
  1398  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1399  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1400  04D1  0185               	clrf	5	;volatile
  1401  04D2                     l1793:
  1402                           
  1403                           ;main_prueba3_mini2.c: 223:     PORTB = 0;
  1404  04D2  0186               	clrf	6	;volatile
  1405  04D3                     l1795:
  1406                           
  1407                           ;main_prueba3_mini2.c: 224:     PORTC = 0;
  1408  04D3  0187               	clrf	7	;volatile
  1409  04D4                     l1797:
  1410                           
  1411                           ;main_prueba3_mini2.c: 225:     PORTD = 0;
  1412  04D4  0188               	clrf	8	;volatile
  1413  04D5                     l1799:
  1414                           
  1415                           ;main_prueba3_mini2.c: 226:     PORTE = 0;
  1416  04D5  0189               	clrf	9	;volatile
  1417  04D6                     l1801:
  1418                           
  1419                           ;main_prueba3_mini2.c: 227:     I2C_Master_Init(100000);
  1420  04D6  3000               	movlw	0
  1421  04D7  00EA               	movwf	I2C_Master_Init@c+3
  1422  04D8  3001               	movlw	1
  1423  04D9  00E9               	movwf	I2C_Master_Init@c+2
  1424  04DA  3086               	movlw	134
  1425  04DB  00E8               	movwf	I2C_Master_Init@c+1
  1426  04DC  30A0               	movlw	160
  1427  04DD  00E7               	movwf	I2C_Master_Init@c
  1428  04DE  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Init
  1429  04E3                     l1803:
  1430                           
  1431                           ;main_prueba3_mini2.c: 228:     USART_Init_BaudRate();
  1432  04E3  120A  118A  269F  120A  118A  	fcall	_USART_Init_BaudRate
  1433  04E8                     l1805:
  1434                           
  1435                           ;main_prueba3_mini2.c: 229:     USART_Init();
  1436  04E8  120A  118A  265A  120A  118A  	fcall	_USART_Init
  1437  04ED                     l1807:
  1438                           
  1439                           ;main_prueba3_mini2.c: 230:     USART_INTERRUPT();
  1440  04ED  120A  118A  26A5  120A  118A  	fcall	_USART_INTERRUPT
  1441  04F2                     l128:
  1442  04F2  0008               	return
  1443  04F3                     __end_of_setup:
  1444                           
  1445                           	psect	text2
  1446  069F                     __ptext2:	
  1447 ;; *************** function _USART_Init_BaudRate *****************
  1448 ;; Defined at:
  1449 ;;		line 19 in file "USART.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_setup
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _USART_Init_BaudRate
  1479  069F                     _USART_Init_BaudRate:
  1480  069F                     l1419:	
  1481                           ;incstack = 0
  1482                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1483                           
  1484                           
  1485                           ;USART.c: 20:     SPBRGH = 0;
  1486  069F  1683               	bsf	3,5	;RP0=1, select bank1
  1487  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  1488  06A1  019A               	clrf	26	;volatile
  1489  06A2                     l1421:
  1490                           
  1491                           ;USART.c: 21:     SPBRG = 12;
  1492  06A2  300C               	movlw	12
  1493  06A3  0099               	movwf	25	;volatile
  1494  06A4                     l276:
  1495  06A4  0008               	return
  1496  06A5                     __end_of_USART_Init_BaudRate:
  1497                           
  1498                           	psect	text3
  1499  065A                     __ptext3:	
  1500 ;; *************** function _USART_Init *****************
  1501 ;; Defined at:
  1502 ;;		line 8 in file "USART.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		status,2
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0
  1519 ;;      Totals:         0       0       0       0       0
  1520 ;;Total ram usage:        0 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_setup
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function _USART_Init
  1532  065A                     _USART_Init:
  1533  065A                     l1423:	
  1534                           ;incstack = 0
  1535                           ; Regs used in _USART_Init: [status,2]
  1536                           
  1537                           
  1538                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1539  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1540  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1541  065C  1798               	bsf	24,7	;volatile
  1542                           
  1543                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  1544  065D  1683               	bsf	3,5	;RP0=1, select bank1
  1545  065E  1303               	bcf	3,6	;RP1=0, select bank1
  1546  065F  1218               	bcf	24,4	;volatile
  1547                           
  1548                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  1549  0660  1698               	bsf	24,5	;volatile
  1550                           
  1551                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1552  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0663  1618               	bsf	24,4	;volatile
  1555  0664                     l1425:
  1556                           
  1557                           ;USART.c: 16:     RCREG = 0;
  1558  0664  019A               	clrf	26	;volatile
  1559  0665                     l273:
  1560  0665  0008               	return
  1561  0666                     __end_of_USART_Init:
  1562                           
  1563                           	psect	text4
  1564  06A5                     __ptext4:	
  1565 ;; *************** function _USART_INTERRUPT *****************
  1566 ;; Defined at:
  1567 ;;		line 24 in file "USART.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		None
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_setup
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _USART_INTERRUPT
  1597  06A5                     _USART_INTERRUPT:
  1598  06A5                     l1427:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _USART_INTERRUPT: []
  1601                           
  1602                           
  1603                           ;USART.c: 25:     INTCONbits.GIE = 1;
  1604  06A5  178B               	bsf	11,7	;volatile
  1605                           
  1606                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  1607  06A6  170B               	bsf	11,6	;volatile
  1608                           
  1609                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  1610  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  1611  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  1612  06A9  168C               	bsf	12,5	;volatile
  1613  06AA                     l279:
  1614  06AA  0008               	return
  1615  06AB                     __end_of_USART_INTERRUPT:
  1616                           
  1617                           	psect	text5
  1618  0456                     __ptext5:	
  1619 ;; *************** function _I2C_Master_Init *****************
  1620 ;; Defined at:
  1621 ;;		line 21 in file "I2C.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  c               4   13[BANK0 ] const unsigned long 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       4       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          4       0       0       0       0
  1638 ;;      Totals:         4       4       0       0       0
  1639 ;;Total ram usage:        8 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    2
  1642 ;; This function calls:
  1643 ;;		___lldiv
  1644 ;; This function is called by:
  1645 ;;		_setup
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _I2C_Master_Init
  1651  0456                     _I2C_Master_Init:
  1652  0456                     l1729:	
  1653                           ;incstack = 0
  1654                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1655                           
  1656                           
  1657                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1658  0456  3028               	movlw	40
  1659  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0459  0094               	movwf	20	;volatile
  1662  045A                     l1731:
  1663                           
  1664                           ;I2C.c: 28:     SSPCON2 = 0;
  1665  045A  1683               	bsf	3,5	;RP0=1, select bank1
  1666  045B  1303               	bcf	3,6	;RP1=0, select bank1
  1667  045C  0191               	clrf	17	;volatile
  1668  045D                     l1733:
  1669                           
  1670                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1671  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1672  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1673  045F  0867               	movf	I2C_Master_Init@c,w
  1674  0460  00F4               	movwf	??_I2C_Master_Init
  1675  0461  0868               	movf	I2C_Master_Init@c+1,w
  1676  0462  00F5               	movwf	??_I2C_Master_Init+1
  1677  0463  0869               	movf	I2C_Master_Init@c+2,w
  1678  0464  00F6               	movwf	??_I2C_Master_Init+2
  1679  0465  086A               	movf	I2C_Master_Init@c+3,w
  1680  0466  00F7               	movwf	??_I2C_Master_Init+3
  1681  0467  3002               	movlw	2
  1682  0468                     u1015:
  1683  0468  1003               	clrc
  1684  0469  0DF4               	rlf	??_I2C_Master_Init,f
  1685  046A  0DF5               	rlf	??_I2C_Master_Init+1,f
  1686  046B  0DF6               	rlf	??_I2C_Master_Init+2,f
  1687  046C  0DF7               	rlf	??_I2C_Master_Init+3,f
  1688  046D                     u1010:
  1689  046D  3EFF               	addlw	-1
  1690  046E  1D03               	skipz
  1691  046F  2C68               	goto	u1015
  1692  0470  0877               	movf	??_I2C_Master_Init+3,w
  1693  0471  00DD               	movwf	___lldiv@divisor+3
  1694  0472  0876               	movf	??_I2C_Master_Init+2,w
  1695  0473  00DC               	movwf	___lldiv@divisor+2
  1696  0474  0875               	movf	??_I2C_Master_Init+1,w
  1697  0475  00DB               	movwf	___lldiv@divisor+1
  1698  0476  0874               	movf	??_I2C_Master_Init,w
  1699  0477  00DA               	movwf	___lldiv@divisor
  1700  0478  3000               	movlw	0
  1701  0479  00E1               	movwf	___lldiv@dividend+3
  1702  047A  307A               	movlw	122
  1703  047B  00E0               	movwf	___lldiv@dividend+2
  1704  047C  3012               	movlw	18
  1705  047D  00DF               	movwf	___lldiv@dividend+1
  1706  047E  3000               	movlw	0
  1707  047F  00DE               	movwf	___lldiv@dividend
  1708  0480  120A  118A  22E9  120A  118A  	fcall	___lldiv
  1709  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0487  085A               	movf	?___lldiv,w
  1712  0488  3EFF               	addlw	255
  1713  0489  1683               	bsf	3,5	;RP0=1, select bank1
  1714  048A  1303               	bcf	3,6	;RP1=0, select bank1
  1715  048B  0093               	movwf	19	;volatile
  1716  048C                     l1735:
  1717                           
  1718                           ;I2C.c: 36:     SSPSTAT = 0;
  1719  048C  0194               	clrf	20	;volatile
  1720  048D                     l1737:
  1721                           
  1722                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1723  048D  1587               	bsf	7,3	;volatile
  1724  048E                     l1739:
  1725                           
  1726                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1727  048E  1607               	bsf	7,4	;volatile
  1728  048F                     l157:
  1729  048F  0008               	return
  1730  0490                     __end_of_I2C_Master_Init:
  1731                           
  1732                           	psect	text6
  1733  02E9                     __ptext6:	
  1734 ;; *************** function ___lldiv *****************
  1735 ;; Defined at:
  1736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  divisor         4    0[BANK0 ] unsigned long 
  1739 ;;  dividend        4    4[BANK0 ] unsigned long 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  quotient        4    8[BANK0 ] unsigned long 
  1742 ;;  counter         1   12[BANK0 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  4    0[BANK0 ] unsigned long 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       8       0       0       0
  1753 ;;      Locals:         0       5       0       0       0
  1754 ;;      Temps:          1       0       0       0       0
  1755 ;;      Totals:         1      13       0       0       0
  1756 ;;Total ram usage:       14 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_I2C_Master_Init
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function ___lldiv
  1768  02E9                     ___lldiv:
  1769  02E9                     l1669:	
  1770                           ;incstack = 0
  1771                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1772                           
  1773  02E9  3000               	movlw	0
  1774  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1775  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1776  02EC  00E5               	movwf	___lldiv@quotient+3
  1777  02ED  3000               	movlw	0
  1778  02EE  00E4               	movwf	___lldiv@quotient+2
  1779  02EF  3000               	movlw	0
  1780  02F0  00E3               	movwf	___lldiv@quotient+1
  1781  02F1  3000               	movlw	0
  1782  02F2  00E2               	movwf	___lldiv@quotient
  1783  02F3  085D               	movf	___lldiv@divisor+3,w
  1784  02F4  045C               	iorwf	___lldiv@divisor+2,w
  1785  02F5  045B               	iorwf	___lldiv@divisor+1,w
  1786  02F6  045A               	iorwf	___lldiv@divisor,w
  1787  02F7  1903               	skipnz
  1788  02F8  2AFA               	goto	u901
  1789  02F9  2AFB               	goto	u900
  1790  02FA                     u901:
  1791  02FA  2B48               	goto	l1689
  1792  02FB                     u900:
  1793  02FB                     l1671:
  1794  02FB  01E6               	clrf	___lldiv@counter
  1795  02FC  0AE6               	incf	___lldiv@counter,f
  1796  02FD  2B0B               	goto	l1675
  1797  02FE                     l1673:
  1798  02FE  3001               	movlw	1
  1799  02FF  00F3               	movwf	??___lldiv
  1800  0300                     u915:
  1801  0300  1003               	clrc
  1802  0301  0DDA               	rlf	___lldiv@divisor,f
  1803  0302  0DDB               	rlf	___lldiv@divisor+1,f
  1804  0303  0DDC               	rlf	___lldiv@divisor+2,f
  1805  0304  0DDD               	rlf	___lldiv@divisor+3,f
  1806  0305  0BF3               	decfsz	??___lldiv,f
  1807  0306  2B00               	goto	u915
  1808  0307  3001               	movlw	1
  1809  0308  00F3               	movwf	??___lldiv
  1810  0309  0873               	movf	??___lldiv,w
  1811  030A  07E6               	addwf	___lldiv@counter,f
  1812  030B                     l1675:
  1813  030B  1FDD               	btfss	___lldiv@divisor+3,7
  1814  030C  2B0E               	goto	u921
  1815  030D  2B0F               	goto	u920
  1816  030E                     u921:
  1817  030E  2AFE               	goto	l1673
  1818  030F                     u920:
  1819  030F                     l1677:
  1820  030F  3001               	movlw	1
  1821  0310  00F3               	movwf	??___lldiv
  1822  0311                     u935:
  1823  0311  1003               	clrc
  1824  0312  0DE2               	rlf	___lldiv@quotient,f
  1825  0313  0DE3               	rlf	___lldiv@quotient+1,f
  1826  0314  0DE4               	rlf	___lldiv@quotient+2,f
  1827  0315  0DE5               	rlf	___lldiv@quotient+3,f
  1828  0316  0BF3               	decfsz	??___lldiv,f
  1829  0317  2B11               	goto	u935
  1830  0318                     l1679:
  1831  0318  085D               	movf	___lldiv@divisor+3,w
  1832  0319  0261               	subwf	___lldiv@dividend+3,w
  1833  031A  1D03               	skipz
  1834  031B  2B26               	goto	u945
  1835  031C  085C               	movf	___lldiv@divisor+2,w
  1836  031D  0260               	subwf	___lldiv@dividend+2,w
  1837  031E  1D03               	skipz
  1838  031F  2B26               	goto	u945
  1839  0320  085B               	movf	___lldiv@divisor+1,w
  1840  0321  025F               	subwf	___lldiv@dividend+1,w
  1841  0322  1D03               	skipz
  1842  0323  2B26               	goto	u945
  1843  0324  085A               	movf	___lldiv@divisor,w
  1844  0325  025E               	subwf	___lldiv@dividend,w
  1845  0326                     u945:
  1846  0326  1C03               	skipc
  1847  0327  2B29               	goto	u941
  1848  0328  2B2A               	goto	u940
  1849  0329                     u941:
  1850  0329  2B39               	goto	l1685
  1851  032A                     u940:
  1852  032A                     l1681:
  1853  032A  085A               	movf	___lldiv@divisor,w
  1854  032B  02DE               	subwf	___lldiv@dividend,f
  1855  032C  085B               	movf	___lldiv@divisor+1,w
  1856  032D  1C03               	skipc
  1857  032E  0F5B               	incfsz	___lldiv@divisor+1,w
  1858  032F  02DF               	subwf	___lldiv@dividend+1,f
  1859  0330  085C               	movf	___lldiv@divisor+2,w
  1860  0331  1C03               	skipc
  1861  0332  0F5C               	incfsz	___lldiv@divisor+2,w
  1862  0333  02E0               	subwf	___lldiv@dividend+2,f
  1863  0334  085D               	movf	___lldiv@divisor+3,w
  1864  0335  1C03               	skipc
  1865  0336  0F5D               	incfsz	___lldiv@divisor+3,w
  1866  0337  02E1               	subwf	___lldiv@dividend+3,f
  1867  0338                     l1683:
  1868  0338  1462               	bsf	___lldiv@quotient,0
  1869  0339                     l1685:
  1870  0339  3001               	movlw	1
  1871  033A                     u955:
  1872  033A  1003               	clrc
  1873  033B  0CDD               	rrf	___lldiv@divisor+3,f
  1874  033C  0CDC               	rrf	___lldiv@divisor+2,f
  1875  033D  0CDB               	rrf	___lldiv@divisor+1,f
  1876  033E  0CDA               	rrf	___lldiv@divisor,f
  1877  033F  3EFF               	addlw	-1
  1878  0340  1D03               	skipz
  1879  0341  2B3A               	goto	u955
  1880  0342                     l1687:
  1881  0342  3001               	movlw	1
  1882  0343  02E6               	subwf	___lldiv@counter,f
  1883  0344  1D03               	btfss	3,2
  1884  0345  2B47               	goto	u961
  1885  0346  2B48               	goto	u960
  1886  0347                     u961:
  1887  0347  2B0F               	goto	l1677
  1888  0348                     u960:
  1889  0348                     l1689:
  1890  0348  0865               	movf	___lldiv@quotient+3,w
  1891  0349  00DD               	movwf	?___lldiv+3
  1892  034A  0864               	movf	___lldiv@quotient+2,w
  1893  034B  00DC               	movwf	?___lldiv+2
  1894  034C  0863               	movf	___lldiv@quotient+1,w
  1895  034D  00DB               	movwf	?___lldiv+1
  1896  034E  0862               	movf	___lldiv@quotient,w
  1897  034F  00DA               	movwf	?___lldiv
  1898  0350                     l419:
  1899  0350  0008               	return
  1900  0351                     __end_of___lldiv:
  1901                           
  1902                           	psect	text7
  1903  03AC                     __ptext7:	
  1904 ;; *************** function _Write_to_RTC *****************
  1905 ;; Defined at:
  1906 ;;		line 197 in file "main_prueba3_mini2.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0
  1923 ;;      Totals:         0       0       0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    3
  1927 ;; This function calls:
  1928 ;;		_I2C_Master_Start
  1929 ;;		_I2C_Master_Stop
  1930 ;;		_I2C_Master_Write
  1931 ;; This function is called by:
  1932 ;;		_main
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           
  1937                           ;psect for function _Write_to_RTC
  1938  03AC                     _Write_to_RTC:
  1939  03AC                     l1821:	
  1940                           ;incstack = 0
  1941                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  1942                           
  1943                           
  1944                           ;main_prueba3_mini2.c: 198:     I2C_Master_Start();
  1945  03AC  120A  118A  2685  120A  118A  	fcall	_I2C_Master_Start
  1946                           
  1947                           ;main_prueba3_mini2.c: 199:     I2C_Master_Write(0xD0);
  1948  03B1  30D0               	movlw	208
  1949  03B2  00F3               	movwf	I2C_Master_Write@d
  1950  03B3  3000               	movlw	0
  1951  03B4  00F4               	movwf	I2C_Master_Write@d+1
  1952  03B5  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1953                           
  1954                           ;main_prueba3_mini2.c: 200:     I2C_Master_Write(0);
  1955  03BA  3000               	movlw	0
  1956  03BB  00F3               	movwf	I2C_Master_Write@d
  1957  03BC  00F4               	movwf	I2C_Master_Write@d+1
  1958  03BD  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1959                           
  1960                           ;main_prueba3_mini2.c: 201:     I2C_Master_Write(0);
  1961  03C2  3000               	movlw	0
  1962  03C3  00F3               	movwf	I2C_Master_Write@d
  1963  03C4  00F4               	movwf	I2C_Master_Write@d+1
  1964  03C5  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1965                           
  1966                           ;main_prueba3_mini2.c: 202:     I2C_Master_Write(3);
  1967  03CA  3003               	movlw	3
  1968  03CB  00F3               	movwf	I2C_Master_Write@d
  1969  03CC  3000               	movlw	0
  1970  03CD  00F4               	movwf	I2C_Master_Write@d+1
  1971  03CE  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1972                           
  1973                           ;main_prueba3_mini2.c: 203:     I2C_Master_Write(10);
  1974  03D3  300A               	movlw	10
  1975  03D4  00F3               	movwf	I2C_Master_Write@d
  1976  03D5  3000               	movlw	0
  1977  03D6  00F4               	movwf	I2C_Master_Write@d+1
  1978  03D7  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1979                           
  1980                           ;main_prueba3_mini2.c: 204:     I2C_Master_Write(1);
  1981  03DC  3001               	movlw	1
  1982  03DD  00F3               	movwf	I2C_Master_Write@d
  1983  03DE  3000               	movlw	0
  1984  03DF  00F4               	movwf	I2C_Master_Write@d+1
  1985  03E0  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1986                           
  1987                           ;main_prueba3_mini2.c: 205:     I2C_Master_Write(6);
  1988  03E5  3006               	movlw	6
  1989  03E6  00F3               	movwf	I2C_Master_Write@d
  1990  03E7  3000               	movlw	0
  1991  03E8  00F4               	movwf	I2C_Master_Write@d+1
  1992  03E9  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  1993                           
  1994                           ;main_prueba3_mini2.c: 206:     I2C_Master_Write(3);
  1995  03EE  3003               	movlw	3
  1996  03EF  00F3               	movwf	I2C_Master_Write@d
  1997  03F0  3000               	movlw	0
  1998  03F1  00F4               	movwf	I2C_Master_Write@d+1
  1999  03F2  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  2000                           
  2001                           ;main_prueba3_mini2.c: 207:     I2C_Master_Write(27);
  2002  03F7  301B               	movlw	27
  2003  03F8  00F3               	movwf	I2C_Master_Write@d
  2004  03F9  3000               	movlw	0
  2005  03FA  00F4               	movwf	I2C_Master_Write@d+1
  2006  03FB  120A  118A  2672  120A  118A  	fcall	_I2C_Master_Write
  2007                           
  2008                           ;main_prueba3_mini2.c: 208:     I2C_Master_Stop();
  2009  0400  120A  118A  267C  120A  118A  	fcall	_I2C_Master_Stop
  2010  0405                     l125:
  2011  0405  0008               	return
  2012  0406                     __end_of_Write_to_RTC:
  2013                           
  2014                           	psect	text8
  2015  0672                     __ptext8:	
  2016 ;; *************** function _I2C_Master_Write *****************
  2017 ;; Defined at:
  2018 ;;		line 84 in file "I2C.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  d               2    3[COMMON] unsigned int 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         2       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0
  2035 ;;      Totals:         2       0       0       0       0
  2036 ;;Total ram usage:        2 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    2
  2039 ;; This function calls:
  2040 ;;		_I2C_Master_Wait
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;;		_Write_to_RTC
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _I2C_Master_Write
  2049  0672                     _I2C_Master_Write:
  2050  0672                     l1697:	
  2051                           ;incstack = 0
  2052                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2053                           
  2054                           
  2055                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2056  0672  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Wait
  2057  0677                     l1699:
  2058                           
  2059                           ;I2C.c: 87:     SSPBUF = d;
  2060  0677  0873               	movf	I2C_Master_Write@d,w
  2061  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2063  067A  0093               	movwf	19	;volatile
  2064  067B                     l175:
  2065  067B  0008               	return
  2066  067C                     __end_of_I2C_Master_Write:
  2067                           
  2068                           	psect	text9
  2069  067C                     __ptext9:	
  2070 ;; *************** function _I2C_Master_Stop *****************
  2071 ;; Defined at:
  2072 ;;		line 73 in file "I2C.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0
  2089 ;;      Totals:         0       0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    2
  2093 ;; This function calls:
  2094 ;;		_I2C_Master_Wait
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;;		_Write_to_RTC
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _I2C_Master_Stop
  2103  067C                     _I2C_Master_Stop:
  2104  067C                     l1701:	
  2105                           ;incstack = 0
  2106                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2107                           
  2108                           
  2109                           ;I2C.c: 75:     I2C_Master_Wait();
  2110  067C  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Wait
  2111  0681                     l1703:
  2112                           
  2113                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2114  0681  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0682  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0683  1511               	bsf	17,2	;volatile
  2117  0684                     l172:
  2118  0684  0008               	return
  2119  0685                     __end_of_I2C_Master_Stop:
  2120                           
  2121                           	psect	text10
  2122  0685                     __ptext10:	
  2123 ;; *************** function _I2C_Master_Start *****************
  2124 ;; Defined at:
  2125 ;;		line 56 in file "I2C.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0
  2142 ;;      Totals:         0       0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		_I2C_Master_Wait
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;;		_Write_to_RTC
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _I2C_Master_Start
  2156  0685                     _I2C_Master_Start:
  2157  0685                     l1693:	
  2158                           ;incstack = 0
  2159                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2160                           
  2161                           
  2162                           ;I2C.c: 57:     I2C_Master_Wait();
  2163  0685  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Wait
  2164  068A                     l1695:
  2165                           
  2166                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  2167  068A  1683               	bsf	3,5	;RP0=1, select bank1
  2168  068B  1303               	bcf	3,6	;RP1=0, select bank1
  2169  068C  1411               	bsf	17,0	;volatile
  2170  068D                     l166:
  2171  068D  0008               	return
  2172  068E                     __end_of_I2C_Master_Start:
  2173                           
  2174                           	psect	text11
  2175  0523                     __ptext11:	
  2176 ;; *************** function _Write_USART_String *****************
  2177 ;; Defined at:
  2178 ;;		line 37 in file "USART.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  a               2    4[COMMON] PTR unsigned char 
  2181 ;;		 -> Date(17), STR_1(3), Time(15), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  i               1    7[COMMON] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         2       0       0       0       0
  2194 ;;      Locals:         1       0       0       0       0
  2195 ;;      Temps:          1       0       0       0       0
  2196 ;;      Totals:         4       0       0       0       0
  2197 ;;Total ram usage:        4 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    2
  2200 ;; This function calls:
  2201 ;;		_Write_USART
  2202 ;; This function is called by:
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _Write_USART_String
  2209  0523                     _Write_USART_String:
  2210  0523                     l1581:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2213                           
  2214                           
  2215                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2216  0523  01F7               	clrf	Write_USART_String@i
  2217  0524  2D3A               	goto	l1587
  2218  0525                     l1583:
  2219                           
  2220                           ;USART.c: 40:         Write_USART(a[i]);
  2221  0525  0877               	movf	Write_USART_String@i,w
  2222  0526  0774               	addwf	Write_USART_String@a,w
  2223  0527  0084               	movwf	4
  2224  0528  0875               	movf	Write_USART_String@a+1,w
  2225  0529  1803               	skipnc
  2226  052A  0A75               	incf	Write_USART_String@a+1,w
  2227  052B  00FF               	movwf	btemp+1
  2228  052C  120A  118A  261A  120A  118A  	fcall	stringtab
  2229  0531  120A  118A  2666  120A  118A  	fcall	_Write_USART
  2230  0536                     l1585:
  2231                           
  2232                           ;USART.c: 41:     }
  2233  0536  3001               	movlw	1
  2234  0537  00F6               	movwf	??_Write_USART_String
  2235  0538  0876               	movf	??_Write_USART_String,w
  2236  0539  07F7               	addwf	Write_USART_String@i,f
  2237  053A                     l1587:
  2238  053A  0877               	movf	Write_USART_String@i,w
  2239  053B  0774               	addwf	Write_USART_String@a,w
  2240  053C  0084               	movwf	4
  2241  053D  0875               	movf	Write_USART_String@a+1,w
  2242  053E  1803               	skipnc
  2243  053F  0A75               	incf	Write_USART_String@a+1,w
  2244  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0542  00FF               	movwf	btemp+1
  2247  0543  120A  118A  261A  120A  118A  	fcall	stringtab
  2248  0548  3A00               	xorlw	0
  2249  0549  1D03               	skipz
  2250  054A  2D4C               	goto	u871
  2251  054B  2D4D               	goto	u870
  2252  054C                     u871:
  2253  054C  2D25               	goto	l1583
  2254  054D                     u870:
  2255  054D                     l291:
  2256  054D  0008               	return
  2257  054E                     __end_of_Write_USART_String:
  2258                           
  2259                           	psect	text12
  2260  0666                     __ptext12:	
  2261 ;; *************** function _Write_USART *****************
  2262 ;; Defined at:
  2263 ;;		line 33 in file "USART.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  a               1    wreg     unsigned char 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  a               1    3[COMMON] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       0       0       0       0
  2278 ;;      Locals:         1       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0
  2280 ;;      Totals:         1       0       0       0       0
  2281 ;;Total ram usage:        1 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;;		_Write_USART_String
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _Write_USART
  2294  0666                     _Write_USART:
  2295                           
  2296                           ;incstack = 0
  2297                           ; Regs used in _Write_USART: [wreg]
  2298                           ;Write_USART@a stored from wreg
  2299  0666  00F3               	movwf	Write_USART@a
  2300  0667                     l1379:
  2301  0667                     l282:	
  2302                           ;USART.c: 34:     while(!TRMT);
  2303                           
  2304  0667  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0668  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0669  1C98               	btfss	24,1	;volatile
  2307  066A  2E6C               	goto	u611
  2308  066B  2E6D               	goto	u610
  2309  066C                     u611:
  2310  066C  2E67               	goto	l282
  2311  066D                     u610:
  2312  066D                     l1381:
  2313                           
  2314                           ;USART.c: 35:     TXREG=a;
  2315  066D  0873               	movf	Write_USART@a,w
  2316  066E  1283               	bcf	3,5	;RP0=0, select bank0
  2317  066F  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0670  0099               	movwf	25	;volatile
  2319  0671                     l285:
  2320  0671  0008               	return
  2321  0672                     __end_of_Write_USART:
  2322                           
  2323                           	psect	text13
  2324  002C                     __ptext13:	
  2325 ;; *************** function _RTC_display *****************
  2326 ;; Defined at:
  2327 ;;		line 163 in file "main_prueba3_mini2.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0
  2343 ;;      Temps:          0       3       0       0       0
  2344 ;;      Totals:         0       3       0       0       0
  2345 ;;Total ram usage:        3 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		_Lcd_Set_Cursor
  2350 ;;		_Lcd_Write_String
  2351 ;;		___awdiv
  2352 ;;		___awmod
  2353 ;;		_bcd_to_decimal
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _RTC_display
  2361  002C                     _RTC_display:
  2362  002C                     l1843:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2365                           
  2366                           
  2367                           ;main_prueba3_mini2.c: 165:     second = bcd_to_decimal(second);
  2368  002C  087A               	movf	_second,w
  2369  002D  120A  118A  25B9  120A  118A  	fcall	_bcd_to_decimal
  2370  0032  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0033  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0034  00DE               	movwf	??_RTC_display
  2373  0035  085E               	movf	??_RTC_display,w
  2374  0036  00FA               	movwf	_second
  2375                           
  2376                           ;main_prueba3_mini2.c: 166:     minute = bcd_to_decimal(minute);
  2377  0037  0879               	movf	_minute,w
  2378  0038  120A  118A  25B9  120A  118A  	fcall	_bcd_to_decimal
  2379  003D  1283               	bcf	3,5	;RP0=0, select bank0
  2380  003E  1303               	bcf	3,6	;RP1=0, select bank0
  2381  003F  00DE               	movwf	??_RTC_display
  2382  0040  085E               	movf	??_RTC_display,w
  2383  0041  00F9               	movwf	_minute
  2384                           
  2385                           ;main_prueba3_mini2.c: 167:     hour = bcd_to_decimal(hour);
  2386  0042  0858               	movf	_hour,w
  2387  0043  120A  118A  25B9  120A  118A  	fcall	_bcd_to_decimal
  2388  0048  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0049  1303               	bcf	3,6	;RP1=0, select bank0
  2390  004A  00DE               	movwf	??_RTC_display
  2391  004B  085E               	movf	??_RTC_display,w
  2392  004C  00D8               	movwf	_hour
  2393                           
  2394                           ;main_prueba3_mini2.c: 168:     m_day = bcd_to_decimal(m_day);
  2395  004D  0857               	movf	_m_day,w
  2396  004E  120A  118A  25B9  120A  118A  	fcall	_bcd_to_decimal
  2397  0053  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0054  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0055  00DE               	movwf	??_RTC_display
  2400  0056  085E               	movf	??_RTC_display,w
  2401  0057  00D7               	movwf	_m_day
  2402                           
  2403                           ;main_prueba3_mini2.c: 169:     month = bcd_to_decimal(month);
  2404  0058  0856               	movf	_month,w
  2405  0059  120A  118A  25B9  120A  118A  	fcall	_bcd_to_decimal
  2406  005E  1283               	bcf	3,5	;RP0=0, select bank0
  2407  005F  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0060  00DE               	movwf	??_RTC_display
  2409  0061  085E               	movf	??_RTC_display,w
  2410  0062  00D6               	movwf	_month
  2411                           
  2412                           ;main_prueba3_mini2.c: 170:     year = bcd_to_decimal(year);
  2413  0063  0855               	movf	_year,w
  2414  0064  120A  118A  25B9  120A  118A  	fcall	_bcd_to_decimal
  2415  0069  1283               	bcf	3,5	;RP0=0, select bank0
  2416  006A  1303               	bcf	3,6	;RP1=0, select bank0
  2417  006B  00DE               	movwf	??_RTC_display
  2418  006C  085E               	movf	??_RTC_display,w
  2419  006D  00D5               	movwf	_year
  2420                           
  2421                           ;main_prueba3_mini2.c: 174:     Time[6] = hour / 10 + '0';
  2422  006E  300A               	movlw	10
  2423  006F  00F3               	movwf	___awdiv@divisor
  2424  0070  3000               	movlw	0
  2425  0071  00F4               	movwf	___awdiv@divisor+1
  2426  0072  0858               	movf	_hour,w
  2427  0073  00DE               	movwf	??_RTC_display
  2428  0074  01DF               	clrf	??_RTC_display+1
  2429  0075  085E               	movf	??_RTC_display,w
  2430  0076  00F5               	movwf	___awdiv@dividend
  2431  0077  085F               	movf	??_RTC_display+1,w
  2432  0078  00F6               	movwf	___awdiv@dividend+1
  2433  0079  120A  118A  2280  120A  118A  	fcall	___awdiv
  2434  007E  0873               	movf	?___awdiv,w
  2435  007F  3E30               	addlw	48
  2436  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0082  00E0               	movwf	??_RTC_display+2
  2439  0083  0860               	movf	??_RTC_display+2,w
  2440  0084  00B7               	movwf	_Time+6
  2441                           
  2442                           ;main_prueba3_mini2.c: 175:     Time[7] = hour % 10 + '0';
  2443  0085  300A               	movlw	10
  2444  0086  00F3               	movwf	___awmod@divisor
  2445  0087  3000               	movlw	0
  2446  0088  00F4               	movwf	___awmod@divisor+1
  2447  0089  0858               	movf	_hour,w
  2448  008A  00DE               	movwf	??_RTC_display
  2449  008B  01DF               	clrf	??_RTC_display+1
  2450  008C  085E               	movf	??_RTC_display,w
  2451  008D  00F5               	movwf	___awmod@dividend
  2452  008E  085F               	movf	??_RTC_display+1,w
  2453  008F  00F6               	movwf	___awmod@dividend+1
  2454  0090  120A  118A  2351  120A  118A  	fcall	___awmod
  2455  0095  0873               	movf	?___awmod,w
  2456  0096  3E30               	addlw	48
  2457  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0099  00E0               	movwf	??_RTC_display+2
  2460  009A  0860               	movf	??_RTC_display+2,w
  2461  009B  00B8               	movwf	_Time+7
  2462                           
  2463                           ;main_prueba3_mini2.c: 176:     Time[9] = minute / 10 + '0';
  2464  009C  300A               	movlw	10
  2465  009D  00F3               	movwf	___awdiv@divisor
  2466  009E  3000               	movlw	0
  2467  009F  00F4               	movwf	___awdiv@divisor+1
  2468  00A0  0879               	movf	_minute,w
  2469  00A1  00DE               	movwf	??_RTC_display
  2470  00A2  01DF               	clrf	??_RTC_display+1
  2471  00A3  085E               	movf	??_RTC_display,w
  2472  00A4  00F5               	movwf	___awdiv@dividend
  2473  00A5  085F               	movf	??_RTC_display+1,w
  2474  00A6  00F6               	movwf	___awdiv@dividend+1
  2475  00A7  120A  118A  2280  120A  118A  	fcall	___awdiv
  2476  00AC  0873               	movf	?___awdiv,w
  2477  00AD  3E30               	addlw	48
  2478  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2479  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2480  00B0  00E0               	movwf	??_RTC_display+2
  2481  00B1  0860               	movf	??_RTC_display+2,w
  2482  00B2  00BA               	movwf	_Time+9
  2483                           
  2484                           ;main_prueba3_mini2.c: 177:     Time[10] = minute % 10 + '0';
  2485  00B3  300A               	movlw	10
  2486  00B4  00F3               	movwf	___awmod@divisor
  2487  00B5  3000               	movlw	0
  2488  00B6  00F4               	movwf	___awmod@divisor+1
  2489  00B7  0879               	movf	_minute,w
  2490  00B8  00DE               	movwf	??_RTC_display
  2491  00B9  01DF               	clrf	??_RTC_display+1
  2492  00BA  085E               	movf	??_RTC_display,w
  2493  00BB  00F5               	movwf	___awmod@dividend
  2494  00BC  085F               	movf	??_RTC_display+1,w
  2495  00BD  00F6               	movwf	___awmod@dividend+1
  2496  00BE  120A  118A  2351  120A  118A  	fcall	___awmod
  2497  00C3  0873               	movf	?___awmod,w
  2498  00C4  3E30               	addlw	48
  2499  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2500  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2501  00C7  00E0               	movwf	??_RTC_display+2
  2502  00C8  0860               	movf	??_RTC_display+2,w
  2503  00C9  00BB               	movwf	_Time+10
  2504                           
  2505                           ;main_prueba3_mini2.c: 178:     Time[12] = second / 10 + '0';
  2506  00CA  300A               	movlw	10
  2507  00CB  00F3               	movwf	___awdiv@divisor
  2508  00CC  3000               	movlw	0
  2509  00CD  00F4               	movwf	___awdiv@divisor+1
  2510  00CE  087A               	movf	_second,w
  2511  00CF  00DE               	movwf	??_RTC_display
  2512  00D0  01DF               	clrf	??_RTC_display+1
  2513  00D1  085E               	movf	??_RTC_display,w
  2514  00D2  00F5               	movwf	___awdiv@dividend
  2515  00D3  085F               	movf	??_RTC_display+1,w
  2516  00D4  00F6               	movwf	___awdiv@dividend+1
  2517  00D5  120A  118A  2280  120A  118A  	fcall	___awdiv
  2518  00DA  0873               	movf	?___awdiv,w
  2519  00DB  3E30               	addlw	48
  2520  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  2521  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  2522  00DE  00E0               	movwf	??_RTC_display+2
  2523  00DF  0860               	movf	??_RTC_display+2,w
  2524  00E0  00BD               	movwf	_Time+12
  2525                           
  2526                           ;main_prueba3_mini2.c: 179:     Time[13] = second % 10 + '0';
  2527  00E1  300A               	movlw	10
  2528  00E2  00F3               	movwf	___awmod@divisor
  2529  00E3  3000               	movlw	0
  2530  00E4  00F4               	movwf	___awmod@divisor+1
  2531  00E5  087A               	movf	_second,w
  2532  00E6  00DE               	movwf	??_RTC_display
  2533  00E7  01DF               	clrf	??_RTC_display+1
  2534  00E8  085E               	movf	??_RTC_display,w
  2535  00E9  00F5               	movwf	___awmod@dividend
  2536  00EA  085F               	movf	??_RTC_display+1,w
  2537  00EB  00F6               	movwf	___awmod@dividend+1
  2538  00EC  120A  118A  2351  120A  118A  	fcall	___awmod
  2539  00F1  0873               	movf	?___awmod,w
  2540  00F2  3E30               	addlw	48
  2541  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2542  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2543  00F5  00E0               	movwf	??_RTC_display+2
  2544  00F6  0860               	movf	??_RTC_display+2,w
  2545  00F7  00BE               	movwf	_Time+13
  2546                           
  2547                           ;main_prueba3_mini2.c: 182:     Date[6] = m_day / 10 + '0';
  2548  00F8  300A               	movlw	10
  2549  00F9  00F3               	movwf	___awdiv@divisor
  2550  00FA  3000               	movlw	0
  2551  00FB  00F4               	movwf	___awdiv@divisor+1
  2552  00FC  0857               	movf	_m_day,w
  2553  00FD  00DE               	movwf	??_RTC_display
  2554  00FE  01DF               	clrf	??_RTC_display+1
  2555  00FF  085E               	movf	??_RTC_display,w
  2556  0100  00F5               	movwf	___awdiv@dividend
  2557  0101  085F               	movf	??_RTC_display+1,w
  2558  0102  00F6               	movwf	___awdiv@dividend+1
  2559  0103  120A  118A  2280  120A  118A  	fcall	___awdiv
  2560  0108  0873               	movf	?___awdiv,w
  2561  0109  3E30               	addlw	48
  2562  010A  1283               	bcf	3,5	;RP0=0, select bank0
  2563  010B  1303               	bcf	3,6	;RP1=0, select bank0
  2564  010C  00E0               	movwf	??_RTC_display+2
  2565  010D  0860               	movf	??_RTC_display+2,w
  2566  010E  00A6               	movwf	_Date+6
  2567                           
  2568                           ;main_prueba3_mini2.c: 183:     Date[7] = m_day % 10 + '0';
  2569  010F  300A               	movlw	10
  2570  0110  00F3               	movwf	___awmod@divisor
  2571  0111  3000               	movlw	0
  2572  0112  00F4               	movwf	___awmod@divisor+1
  2573  0113  0857               	movf	_m_day,w
  2574  0114  00DE               	movwf	??_RTC_display
  2575  0115  01DF               	clrf	??_RTC_display+1
  2576  0116  085E               	movf	??_RTC_display,w
  2577  0117  00F5               	movwf	___awmod@dividend
  2578  0118  085F               	movf	??_RTC_display+1,w
  2579  0119  00F6               	movwf	___awmod@dividend+1
  2580  011A  120A  118A  2351  120A  118A  	fcall	___awmod
  2581  011F  0873               	movf	?___awmod,w
  2582  0120  3E30               	addlw	48
  2583  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0123  00E0               	movwf	??_RTC_display+2
  2586  0124  0860               	movf	??_RTC_display+2,w
  2587  0125  00A7               	movwf	_Date+7
  2588                           
  2589                           ;main_prueba3_mini2.c: 184:     Date[9] = month / 10 + '0';
  2590  0126  300A               	movlw	10
  2591  0127  00F3               	movwf	___awdiv@divisor
  2592  0128  3000               	movlw	0
  2593  0129  00F4               	movwf	___awdiv@divisor+1
  2594  012A  0856               	movf	_month,w
  2595  012B  00DE               	movwf	??_RTC_display
  2596  012C  01DF               	clrf	??_RTC_display+1
  2597  012D  085E               	movf	??_RTC_display,w
  2598  012E  00F5               	movwf	___awdiv@dividend
  2599  012F  085F               	movf	??_RTC_display+1,w
  2600  0130  00F6               	movwf	___awdiv@dividend+1
  2601  0131  120A  118A  2280  120A  118A  	fcall	___awdiv
  2602  0136  0873               	movf	?___awdiv,w
  2603  0137  3E30               	addlw	48
  2604  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2606  013A  00E0               	movwf	??_RTC_display+2
  2607  013B  0860               	movf	??_RTC_display+2,w
  2608  013C  00A9               	movwf	_Date+9
  2609                           
  2610                           ;main_prueba3_mini2.c: 185:     Date[10] = month % 10 + '0';
  2611  013D  300A               	movlw	10
  2612  013E  00F3               	movwf	___awmod@divisor
  2613  013F  3000               	movlw	0
  2614  0140  00F4               	movwf	___awmod@divisor+1
  2615  0141  0856               	movf	_month,w
  2616  0142  00DE               	movwf	??_RTC_display
  2617  0143  01DF               	clrf	??_RTC_display+1
  2618  0144  085E               	movf	??_RTC_display,w
  2619  0145  00F5               	movwf	___awmod@dividend
  2620  0146  085F               	movf	??_RTC_display+1,w
  2621  0147  00F6               	movwf	___awmod@dividend+1
  2622  0148  120A  118A  2351  120A  118A  	fcall	___awmod
  2623  014D  0873               	movf	?___awmod,w
  2624  014E  3E30               	addlw	48
  2625  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0151  00E0               	movwf	??_RTC_display+2
  2628  0152  0860               	movf	??_RTC_display+2,w
  2629  0153  00AA               	movwf	_Date+10
  2630                           
  2631                           ;main_prueba3_mini2.c: 186:     Date[14] = year / 10 + '0';
  2632  0154  300A               	movlw	10
  2633  0155  00F3               	movwf	___awdiv@divisor
  2634  0156  3000               	movlw	0
  2635  0157  00F4               	movwf	___awdiv@divisor+1
  2636  0158  0855               	movf	_year,w
  2637  0159  00DE               	movwf	??_RTC_display
  2638  015A  01DF               	clrf	??_RTC_display+1
  2639  015B  085E               	movf	??_RTC_display,w
  2640  015C  00F5               	movwf	___awdiv@dividend
  2641  015D  085F               	movf	??_RTC_display+1,w
  2642  015E  00F6               	movwf	___awdiv@dividend+1
  2643  015F  120A  118A  2280  120A  118A  	fcall	___awdiv
  2644  0164  0873               	movf	?___awdiv,w
  2645  0165  3E30               	addlw	48
  2646  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0168  00E0               	movwf	??_RTC_display+2
  2649  0169  0860               	movf	??_RTC_display+2,w
  2650  016A  00AE               	movwf	_Date+14
  2651                           
  2652                           ;main_prueba3_mini2.c: 187:     Date[15] = year % 10 + '0';
  2653  016B  300A               	movlw	10
  2654  016C  00F3               	movwf	___awmod@divisor
  2655  016D  3000               	movlw	0
  2656  016E  00F4               	movwf	___awmod@divisor+1
  2657  016F  0855               	movf	_year,w
  2658  0170  00DE               	movwf	??_RTC_display
  2659  0171  01DF               	clrf	??_RTC_display+1
  2660  0172  085E               	movf	??_RTC_display,w
  2661  0173  00F5               	movwf	___awmod@dividend
  2662  0174  085F               	movf	??_RTC_display+1,w
  2663  0175  00F6               	movwf	___awmod@dividend+1
  2664  0176  120A  118A  2351  120A  118A  	fcall	___awmod
  2665  017B  0873               	movf	?___awmod,w
  2666  017C  3E30               	addlw	48
  2667  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2668  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2669  017F  00E0               	movwf	??_RTC_display+2
  2670  0180  0860               	movf	??_RTC_display+2,w
  2671  0181  00AF               	movwf	_Date+15
  2672                           
  2673                           ;main_prueba3_mini2.c: 190:     Lcd_Set_Cursor(1,1);
  2674  0182  01F7               	clrf	Lcd_Set_Cursor@b
  2675  0183  0AF7               	incf	Lcd_Set_Cursor@b,f
  2676  0184  3001               	movlw	1
  2677  0185  120A  118A  254E  120A  118A  	fcall	_Lcd_Set_Cursor
  2678  018A                     l1845:
  2679                           
  2680                           ;main_prueba3_mini2.c: 191:     Lcd_Write_String(Time);
  2681  018A  3031               	movlw	(low (_Time| 0))& (0+255)
  2682  018B  120A  118A  2574  120A  118A  	fcall	_Lcd_Write_String
  2683  0190                     l1847:
  2684                           
  2685                           ;main_prueba3_mini2.c: 192:     Lcd_Set_Cursor(2,1);
  2686  0190  01F7               	clrf	Lcd_Set_Cursor@b
  2687  0191  0AF7               	incf	Lcd_Set_Cursor@b,f
  2688  0192  3002               	movlw	2
  2689  0193  120A  118A  254E  120A  118A  	fcall	_Lcd_Set_Cursor
  2690                           
  2691                           ;main_prueba3_mini2.c: 193:     Lcd_Write_String(Date);
  2692  0198  3020               	movlw	(low (_Date| 0))& (0+255)
  2693  0199  120A  118A  2574  120A  118A  	fcall	_Lcd_Write_String
  2694  019E                     l122:
  2695  019E  0008               	return
  2696  019F                     __end_of_RTC_display:
  2697                           
  2698                           	psect	text14
  2699  05B9                     __ptext14:	
  2700 ;; *************** function _bcd_to_decimal *****************
  2701 ;; Defined at:
  2702 ;;		line 154 in file "main_prueba3_mini2.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  number          1    wreg     unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  number          1    7[COMMON] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      unsigned char 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, pclath, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2716 ;;      Params:         0       0       0       0       0
  2717 ;;      Locals:         1       0       0       0       0
  2718 ;;      Temps:          0       3       0       0       0
  2719 ;;      Totals:         1       3       0       0       0
  2720 ;;Total ram usage:        4 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    2
  2723 ;; This function calls:
  2724 ;;		___bmul
  2725 ;; This function is called by:
  2726 ;;		_RTC_display
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _bcd_to_decimal
  2732  05B9                     _bcd_to_decimal:
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2736                           ;bcd_to_decimal@number stored from wreg
  2737  05B9  00F7               	movwf	bcd_to_decimal@number
  2738  05BA                     l1705:
  2739                           
  2740                           ;main_prueba3_mini2.c: 155:   return((number >> 4) * 10 + (number & 0x0F));
  2741  05BA  300F               	movlw	15
  2742  05BB  0577               	andwf	bcd_to_decimal@number,w
  2743  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2744  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2745  05BE  00DA               	movwf	??_bcd_to_decimal
  2746  05BF  300A               	movlw	10
  2747  05C0  00DB               	movwf	??_bcd_to_decimal+1
  2748  05C1  085B               	movf	??_bcd_to_decimal+1,w
  2749  05C2  00F3               	movwf	___bmul@multiplicand
  2750  05C3  0877               	movf	bcd_to_decimal@number,w
  2751  05C4  00DC               	movwf	??_bcd_to_decimal+2
  2752  05C5  3004               	movlw	4
  2753  05C6                     u975:
  2754  05C6  1003               	clrc
  2755  05C7  0CDC               	rrf	??_bcd_to_decimal+2,f
  2756  05C8  3EFF               	addlw	-1
  2757  05C9  1D03               	skipz
  2758  05CA  2DC6               	goto	u975
  2759  05CB  085C               	movf	??_bcd_to_decimal+2,w
  2760  05CC  120A  118A  2605  120A  118A  	fcall	___bmul
  2761  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2762  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2763  05D3  075A               	addwf	??_bcd_to_decimal,w
  2764  05D4                     l116:
  2765  05D4  0008               	return
  2766  05D5                     __end_of_bcd_to_decimal:
  2767                           
  2768                           	psect	text15
  2769  0605                     __ptext15:	
  2770 ;; *************** function ___bmul *****************
  2771 ;; Defined at:
  2772 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  multiplier      1    wreg     unsigned char 
  2775 ;;  multiplicand    1    3[COMMON] unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  multiplier      1    6[COMMON] unsigned char 
  2778 ;;  product         1    5[COMMON] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      unsigned char 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         1       0       0       0       0
  2789 ;;      Locals:         2       0       0       0       0
  2790 ;;      Temps:          1       0       0       0       0
  2791 ;;      Totals:         4       0       0       0       0
  2792 ;;Total ram usage:        4 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_bcd_to_decimal
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function ___bmul
  2804  0605                     ___bmul:
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2808                           ;___bmul@multiplier stored from wreg
  2809  0605  00F6               	movwf	___bmul@multiplier
  2810  0606                     l1329:
  2811  0606  01F5               	clrf	___bmul@product
  2812  0607                     l1331:
  2813  0607  1C76               	btfss	___bmul@multiplier,0
  2814  0608  2E0A               	goto	u521
  2815  0609  2E0B               	goto	u520
  2816  060A                     u521:
  2817  060A  2E0F               	goto	l1335
  2818  060B                     u520:
  2819  060B                     l1333:
  2820  060B  0873               	movf	___bmul@multiplicand,w
  2821  060C  00F4               	movwf	??___bmul
  2822  060D  0874               	movf	??___bmul,w
  2823  060E  07F5               	addwf	___bmul@product,f
  2824  060F                     l1335:
  2825  060F  1003               	clrc
  2826  0610  0DF3               	rlf	___bmul@multiplicand,f
  2827  0611                     l1337:
  2828  0611  1003               	clrc
  2829  0612  0CF6               	rrf	___bmul@multiplier,f
  2830  0613  0876               	movf	___bmul@multiplier,w
  2831  0614  1D03               	btfss	3,2
  2832  0615  2E17               	goto	u531
  2833  0616  2E18               	goto	u530
  2834  0617                     u531:
  2835  0617  2E07               	goto	l1331
  2836  0618                     u530:
  2837  0618                     l1339:
  2838  0618  0875               	movf	___bmul@product,w
  2839  0619                     l409:
  2840  0619  0008               	return
  2841  061A                     __end_of___bmul:
  2842                           
  2843                           	psect	text16
  2844  0351                     __ptext16:	
  2845 ;; *************** function ___awmod *****************
  2846 ;; Defined at:
  2847 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  divisor         2    3[COMMON] int 
  2850 ;;  dividend        2    5[COMMON] int 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  sign            1    1[BANK0 ] unsigned char 
  2853 ;;  counter         1    0[BANK0 ] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  2    3[COMMON] int 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2863 ;;      Params:         4       0       0       0       0
  2864 ;;      Locals:         0       2       0       0       0
  2865 ;;      Temps:          1       0       0       0       0
  2866 ;;      Totals:         5       2       0       0       0
  2867 ;;Total ram usage:        7 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_RTC_display
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function ___awmod
  2879  0351                     ___awmod:
  2880  0351                     l1741:	
  2881                           ;incstack = 0
  2882                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2883                           
  2884  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0353  01DB               	clrf	___awmod@sign
  2887  0354                     l1743:
  2888  0354  1FF6               	btfss	___awmod@dividend+1,7
  2889  0355  2B57               	goto	u1021
  2890  0356  2B58               	goto	u1020
  2891  0357                     u1021:
  2892  0357  2B5F               	goto	l1749
  2893  0358                     u1020:
  2894  0358                     l1745:
  2895  0358  09F5               	comf	___awmod@dividend,f
  2896  0359  09F6               	comf	___awmod@dividend+1,f
  2897  035A  0AF5               	incf	___awmod@dividend,f
  2898  035B  1903               	skipnz
  2899  035C  0AF6               	incf	___awmod@dividend+1,f
  2900  035D                     l1747:
  2901  035D  01DB               	clrf	___awmod@sign
  2902  035E  0ADB               	incf	___awmod@sign,f
  2903  035F                     l1749:
  2904  035F  1FF4               	btfss	___awmod@divisor+1,7
  2905  0360  2B62               	goto	u1031
  2906  0361  2B63               	goto	u1030
  2907  0362                     u1031:
  2908  0362  2B68               	goto	l1753
  2909  0363                     u1030:
  2910  0363                     l1751:
  2911  0363  09F3               	comf	___awmod@divisor,f
  2912  0364  09F4               	comf	___awmod@divisor+1,f
  2913  0365  0AF3               	incf	___awmod@divisor,f
  2914  0366  1903               	skipnz
  2915  0367  0AF4               	incf	___awmod@divisor+1,f
  2916  0368                     l1753:
  2917  0368  0873               	movf	___awmod@divisor,w
  2918  0369  0474               	iorwf	___awmod@divisor+1,w
  2919  036A  1903               	btfsc	3,2
  2920  036B  2B6D               	goto	u1041
  2921  036C  2B6E               	goto	u1040
  2922  036D                     u1041:
  2923  036D  2B9D               	goto	l1771
  2924  036E                     u1040:
  2925  036E                     l1755:
  2926  036E  01DA               	clrf	___awmod@counter
  2927  036F  0ADA               	incf	___awmod@counter,f
  2928  0370  2B7C               	goto	l1761
  2929  0371                     l1757:
  2930  0371  3001               	movlw	1
  2931  0372                     u1055:
  2932  0372  1003               	clrc
  2933  0373  0DF3               	rlf	___awmod@divisor,f
  2934  0374  0DF4               	rlf	___awmod@divisor+1,f
  2935  0375  3EFF               	addlw	-1
  2936  0376  1D03               	skipz
  2937  0377  2B72               	goto	u1055
  2938  0378                     l1759:
  2939  0378  3001               	movlw	1
  2940  0379  00F7               	movwf	??___awmod
  2941  037A  0877               	movf	??___awmod,w
  2942  037B  07DA               	addwf	___awmod@counter,f
  2943  037C                     l1761:
  2944  037C  1FF4               	btfss	___awmod@divisor+1,7
  2945  037D  2B7F               	goto	u1061
  2946  037E  2B80               	goto	u1060
  2947  037F                     u1061:
  2948  037F  2B71               	goto	l1757
  2949  0380                     u1060:
  2950  0380                     l1763:
  2951  0380  0874               	movf	___awmod@divisor+1,w
  2952  0381  0276               	subwf	___awmod@dividend+1,w
  2953  0382  1D03               	skipz
  2954  0383  2B86               	goto	u1075
  2955  0384  0873               	movf	___awmod@divisor,w
  2956  0385  0275               	subwf	___awmod@dividend,w
  2957  0386                     u1075:
  2958  0386  1C03               	skipc
  2959  0387  2B89               	goto	u1071
  2960  0388  2B8A               	goto	u1070
  2961  0389                     u1071:
  2962  0389  2B90               	goto	l1767
  2963  038A                     u1070:
  2964  038A                     l1765:
  2965  038A  0873               	movf	___awmod@divisor,w
  2966  038B  02F5               	subwf	___awmod@dividend,f
  2967  038C  0874               	movf	___awmod@divisor+1,w
  2968  038D  1C03               	skipc
  2969  038E  03F6               	decf	___awmod@dividend+1,f
  2970  038F  02F6               	subwf	___awmod@dividend+1,f
  2971  0390                     l1767:
  2972  0390  3001               	movlw	1
  2973  0391                     u1085:
  2974  0391  1003               	clrc
  2975  0392  0CF4               	rrf	___awmod@divisor+1,f
  2976  0393  0CF3               	rrf	___awmod@divisor,f
  2977  0394  3EFF               	addlw	-1
  2978  0395  1D03               	skipz
  2979  0396  2B91               	goto	u1085
  2980  0397                     l1769:
  2981  0397  3001               	movlw	1
  2982  0398  02DA               	subwf	___awmod@counter,f
  2983  0399  1D03               	btfss	3,2
  2984  039A  2B9C               	goto	u1091
  2985  039B  2B9D               	goto	u1090
  2986  039C                     u1091:
  2987  039C  2B80               	goto	l1763
  2988  039D                     u1090:
  2989  039D                     l1771:
  2990  039D  085B               	movf	___awmod@sign,w
  2991  039E  1903               	btfsc	3,2
  2992  039F  2BA1               	goto	u1101
  2993  03A0  2BA2               	goto	u1100
  2994  03A1                     u1101:
  2995  03A1  2BA7               	goto	l1775
  2996  03A2                     u1100:
  2997  03A2                     l1773:
  2998  03A2  09F5               	comf	___awmod@dividend,f
  2999  03A3  09F6               	comf	___awmod@dividend+1,f
  3000  03A4  0AF5               	incf	___awmod@dividend,f
  3001  03A5  1903               	skipnz
  3002  03A6  0AF6               	incf	___awmod@dividend+1,f
  3003  03A7                     l1775:
  3004  03A7  0876               	movf	___awmod@dividend+1,w
  3005  03A8  00F4               	movwf	?___awmod+1
  3006  03A9  0875               	movf	___awmod@dividend,w
  3007  03AA  00F3               	movwf	?___awmod
  3008  03AB                     l549:
  3009  03AB  0008               	return
  3010  03AC                     __end_of___awmod:
  3011                           
  3012                           	psect	text17
  3013  0280                     __ptext17:	
  3014 ;; *************** function ___awdiv *****************
  3015 ;; Defined at:
  3016 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  divisor         2    3[COMMON] int 
  3019 ;;  dividend        2    5[COMMON] int 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  quotient        2    2[BANK0 ] int 
  3022 ;;  sign            1    1[BANK0 ] unsigned char 
  3023 ;;  counter         1    0[BANK0 ] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2    3[COMMON] int 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3033 ;;      Params:         4       0       0       0       0
  3034 ;;      Locals:         0       4       0       0       0
  3035 ;;      Temps:          1       0       0       0       0
  3036 ;;      Totals:         5       4       0       0       0
  3037 ;;Total ram usage:        9 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_RTC_display
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function ___awdiv
  3049  0280                     ___awdiv:
  3050  0280                     l1429:	
  3051                           ;incstack = 0
  3052                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3053                           
  3054  0280  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0281  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0282  01DB               	clrf	___awdiv@sign
  3057  0283                     l1431:
  3058  0283  1FF4               	btfss	___awdiv@divisor+1,7
  3059  0284  2A86               	goto	u671
  3060  0285  2A87               	goto	u670
  3061  0286                     u671:
  3062  0286  2A8E               	goto	l1437
  3063  0287                     u670:
  3064  0287                     l1433:
  3065  0287  09F3               	comf	___awdiv@divisor,f
  3066  0288  09F4               	comf	___awdiv@divisor+1,f
  3067  0289  0AF3               	incf	___awdiv@divisor,f
  3068  028A  1903               	skipnz
  3069  028B  0AF4               	incf	___awdiv@divisor+1,f
  3070  028C                     l1435:
  3071  028C  01DB               	clrf	___awdiv@sign
  3072  028D  0ADB               	incf	___awdiv@sign,f
  3073  028E                     l1437:
  3074  028E  1FF6               	btfss	___awdiv@dividend+1,7
  3075  028F  2A91               	goto	u681
  3076  0290  2A92               	goto	u680
  3077  0291                     u681:
  3078  0291  2A9B               	goto	l1443
  3079  0292                     u680:
  3080  0292                     l1439:
  3081  0292  09F5               	comf	___awdiv@dividend,f
  3082  0293  09F6               	comf	___awdiv@dividend+1,f
  3083  0294  0AF5               	incf	___awdiv@dividend,f
  3084  0295  1903               	skipnz
  3085  0296  0AF6               	incf	___awdiv@dividend+1,f
  3086  0297                     l1441:
  3087  0297  3001               	movlw	1
  3088  0298  00F7               	movwf	??___awdiv
  3089  0299  0877               	movf	??___awdiv,w
  3090  029A  06DB               	xorwf	___awdiv@sign,f
  3091  029B                     l1443:
  3092  029B  01DC               	clrf	___awdiv@quotient
  3093  029C  01DD               	clrf	___awdiv@quotient+1
  3094  029D                     l1445:
  3095  029D  0873               	movf	___awdiv@divisor,w
  3096  029E  0474               	iorwf	___awdiv@divisor+1,w
  3097  029F  1903               	btfsc	3,2
  3098  02A0  2AA2               	goto	u691
  3099  02A1  2AA3               	goto	u690
  3100  02A2                     u691:
  3101  02A2  2ADA               	goto	l1465
  3102  02A3                     u690:
  3103  02A3                     l1447:
  3104  02A3  01DA               	clrf	___awdiv@counter
  3105  02A4  0ADA               	incf	___awdiv@counter,f
  3106  02A5  2AB1               	goto	l1453
  3107  02A6                     l1449:
  3108  02A6  3001               	movlw	1
  3109  02A7                     u705:
  3110  02A7  1003               	clrc
  3111  02A8  0DF3               	rlf	___awdiv@divisor,f
  3112  02A9  0DF4               	rlf	___awdiv@divisor+1,f
  3113  02AA  3EFF               	addlw	-1
  3114  02AB  1D03               	skipz
  3115  02AC  2AA7               	goto	u705
  3116  02AD                     l1451:
  3117  02AD  3001               	movlw	1
  3118  02AE  00F7               	movwf	??___awdiv
  3119  02AF  0877               	movf	??___awdiv,w
  3120  02B0  07DA               	addwf	___awdiv@counter,f
  3121  02B1                     l1453:
  3122  02B1  1FF4               	btfss	___awdiv@divisor+1,7
  3123  02B2  2AB4               	goto	u711
  3124  02B3  2AB5               	goto	u710
  3125  02B4                     u711:
  3126  02B4  2AA6               	goto	l1449
  3127  02B5                     u710:
  3128  02B5                     l1455:
  3129  02B5  3001               	movlw	1
  3130  02B6                     u725:
  3131  02B6  1003               	clrc
  3132  02B7  0DDC               	rlf	___awdiv@quotient,f
  3133  02B8  0DDD               	rlf	___awdiv@quotient+1,f
  3134  02B9  3EFF               	addlw	-1
  3135  02BA  1D03               	skipz
  3136  02BB  2AB6               	goto	u725
  3137  02BC  0874               	movf	___awdiv@divisor+1,w
  3138  02BD  0276               	subwf	___awdiv@dividend+1,w
  3139  02BE  1D03               	skipz
  3140  02BF  2AC2               	goto	u735
  3141  02C0  0873               	movf	___awdiv@divisor,w
  3142  02C1  0275               	subwf	___awdiv@dividend,w
  3143  02C2                     u735:
  3144  02C2  1C03               	skipc
  3145  02C3  2AC5               	goto	u731
  3146  02C4  2AC6               	goto	u730
  3147  02C5                     u731:
  3148  02C5  2ACD               	goto	l1461
  3149  02C6                     u730:
  3150  02C6                     l1457:
  3151  02C6  0873               	movf	___awdiv@divisor,w
  3152  02C7  02F5               	subwf	___awdiv@dividend,f
  3153  02C8  0874               	movf	___awdiv@divisor+1,w
  3154  02C9  1C03               	skipc
  3155  02CA  03F6               	decf	___awdiv@dividend+1,f
  3156  02CB  02F6               	subwf	___awdiv@dividend+1,f
  3157  02CC                     l1459:
  3158  02CC  145C               	bsf	___awdiv@quotient,0
  3159  02CD                     l1461:
  3160  02CD  3001               	movlw	1
  3161  02CE                     u745:
  3162  02CE  1003               	clrc
  3163  02CF  0CF4               	rrf	___awdiv@divisor+1,f
  3164  02D0  0CF3               	rrf	___awdiv@divisor,f
  3165  02D1  3EFF               	addlw	-1
  3166  02D2  1D03               	skipz
  3167  02D3  2ACE               	goto	u745
  3168  02D4                     l1463:
  3169  02D4  3001               	movlw	1
  3170  02D5  02DA               	subwf	___awdiv@counter,f
  3171  02D6  1D03               	btfss	3,2
  3172  02D7  2AD9               	goto	u751
  3173  02D8  2ADA               	goto	u750
  3174  02D9                     u751:
  3175  02D9  2AB5               	goto	l1455
  3176  02DA                     u750:
  3177  02DA                     l1465:
  3178  02DA  085B               	movf	___awdiv@sign,w
  3179  02DB  1903               	btfsc	3,2
  3180  02DC  2ADE               	goto	u761
  3181  02DD  2ADF               	goto	u760
  3182  02DE                     u761:
  3183  02DE  2AE4               	goto	l1469
  3184  02DF                     u760:
  3185  02DF                     l1467:
  3186  02DF  09DC               	comf	___awdiv@quotient,f
  3187  02E0  09DD               	comf	___awdiv@quotient+1,f
  3188  02E1  0ADC               	incf	___awdiv@quotient,f
  3189  02E2  1903               	skipnz
  3190  02E3  0ADD               	incf	___awdiv@quotient+1,f
  3191  02E4                     l1469:
  3192  02E4  085D               	movf	___awdiv@quotient+1,w
  3193  02E5  00F4               	movwf	?___awdiv+1
  3194  02E6  085C               	movf	___awdiv@quotient,w
  3195  02E7  00F3               	movwf	?___awdiv
  3196  02E8                     l536:
  3197  02E8  0008               	return
  3198  02E9                     __end_of___awdiv:
  3199                           
  3200                           	psect	text18
  3201  0574                     __ptext18:	
  3202 ;; *************** function _Lcd_Write_String *****************
  3203 ;; Defined at:
  3204 ;;		line 71 in file "LCD.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  a               1    wreg     PTR unsigned char 
  3207 ;;		 -> Date(17), Time(15), 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3210 ;;		 -> Date(17), Time(15), 
  3211 ;;  i               2    0[BANK0 ] int 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       0       0       0       0
  3222 ;;      Locals:         0       3       0       0       0
  3223 ;;      Temps:          1       0       0       0       0
  3224 ;;      Totals:         1       3       0       0       0
  3225 ;;Total ram usage:        4 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    3
  3228 ;; This function calls:
  3229 ;;		_Lcd_Write_Char
  3230 ;; This function is called by:
  3231 ;;		_RTC_display
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function _Lcd_Write_String
  3237  0574                     _Lcd_Write_String:
  3238                           
  3239                           ;incstack = 0
  3240                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3241                           ;Lcd_Write_String@a stored from wreg
  3242  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0576  00DC               	movwf	Lcd_Write_String@a
  3245  0577                     l1721:
  3246                           
  3247                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  3248  0577  01DA               	clrf	Lcd_Write_String@i
  3249  0578  01DB               	clrf	Lcd_Write_String@i+1
  3250  0579  2D8D               	goto	l1727
  3251  057A                     l1723:
  3252                           
  3253                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  3254  057A  085A               	movf	Lcd_Write_String@i,w
  3255  057B  075C               	addwf	Lcd_Write_String@a,w
  3256  057C  00F6               	movwf	??_Lcd_Write_String
  3257  057D  0876               	movf	??_Lcd_Write_String,w
  3258  057E  0084               	movwf	4
  3259  057F  0800               	movf	0,w
  3260  0580  120A  118A  25EF  120A  118A  	fcall	_Lcd_Write_Char
  3261  0585                     l1725:
  3262  0585  3001               	movlw	1
  3263  0586  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0587  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0588  07DA               	addwf	Lcd_Write_String@i,f
  3266  0589  1803               	skipnc
  3267  058A  0ADB               	incf	Lcd_Write_String@i+1,f
  3268  058B  3000               	movlw	0
  3269  058C  07DB               	addwf	Lcd_Write_String@i+1,f
  3270  058D                     l1727:
  3271  058D  085A               	movf	Lcd_Write_String@i,w
  3272  058E  075C               	addwf	Lcd_Write_String@a,w
  3273  058F  00F6               	movwf	??_Lcd_Write_String
  3274  0590  0876               	movf	??_Lcd_Write_String,w
  3275  0591  0084               	movwf	4
  3276  0592  1383               	bcf	3,7	;select IRP bank0
  3277  0593  0800               	movf	0,w
  3278  0594  1D03               	btfss	3,2
  3279  0595  2D97               	goto	u1001
  3280  0596  2D98               	goto	u1000
  3281  0597                     u1001:
  3282  0597  2D7A               	goto	l1723
  3283  0598                     u1000:
  3284  0598                     l222:
  3285  0598  0008               	return
  3286  0599                     __end_of_Lcd_Write_String:
  3287                           
  3288                           	psect	text19
  3289  05EF                     __ptext19:	
  3290 ;; *************** function _Lcd_Write_Char *****************
  3291 ;; Defined at:
  3292 ;;		line 62 in file "LCD.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  a               1    wreg     unsigned char 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  a               1    5[COMMON] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       0       0       0       0
  3307 ;;      Locals:         1       0       0       0       0
  3308 ;;      Temps:          1       0       0       0       0
  3309 ;;      Totals:         2       0       0       0       0
  3310 ;;Total ram usage:        2 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    2
  3313 ;; This function calls:
  3314 ;;		_Lcd_Port
  3315 ;; This function is called by:
  3316 ;;		_Lcd_Write_String
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _Lcd_Write_Char
  3322  05EF                     _Lcd_Write_Char:
  3323                           
  3324                           ;incstack = 0
  3325                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3326                           ;Lcd_Write_Char@a stored from wreg
  3327  05EF  00F5               	movwf	Lcd_Write_Char@a
  3328  05F0                     l1659:
  3329                           
  3330                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  3331  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3332  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  3333  05F2  1409               	bsf	9,0	;volatile
  3334  05F3                     l1661:
  3335                           
  3336                           ;LCD.c: 64:    Lcd_Port(a);
  3337  05F3  0875               	movf	Lcd_Write_Char@a,w
  3338  05F4  120A  118A  26AB  120A  118A  	fcall	_Lcd_Port
  3339  05F9                     l1663:
  3340                           
  3341                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  3342  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3343  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  3344  05FB  1509               	bsf	9,2	;volatile
  3345  05FC                     l1665:
  3346                           
  3347                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3348  05FC  301A               	movlw	26
  3349  05FD  00F4               	movwf	??_Lcd_Write_Char
  3350  05FE                     u1137:
  3351  05FE  0BF4               	decfsz	??_Lcd_Write_Char,f
  3352  05FF  2DFE               	goto	u1137
  3353  0600  0000               	nop
  3354  0601                     l1667:
  3355                           
  3356                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  3357  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0603  1109               	bcf	9,2	;volatile
  3360  0604                     l216:
  3361  0604  0008               	return
  3362  0605                     __end_of_Lcd_Write_Char:
  3363                           
  3364                           	psect	text20
  3365  054E                     __ptext20:	
  3366 ;; *************** function _Lcd_Set_Cursor *****************
  3367 ;; Defined at:
  3368 ;;		line 49 in file "LCD.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  a               1    wreg     unsigned char 
  3371 ;;  b               1    7[COMMON] unsigned char 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  a               1    1[BANK0 ] unsigned char 
  3374 ;;  temp            1    2[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         1       0       0       0       0
  3385 ;;      Locals:         0       2       0       0       0
  3386 ;;      Temps:          0       1       0       0       0
  3387 ;;      Totals:         1       3       0       0       0
  3388 ;;Total ram usage:        4 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    3
  3391 ;; This function calls:
  3392 ;;		_Lcd_Cmd
  3393 ;; This function is called by:
  3394 ;;		_RTC_display
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _Lcd_Set_Cursor
  3400  054E                     _Lcd_Set_Cursor:
  3401                           
  3402                           ;incstack = 0
  3403                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3404                           ;Lcd_Set_Cursor@a stored from wreg
  3405  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3406  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0550  00DB               	movwf	Lcd_Set_Cursor@a
  3408  0551                     l1709:
  3409                           
  3410                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  3411  0551  035B               	decf	Lcd_Set_Cursor@a,w
  3412  0552  1D03               	btfss	3,2
  3413  0553  2D55               	goto	u981
  3414  0554  2D56               	goto	u980
  3415  0555                     u981:
  3416  0555  2D62               	goto	l1715
  3417  0556                     u980:
  3418  0556                     l1711:
  3419                           
  3420                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  3421  0556  0877               	movf	Lcd_Set_Cursor@b,w
  3422  0557  3E7F               	addlw	127
  3423  0558  00DA               	movwf	??_Lcd_Set_Cursor
  3424  0559  085A               	movf	??_Lcd_Set_Cursor,w
  3425  055A  00DC               	movwf	Lcd_Set_Cursor@temp
  3426  055B                     l1713:
  3427                           
  3428                           ;LCD.c: 53:         Lcd_Cmd(temp);
  3429  055B  085C               	movf	Lcd_Set_Cursor@temp,w
  3430  055C  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3431                           
  3432                           ;LCD.c: 54:  }
  3433  0561  2D73               	goto	l213
  3434  0562                     l1715:
  3435  0562  3002               	movlw	2
  3436  0563  065B               	xorwf	Lcd_Set_Cursor@a,w
  3437  0564  1D03               	btfss	3,2
  3438  0565  2D67               	goto	u991
  3439  0566  2D68               	goto	u990
  3440  0567                     u991:
  3441  0567  2D73               	goto	l213
  3442  0568                     u990:
  3443  0568                     l1717:
  3444                           
  3445                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  3446  0568  0877               	movf	Lcd_Set_Cursor@b,w
  3447  0569  3EBF               	addlw	191
  3448  056A  00DA               	movwf	??_Lcd_Set_Cursor
  3449  056B  085A               	movf	??_Lcd_Set_Cursor,w
  3450  056C  00DC               	movwf	Lcd_Set_Cursor@temp
  3451  056D                     l1719:
  3452                           
  3453                           ;LCD.c: 57:   Lcd_Cmd(temp);
  3454  056D  085C               	movf	Lcd_Set_Cursor@temp,w
  3455  056E  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3456  0573                     l213:
  3457  0573  0008               	return
  3458  0574                     __end_of_Lcd_Set_Cursor:
  3459                           
  3460                           	psect	text21
  3461  0406                     __ptext21:	
  3462 ;; *************** function _Lcd_Init *****************
  3463 ;; Defined at:
  3464 ;;		line 15 in file "LCD.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0
  3480 ;;      Temps:          0       2       0       0       0
  3481 ;;      Totals:         0       2       0       0       0
  3482 ;;Total ram usage:        2 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    3
  3485 ;; This function calls:
  3486 ;;		_Lcd_Cmd
  3487 ;;		_Lcd_Port
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _Lcd_Init
  3495  0406                     _Lcd_Init:
  3496  0406                     l1809:	
  3497                           ;incstack = 0
  3498                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3499                           
  3500                           
  3501                           ;LCD.c: 16:   Lcd_Port(0x00);
  3502  0406  3000               	movlw	0
  3503  0407  120A  118A  26AB  120A  118A  	fcall	_Lcd_Port
  3504  040C                     l1811:
  3505                           
  3506                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3507  040C  3034               	movlw	52
  3508  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3509  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3510  040F  00DB               	movwf	??_Lcd_Init+1
  3511  0410  30F1               	movlw	241
  3512  0411  00DA               	movwf	??_Lcd_Init
  3513  0412                     u1147:
  3514  0412  0BDA               	decfsz	??_Lcd_Init,f
  3515  0413  2C12               	goto	u1147
  3516  0414  0BDB               	decfsz	??_Lcd_Init+1,f
  3517  0415  2C12               	goto	u1147
  3518  0416                     l1813:
  3519                           
  3520                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  3521  0416  3030               	movlw	48
  3522  0417  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3523                           
  3524                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3525  041C  300D               	movlw	13
  3526  041D  1283               	bcf	3,5	;RP0=0, select bank0
  3527  041E  1303               	bcf	3,6	;RP1=0, select bank0
  3528  041F  00DB               	movwf	??_Lcd_Init+1
  3529  0420  30FB               	movlw	251
  3530  0421  00DA               	movwf	??_Lcd_Init
  3531  0422                     u1157:
  3532  0422  0BDA               	decfsz	??_Lcd_Init,f
  3533  0423  2C22               	goto	u1157
  3534  0424  0BDB               	decfsz	??_Lcd_Init+1,f
  3535  0425  2C22               	goto	u1157
  3536  0426                     l1815:
  3537                           
  3538                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  3539  0426  3030               	movlw	48
  3540  0427  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3541  042C                     l1817:
  3542                           
  3543                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3544  042C  301D               	movlw	29
  3545  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3546  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3547  042F  00DB               	movwf	??_Lcd_Init+1
  3548  0430  3090               	movlw	144
  3549  0431  00DA               	movwf	??_Lcd_Init
  3550  0432                     u1167:
  3551  0432  0BDA               	decfsz	??_Lcd_Init,f
  3552  0433  2C32               	goto	u1167
  3553  0434  0BDB               	decfsz	??_Lcd_Init+1,f
  3554  0435  2C32               	goto	u1167
  3555  0436  0000               	nop
  3556                           
  3557                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  3558  0437  3030               	movlw	48
  3559  0438  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3560                           
  3561                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  3562  043D  3038               	movlw	56
  3563  043E  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3564                           
  3565                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  3566  0443  300C               	movlw	12
  3567  0444  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3568                           
  3569                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  3570  0449  3001               	movlw	1
  3571  044A  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3572                           
  3573                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  3574  044F  3006               	movlw	6
  3575  0450  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3576  0455                     l198:
  3577  0455  0008               	return
  3578  0456                     __end_of_Lcd_Init:
  3579                           
  3580                           	psect	text22
  3581  0640                     __ptext22:	
  3582 ;; *************** function _Lcd_Clear *****************
  3583 ;; Defined at:
  3584 ;;		line 43 in file "LCD.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    3
  3605 ;; This function calls:
  3606 ;;		_Lcd_Cmd
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _Lcd_Clear
  3614  0640                     _Lcd_Clear:
  3615  0640                     l1819:	
  3616                           ;incstack = 0
  3617                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3618                           
  3619                           
  3620                           ;LCD.c: 44:  Lcd_Cmd(0);
  3621  0640  3000               	movlw	0
  3622  0641  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3623                           
  3624                           ;LCD.c: 45:  Lcd_Cmd(1);
  3625  0646  3001               	movlw	1
  3626  0647  120A  118A  25D5  120A  118A  	fcall	_Lcd_Cmd
  3627  064C                     l207:
  3628  064C  0008               	return
  3629  064D                     __end_of_Lcd_Clear:
  3630                           
  3631                           	psect	text23
  3632  05D5                     __ptext23:	
  3633 ;; *************** function _Lcd_Cmd *****************
  3634 ;; Defined at:
  3635 ;;		line 34 in file "LCD.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  a               1    wreg     unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  a               1    6[COMMON] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, pclath, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3649 ;;      Params:         0       0       0       0       0
  3650 ;;      Locals:         1       0       0       0       0
  3651 ;;      Temps:          2       0       0       0       0
  3652 ;;      Totals:         3       0       0       0       0
  3653 ;;Total ram usage:        3 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    2
  3656 ;; This function calls:
  3657 ;;		_Lcd_Port
  3658 ;; This function is called by:
  3659 ;;		_Lcd_Init
  3660 ;;		_Lcd_Clear
  3661 ;;		_Lcd_Set_Cursor
  3662 ;;		_Lcd_Shift_Right
  3663 ;;		_Lcd_Shift_Left
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           
  3668                           ;psect for function _Lcd_Cmd
  3669  05D5                     _Lcd_Cmd:
  3670                           
  3671                           ;incstack = 0
  3672                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3673                           ;Lcd_Cmd@a stored from wreg
  3674  05D5  00F6               	movwf	Lcd_Cmd@a
  3675  05D6                     l1649:
  3676                           
  3677                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  3678  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3679  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3680  05D8  1009               	bcf	9,0	;volatile
  3681  05D9                     l1651:
  3682                           
  3683                           ;LCD.c: 36:  Lcd_Port(a);
  3684  05D9  0876               	movf	Lcd_Cmd@a,w
  3685  05DA  120A  118A  26AB  120A  118A  	fcall	_Lcd_Port
  3686  05DF                     l1653:
  3687                           
  3688                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  3689  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3690  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3691  05E1  1509               	bsf	9,2	;volatile
  3692  05E2                     l1655:
  3693                           
  3694                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3695  05E2  300B               	movlw	11
  3696  05E3  00F5               	movwf	??_Lcd_Cmd+1
  3697  05E4  3062               	movlw	98
  3698  05E5  00F4               	movwf	??_Lcd_Cmd
  3699  05E6                     u1177:
  3700  05E6  0BF4               	decfsz	??_Lcd_Cmd,f
  3701  05E7  2DE6               	goto	u1177
  3702  05E8  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3703  05E9  2DE6               	goto	u1177
  3704  05EA  0000               	nop
  3705  05EB                     l1657:
  3706                           
  3707                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  3708  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3709  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3710  05ED  1109               	bcf	9,2	;volatile
  3711  05EE                     l204:
  3712  05EE  0008               	return
  3713  05EF                     __end_of_Lcd_Cmd:
  3714                           
  3715                           	psect	text24
  3716  06AB                     __ptext24:	
  3717 ;; *************** function _Lcd_Port *****************
  3718 ;; Defined at:
  3719 ;;		line 30 in file "LCD.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  a               1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  a               1    3[COMMON] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       0       0       0       0
  3734 ;;      Locals:         1       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0
  3736 ;;      Totals:         1       0       0       0       0
  3737 ;;Total ram usage:        1 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_Lcd_Init
  3744 ;;		_Lcd_Cmd
  3745 ;;		_Lcd_Write_Char
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function _Lcd_Port
  3751  06AB                     _Lcd_Port:
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in _Lcd_Port: [wreg]
  3755                           ;Lcd_Port@a stored from wreg
  3756  06AB  00F3               	movwf	Lcd_Port@a
  3757  06AC                     l1643:
  3758                           
  3759                           ;LCD.c: 31:     PORTD = a;
  3760  06AC  0873               	movf	Lcd_Port@a,w
  3761  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3762  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3763  06AF  0088               	movwf	8	;volatile
  3764  06B0                     l201:
  3765  06B0  0008               	return
  3766  06B1                     __end_of_Lcd_Port:
  3767                           
  3768                           	psect	text25
  3769  068E                     __ptext25:	
  3770 ;; *************** function _I2C_Master_RepeatedStart *****************
  3771 ;; Defined at:
  3772 ;;		line 64 in file "I2C.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0, pclath, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       0       0       0       0
  3787 ;;      Locals:         0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0
  3789 ;;      Totals:         0       0       0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    2
  3793 ;; This function calls:
  3794 ;;		_I2C_Master_Wait
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function _I2C_Master_RepeatedStart
  3802  068E                     _I2C_Master_RepeatedStart:
  3803  068E                     l1823:	
  3804                           ;incstack = 0
  3805                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3806                           
  3807                           
  3808                           ;I2C.c: 66:     I2C_Master_Wait();
  3809  068E  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Wait
  3810  0693                     l1825:
  3811                           
  3812                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3813  0693  1683               	bsf	3,5	;RP0=1, select bank1
  3814  0694  1303               	bcf	3,6	;RP1=0, select bank1
  3815  0695  1491               	bsf	17,1	;volatile
  3816  0696                     l169:
  3817  0696  0008               	return
  3818  0697                     __end_of_I2C_Master_RepeatedStart:
  3819                           
  3820                           	psect	text26
  3821  04F3                     __ptext26:	
  3822 ;; *************** function _I2C_Master_Read *****************
  3823 ;; Defined at:
  3824 ;;		line 94 in file "I2C.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  a               2    3[COMMON] unsigned short 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  temp            2    0[BANK0 ] unsigned short 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  2    3[COMMON] unsigned short 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         2       0       0       0       0
  3839 ;;      Locals:         0       2       0       0       0
  3840 ;;      Temps:          2       0       0       0       0
  3841 ;;      Totals:         4       2       0       0       0
  3842 ;;Total ram usage:        6 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    2
  3845 ;; This function calls:
  3846 ;;		_I2C_Master_Wait
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _I2C_Master_Read
  3854  04F3                     _I2C_Master_Read:
  3855  04F3                     l1827:	
  3856                           ;incstack = 0
  3857                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3858                           
  3859                           
  3860                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3861  04F3  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Wait
  3862  04F8                     l1829:
  3863                           
  3864                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3865  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3866  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3867  04FA  1591               	bsf	17,3	;volatile
  3868                           
  3869                           ;I2C.c: 99:     I2C_Master_Wait();
  3870  04FB  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Wait
  3871  0500                     l1831:
  3872                           
  3873                           ;I2C.c: 100:     temp = SSPBUF;
  3874  0500  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0501  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0502  0813               	movf	19,w	;volatile
  3877  0503  00F5               	movwf	??_I2C_Master_Read
  3878  0504  01F6               	clrf	??_I2C_Master_Read+1
  3879  0505  0875               	movf	??_I2C_Master_Read,w
  3880  0506  00DA               	movwf	I2C_Master_Read@temp
  3881  0507  0876               	movf	??_I2C_Master_Read+1,w
  3882  0508  00DB               	movwf	I2C_Master_Read@temp+1
  3883  0509                     l1833:
  3884                           
  3885                           ;I2C.c: 101:     I2C_Master_Wait();
  3886  0509  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Wait
  3887  050E                     l1835:
  3888                           
  3889                           ;I2C.c: 102:     if(a == 1){
  3890  050E  0373               	decf	I2C_Master_Read@a,w
  3891  050F  0474               	iorwf	I2C_Master_Read@a+1,w
  3892  0510  1D03               	btfss	3,2
  3893  0511  2D13               	goto	u1111
  3894  0512  2D14               	goto	u1110
  3895  0513                     u1111:
  3896  0513  2D18               	goto	l178
  3897  0514                     u1110:
  3898  0514                     l1837:
  3899                           
  3900                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3901  0514  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0515  1303               	bcf	3,6	;RP1=0, select bank1
  3903  0516  1291               	bcf	17,5	;volatile
  3904                           
  3905                           ;I2C.c: 104:     }else{
  3906  0517  2D1B               	goto	l179
  3907  0518                     l178:
  3908                           
  3909                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3910  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3911  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3912  051A  1691               	bsf	17,5	;volatile
  3913  051B                     l179:	
  3914                           ;I2C.c: 106:     }
  3915                           
  3916                           
  3917                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3918  051B  1611               	bsf	17,4	;volatile
  3919  051C                     l1839:
  3920                           
  3921                           ;I2C.c: 108:     return temp;
  3922  051C  1283               	bcf	3,5	;RP0=0, select bank0
  3923  051D  1303               	bcf	3,6	;RP1=0, select bank0
  3924  051E  085B               	movf	I2C_Master_Read@temp+1,w
  3925  051F  00F4               	movwf	?_I2C_Master_Read+1
  3926  0520  085A               	movf	I2C_Master_Read@temp,w
  3927  0521  00F3               	movwf	?_I2C_Master_Read
  3928  0522                     l180:
  3929  0522  0008               	return
  3930  0523                     __end_of_I2C_Master_Read:
  3931                           
  3932                           	psect	text27
  3933  064D                     __ptext27:	
  3934 ;; *************** function _I2C_Master_Wait *****************
  3935 ;; Defined at:
  3936 ;;		line 48 in file "I2C.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3950 ;;      Params:         0       0       0       0       0
  3951 ;;      Locals:         0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0
  3953 ;;      Totals:         0       0       0       0       0
  3954 ;;Total ram usage:        0 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    1
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_I2C_Master_Start
  3961 ;;		_I2C_Master_RepeatedStart
  3962 ;;		_I2C_Master_Stop
  3963 ;;		_I2C_Master_Write
  3964 ;;		_I2C_Master_Read
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function _I2C_Master_Wait
  3970  064D                     _I2C_Master_Wait:
  3971  064D                     l1645:	
  3972                           ;incstack = 0
  3973                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3974                           
  3975  064D                     l160:	
  3976                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3977                           
  3978  064D  1683               	bsf	3,5	;RP0=1, select bank1
  3979  064E  1303               	bcf	3,6	;RP1=0, select bank1
  3980  064F  1914               	btfsc	20,2	;volatile
  3981  0650  2E52               	goto	u881
  3982  0651  2E53               	goto	u880
  3983  0652                     u881:
  3984  0652  2E4D               	goto	l160
  3985  0653                     u880:
  3986  0653                     l1647:
  3987  0653  0811               	movf	17,w	;volatile
  3988  0654  391F               	andlw	31
  3989  0655  1D03               	btfss	3,2
  3990  0656  2E58               	goto	u891
  3991  0657  2E59               	goto	u890
  3992  0658                     u891:
  3993  0658  2E4D               	goto	l160
  3994  0659                     u890:
  3995  0659                     l163:
  3996  0659  0008               	return
  3997  065A                     __end_of_I2C_Master_Wait:
  3998                           
  3999                           	psect	text28
  4000  0490                     __ptext28:	
  4001 ;; *************** function _ISR *****************
  4002 ;; Defined at:
  4003 ;;		line 90 in file "main_prueba3_mini2.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0
  4019 ;;      Temps:          3       0       0       0       0
  4020 ;;      Totals:         3       0       0       0       0
  4021 ;;Total ram usage:        3 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		Interrupt level 1
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           
  4031                           ;psect for function _ISR
  4032  0490                     _ISR:
  4033  0490                     i1l1191:
  4034                           
  4035                           ;main_prueba3_mini2.c: 91:     if(PIR1bits.RCIF == 1){
  4036  0490  1283               	bcf	3,5	;RP0=0, select bank0
  4037  0491  1303               	bcf	3,6	;RP1=0, select bank0
  4038  0492  1E8C               	btfss	12,5	;volatile
  4039  0493  2C95               	goto	u43_21
  4040  0494  2C96               	goto	u43_20
  4041  0495                     u43_21:
  4042  0495  2CBB               	goto	i1l105
  4043  0496                     u43_20:
  4044  0496                     i1l1193:
  4045                           
  4046                           ;main_prueba3_mini2.c: 92:         data_recive = RCREG;
  4047  0496  081A               	movf	26,w	;volatile
  4048  0497  00F0               	movwf	??_ISR
  4049  0498  0870               	movf	??_ISR,w
  4050  0499  00F8               	movwf	_data_recive
  4051  049A                     i1l1195:
  4052                           
  4053                           ;main_prueba3_mini2.c: 93:         if (data_recive == '1'){
  4054  049A  3031               	movlw	49
  4055  049B  0678               	xorwf	_data_recive,w
  4056  049C  1D03               	btfss	3,2
  4057  049D  2C9F               	goto	u44_21
  4058  049E  2CA0               	goto	u44_20
  4059  049F                     u44_21:
  4060  049F  2CA2               	goto	i1l1199
  4061  04A0                     u44_20:
  4062  04A0                     i1l1197:
  4063                           
  4064                           ;main_prueba3_mini2.c: 94:             PORTAbits.RA6 = 1;
  4065  04A0  1705               	bsf	5,6	;volatile
  4066                           
  4067                           ;main_prueba3_mini2.c: 95:         }
  4068  04A1  2CBA               	goto	i1l1211
  4069  04A2                     i1l1199:
  4070  04A2  3032               	movlw	50
  4071  04A3  0678               	xorwf	_data_recive,w
  4072  04A4  1D03               	btfss	3,2
  4073  04A5  2CA7               	goto	u45_21
  4074  04A6  2CA8               	goto	u45_20
  4075  04A7                     u45_21:
  4076  04A7  2CAA               	goto	i1l1203
  4077  04A8                     u45_20:
  4078  04A8                     i1l1201:
  4079                           
  4080                           ;main_prueba3_mini2.c: 97:             PORTAbits.RA6 = 0;
  4081  04A8  1305               	bcf	5,6	;volatile
  4082                           
  4083                           ;main_prueba3_mini2.c: 98:         }
  4084  04A9  2CBA               	goto	i1l1211
  4085  04AA                     i1l1203:
  4086  04AA  3033               	movlw	51
  4087  04AB  0678               	xorwf	_data_recive,w
  4088  04AC  1D03               	btfss	3,2
  4089  04AD  2CAF               	goto	u46_21
  4090  04AE  2CB0               	goto	u46_20
  4091  04AF                     u46_21:
  4092  04AF  2CB2               	goto	i1l1207
  4093  04B0                     u46_20:
  4094  04B0                     i1l1205:
  4095                           
  4096                           ;main_prueba3_mini2.c: 100:             PORTAbits.RA7 = 1;
  4097  04B0  1785               	bsf	5,7	;volatile
  4098                           
  4099                           ;main_prueba3_mini2.c: 101:         }
  4100  04B1  2CBA               	goto	i1l1211
  4101  04B2                     i1l1207:
  4102  04B2  3034               	movlw	52
  4103  04B3  0678               	xorwf	_data_recive,w
  4104  04B4  1D03               	btfss	3,2
  4105  04B5  2CB7               	goto	u47_21
  4106  04B6  2CB8               	goto	u47_20
  4107  04B7                     u47_21:
  4108  04B7  2CBA               	goto	i1l101
  4109  04B8                     u47_20:
  4110  04B8                     i1l1209:
  4111                           
  4112                           ;main_prueba3_mini2.c: 103:             PORTAbits.RA7 = 0;
  4113  04B8  1385               	bcf	5,7	;volatile
  4114  04B9  2CBA               	goto	i1l1211
  4115  04BA                     i1l101:
  4116  04BA                     i1l1211:
  4117                           
  4118                           ;main_prueba3_mini2.c: 105:         data_recive = 0;
  4119  04BA  01F8               	clrf	_data_recive
  4120  04BB                     i1l105:
  4121  04BB  0872               	movf	??_ISR+2,w
  4122  04BC  008A               	movwf	10
  4123  04BD  0E71               	swapf	??_ISR+1,w
  4124  04BE  0083               	movwf	3
  4125  04BF  0EFE               	swapf	btemp,f
  4126  04C0  0E7E               	swapf	btemp,w
  4127  04C1  0009               	retfie
  4128  04C2                     __end_of_ISR:
  4129  007E                     btemp	set	126	;btemp
  4130  007E                     wtemp0	set	126
  4131                           
  4132                           	psect	intentry
  4133  0004                     __pintentry:	
  4134                           ;incstack = 0
  4135                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4136                           
  4137  0004                     interrupt_function:
  4138  007E                     saved_w	set	btemp
  4139  0004  00FE               	movwf	btemp
  4140  0005  0E03               	swapf	3,w
  4141  0006  00F1               	movwf	??_ISR+1
  4142  0007  080A               	movf	10,w
  4143  0008  00F2               	movwf	??_ISR+2
  4144  0009  120A  118A  2C90   	ljmp	_ISR
  4145                           
  4146                           	psect	config
  4147                           
  4148                           ;Config register CONFIG1 @ 0x2007
  4149                           ;	Oscillator Selection bits
  4150                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4151                           ;	Watchdog Timer Enable bit
  4152                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4153                           ;	Power-up Timer Enable bit
  4154                           ;	PWRTE = OFF, PWRT disabled
  4155                           ;	RE3/MCLR pin function select bit
  4156                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4157                           ;	Code Protection bit
  4158                           ;	CP = OFF, Program memory code protection is disabled
  4159                           ;	Data Code Protection bit
  4160                           ;	CPD = OFF, Data memory code protection is disabled
  4161                           ;	Brown Out Reset Selection bits
  4162                           ;	BOREN = OFF, BOR disabled
  4163                           ;	Internal External Switchover bit
  4164                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4165                           ;	Fail-Safe Clock Monitor Enabled bit
  4166                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4167                           ;	Low Voltage Programming Enable bit
  4168                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4169                           ;	In-Circuit Debugger Mode bit
  4170                           ;	DEBUG = 0x1, unprogrammed default
  4171  2007                     	org	8199
  4172  2007  20D4               	dw	8404
  4173                           
  4174                           ;Config register CONFIG2 @ 0x2008
  4175                           ;	Brown-out Reset Selection bit
  4176                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4177                           ;	Flash Program Memory Self Write Enable bits
  4178                           ;	WRT = OFF, Write protection off
  4179  2008                     	org	8200
  4180  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        32
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> Date(BANK0[17]), STR_1(CODE[3]), Time(BANK0[15]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> Date(BANK0[17]), Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_Write_USART_String
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7895
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     340
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    3919
                                              4 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1338
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     264
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 22:46:26 2021

                                _i 0059                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 005B  
                               fsr 0004               __size_of_Write_USART 000C  
                 ?_USART_INTERRUPT 0070                        _RTC_display 002C  
                              l201 06B0                                l122 019E  
                              l204 05EE                                l116 05D4  
                              l213 0573                                l125 0405  
                              l222 0598                                l207 064C  
                              l160 064D                                l216 0604  
                              l128 04F2                                l163 0659  
                              l180 0522                                l172 0684  
                              l157 048F                                l166 068D  
                              l175 067B                                l169 0696  
                              l409 0619                                l273 0665  
                              l178 0518                                l282 0667  
                              l179 051B                                l291 054D  
                              l419 0350                                l276 06A4  
                              l285 0671                                l198 0455  
                              l279 06AA                                l536 02E8  
                              l549 03AB                                _GIE 005F  
                              u520 060B                                u521 060A  
                              u530 0618                                u610 066D  
                              u531 0617                                u611 066C  
                              _ISR 0490                                u710 02B5  
                              u711 02B4                                u705 02A7  
                              u730 02C6                                u731 02C5  
                              u900 02FB                                u725 02B6  
                              u901 02FA                                u750 02DA  
                              u670 0287                                u751 02D9  
                              u735 02C2                                u671 0286  
                              u760 02DF                                u680 0292  
                              u920 030F                                u761 02DE  
                              u745 02CE                                u681 0291  
                              u921 030E                                u690 02A3  
                              u691 02A2                                u915 0300  
                              u940 032A                                u941 0329  
                              u870 054D                                u871 054C  
                              u935 0311                                u880 0653  
                              u960 0348                                u881 0652  
                              u961 0347                                u945 0326  
                              u890 0659                                u891 0658  
                              u955 033A                                u980 0556  
                              u981 0555                                u990 0568  
                              u991 0567                                u975 05C6  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 005B        __size_of_Write_USART_String 002B  
                             ?_ISR 0070                               l1331 0607  
                             l1333 060B                               l1421 06A2  
                             l1431 0283                               l1335 060F  
                             l1423 065A                               l1441 0297  
                             l1433 0287                               l1337 0611  
                             l1329 0606                               l1425 0664  
                             l1451 02AD                               l1443 029B  
                             l1435 028C                               l1339 0618  
                             l1427 06A5                               l1419 069F  
                             l1461 02CD                               l1453 02B1  
                             l1445 029D                               l1437 028E  
                             l1429 0280                               l1381 066D  
                             l1701 067C                               l1711 0556  
                             l1463 02D4                               l1455 02B5  
                             l1447 02A3                               l1439 0292  
                             l1703 0681                               l1713 055B  
                             l1721 0577                               l1457 02C6  
                             l1449 02A6                               l1465 02DA  
                             l1705 05BA                               l1801 04D6  
                             l1643 06AC                               l1651 05D9  
                             l1811 040C                               l1715 0562  
                             l1723 057A                               l1467 02DF  
                             l1459 02CC                               l1379 0667  
                             l1731 045A                               l1803 04E3  
                             l1645 064D                               l1653 05DF  
                             l1813 0416                               l1717 0568  
                             l1709 0551                               l1661 05F3  
                             l1725 0585                               l1469 02E4  
                             l1741 0351                               l1581 0523  
                             l1821 03AC                               l1733 045D  
                             l1805 04E8                               l1647 0653  
                             l1831 0500                               l1823 068E  
                             l1655 05E2                               l1815 0426  
                             l1719 056D                               l1663 05F9  
                             l1727 058D                               l1751 0363  
                             l1743 0354                               l1583 0525  
                             l1671 02FB                               l1735 048C  
                             l1807 04ED                               l1833 0509  
                             l1825 0693                               l1657 05EB  
                             l1649 05D6                               l1817 042C  
                             l1809 0406                               l1665 05FC  
                             l1761 037C                               l1753 0368  
                             l1745 0358                               l1585 0536  
                             l1681 032A                               l1673 02FE  
                             l1737 048D                               l1729 0456  
                             l1835 050E                               l1827 04F3  
                             l1819 0640                               l1667 0601  
                             l1659 05F0                               l1763 0380  
                             l1755 036E                               l1771 039D  
                             l1747 035D                               l1843 002C  
                             l1587 053A                               l1683 0338  
                             l1675 030B                               l1739 048E  
                             l1851 01A4                               l1837 0514  
                             l1829 04F8                               l1773 03A2  
                             l1765 038A                               l1757 0371  
                             l1749 035F                               l1845 018A  
                             l1693 0685                               l1685 0339  
                             l1677 030F                               l1669 02E9  
                             l1781 04C9                               l1861 01BB  
                             l1853 01A7                               l1839 051C  
                             l1775 03A7                               l1767 0390  
                             l1759 0378                               l1847 0190  
                             l1695 068A                               l1687 0342  
                             l1679 0318                               l1791 04CF  
                             l1783 04CB                               l1871 01E9  
                             l1863 01C4                               l1855 01AC  
                             l1769 0397                               l1697 0672  
                             l1689 0348                               l1793 04D2  
                             l1785 04CC                               l1881 022E  
                             l1873 01F8                               l1865 01CC  
                             l1857 01B1                               l1849 019F  
                             l1699 0677                               l1795 04D3  
                             l1787 04CD                               l1779 04C2  
                             l1891 0258                               l1883 023C  
                             l1875 0207                               l1867 01D1  
                             l1859 01B6                               l1797 04D4  
                             l1789 04CE                               l1893 0261  
                             l1885 0241                               l1877 0210  
                             l1869 01DA                               l1799 04D5  
                             l1895 0267                               l1887 0246  
                             l1879 021F                               l1897 026D  
                             l1889 024F                               STR_1 062A  
                             u1000 0598                               u1001 0597  
                             u1010 046D                               u1100 03A2  
                             u1020 0358                               u1101 03A1  
                             u1021 0357                               u1110 0514  
                             u1030 0363                               u1111 0513  
                             u1031 0362                               u1015 0468  
                             u1040 036E                               u1041 036D  
                             u1060 0380                               u1061 037F  
                             u1070 038A                               u1071 0389  
                             u1055 0372                               u1127 0275  
                             u1137 05FE                               u1090 039D  
                             u1147 0412                               u1091 039C  
                             u1075 0386                               u1157 0422  
                             u1085 0391                               u1167 0432  
                             u1177 05E6                               _PEIE 005E  
                             _RCIF 0065                               _TRMT 04C1  
                             _Date 0020                               _Time 0031  
                ?_Lcd_Write_String 0070   __end_of_I2C_Master_RepeatedStart 0697  
                             _cont 0054                               _main 019F  
                             _hour 0058                               _year 0055  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0076                    __end_of_Lcd_Cmd 05EF  
                ___bmul@multiplier 0076              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 0067  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 02E9                    __end_of___awmod 03AC  
                            _ANSEL 0188                    __end_of___lldiv 0351  
                  ___awdiv@divisor 0073                              i1l101 04BA  
                            i1l105 04BB                    ___awdiv@counter 005A  
                            _RCREG 001A                              _SPBRG 0099  
                            u43_20 0496                              u43_21 0495  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u44_20 04A0  
                            u44_21 049F                              u45_20 04A8  
                            u45_21 04A7                              u46_20 04B0  
                            u46_21 04AF                              u47_20 04B8  
                            u47_21 04B7            __size_of_Lcd_Set_Cursor 0026  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                            _TXREG 0019                              _m_day 0057  
                            _month 0056                              _setup 04C2  
                            pclath 000A                       _Write_to_RTC 03AC  
                            status 0003                              wtemp0 007E  
                      ?_USART_Init 0070                   __end_of_Lcd_Init 0456  
                 __end_of_Lcd_Port 06B1                    __initialization 000F  
                     __end_of_main 0280                             ??_main 006B  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
              _USART_Init_BaudRate 069F                             ?_setup 0070  
                           _ANSELH 0189                             i1l1201 04A8  
                           i1l1203 04AA                             i1l1211 04BA  
                           i1l1205 04B0                             i1l1207 04B2  
                           i1l1209 04B8                             i1l1191 0490  
                           i1l1193 0496                             i1l1195 049A  
                           i1l1197 04A0                             i1l1199 04A2  
                        ??_Lcd_Cmd 0074                             _SPBRGH 009A  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 068E                             ___bmul 0605  
                        ??___awdiv 0077                          ??___awmod 0077  
             ?_USART_Init_BaudRate 0070                          ??___lldiv 0073  
                 ___awdiv@quotient 005C                             _minute 0079  
                           _second 007A                    ___awmod@divisor 0073  
                  ___awmod@counter 005A                             saved_w 007E  
              __size_of_USART_Init 000C                    Lcd_Set_Cursor@a 005B  
                  Lcd_Set_Cursor@b 0077            __end_of__initialization 0028  
                __end_of_Lcd_Clear 064D                ___bmul@multiplicand 0073  
                   __pcstackCOMMON 0070              ??_USART_Init_BaudRate 0073  
                     __pidataBANK0 0599                      __end_of_setup 04F3  
                     ?_RTC_display 0070                     _Lcd_Set_Cursor 054E  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 0078                       Write_USART@a 0073  
                       __pbssBANK0 0040                         _data_total 0040  
                       __pmaintext 019F                            ?___bmul 0073  
                    ??_Write_USART 0073                         __pintentry 0004  
        __size_of_Lcd_Write_String 0025             __end_of_Lcd_Set_Cursor 0574  
       __end_of_Write_USART_String 054E            __size_of_bcd_to_decimal 001C  
                       ??_Lcd_Init 005A                         ??_Lcd_Port 0073  
         __size_of_USART_INTERRUPT 0006                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 061A  
                   _Lcd_Write_Char 05EF                            _Lcd_Cmd 05D5  
                     ??_USART_Init 0073                    __size_of___bmul 0015  
                          ___awdiv 0280                            ___awmod 0351  
                          ___lldiv 02E9                    ?_Lcd_Set_Cursor 0077  
                          __ptext1 04C2                            __ptext2 069F  
                          __ptext3 065A                            __ptext4 06A5  
                          __ptext5 0456                            __ptext6 02E9  
                          __ptext7 03AC                            __ptext8 0672  
                          __ptext9 067C                       __size_of_ISR 0032  
              __end_of_Write_USART 0672                   ___awmod@dividend 0075  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
               __end_of_USART_Init 0666                            clrloop0 0698  
           __end_of_Lcd_Write_Char 0605               end_of_initialization 0028  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 005A  
                  ___lldiv@counter 0066                          _RCSTAbits 0018  
                 I2C_Master_Init@c 0067                   I2C_Master_Read@a 0073  
                        Lcd_Port@a 0073                          _PORTAbits 0005  
                        _PORTDbits 0008                          _PORTEbits 0009  
             __size_of_RTC_display 0173                          _TRISCbits 0087  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 005C  
                Lcd_Write_String@i 005A                          _TXSTAbits 0098  
                ??_USART_INTERRUPT 0073                          _Lcd_Clear 0640  
                   __end_of___bmul 061A                        _Write_USART 0666  
                 _Lcd_Write_String 0574                start_initialization 000F  
                   _bcd_to_decimal 05B9                        __end_of_ISR 04C2  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
      __end_of_USART_Init_BaudRate 06A5                         ?_Lcd_Clear 0070  
                         ??___bmul 0074                         init_fetch0 062D  
                      __pdataBANK0 0020                    Lcd_Write_Char@a 0075  
           __end_of_bcd_to_decimal 05D5                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 005A  
                      _data_recive 0078                      ?_Write_to_RTC 0070  
                         ?_Lcd_Cmd 0070                 _Write_USART_String 0523  
                 _I2C_Master_Start 0685                   _I2C_Master_Write 0672  
                 ??_Lcd_Set_Cursor 005A                ?_Write_USART_String 0074  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 005A                          __pstrings 061A  
                  ?_bcd_to_decimal 0070               ??_Write_USART_String 0076  
             bcd_to_decimal@number 0077                     ??_Write_to_RTC 0075  
                   __size_of_setup 0031                  interrupt_function 0004  
                        clear_ram0 0697                           _PIE1bits 008C  
                         Lcd_Cmd@a 0076                           _PIR1bits 000C  
                      ??_Lcd_Clear 0077                        __stringbase 0629  
                 ??_Lcd_Write_Char 0074                    _USART_INTERRUPT 06A5  
                         _Lcd_Init 0406                           _Lcd_Port 06AB  
              I2C_Master_Read@temp 005A           __end_of_Lcd_Write_String 0599  
                 __size_of_Lcd_Cmd 001A                       ?_Write_USART 0070  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 005B          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                      ??_RTC_display 005E  
               __end_of__stringtab 062A                    _I2C_Master_Init 0456  
                  _I2C_Master_Read 04F3                    _I2C_Master_Wait 064D  
                  _I2C_Master_Stop 067C                           __ptext10 0685  
                         __ptext11 0523                           __ptext20 054E  
                         __ptext12 0666                           __ptext21 0406  
                         __ptext13 002C                           __ptext22 0640  
                         __ptext14 05B9                           __ptext23 05D5  
                         __ptext15 0605                           __ptext24 06AB  
                         __ptext16 0351                           __ptext25 068E  
                         __ptext17 0280                           __ptext26 04F3  
                         __ptext18 0574                           __ptext27 064D  
                         __ptext19 05EF                           __ptext28 0490  
                    __size_of_main 00E1               __end_of_Write_to_RTC 0406  
          __end_of_USART_INTERRUPT 06AB           __end_of_I2C_Master_Start 068E  
         __end_of_I2C_Master_Write 067C                         _INTCONbits 000B  
              Write_USART_String@a 0074                Write_USART_String@i 0077  
                         init_ram0 0631                __end_of_RTC_display 019F  
                         intlevel1 0000                   ___lldiv@dividend 005E  
                        stringcode 0624                         _OSCCONbits 008F  
                 ??_bcd_to_decimal 005A       __size_of_USART_Init_BaudRate 0006  
          __end_of_I2C_Master_Init 0490            __end_of_I2C_Master_Read 0523  
          __end_of_I2C_Master_Wait 065A            __end_of_I2C_Master_Stop 0685  
               Lcd_Set_Cursor@temp 005C                   ___lldiv@quotient 0062  
                I2C_Master_Write@d 0073                           stringdir 0624  
                         stringtab 061A                        _SSPCON2bits 0091  
                       _USART_Init 065A  
