

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 22:26:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  008F                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  0105                     	;# 
   451  0107                     	;# 
   452  0108                     	;# 
   453  0109                     	;# 
   454  010C                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  0185                     	;# 
   460  0187                     	;# 
   461  0188                     	;# 
   462  0189                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  000E                     	;# 
   481  000F                     	;# 
   482  0010                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0015                     	;# 
   488  0015                     	;# 
   489  0016                     	;# 
   490  0017                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001B                     	;# 
   495  001B                     	;# 
   496  001C                     	;# 
   497  001D                     	;# 
   498  001E                     	;# 
   499  001F                     	;# 
   500  0081                     	;# 
   501  0085                     	;# 
   502  0086                     	;# 
   503  0087                     	;# 
   504  0088                     	;# 
   505  0089                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  008F                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0093                     	;# 
   516  0094                     	;# 
   517  0095                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0098                     	;# 
   521  0099                     	;# 
   522  009A                     	;# 
   523  009B                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  0105                     	;# 
   529  0107                     	;# 
   530  0108                     	;# 
   531  0109                     	;# 
   532  010C                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  0185                     	;# 
   538  0187                     	;# 
   539  0188                     	;# 
   540  0189                     	;# 
   541  018C                     	;# 
   542  018D                     	;# 
   543                           
   544                           	psect	idataBANK0
   545  0506                     __pidataBANK0:
   546                           
   547                           ;initializer for _Date
   548  0506  3444               	retlw	68
   549  0507  3441               	retlw	65
   550  0508  3454               	retlw	84
   551  0509  3445               	retlw	69
   552  050A  343A               	retlw	58
   553  050B  3420               	retlw	32
   554  050C  3430               	retlw	48
   555  050D  3430               	retlw	48
   556  050E  342F               	retlw	47
   557  050F  3430               	retlw	48
   558  0510  3430               	retlw	48
   559  0511  342F               	retlw	47
   560  0512  3430               	retlw	48
   561  0513  3430               	retlw	48
   562  0514  3430               	retlw	48
   563  0515  3430               	retlw	48
   564  0516  3400               	retlw	0
   565                           
   566                           ;initializer for _Time
   567  0517  3454               	retlw	84
   568  0518  3449               	retlw	73
   569  0519  344D               	retlw	77
   570  051A  3445               	retlw	69
   571  051B  343A               	retlw	58
   572  051C  3420               	retlw	32
   573  051D  3430               	retlw	48
   574  051E  3430               	retlw	48
   575  051F  343A               	retlw	58
   576  0520  3430               	retlw	48
   577  0521  3430               	retlw	48
   578  0522  343A               	retlw	58
   579  0523  3430               	retlw	48
   580  0524  3430               	retlw	48
   581  0525  3400               	retlw	0
   582  0019                     _TXREG	set	25
   583  000B                     _INTCONbits	set	11
   584  0018                     _RCSTAbits	set	24
   585  0008                     _PORTDbits	set	8
   586  0009                     _PORTEbits	set	9
   587  0013                     _SSPBUF	set	19
   588  0014                     _SSPCON	set	20
   589  0009                     _PORTE	set	9
   590  0008                     _PORTD	set	8
   591  0007                     _PORTC	set	7
   592  0006                     _PORTB	set	6
   593  0005                     _PORTA	set	5
   594  0005                     _PORTAbits	set	5
   595  001A                     _RCREG	set	26
   596  000C                     _PIR1bits	set	12
   597  0065                     _RCIF	set	101
   598  0063                     _SSPIF	set	99
   599  005E                     _PEIE	set	94
   600  005F                     _GIE	set	95
   601  008C                     _PIE1bits	set	140
   602  0099                     _SPBRG	set	153
   603  009A                     _SPBRGH	set	154
   604  0098                     _TXSTAbits	set	152
   605  008F                     _OSCCONbits	set	143
   606  0091                     _SSPCON2bits	set	145
   607  0094                     _SSPSTAT	set	148
   608  0093                     _SSPADD	set	147
   609  0091                     _SSPCON2	set	145
   610  0089                     _TRISE	set	137
   611  0087                     _TRISCbits	set	135
   612  0086                     _TRISB	set	134
   613  0085                     _TRISA	set	133
   614  0088                     _TRISD	set	136
   615  04C1                     _TRMT	set	1217
   616  0463                     _SSPIE	set	1123
   617  043C                     _TRISC4	set	1084
   618  043B                     _TRISC3	set	1083
   619  0189                     _ANSELH	set	393
   620  0188                     _ANSEL	set	392
   621                           
   622                           	psect	cinit
   623  000F                     start_initialization:	
   624                           ; #config settings
   625                           
   626  000F                     __initialization:
   627                           
   628                           ; Initialize objects allocated to BANK0
   629  000F  1383               	bcf	3,7	;select IRP bank0
   630  0010  3040               	movlw	low (__pdataBANK0+32)
   631  0011  00FD               	movwf	btemp+-1
   632  0012  3005               	movlw	high __pidataBANK0
   633  0013  00FE               	movwf	btemp
   634  0014  3006               	movlw	low __pidataBANK0
   635  0015  00FF               	movwf	btemp+1
   636  0016  3020               	movlw	low __pdataBANK0
   637  0017  0084               	movwf	4
   638  0018  120A  118A  258B  120A  118A  	fcall	init_ram0
   639                           
   640                           ; Clear objects allocated to BANK0
   641  001D  3040               	movlw	low __pbssBANK0
   642  001E  0084               	movwf	4
   643  001F  305A               	movlw	low (__pbssBANK0+26)
   644  0020  120A  118A  25EB  120A  118A  	fcall	clear_ram0
   645                           
   646                           ; Clear objects allocated to COMMON
   647  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   648  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   649  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   650  0028                     end_of_initialization:	
   651                           ;End of C runtime variable initialization code
   652                           
   653  0028                     __end_of__initialization:
   654  0028  0183               	clrf	3
   655  0029  120A  118A  299F   	ljmp	_main	;jump to C main() function
   656                           
   657                           	psect	bssCOMMON
   658  0078                     __pbssCOMMON:
   659  0078                     _hour:
   660  0078                     	ds	1
   661  0079                     _minute:
   662  0079                     	ds	1
   663  007A                     _second:
   664  007A                     	ds	1
   665                           
   666                           	psect	bssBANK0
   667  0040                     __pbssBANK0:
   668  0040                     _data_total:
   669  0040                     	ds	20
   670  0054                     _data_recive:
   671  0054                     	ds	1
   672  0055                     _cont:
   673  0055                     	ds	1
   674  0056                     _year:
   675  0056                     	ds	1
   676  0057                     _month:
   677  0057                     	ds	1
   678  0058                     _m_day:
   679  0058                     	ds	1
   680  0059                     _i:
   681  0059                     	ds	1
   682                           
   683                           	psect	dataBANK0
   684  0020                     __pdataBANK0:
   685  0020                     _Date:
   686  0020                     	ds	17
   687  0031                     _Time:
   688  0031                     	ds	15
   689                           
   690                           	psect	inittext
   691  0587                     init_fetch0:	
   692                           ;	Called with low address in FSR and high address in W
   693                           
   694  0587  087E               	movf	btemp,w
   695  0588  008A               	movwf	10
   696  0589  087F               	movf	btemp+1,w
   697  058A  0082               	movwf	2
   698  058B                     init_ram0:	
   699                           ;Called with:
   700                           ;	high address of idata address in btemp 
   701                           ;	low address of idata address in btemp+1 
   702                           ;	low address of data in FSR
   703                           ;	high address + 1 of data in btemp-1
   704                           
   705  058B  120A  118A  2587  120A  118A  	fcall	init_fetch0
   706  0590  0080               	movwf	0
   707  0591  0A84               	incf	4,f
   708  0592  0804               	movf	4,w
   709  0593  067D               	xorwf	btemp+-1,w
   710  0594  1903               	btfsc	3,2
   711  0595  3400               	retlw	0
   712  0596  0AFF               	incf	btemp+1,f
   713  0597  1903               	btfsc	3,2
   714  0598  0AFE               	incf	btemp,f
   715  0599  2D8B               	goto	init_ram0
   716                           
   717                           	psect	clrtext
   718  05EB                     clear_ram0:	
   719                           ;	Called with FSR containing the base address, and
   720                           ;	W with the last address+1
   721                           
   722  05EB  0064               	clrwdt	;clear the watchdog before getting into this loop
   723  05EC                     clrloop0:
   724  05EC  0180               	clrf	0	;clear RAM location pointed to by FSR
   725  05ED  0A84               	incf	4,f	;increment pointer
   726  05EE  0604               	xorwf	4,w	;XOR with final address
   727  05EF  1903               	btfsc	3,2	;have we reached the end yet?
   728  05F0  3400               	retlw	0	;all done for this memory range, return
   729  05F1  0604               	xorwf	4,w	;XOR again to restore value
   730  05F2  2DEC               	goto	clrloop0	;do the next byte
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:
   734  0070                     ?_setup:
   735  0070                     ?_Lcd_Init:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_Lcd_Clear:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_Write_to_RTC:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_I2C_Master_Start:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_I2C_Master_RepeatedStart:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_I2C_Master_Stop:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_RTC_display:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_Lcd_Write_String:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_Lcd_Port:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_Lcd_Cmd:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_ISR:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ??_ISR:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_main:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_bcd_to_decimal:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_I2C_Master_Wait:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_Lcd_Write_Char:	
   781                           ; 1 bytes @ 0x0
   782                           
   783                           
   784                           ; 1 bytes @ 0x0
   785  0070                     	ds	3
   786  0073                     ??_I2C_Master_Start:
   787  0073                     ?_I2C_Master_Write:	
   788                           ; 1 bytes @ 0x3
   789                           
   790  0073                     ??_I2C_Master_RepeatedStart:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     ??_I2C_Master_Stop:	
   794                           ; 1 bytes @ 0x3
   795                           
   796  0073                     ??_Lcd_Port:	
   797                           ; 1 bytes @ 0x3
   798                           
   799  0073                     ??_I2C_Master_Wait:	
   800                           ; 1 bytes @ 0x3
   801                           
   802  0073                     ?___bmul:	
   803                           ; 1 bytes @ 0x3
   804                           
   805  0073                     ??___lldiv:	
   806                           ; 1 bytes @ 0x3
   807                           
   808  0073                     ?_I2C_Master_Read:	
   809                           ; 1 bytes @ 0x3
   810                           
   811  0073                     ?___awdiv:	
   812                           ; 2 bytes @ 0x3
   813                           
   814  0073                     ?___awmod:	
   815                           ; 2 bytes @ 0x3
   816                           
   817  0073                     Lcd_Port@a:	
   818                           ; 2 bytes @ 0x3
   819                           
   820  0073                     ___bmul@multiplicand:	
   821                           ; 1 bytes @ 0x3
   822                           
   823  0073                     I2C_Master_Write@d:	
   824                           ; 1 bytes @ 0x3
   825                           
   826  0073                     I2C_Master_Read@a:	
   827                           ; 2 bytes @ 0x3
   828                           
   829  0073                     ___awdiv@divisor:	
   830                           ; 2 bytes @ 0x3
   831                           
   832  0073                     ___awmod@divisor:	
   833                           ; 2 bytes @ 0x3
   834                           
   835                           
   836                           ; 2 bytes @ 0x3
   837  0073                     	ds	1
   838  0074                     ??_I2C_Master_Init:
   839  0074                     ??_Lcd_Cmd:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0074                     ??_Lcd_Write_Char:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0074                     ??___bmul:	
   846                           ; 1 bytes @ 0x4
   847                           
   848                           
   849                           ; 1 bytes @ 0x4
   850  0074                     	ds	1
   851  0075                     ??_Write_to_RTC:
   852  0075                     ??_I2C_Master_Write:	
   853                           ; 1 bytes @ 0x5
   854                           
   855  0075                     ??_I2C_Master_Read:	
   856                           ; 1 bytes @ 0x5
   857                           
   858  0075                     Lcd_Write_Char@a:	
   859                           ; 1 bytes @ 0x5
   860                           
   861  0075                     ___bmul@product:	
   862                           ; 1 bytes @ 0x5
   863                           
   864  0075                     ___awdiv@dividend:	
   865                           ; 1 bytes @ 0x5
   866                           
   867  0075                     ___awmod@dividend:	
   868                           ; 2 bytes @ 0x5
   869                           
   870                           
   871                           ; 2 bytes @ 0x5
   872  0075                     	ds	1
   873  0076                     ??_Lcd_Write_String:
   874  0076                     Lcd_Cmd@a:	
   875                           ; 1 bytes @ 0x6
   876                           
   877  0076                     ___bmul@multiplier:	
   878                           ; 1 bytes @ 0x6
   879                           
   880                           
   881                           ; 1 bytes @ 0x6
   882  0076                     	ds	1
   883  0077                     ??_Lcd_Clear:
   884  0077                     ?_Lcd_Set_Cursor:	
   885                           ; 1 bytes @ 0x7
   886                           
   887  0077                     ??___awdiv:	
   888                           ; 1 bytes @ 0x7
   889                           
   890  0077                     ??___awmod:	
   891                           ; 1 bytes @ 0x7
   892                           
   893  0077                     bcd_to_decimal@number:	
   894                           ; 1 bytes @ 0x7
   895                           
   896  0077                     Lcd_Set_Cursor@b:	
   897                           ; 1 bytes @ 0x7
   898                           
   899                           
   900                           ; 1 bytes @ 0x7
   901  0077                     	ds	1
   902  0078                     ??_setup:
   903                           
   904                           	psect	cstackBANK0
   905  005A                     __pcstackBANK0:	
   906                           ; 1 bytes @ 0x8
   907                           
   908  005A                     ??_Lcd_Init:
   909  005A                     ??_Lcd_Set_Cursor:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  005A                     ??_bcd_to_decimal:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  005A                     ?___lldiv:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  005A                     ___awdiv@counter:	
   919                           ; 4 bytes @ 0x0
   920                           
   921  005A                     ___awmod@counter:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  005A                     I2C_Master_Read@temp:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  005A                     Lcd_Write_String@i:	
   928                           ; 2 bytes @ 0x0
   929                           
   930  005A                     ___lldiv@divisor:	
   931                           ; 2 bytes @ 0x0
   932                           
   933                           
   934                           ; 4 bytes @ 0x0
   935  005A                     	ds	1
   936  005B                     Lcd_Set_Cursor@a:
   937  005B                     ___awdiv@sign:	
   938                           ; 1 bytes @ 0x1
   939                           
   940  005B                     ___awmod@sign:	
   941                           ; 1 bytes @ 0x1
   942                           
   943                           
   944                           ; 1 bytes @ 0x1
   945  005B                     	ds	1
   946  005C                     Lcd_Set_Cursor@temp:
   947  005C                     Lcd_Write_String@a:	
   948                           ; 1 bytes @ 0x2
   949                           
   950  005C                     ___awdiv@quotient:	
   951                           ; 1 bytes @ 0x2
   952                           
   953                           
   954                           ; 2 bytes @ 0x2
   955  005C                     	ds	2
   956  005E                     ??_RTC_display:
   957  005E                     ___lldiv@dividend:	
   958                           ; 1 bytes @ 0x4
   959                           
   960                           
   961                           ; 4 bytes @ 0x4
   962  005E                     	ds	4
   963  0062                     ___lldiv@quotient:
   964                           
   965                           ; 4 bytes @ 0x8
   966  0062                     	ds	4
   967  0066                     ___lldiv@counter:
   968                           
   969                           ; 1 bytes @ 0xC
   970  0066                     	ds	1
   971  0067                     ?_I2C_Master_Init:
   972  0067                     I2C_Master_Init@c:	
   973                           ; 1 bytes @ 0xD
   974                           
   975                           
   976                           ; 4 bytes @ 0xD
   977  0067                     	ds	4
   978  006B                     ??_main:
   979                           
   980                           ; 1 bytes @ 0x11
   981  006B                     	ds	3
   982                           
   983                           	psect	maintext
   984  019F                     __pmaintext:	
   985 ;;
   986 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   987 ;;
   988 ;; *************** function _main *****************
   989 ;; Defined at:
   990 ;;		line 113 in file "main_prueba3_mini2.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : B00/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          0       3       0       0       0
  1007 ;;      Totals:         0       3       0       0       0
  1008 ;;Total ram usage:        3 bytes
  1009 ;; Hardware stack levels required when called:    5
  1010 ;; This function calls:
  1011 ;;		_I2C_Master_Read
  1012 ;;		_I2C_Master_RepeatedStart
  1013 ;;		_I2C_Master_Start
  1014 ;;		_I2C_Master_Stop
  1015 ;;		_I2C_Master_Write
  1016 ;;		_Lcd_Clear
  1017 ;;		_Lcd_Init
  1018 ;;		_RTC_display
  1019 ;;		_Write_to_RTC
  1020 ;;		_setup
  1021 ;; This function is called by:
  1022 ;;		Startup code after reset
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _main
  1028  019F                     _main:
  1029  019F                     l1785:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1032                           
  1033                           
  1034                           ;main_prueba3_mini2.c: 114:     setup();
  1035  019F  120A  118A  24E4  120A  118A  	fcall	_setup
  1036  01A4                     l1787:
  1037                           
  1038                           ;main_prueba3_mini2.c: 115:     TRISD = 0x00;
  1039  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1040  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1041  01A6  0188               	clrf	8	;volatile
  1042  01A7                     l1789:
  1043                           
  1044                           ;main_prueba3_mini2.c: 116:     Lcd_Init();
  1045  01A7  120A  118A  23DF  120A  118A  	fcall	_Lcd_Init
  1046  01AC                     l1791:
  1047                           
  1048                           ;main_prueba3_mini2.c: 117:     Lcd_Clear();
  1049  01AC  120A  118A  25AC  120A  118A  	fcall	_Lcd_Clear
  1050  01B1                     l1793:
  1051                           
  1052                           ;main_prueba3_mini2.c: 118:     Write_to_RTC();
  1053  01B1  120A  118A  2385  120A  118A  	fcall	_Write_to_RTC
  1054  01B6                     l1795:
  1055                           
  1056                           ;main_prueba3_mini2.c: 123:         I2C_Master_Start();
  1057  01B6  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Start
  1058  01BB                     l1797:
  1059                           
  1060                           ;main_prueba3_mini2.c: 124:         I2C_Master_Write(0xD0);
  1061  01BB  30D0               	movlw	208
  1062  01BC  00F3               	movwf	I2C_Master_Write@d
  1063  01BD  3000               	movlw	0
  1064  01BE  00F4               	movwf	I2C_Master_Write@d+1
  1065  01BF  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1066  01C4                     l1799:
  1067                           
  1068                           ;main_prueba3_mini2.c: 125:         I2C_Master_Write(0);
  1069  01C4  3000               	movlw	0
  1070  01C5  00F3               	movwf	I2C_Master_Write@d
  1071  01C6  00F4               	movwf	I2C_Master_Write@d+1
  1072  01C7  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1073  01CC                     l1801:
  1074                           
  1075                           ;main_prueba3_mini2.c: 126:         I2C_Master_RepeatedStart();
  1076  01CC  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1077  01D1                     l1803:
  1078                           
  1079                           ;main_prueba3_mini2.c: 127:         I2C_Master_Write(0xD1);
  1080  01D1  30D1               	movlw	209
  1081  01D2  00F3               	movwf	I2C_Master_Write@d
  1082  01D3  3000               	movlw	0
  1083  01D4  00F4               	movwf	I2C_Master_Write@d+1
  1084  01D5  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1085  01DA                     l1805:
  1086                           
  1087                           ;main_prueba3_mini2.c: 128:         second = I2C_Master_Read(1);
  1088  01DA  3001               	movlw	1
  1089  01DB  00F3               	movwf	I2C_Master_Read@a
  1090  01DC  3000               	movlw	0
  1091  01DD  00F4               	movwf	I2C_Master_Read@a+1
  1092  01DE  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1093  01E3  0873               	movf	?_I2C_Master_Read,w
  1094  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1095  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1096  01E6  00EB               	movwf	??_main
  1097  01E7  086B               	movf	??_main,w
  1098  01E8  00FA               	movwf	_second
  1099  01E9                     l1807:
  1100                           
  1101                           ;main_prueba3_mini2.c: 129:         minute = I2C_Master_Read(1);
  1102  01E9  3001               	movlw	1
  1103  01EA  00F3               	movwf	I2C_Master_Read@a
  1104  01EB  3000               	movlw	0
  1105  01EC  00F4               	movwf	I2C_Master_Read@a+1
  1106  01ED  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1107  01F2  0873               	movf	?_I2C_Master_Read,w
  1108  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1109  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1110  01F5  00EB               	movwf	??_main
  1111  01F6  086B               	movf	??_main,w
  1112  01F7  00F9               	movwf	_minute
  1113  01F8                     l1809:
  1114                           
  1115                           ;main_prueba3_mini2.c: 130:         hour = I2C_Master_Read(1);
  1116  01F8  3001               	movlw	1
  1117  01F9  00F3               	movwf	I2C_Master_Read@a
  1118  01FA  3000               	movlw	0
  1119  01FB  00F4               	movwf	I2C_Master_Read@a+1
  1120  01FC  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1121  0201  0873               	movf	?_I2C_Master_Read,w
  1122  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0204  00EB               	movwf	??_main
  1125  0205  086B               	movf	??_main,w
  1126  0206  00F8               	movwf	_hour
  1127  0207                     l1811:
  1128                           
  1129                           ;main_prueba3_mini2.c: 131:         I2C_Master_Read(1);
  1130  0207  3001               	movlw	1
  1131  0208  00F3               	movwf	I2C_Master_Read@a
  1132  0209  3000               	movlw	0
  1133  020A  00F4               	movwf	I2C_Master_Read@a+1
  1134  020B  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1135  0210                     l1813:
  1136                           
  1137                           ;main_prueba3_mini2.c: 132:         m_day = I2C_Master_Read(1);
  1138  0210  3001               	movlw	1
  1139  0211  00F3               	movwf	I2C_Master_Read@a
  1140  0212  3000               	movlw	0
  1141  0213  00F4               	movwf	I2C_Master_Read@a+1
  1142  0214  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1143  0219  0873               	movf	?_I2C_Master_Read,w
  1144  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1145  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1146  021C  00EB               	movwf	??_main
  1147  021D  086B               	movf	??_main,w
  1148  021E  00D8               	movwf	_m_day
  1149  021F                     l1815:
  1150                           
  1151                           ;main_prueba3_mini2.c: 133:         month = I2C_Master_Read(1);
  1152  021F  3001               	movlw	1
  1153  0220  00F3               	movwf	I2C_Master_Read@a
  1154  0221  3000               	movlw	0
  1155  0222  00F4               	movwf	I2C_Master_Read@a+1
  1156  0223  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1157  0228  0873               	movf	?_I2C_Master_Read,w
  1158  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1159  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1160  022B  00EB               	movwf	??_main
  1161  022C  086B               	movf	??_main,w
  1162  022D  00D7               	movwf	_month
  1163  022E                     l1817:
  1164                           
  1165                           ;main_prueba3_mini2.c: 134:         year = I2C_Master_Read(0);
  1166  022E  3000               	movlw	0
  1167  022F  00F3               	movwf	I2C_Master_Read@a
  1168  0230  00F4               	movwf	I2C_Master_Read@a+1
  1169  0231  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1170  0236  0873               	movf	?_I2C_Master_Read,w
  1171  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0239  00EB               	movwf	??_main
  1174  023A  086B               	movf	??_main,w
  1175  023B  00D6               	movwf	_year
  1176  023C                     l1819:
  1177                           
  1178                           ;main_prueba3_mini2.c: 135:         I2C_Master_Stop();
  1179  023C  120A  118A  25D0  120A  118A  	fcall	_I2C_Master_Stop
  1180  0241                     l1821:
  1181                           
  1182                           ;main_prueba3_mini2.c: 137:         RTC_display();
  1183  0241  120A  118A  202C  120A  118A  	fcall	_RTC_display
  1184  0246                     l1823:
  1185                           
  1186                           ;main_prueba3_mini2.c: 139:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1187  0246  3002               	movlw	2
  1188  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0249  00ED               	movwf	??_main+2
  1191  024A  3004               	movlw	4
  1192  024B  00EC               	movwf	??_main+1
  1193  024C  30B9               	movlw	185
  1194  024D  00EB               	movwf	??_main
  1195  024E                     u1077:
  1196  024E  0BEB               	decfsz	??_main,f
  1197  024F  2A4E               	goto	u1077
  1198  0250  0BEC               	decfsz	??_main+1,f
  1199  0251  2A4E               	goto	u1077
  1200  0252  0BED               	decfsz	??_main+2,f
  1201  0253  2A4E               	goto	u1077
  1202  0254  2A55               	nop2
  1203  0255  29B6               	goto	l1795
  1204  0256  120A  118A  280C   	ljmp	start
  1205  0259                     __end_of_main:
  1206                           
  1207                           	psect	text1
  1208  04E4                     __ptext1:	
  1209 ;; *************** function _setup *****************
  1210 ;; Defined at:
  1211 ;;		line 207 in file "main_prueba3_mini2.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0, pclath, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    3
  1232 ;; This function calls:
  1233 ;;		_I2C_Master_Init
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _setup
  1241  04E4                     _setup:
  1242  04E4                     l1721:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1245                           
  1246                           
  1247                           ;main_prueba3_mini2.c: 208:     ANSEL = 0;
  1248  04E4  1683               	bsf	3,5	;RP0=1, select bank3
  1249  04E5  1703               	bsf	3,6	;RP1=1, select bank3
  1250  04E6  0188               	clrf	8	;volatile
  1251                           
  1252                           ;main_prueba3_mini2.c: 209:     ANSELH = 0;
  1253  04E7  0189               	clrf	9	;volatile
  1254                           
  1255                           ;main_prueba3_mini2.c: 210:     TRISA = 0;
  1256  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  1257  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  1258  04EA  0185               	clrf	5	;volatile
  1259  04EB                     l1723:
  1260                           
  1261                           ;main_prueba3_mini2.c: 211:     TRISB = 0b00000011;
  1262  04EB  3003               	movlw	3
  1263  04EC  0086               	movwf	6	;volatile
  1264  04ED                     l1725:
  1265                           
  1266                           ;main_prueba3_mini2.c: 212:     TRISCbits.TRISC6 = 0;
  1267  04ED  1307               	bcf	7,6	;volatile
  1268  04EE                     l1727:
  1269                           
  1270                           ;main_prueba3_mini2.c: 213:     TRISCbits.TRISC7 = 1;
  1271  04EE  1787               	bsf	7,7	;volatile
  1272  04EF                     l1729:
  1273                           
  1274                           ;main_prueba3_mini2.c: 214:     TRISD = 0;
  1275  04EF  0188               	clrf	8	;volatile
  1276  04F0                     l1731:
  1277                           
  1278                           ;main_prueba3_mini2.c: 215:     TRISE = 0;
  1279  04F0  0189               	clrf	9	;volatile
  1280  04F1                     l1733:
  1281                           
  1282                           ;main_prueba3_mini2.c: 216:     PORTA = 0;
  1283  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1284  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1285  04F3  0185               	clrf	5	;volatile
  1286  04F4                     l1735:
  1287                           
  1288                           ;main_prueba3_mini2.c: 217:     PORTB = 0;
  1289  04F4  0186               	clrf	6	;volatile
  1290  04F5                     l1737:
  1291                           
  1292                           ;main_prueba3_mini2.c: 218:     PORTC = 0;
  1293  04F5  0187               	clrf	7	;volatile
  1294  04F6                     l1739:
  1295                           
  1296                           ;main_prueba3_mini2.c: 219:     PORTD = 0;
  1297  04F6  0188               	clrf	8	;volatile
  1298  04F7                     l1741:
  1299                           
  1300                           ;main_prueba3_mini2.c: 220:     PORTE = 0;
  1301  04F7  0189               	clrf	9	;volatile
  1302  04F8                     l1743:
  1303                           
  1304                           ;main_prueba3_mini2.c: 221:     I2C_Master_Init(100000);
  1305  04F8  3000               	movlw	0
  1306  04F9  00EA               	movwf	I2C_Master_Init@c+3
  1307  04FA  3001               	movlw	1
  1308  04FB  00E9               	movwf	I2C_Master_Init@c+2
  1309  04FC  3086               	movlw	134
  1310  04FD  00E8               	movwf	I2C_Master_Init@c+1
  1311  04FE  30A0               	movlw	160
  1312  04FF  00E7               	movwf	I2C_Master_Init@c
  1313  0500  120A  118A  242F  120A  118A  	fcall	_I2C_Master_Init
  1314  0505                     l118:
  1315  0505  0008               	return
  1316  0506                     __end_of_setup:
  1317                           
  1318                           	psect	text2
  1319  042F                     __ptext2:	
  1320 ;; *************** function _I2C_Master_Init *****************
  1321 ;; Defined at:
  1322 ;;		line 21 in file "I2C.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  c               4   13[BANK0 ] const unsigned long 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0, pclath, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       4       0       0       0
  1337 ;;      Locals:         0       0       0       0       0
  1338 ;;      Temps:          4       0       0       0       0
  1339 ;;      Totals:         4       4       0       0       0
  1340 ;;Total ram usage:        8 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    2
  1343 ;; This function calls:
  1344 ;;		___lldiv
  1345 ;; This function is called by:
  1346 ;;		_setup
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _I2C_Master_Init
  1352  042F                     _I2C_Master_Init:
  1353  042F                     l1671:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1356                           
  1357                           
  1358                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1359  042F  3028               	movlw	40
  1360  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0432  0094               	movwf	20	;volatile
  1363  0433                     l1673:
  1364                           
  1365                           ;I2C.c: 28:     SSPCON2 = 0;
  1366  0433  1683               	bsf	3,5	;RP0=1, select bank1
  1367  0434  1303               	bcf	3,6	;RP1=0, select bank1
  1368  0435  0191               	clrf	17	;volatile
  1369  0436                     l1675:
  1370                           
  1371                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1372  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0438  0867               	movf	I2C_Master_Init@c,w
  1375  0439  00F4               	movwf	??_I2C_Master_Init
  1376  043A  0868               	movf	I2C_Master_Init@c+1,w
  1377  043B  00F5               	movwf	??_I2C_Master_Init+1
  1378  043C  0869               	movf	I2C_Master_Init@c+2,w
  1379  043D  00F6               	movwf	??_I2C_Master_Init+2
  1380  043E  086A               	movf	I2C_Master_Init@c+3,w
  1381  043F  00F7               	movwf	??_I2C_Master_Init+3
  1382  0440  3002               	movlw	2
  1383  0441                     u965:
  1384  0441  1003               	clrc
  1385  0442  0DF4               	rlf	??_I2C_Master_Init,f
  1386  0443  0DF5               	rlf	??_I2C_Master_Init+1,f
  1387  0444  0DF6               	rlf	??_I2C_Master_Init+2,f
  1388  0445  0DF7               	rlf	??_I2C_Master_Init+3,f
  1389  0446                     u960:
  1390  0446  3EFF               	addlw	-1
  1391  0447  1D03               	skipz
  1392  0448  2C41               	goto	u965
  1393  0449  0877               	movf	??_I2C_Master_Init+3,w
  1394  044A  00DD               	movwf	___lldiv@divisor+3
  1395  044B  0876               	movf	??_I2C_Master_Init+2,w
  1396  044C  00DC               	movwf	___lldiv@divisor+2
  1397  044D  0875               	movf	??_I2C_Master_Init+1,w
  1398  044E  00DB               	movwf	___lldiv@divisor+1
  1399  044F  0874               	movf	??_I2C_Master_Init,w
  1400  0450  00DA               	movwf	___lldiv@divisor
  1401  0451  3000               	movlw	0
  1402  0452  00E1               	movwf	___lldiv@dividend+3
  1403  0453  307A               	movlw	122
  1404  0454  00E0               	movwf	___lldiv@dividend+2
  1405  0455  3012               	movlw	18
  1406  0456  00DF               	movwf	___lldiv@dividend+1
  1407  0457  3000               	movlw	0
  1408  0458  00DE               	movwf	___lldiv@dividend
  1409  0459  120A  118A  22C2  120A  118A  	fcall	___lldiv
  1410  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1411  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0460  085A               	movf	?___lldiv,w
  1413  0461  3EFF               	addlw	255
  1414  0462  1683               	bsf	3,5	;RP0=1, select bank1
  1415  0463  1303               	bcf	3,6	;RP1=0, select bank1
  1416  0464  0093               	movwf	19	;volatile
  1417  0465                     l1677:
  1418                           
  1419                           ;I2C.c: 36:     SSPSTAT = 0;
  1420  0465  0194               	clrf	20	;volatile
  1421  0466                     l1679:
  1422                           
  1423                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1424  0466  1587               	bsf	7,3	;volatile
  1425  0467                     l1681:
  1426                           
  1427                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1428  0467  1607               	bsf	7,4	;volatile
  1429  0468                     l147:
  1430  0468  0008               	return
  1431  0469                     __end_of_I2C_Master_Init:
  1432                           
  1433                           	psect	text3
  1434  02C2                     __ptext3:	
  1435 ;; *************** function ___lldiv *****************
  1436 ;; Defined at:
  1437 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  divisor         4    0[BANK0 ] unsigned long 
  1440 ;;  dividend        4    4[BANK0 ] unsigned long 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  quotient        4    8[BANK0 ] unsigned long 
  1443 ;;  counter         1   12[BANK0 ] unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  4    0[BANK0 ] unsigned long 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       8       0       0       0
  1454 ;;      Locals:         0       5       0       0       0
  1455 ;;      Temps:          1       0       0       0       0
  1456 ;;      Totals:         1      13       0       0       0
  1457 ;;Total ram usage:       14 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_I2C_Master_Init
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function ___lldiv
  1469  02C2                     ___lldiv:
  1470  02C2                     l1611:	
  1471                           ;incstack = 0
  1472                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1473                           
  1474  02C2  3000               	movlw	0
  1475  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1476  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1477  02C5  00E5               	movwf	___lldiv@quotient+3
  1478  02C6  3000               	movlw	0
  1479  02C7  00E4               	movwf	___lldiv@quotient+2
  1480  02C8  3000               	movlw	0
  1481  02C9  00E3               	movwf	___lldiv@quotient+1
  1482  02CA  3000               	movlw	0
  1483  02CB  00E2               	movwf	___lldiv@quotient
  1484  02CC  085D               	movf	___lldiv@divisor+3,w
  1485  02CD  045C               	iorwf	___lldiv@divisor+2,w
  1486  02CE  045B               	iorwf	___lldiv@divisor+1,w
  1487  02CF  045A               	iorwf	___lldiv@divisor,w
  1488  02D0  1903               	skipnz
  1489  02D1  2AD3               	goto	u851
  1490  02D2  2AD4               	goto	u850
  1491  02D3                     u851:
  1492  02D3  2B21               	goto	l1631
  1493  02D4                     u850:
  1494  02D4                     l1613:
  1495  02D4  01E6               	clrf	___lldiv@counter
  1496  02D5  0AE6               	incf	___lldiv@counter,f
  1497  02D6  2AE4               	goto	l1617
  1498  02D7                     l1615:
  1499  02D7  3001               	movlw	1
  1500  02D8  00F3               	movwf	??___lldiv
  1501  02D9                     u865:
  1502  02D9  1003               	clrc
  1503  02DA  0DDA               	rlf	___lldiv@divisor,f
  1504  02DB  0DDB               	rlf	___lldiv@divisor+1,f
  1505  02DC  0DDC               	rlf	___lldiv@divisor+2,f
  1506  02DD  0DDD               	rlf	___lldiv@divisor+3,f
  1507  02DE  0BF3               	decfsz	??___lldiv,f
  1508  02DF  2AD9               	goto	u865
  1509  02E0  3001               	movlw	1
  1510  02E1  00F3               	movwf	??___lldiv
  1511  02E2  0873               	movf	??___lldiv,w
  1512  02E3  07E6               	addwf	___lldiv@counter,f
  1513  02E4                     l1617:
  1514  02E4  1FDD               	btfss	___lldiv@divisor+3,7
  1515  02E5  2AE7               	goto	u871
  1516  02E6  2AE8               	goto	u870
  1517  02E7                     u871:
  1518  02E7  2AD7               	goto	l1615
  1519  02E8                     u870:
  1520  02E8                     l1619:
  1521  02E8  3001               	movlw	1
  1522  02E9  00F3               	movwf	??___lldiv
  1523  02EA                     u885:
  1524  02EA  1003               	clrc
  1525  02EB  0DE2               	rlf	___lldiv@quotient,f
  1526  02EC  0DE3               	rlf	___lldiv@quotient+1,f
  1527  02ED  0DE4               	rlf	___lldiv@quotient+2,f
  1528  02EE  0DE5               	rlf	___lldiv@quotient+3,f
  1529  02EF  0BF3               	decfsz	??___lldiv,f
  1530  02F0  2AEA               	goto	u885
  1531  02F1                     l1621:
  1532  02F1  085D               	movf	___lldiv@divisor+3,w
  1533  02F2  0261               	subwf	___lldiv@dividend+3,w
  1534  02F3  1D03               	skipz
  1535  02F4  2AFF               	goto	u895
  1536  02F5  085C               	movf	___lldiv@divisor+2,w
  1537  02F6  0260               	subwf	___lldiv@dividend+2,w
  1538  02F7  1D03               	skipz
  1539  02F8  2AFF               	goto	u895
  1540  02F9  085B               	movf	___lldiv@divisor+1,w
  1541  02FA  025F               	subwf	___lldiv@dividend+1,w
  1542  02FB  1D03               	skipz
  1543  02FC  2AFF               	goto	u895
  1544  02FD  085A               	movf	___lldiv@divisor,w
  1545  02FE  025E               	subwf	___lldiv@dividend,w
  1546  02FF                     u895:
  1547  02FF  1C03               	skipc
  1548  0300  2B02               	goto	u891
  1549  0301  2B03               	goto	u890
  1550  0302                     u891:
  1551  0302  2B12               	goto	l1627
  1552  0303                     u890:
  1553  0303                     l1623:
  1554  0303  085A               	movf	___lldiv@divisor,w
  1555  0304  02DE               	subwf	___lldiv@dividend,f
  1556  0305  085B               	movf	___lldiv@divisor+1,w
  1557  0306  1C03               	skipc
  1558  0307  0F5B               	incfsz	___lldiv@divisor+1,w
  1559  0308  02DF               	subwf	___lldiv@dividend+1,f
  1560  0309  085C               	movf	___lldiv@divisor+2,w
  1561  030A  1C03               	skipc
  1562  030B  0F5C               	incfsz	___lldiv@divisor+2,w
  1563  030C  02E0               	subwf	___lldiv@dividend+2,f
  1564  030D  085D               	movf	___lldiv@divisor+3,w
  1565  030E  1C03               	skipc
  1566  030F  0F5D               	incfsz	___lldiv@divisor+3,w
  1567  0310  02E1               	subwf	___lldiv@dividend+3,f
  1568  0311                     l1625:
  1569  0311  1462               	bsf	___lldiv@quotient,0
  1570  0312                     l1627:
  1571  0312  3001               	movlw	1
  1572  0313                     u905:
  1573  0313  1003               	clrc
  1574  0314  0CDD               	rrf	___lldiv@divisor+3,f
  1575  0315  0CDC               	rrf	___lldiv@divisor+2,f
  1576  0316  0CDB               	rrf	___lldiv@divisor+1,f
  1577  0317  0CDA               	rrf	___lldiv@divisor,f
  1578  0318  3EFF               	addlw	-1
  1579  0319  1D03               	skipz
  1580  031A  2B13               	goto	u905
  1581  031B                     l1629:
  1582  031B  3001               	movlw	1
  1583  031C  02E6               	subwf	___lldiv@counter,f
  1584  031D  1D03               	btfss	3,2
  1585  031E  2B20               	goto	u911
  1586  031F  2B21               	goto	u910
  1587  0320                     u911:
  1588  0320  2AE8               	goto	l1619
  1589  0321                     u910:
  1590  0321                     l1631:
  1591  0321  0865               	movf	___lldiv@quotient+3,w
  1592  0322  00DD               	movwf	?___lldiv+3
  1593  0323  0864               	movf	___lldiv@quotient+2,w
  1594  0324  00DC               	movwf	?___lldiv+2
  1595  0325  0863               	movf	___lldiv@quotient+1,w
  1596  0326  00DB               	movwf	?___lldiv+1
  1597  0327  0862               	movf	___lldiv@quotient,w
  1598  0328  00DA               	movwf	?___lldiv
  1599  0329                     l409:
  1600  0329  0008               	return
  1601  032A                     __end_of___lldiv:
  1602                           
  1603                           	psect	text4
  1604  0385                     __ptext4:	
  1605 ;; *************** function _Write_to_RTC *****************
  1606 ;; Defined at:
  1607 ;;		line 192 in file "main_prueba3_mini2.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0
  1624 ;;      Totals:         0       0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    3
  1628 ;; This function calls:
  1629 ;;		_I2C_Master_Start
  1630 ;;		_I2C_Master_Stop
  1631 ;;		_I2C_Master_Write
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _Write_to_RTC
  1639  0385                     _Write_to_RTC:
  1640  0385                     l1757:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  1643                           
  1644                           
  1645                           ;main_prueba3_mini2.c: 193:     I2C_Master_Start();
  1646  0385  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Start
  1647                           
  1648                           ;main_prueba3_mini2.c: 194:     I2C_Master_Write(0xD0);
  1649  038A  30D0               	movlw	208
  1650  038B  00F3               	movwf	I2C_Master_Write@d
  1651  038C  3000               	movlw	0
  1652  038D  00F4               	movwf	I2C_Master_Write@d+1
  1653  038E  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1654                           
  1655                           ;main_prueba3_mini2.c: 195:     I2C_Master_Write(0);
  1656  0393  3000               	movlw	0
  1657  0394  00F3               	movwf	I2C_Master_Write@d
  1658  0395  00F4               	movwf	I2C_Master_Write@d+1
  1659  0396  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1660                           
  1661                           ;main_prueba3_mini2.c: 196:     I2C_Master_Write(0);
  1662  039B  3000               	movlw	0
  1663  039C  00F3               	movwf	I2C_Master_Write@d
  1664  039D  00F4               	movwf	I2C_Master_Write@d+1
  1665  039E  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1666                           
  1667                           ;main_prueba3_mini2.c: 197:     I2C_Master_Write(3);
  1668  03A3  3003               	movlw	3
  1669  03A4  00F3               	movwf	I2C_Master_Write@d
  1670  03A5  3000               	movlw	0
  1671  03A6  00F4               	movwf	I2C_Master_Write@d+1
  1672  03A7  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1673                           
  1674                           ;main_prueba3_mini2.c: 198:     I2C_Master_Write(10);
  1675  03AC  300A               	movlw	10
  1676  03AD  00F3               	movwf	I2C_Master_Write@d
  1677  03AE  3000               	movlw	0
  1678  03AF  00F4               	movwf	I2C_Master_Write@d+1
  1679  03B0  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1680                           
  1681                           ;main_prueba3_mini2.c: 199:     I2C_Master_Write(1);
  1682  03B5  3001               	movlw	1
  1683  03B6  00F3               	movwf	I2C_Master_Write@d
  1684  03B7  3000               	movlw	0
  1685  03B8  00F4               	movwf	I2C_Master_Write@d+1
  1686  03B9  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1687                           
  1688                           ;main_prueba3_mini2.c: 200:     I2C_Master_Write(6);
  1689  03BE  3006               	movlw	6
  1690  03BF  00F3               	movwf	I2C_Master_Write@d
  1691  03C0  3000               	movlw	0
  1692  03C1  00F4               	movwf	I2C_Master_Write@d+1
  1693  03C2  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1694                           
  1695                           ;main_prueba3_mini2.c: 201:     I2C_Master_Write(3);
  1696  03C7  3003               	movlw	3
  1697  03C8  00F3               	movwf	I2C_Master_Write@d
  1698  03C9  3000               	movlw	0
  1699  03CA  00F4               	movwf	I2C_Master_Write@d+1
  1700  03CB  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1701                           
  1702                           ;main_prueba3_mini2.c: 202:     I2C_Master_Write(27);
  1703  03D0  301B               	movlw	27
  1704  03D1  00F3               	movwf	I2C_Master_Write@d
  1705  03D2  3000               	movlw	0
  1706  03D3  00F4               	movwf	I2C_Master_Write@d+1
  1707  03D4  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1708                           
  1709                           ;main_prueba3_mini2.c: 203:     I2C_Master_Stop();
  1710  03D9  120A  118A  25D0  120A  118A  	fcall	_I2C_Master_Stop
  1711  03DE                     l115:
  1712  03DE  0008               	return
  1713  03DF                     __end_of_Write_to_RTC:
  1714                           
  1715                           	psect	text5
  1716  05C6                     __ptext5:	
  1717 ;; *************** function _I2C_Master_Write *****************
  1718 ;; Defined at:
  1719 ;;		line 84 in file "I2C.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  d               2    3[COMMON] unsigned int 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         2       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0
  1736 ;;      Totals:         2       0       0       0       0
  1737 ;;Total ram usage:        2 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    2
  1740 ;; This function calls:
  1741 ;;		_I2C_Master_Wait
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;;		_Write_to_RTC
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _I2C_Master_Write
  1750  05C6                     _I2C_Master_Write:
  1751  05C6                     l1639:	
  1752                           ;incstack = 0
  1753                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1754                           
  1755                           
  1756                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  1757  05C6  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  1758  05CB                     l1641:
  1759                           
  1760                           ;I2C.c: 87:     SSPBUF = d;
  1761  05CB  0873               	movf	I2C_Master_Write@d,w
  1762  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1763  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1764  05CE  0093               	movwf	19	;volatile
  1765  05CF                     l165:
  1766  05CF  0008               	return
  1767  05D0                     __end_of_I2C_Master_Write:
  1768                           
  1769                           	psect	text6
  1770  05D0                     __ptext6:	
  1771 ;; *************** function _I2C_Master_Stop *****************
  1772 ;; Defined at:
  1773 ;;		line 73 in file "I2C.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    2
  1794 ;; This function calls:
  1795 ;;		_I2C_Master_Wait
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;;		_Write_to_RTC
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _I2C_Master_Stop
  1804  05D0                     _I2C_Master_Stop:
  1805  05D0                     l1643:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1808                           
  1809                           
  1810                           ;I2C.c: 75:     I2C_Master_Wait();
  1811  05D0  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  1812  05D5                     l1645:
  1813                           
  1814                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  1815  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  1816  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  1817  05D7  1511               	bsf	17,2	;volatile
  1818  05D8                     l162:
  1819  05D8  0008               	return
  1820  05D9                     __end_of_I2C_Master_Stop:
  1821                           
  1822                           	psect	text7
  1823  05D9                     __ptext7:	
  1824 ;; *************** function _I2C_Master_Start *****************
  1825 ;; Defined at:
  1826 ;;		line 56 in file "I2C.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    2
  1847 ;; This function calls:
  1848 ;;		_I2C_Master_Wait
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;;		_Write_to_RTC
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _I2C_Master_Start
  1857  05D9                     _I2C_Master_Start:
  1858  05D9                     l1635:	
  1859                           ;incstack = 0
  1860                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1861                           
  1862                           
  1863                           ;I2C.c: 57:     I2C_Master_Wait();
  1864  05D9  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  1865  05DE                     l1637:
  1866                           
  1867                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  1868  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1869  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  1870  05E0  1411               	bsf	17,0	;volatile
  1871  05E1                     l156:
  1872  05E1  0008               	return
  1873  05E2                     __end_of_I2C_Master_Start:
  1874                           
  1875                           	psect	text8
  1876  002C                     __ptext8:	
  1877 ;; *************** function _RTC_display *****************
  1878 ;; Defined at:
  1879 ;;		line 158 in file "main_prueba3_mini2.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       3       0       0       0
  1896 ;;      Totals:         0       3       0       0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    4
  1900 ;; This function calls:
  1901 ;;		_Lcd_Set_Cursor
  1902 ;;		_Lcd_Write_String
  1903 ;;		___awdiv
  1904 ;;		___awmod
  1905 ;;		_bcd_to_decimal
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _RTC_display
  1913  002C                     _RTC_display:
  1914  002C                     l1779:	
  1915                           ;incstack = 0
  1916                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1917                           
  1918                           
  1919                           ;main_prueba3_mini2.c: 160:     second = bcd_to_decimal(second);
  1920  002C  087A               	movf	_second,w
  1921  002D  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1922  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0034  00DE               	movwf	??_RTC_display
  1925  0035  085E               	movf	??_RTC_display,w
  1926  0036  00FA               	movwf	_second
  1927                           
  1928                           ;main_prueba3_mini2.c: 161:     minute = bcd_to_decimal(minute);
  1929  0037  0879               	movf	_minute,w
  1930  0038  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1931  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1932  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1933  003F  00DE               	movwf	??_RTC_display
  1934  0040  085E               	movf	??_RTC_display,w
  1935  0041  00F9               	movwf	_minute
  1936                           
  1937                           ;main_prueba3_mini2.c: 162:     hour = bcd_to_decimal(hour);
  1938  0042  0878               	movf	_hour,w
  1939  0043  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1940  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1942  004A  00DE               	movwf	??_RTC_display
  1943  004B  085E               	movf	??_RTC_display,w
  1944  004C  00F8               	movwf	_hour
  1945                           
  1946                           ;main_prueba3_mini2.c: 163:     m_day = bcd_to_decimal(m_day);
  1947  004D  0858               	movf	_m_day,w
  1948  004E  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1949  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0055  00DE               	movwf	??_RTC_display
  1952  0056  085E               	movf	??_RTC_display,w
  1953  0057  00D8               	movwf	_m_day
  1954                           
  1955                           ;main_prueba3_mini2.c: 164:     month = bcd_to_decimal(month);
  1956  0058  0857               	movf	_month,w
  1957  0059  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1958  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1959  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0060  00DE               	movwf	??_RTC_display
  1961  0061  085E               	movf	??_RTC_display,w
  1962  0062  00D7               	movwf	_month
  1963                           
  1964                           ;main_prueba3_mini2.c: 165:     year = bcd_to_decimal(year);
  1965  0063  0856               	movf	_year,w
  1966  0064  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1967  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1968  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1969  006B  00DE               	movwf	??_RTC_display
  1970  006C  085E               	movf	??_RTC_display,w
  1971  006D  00D6               	movwf	_year
  1972                           
  1973                           ;main_prueba3_mini2.c: 169:     Time[6] = hour / 10 + '0';
  1974  006E  300A               	movlw	10
  1975  006F  00F3               	movwf	___awdiv@divisor
  1976  0070  3000               	movlw	0
  1977  0071  00F4               	movwf	___awdiv@divisor+1
  1978  0072  0878               	movf	_hour,w
  1979  0073  00DE               	movwf	??_RTC_display
  1980  0074  01DF               	clrf	??_RTC_display+1
  1981  0075  085E               	movf	??_RTC_display,w
  1982  0076  00F5               	movwf	___awdiv@dividend
  1983  0077  085F               	movf	??_RTC_display+1,w
  1984  0078  00F6               	movwf	___awdiv@dividend+1
  1985  0079  120A  118A  2259  120A  118A  	fcall	___awdiv
  1986  007E  0873               	movf	?___awdiv,w
  1987  007F  3E30               	addlw	48
  1988  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0082  00E0               	movwf	??_RTC_display+2
  1991  0083  0860               	movf	??_RTC_display+2,w
  1992  0084  00B7               	movwf	_Time+6
  1993                           
  1994                           ;main_prueba3_mini2.c: 170:     Time[7] = hour % 10 + '0';
  1995  0085  300A               	movlw	10
  1996  0086  00F3               	movwf	___awmod@divisor
  1997  0087  3000               	movlw	0
  1998  0088  00F4               	movwf	___awmod@divisor+1
  1999  0089  0878               	movf	_hour,w
  2000  008A  00DE               	movwf	??_RTC_display
  2001  008B  01DF               	clrf	??_RTC_display+1
  2002  008C  085E               	movf	??_RTC_display,w
  2003  008D  00F5               	movwf	___awmod@dividend
  2004  008E  085F               	movf	??_RTC_display+1,w
  2005  008F  00F6               	movwf	___awmod@dividend+1
  2006  0090  120A  118A  232A  120A  118A  	fcall	___awmod
  2007  0095  0873               	movf	?___awmod,w
  2008  0096  3E30               	addlw	48
  2009  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0099  00E0               	movwf	??_RTC_display+2
  2012  009A  0860               	movf	??_RTC_display+2,w
  2013  009B  00B8               	movwf	_Time+7
  2014                           
  2015                           ;main_prueba3_mini2.c: 171:     Time[9] = minute / 10 + '0';
  2016  009C  300A               	movlw	10
  2017  009D  00F3               	movwf	___awdiv@divisor
  2018  009E  3000               	movlw	0
  2019  009F  00F4               	movwf	___awdiv@divisor+1
  2020  00A0  0879               	movf	_minute,w
  2021  00A1  00DE               	movwf	??_RTC_display
  2022  00A2  01DF               	clrf	??_RTC_display+1
  2023  00A3  085E               	movf	??_RTC_display,w
  2024  00A4  00F5               	movwf	___awdiv@dividend
  2025  00A5  085F               	movf	??_RTC_display+1,w
  2026  00A6  00F6               	movwf	___awdiv@dividend+1
  2027  00A7  120A  118A  2259  120A  118A  	fcall	___awdiv
  2028  00AC  0873               	movf	?___awdiv,w
  2029  00AD  3E30               	addlw	48
  2030  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2031  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2032  00B0  00E0               	movwf	??_RTC_display+2
  2033  00B1  0860               	movf	??_RTC_display+2,w
  2034  00B2  00BA               	movwf	_Time+9
  2035                           
  2036                           ;main_prueba3_mini2.c: 172:     Time[10] = minute % 10 + '0';
  2037  00B3  300A               	movlw	10
  2038  00B4  00F3               	movwf	___awmod@divisor
  2039  00B5  3000               	movlw	0
  2040  00B6  00F4               	movwf	___awmod@divisor+1
  2041  00B7  0879               	movf	_minute,w
  2042  00B8  00DE               	movwf	??_RTC_display
  2043  00B9  01DF               	clrf	??_RTC_display+1
  2044  00BA  085E               	movf	??_RTC_display,w
  2045  00BB  00F5               	movwf	___awmod@dividend
  2046  00BC  085F               	movf	??_RTC_display+1,w
  2047  00BD  00F6               	movwf	___awmod@dividend+1
  2048  00BE  120A  118A  232A  120A  118A  	fcall	___awmod
  2049  00C3  0873               	movf	?___awmod,w
  2050  00C4  3E30               	addlw	48
  2051  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2052  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2053  00C7  00E0               	movwf	??_RTC_display+2
  2054  00C8  0860               	movf	??_RTC_display+2,w
  2055  00C9  00BB               	movwf	_Time+10
  2056                           
  2057                           ;main_prueba3_mini2.c: 173:     Time[12] = second / 10 + '0';
  2058  00CA  300A               	movlw	10
  2059  00CB  00F3               	movwf	___awdiv@divisor
  2060  00CC  3000               	movlw	0
  2061  00CD  00F4               	movwf	___awdiv@divisor+1
  2062  00CE  087A               	movf	_second,w
  2063  00CF  00DE               	movwf	??_RTC_display
  2064  00D0  01DF               	clrf	??_RTC_display+1
  2065  00D1  085E               	movf	??_RTC_display,w
  2066  00D2  00F5               	movwf	___awdiv@dividend
  2067  00D3  085F               	movf	??_RTC_display+1,w
  2068  00D4  00F6               	movwf	___awdiv@dividend+1
  2069  00D5  120A  118A  2259  120A  118A  	fcall	___awdiv
  2070  00DA  0873               	movf	?___awdiv,w
  2071  00DB  3E30               	addlw	48
  2072  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  2073  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  2074  00DE  00E0               	movwf	??_RTC_display+2
  2075  00DF  0860               	movf	??_RTC_display+2,w
  2076  00E0  00BD               	movwf	_Time+12
  2077                           
  2078                           ;main_prueba3_mini2.c: 174:     Time[13] = second % 10 + '0';
  2079  00E1  300A               	movlw	10
  2080  00E2  00F3               	movwf	___awmod@divisor
  2081  00E3  3000               	movlw	0
  2082  00E4  00F4               	movwf	___awmod@divisor+1
  2083  00E5  087A               	movf	_second,w
  2084  00E6  00DE               	movwf	??_RTC_display
  2085  00E7  01DF               	clrf	??_RTC_display+1
  2086  00E8  085E               	movf	??_RTC_display,w
  2087  00E9  00F5               	movwf	___awmod@dividend
  2088  00EA  085F               	movf	??_RTC_display+1,w
  2089  00EB  00F6               	movwf	___awmod@dividend+1
  2090  00EC  120A  118A  232A  120A  118A  	fcall	___awmod
  2091  00F1  0873               	movf	?___awmod,w
  2092  00F2  3E30               	addlw	48
  2093  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2094  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2095  00F5  00E0               	movwf	??_RTC_display+2
  2096  00F6  0860               	movf	??_RTC_display+2,w
  2097  00F7  00BE               	movwf	_Time+13
  2098                           
  2099                           ;main_prueba3_mini2.c: 177:     Date[6] = m_day / 10 + '0';
  2100  00F8  300A               	movlw	10
  2101  00F9  00F3               	movwf	___awdiv@divisor
  2102  00FA  3000               	movlw	0
  2103  00FB  00F4               	movwf	___awdiv@divisor+1
  2104  00FC  0858               	movf	_m_day,w
  2105  00FD  00DE               	movwf	??_RTC_display
  2106  00FE  01DF               	clrf	??_RTC_display+1
  2107  00FF  085E               	movf	??_RTC_display,w
  2108  0100  00F5               	movwf	___awdiv@dividend
  2109  0101  085F               	movf	??_RTC_display+1,w
  2110  0102  00F6               	movwf	___awdiv@dividend+1
  2111  0103  120A  118A  2259  120A  118A  	fcall	___awdiv
  2112  0108  0873               	movf	?___awdiv,w
  2113  0109  3E30               	addlw	48
  2114  010A  1283               	bcf	3,5	;RP0=0, select bank0
  2115  010B  1303               	bcf	3,6	;RP1=0, select bank0
  2116  010C  00E0               	movwf	??_RTC_display+2
  2117  010D  0860               	movf	??_RTC_display+2,w
  2118  010E  00A6               	movwf	_Date+6
  2119                           
  2120                           ;main_prueba3_mini2.c: 178:     Date[7] = m_day % 10 + '0';
  2121  010F  300A               	movlw	10
  2122  0110  00F3               	movwf	___awmod@divisor
  2123  0111  3000               	movlw	0
  2124  0112  00F4               	movwf	___awmod@divisor+1
  2125  0113  0858               	movf	_m_day,w
  2126  0114  00DE               	movwf	??_RTC_display
  2127  0115  01DF               	clrf	??_RTC_display+1
  2128  0116  085E               	movf	??_RTC_display,w
  2129  0117  00F5               	movwf	___awmod@dividend
  2130  0118  085F               	movf	??_RTC_display+1,w
  2131  0119  00F6               	movwf	___awmod@dividend+1
  2132  011A  120A  118A  232A  120A  118A  	fcall	___awmod
  2133  011F  0873               	movf	?___awmod,w
  2134  0120  3E30               	addlw	48
  2135  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0123  00E0               	movwf	??_RTC_display+2
  2138  0124  0860               	movf	??_RTC_display+2,w
  2139  0125  00A7               	movwf	_Date+7
  2140                           
  2141                           ;main_prueba3_mini2.c: 179:     Date[9] = month / 10 + '0';
  2142  0126  300A               	movlw	10
  2143  0127  00F3               	movwf	___awdiv@divisor
  2144  0128  3000               	movlw	0
  2145  0129  00F4               	movwf	___awdiv@divisor+1
  2146  012A  0857               	movf	_month,w
  2147  012B  00DE               	movwf	??_RTC_display
  2148  012C  01DF               	clrf	??_RTC_display+1
  2149  012D  085E               	movf	??_RTC_display,w
  2150  012E  00F5               	movwf	___awdiv@dividend
  2151  012F  085F               	movf	??_RTC_display+1,w
  2152  0130  00F6               	movwf	___awdiv@dividend+1
  2153  0131  120A  118A  2259  120A  118A  	fcall	___awdiv
  2154  0136  0873               	movf	?___awdiv,w
  2155  0137  3E30               	addlw	48
  2156  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2158  013A  00E0               	movwf	??_RTC_display+2
  2159  013B  0860               	movf	??_RTC_display+2,w
  2160  013C  00A9               	movwf	_Date+9
  2161                           
  2162                           ;main_prueba3_mini2.c: 180:     Date[10] = month % 10 + '0';
  2163  013D  300A               	movlw	10
  2164  013E  00F3               	movwf	___awmod@divisor
  2165  013F  3000               	movlw	0
  2166  0140  00F4               	movwf	___awmod@divisor+1
  2167  0141  0857               	movf	_month,w
  2168  0142  00DE               	movwf	??_RTC_display
  2169  0143  01DF               	clrf	??_RTC_display+1
  2170  0144  085E               	movf	??_RTC_display,w
  2171  0145  00F5               	movwf	___awmod@dividend
  2172  0146  085F               	movf	??_RTC_display+1,w
  2173  0147  00F6               	movwf	___awmod@dividend+1
  2174  0148  120A  118A  232A  120A  118A  	fcall	___awmod
  2175  014D  0873               	movf	?___awmod,w
  2176  014E  3E30               	addlw	48
  2177  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0151  00E0               	movwf	??_RTC_display+2
  2180  0152  0860               	movf	??_RTC_display+2,w
  2181  0153  00AA               	movwf	_Date+10
  2182                           
  2183                           ;main_prueba3_mini2.c: 181:     Date[14] = year / 10 + '0';
  2184  0154  300A               	movlw	10
  2185  0155  00F3               	movwf	___awdiv@divisor
  2186  0156  3000               	movlw	0
  2187  0157  00F4               	movwf	___awdiv@divisor+1
  2188  0158  0856               	movf	_year,w
  2189  0159  00DE               	movwf	??_RTC_display
  2190  015A  01DF               	clrf	??_RTC_display+1
  2191  015B  085E               	movf	??_RTC_display,w
  2192  015C  00F5               	movwf	___awdiv@dividend
  2193  015D  085F               	movf	??_RTC_display+1,w
  2194  015E  00F6               	movwf	___awdiv@dividend+1
  2195  015F  120A  118A  2259  120A  118A  	fcall	___awdiv
  2196  0164  0873               	movf	?___awdiv,w
  2197  0165  3E30               	addlw	48
  2198  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0168  00E0               	movwf	??_RTC_display+2
  2201  0169  0860               	movf	??_RTC_display+2,w
  2202  016A  00AE               	movwf	_Date+14
  2203                           
  2204                           ;main_prueba3_mini2.c: 182:     Date[15] = year % 10 + '0';
  2205  016B  300A               	movlw	10
  2206  016C  00F3               	movwf	___awmod@divisor
  2207  016D  3000               	movlw	0
  2208  016E  00F4               	movwf	___awmod@divisor+1
  2209  016F  0856               	movf	_year,w
  2210  0170  00DE               	movwf	??_RTC_display
  2211  0171  01DF               	clrf	??_RTC_display+1
  2212  0172  085E               	movf	??_RTC_display,w
  2213  0173  00F5               	movwf	___awmod@dividend
  2214  0174  085F               	movf	??_RTC_display+1,w
  2215  0175  00F6               	movwf	___awmod@dividend+1
  2216  0176  120A  118A  232A  120A  118A  	fcall	___awmod
  2217  017B  0873               	movf	?___awmod,w
  2218  017C  3E30               	addlw	48
  2219  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2220  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2221  017F  00E0               	movwf	??_RTC_display+2
  2222  0180  0860               	movf	??_RTC_display+2,w
  2223  0181  00AF               	movwf	_Date+15
  2224                           
  2225                           ;main_prueba3_mini2.c: 185:     Lcd_Set_Cursor(1,1);
  2226  0182  01F7               	clrf	Lcd_Set_Cursor@b
  2227  0183  0AF7               	incf	Lcd_Set_Cursor@b,f
  2228  0184  3001               	movlw	1
  2229  0185  120A  118A  2499  120A  118A  	fcall	_Lcd_Set_Cursor
  2230  018A                     l1781:
  2231                           
  2232                           ;main_prueba3_mini2.c: 186:     Lcd_Write_String(Time);
  2233  018A  3031               	movlw	(low (_Time| 0))& (0+255)
  2234  018B  120A  118A  24BF  120A  118A  	fcall	_Lcd_Write_String
  2235  0190                     l1783:
  2236                           
  2237                           ;main_prueba3_mini2.c: 187:     Lcd_Set_Cursor(2,1);
  2238  0190  01F7               	clrf	Lcd_Set_Cursor@b
  2239  0191  0AF7               	incf	Lcd_Set_Cursor@b,f
  2240  0192  3002               	movlw	2
  2241  0193  120A  118A  2499  120A  118A  	fcall	_Lcd_Set_Cursor
  2242                           
  2243                           ;main_prueba3_mini2.c: 188:     Lcd_Write_String(Date);
  2244  0198  3020               	movlw	(low (_Date| 0))& (0+255)
  2245  0199  120A  118A  24BF  120A  118A  	fcall	_Lcd_Write_String
  2246  019E                     l112:
  2247  019E  0008               	return
  2248  019F                     __end_of_RTC_display:
  2249                           
  2250                           	psect	text9
  2251  0526                     __ptext9:	
  2252 ;; *************** function _bcd_to_decimal *****************
  2253 ;; Defined at:
  2254 ;;		line 149 in file "main_prueba3_mini2.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  number          1    wreg     unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  number          1    7[COMMON] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      unsigned char 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       0       0       0       0
  2269 ;;      Locals:         1       0       0       0       0
  2270 ;;      Temps:          0       3       0       0       0
  2271 ;;      Totals:         1       3       0       0       0
  2272 ;;Total ram usage:        4 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		___bmul
  2277 ;; This function is called by:
  2278 ;;		_RTC_display
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _bcd_to_decimal
  2284  0526                     _bcd_to_decimal:
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2288                           ;bcd_to_decimal@number stored from wreg
  2289  0526  00F7               	movwf	bcd_to_decimal@number
  2290  0527                     l1647:
  2291                           
  2292                           ;main_prueba3_mini2.c: 150:   return((number >> 4) * 10 + (number & 0x0F));
  2293  0527  300F               	movlw	15
  2294  0528  0577               	andwf	bcd_to_decimal@number,w
  2295  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2296  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2297  052B  00DA               	movwf	??_bcd_to_decimal
  2298  052C  300A               	movlw	10
  2299  052D  00DB               	movwf	??_bcd_to_decimal+1
  2300  052E  085B               	movf	??_bcd_to_decimal+1,w
  2301  052F  00F3               	movwf	___bmul@multiplicand
  2302  0530  0877               	movf	bcd_to_decimal@number,w
  2303  0531  00DC               	movwf	??_bcd_to_decimal+2
  2304  0532  3004               	movlw	4
  2305  0533                     u925:
  2306  0533  1003               	clrc
  2307  0534  0CDC               	rrf	??_bcd_to_decimal+2,f
  2308  0535  3EFF               	addlw	-1
  2309  0536  1D03               	skipz
  2310  0537  2D33               	goto	u925
  2311  0538  085C               	movf	??_bcd_to_decimal+2,w
  2312  0539  120A  118A  2572  120A  118A  	fcall	___bmul
  2313  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2314  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0540  075A               	addwf	??_bcd_to_decimal,w
  2316  0541                     l106:
  2317  0541  0008               	return
  2318  0542                     __end_of_bcd_to_decimal:
  2319                           
  2320                           	psect	text10
  2321  0572                     __ptext10:	
  2322 ;; *************** function ___bmul *****************
  2323 ;; Defined at:
  2324 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  multiplier      1    wreg     unsigned char 
  2327 ;;  multiplicand    1    3[COMMON] unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  multiplier      1    6[COMMON] unsigned char 
  2330 ;;  product         1    5[COMMON] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      unsigned char 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         1       0       0       0       0
  2341 ;;      Locals:         2       0       0       0       0
  2342 ;;      Temps:          1       0       0       0       0
  2343 ;;      Totals:         4       0       0       0       0
  2344 ;;Total ram usage:        4 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_bcd_to_decimal
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function ___bmul
  2356  0572                     ___bmul:
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2360                           ;___bmul@multiplier stored from wreg
  2361  0572  00F6               	movwf	___bmul@multiplier
  2362  0573                     l1295:
  2363  0573  01F5               	clrf	___bmul@product
  2364  0574                     l1297:
  2365  0574  1C76               	btfss	___bmul@multiplier,0
  2366  0575  2D77               	goto	u481
  2367  0576  2D78               	goto	u480
  2368  0577                     u481:
  2369  0577  2D7C               	goto	l1301
  2370  0578                     u480:
  2371  0578                     l1299:
  2372  0578  0873               	movf	___bmul@multiplicand,w
  2373  0579  00F4               	movwf	??___bmul
  2374  057A  0874               	movf	??___bmul,w
  2375  057B  07F5               	addwf	___bmul@product,f
  2376  057C                     l1301:
  2377  057C  1003               	clrc
  2378  057D  0DF3               	rlf	___bmul@multiplicand,f
  2379  057E                     l1303:
  2380  057E  1003               	clrc
  2381  057F  0CF6               	rrf	___bmul@multiplier,f
  2382  0580  0876               	movf	___bmul@multiplier,w
  2383  0581  1D03               	btfss	3,2
  2384  0582  2D84               	goto	u491
  2385  0583  2D85               	goto	u490
  2386  0584                     u491:
  2387  0584  2D74               	goto	l1297
  2388  0585                     u490:
  2389  0585                     l1305:
  2390  0585  0875               	movf	___bmul@product,w
  2391  0586                     l399:
  2392  0586  0008               	return
  2393  0587                     __end_of___bmul:
  2394                           
  2395                           	psect	text11
  2396  032A                     __ptext11:	
  2397 ;; *************** function ___awmod *****************
  2398 ;; Defined at:
  2399 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  divisor         2    3[COMMON] int 
  2402 ;;  dividend        2    5[COMMON] int 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  sign            1    1[BANK0 ] unsigned char 
  2405 ;;  counter         1    0[BANK0 ] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2    3[COMMON] int 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         4       0       0       0       0
  2416 ;;      Locals:         0       2       0       0       0
  2417 ;;      Temps:          1       0       0       0       0
  2418 ;;      Totals:         5       2       0       0       0
  2419 ;;Total ram usage:        7 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_RTC_display
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function ___awmod
  2431  032A                     ___awmod:
  2432  032A                     l1683:	
  2433                           ;incstack = 0
  2434                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2435                           
  2436  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2437  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2438  032C  01DB               	clrf	___awmod@sign
  2439  032D                     l1685:
  2440  032D  1FF6               	btfss	___awmod@dividend+1,7
  2441  032E  2B30               	goto	u971
  2442  032F  2B31               	goto	u970
  2443  0330                     u971:
  2444  0330  2B38               	goto	l1691
  2445  0331                     u970:
  2446  0331                     l1687:
  2447  0331  09F5               	comf	___awmod@dividend,f
  2448  0332  09F6               	comf	___awmod@dividend+1,f
  2449  0333  0AF5               	incf	___awmod@dividend,f
  2450  0334  1903               	skipnz
  2451  0335  0AF6               	incf	___awmod@dividend+1,f
  2452  0336                     l1689:
  2453  0336  01DB               	clrf	___awmod@sign
  2454  0337  0ADB               	incf	___awmod@sign,f
  2455  0338                     l1691:
  2456  0338  1FF4               	btfss	___awmod@divisor+1,7
  2457  0339  2B3B               	goto	u981
  2458  033A  2B3C               	goto	u980
  2459  033B                     u981:
  2460  033B  2B41               	goto	l1695
  2461  033C                     u980:
  2462  033C                     l1693:
  2463  033C  09F3               	comf	___awmod@divisor,f
  2464  033D  09F4               	comf	___awmod@divisor+1,f
  2465  033E  0AF3               	incf	___awmod@divisor,f
  2466  033F  1903               	skipnz
  2467  0340  0AF4               	incf	___awmod@divisor+1,f
  2468  0341                     l1695:
  2469  0341  0873               	movf	___awmod@divisor,w
  2470  0342  0474               	iorwf	___awmod@divisor+1,w
  2471  0343  1903               	btfsc	3,2
  2472  0344  2B46               	goto	u991
  2473  0345  2B47               	goto	u990
  2474  0346                     u991:
  2475  0346  2B76               	goto	l1713
  2476  0347                     u990:
  2477  0347                     l1697:
  2478  0347  01DA               	clrf	___awmod@counter
  2479  0348  0ADA               	incf	___awmod@counter,f
  2480  0349  2B55               	goto	l1703
  2481  034A                     l1699:
  2482  034A  3001               	movlw	1
  2483  034B                     u1005:
  2484  034B  1003               	clrc
  2485  034C  0DF3               	rlf	___awmod@divisor,f
  2486  034D  0DF4               	rlf	___awmod@divisor+1,f
  2487  034E  3EFF               	addlw	-1
  2488  034F  1D03               	skipz
  2489  0350  2B4B               	goto	u1005
  2490  0351                     l1701:
  2491  0351  3001               	movlw	1
  2492  0352  00F7               	movwf	??___awmod
  2493  0353  0877               	movf	??___awmod,w
  2494  0354  07DA               	addwf	___awmod@counter,f
  2495  0355                     l1703:
  2496  0355  1FF4               	btfss	___awmod@divisor+1,7
  2497  0356  2B58               	goto	u1011
  2498  0357  2B59               	goto	u1010
  2499  0358                     u1011:
  2500  0358  2B4A               	goto	l1699
  2501  0359                     u1010:
  2502  0359                     l1705:
  2503  0359  0874               	movf	___awmod@divisor+1,w
  2504  035A  0276               	subwf	___awmod@dividend+1,w
  2505  035B  1D03               	skipz
  2506  035C  2B5F               	goto	u1025
  2507  035D  0873               	movf	___awmod@divisor,w
  2508  035E  0275               	subwf	___awmod@dividend,w
  2509  035F                     u1025:
  2510  035F  1C03               	skipc
  2511  0360  2B62               	goto	u1021
  2512  0361  2B63               	goto	u1020
  2513  0362                     u1021:
  2514  0362  2B69               	goto	l1709
  2515  0363                     u1020:
  2516  0363                     l1707:
  2517  0363  0873               	movf	___awmod@divisor,w
  2518  0364  02F5               	subwf	___awmod@dividend,f
  2519  0365  0874               	movf	___awmod@divisor+1,w
  2520  0366  1C03               	skipc
  2521  0367  03F6               	decf	___awmod@dividend+1,f
  2522  0368  02F6               	subwf	___awmod@dividend+1,f
  2523  0369                     l1709:
  2524  0369  3001               	movlw	1
  2525  036A                     u1035:
  2526  036A  1003               	clrc
  2527  036B  0CF4               	rrf	___awmod@divisor+1,f
  2528  036C  0CF3               	rrf	___awmod@divisor,f
  2529  036D  3EFF               	addlw	-1
  2530  036E  1D03               	skipz
  2531  036F  2B6A               	goto	u1035
  2532  0370                     l1711:
  2533  0370  3001               	movlw	1
  2534  0371  02DA               	subwf	___awmod@counter,f
  2535  0372  1D03               	btfss	3,2
  2536  0373  2B75               	goto	u1041
  2537  0374  2B76               	goto	u1040
  2538  0375                     u1041:
  2539  0375  2B59               	goto	l1705
  2540  0376                     u1040:
  2541  0376                     l1713:
  2542  0376  085B               	movf	___awmod@sign,w
  2543  0377  1903               	btfsc	3,2
  2544  0378  2B7A               	goto	u1051
  2545  0379  2B7B               	goto	u1050
  2546  037A                     u1051:
  2547  037A  2B80               	goto	l1717
  2548  037B                     u1050:
  2549  037B                     l1715:
  2550  037B  09F5               	comf	___awmod@dividend,f
  2551  037C  09F6               	comf	___awmod@dividend+1,f
  2552  037D  0AF5               	incf	___awmod@dividend,f
  2553  037E  1903               	skipnz
  2554  037F  0AF6               	incf	___awmod@dividend+1,f
  2555  0380                     l1717:
  2556  0380  0876               	movf	___awmod@dividend+1,w
  2557  0381  00F4               	movwf	?___awmod+1
  2558  0382  0875               	movf	___awmod@dividend,w
  2559  0383  00F3               	movwf	?___awmod
  2560  0384                     l539:
  2561  0384  0008               	return
  2562  0385                     __end_of___awmod:
  2563                           
  2564                           	psect	text12
  2565  0259                     __ptext12:	
  2566 ;; *************** function ___awdiv *****************
  2567 ;; Defined at:
  2568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  divisor         2    3[COMMON] int 
  2571 ;;  dividend        2    5[COMMON] int 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  quotient        2    2[BANK0 ] int 
  2574 ;;  sign            1    1[BANK0 ] unsigned char 
  2575 ;;  counter         1    0[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  2    3[COMMON] int 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         4       0       0       0       0
  2586 ;;      Locals:         0       4       0       0       0
  2587 ;;      Temps:          1       0       0       0       0
  2588 ;;      Totals:         5       4       0       0       0
  2589 ;;Total ram usage:        9 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_RTC_display
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function ___awdiv
  2601  0259                     ___awdiv:
  2602  0259                     l1381:	
  2603                           ;incstack = 0
  2604                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2605                           
  2606  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2607  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2608  025B  01DB               	clrf	___awdiv@sign
  2609  025C                     l1383:
  2610  025C  1FF4               	btfss	___awdiv@divisor+1,7
  2611  025D  2A5F               	goto	u621
  2612  025E  2A60               	goto	u620
  2613  025F                     u621:
  2614  025F  2A67               	goto	l1389
  2615  0260                     u620:
  2616  0260                     l1385:
  2617  0260  09F3               	comf	___awdiv@divisor,f
  2618  0261  09F4               	comf	___awdiv@divisor+1,f
  2619  0262  0AF3               	incf	___awdiv@divisor,f
  2620  0263  1903               	skipnz
  2621  0264  0AF4               	incf	___awdiv@divisor+1,f
  2622  0265                     l1387:
  2623  0265  01DB               	clrf	___awdiv@sign
  2624  0266  0ADB               	incf	___awdiv@sign,f
  2625  0267                     l1389:
  2626  0267  1FF6               	btfss	___awdiv@dividend+1,7
  2627  0268  2A6A               	goto	u631
  2628  0269  2A6B               	goto	u630
  2629  026A                     u631:
  2630  026A  2A74               	goto	l1395
  2631  026B                     u630:
  2632  026B                     l1391:
  2633  026B  09F5               	comf	___awdiv@dividend,f
  2634  026C  09F6               	comf	___awdiv@dividend+1,f
  2635  026D  0AF5               	incf	___awdiv@dividend,f
  2636  026E  1903               	skipnz
  2637  026F  0AF6               	incf	___awdiv@dividend+1,f
  2638  0270                     l1393:
  2639  0270  3001               	movlw	1
  2640  0271  00F7               	movwf	??___awdiv
  2641  0272  0877               	movf	??___awdiv,w
  2642  0273  06DB               	xorwf	___awdiv@sign,f
  2643  0274                     l1395:
  2644  0274  01DC               	clrf	___awdiv@quotient
  2645  0275  01DD               	clrf	___awdiv@quotient+1
  2646  0276                     l1397:
  2647  0276  0873               	movf	___awdiv@divisor,w
  2648  0277  0474               	iorwf	___awdiv@divisor+1,w
  2649  0278  1903               	btfsc	3,2
  2650  0279  2A7B               	goto	u641
  2651  027A  2A7C               	goto	u640
  2652  027B                     u641:
  2653  027B  2AB3               	goto	l1417
  2654  027C                     u640:
  2655  027C                     l1399:
  2656  027C  01DA               	clrf	___awdiv@counter
  2657  027D  0ADA               	incf	___awdiv@counter,f
  2658  027E  2A8A               	goto	l1405
  2659  027F                     l1401:
  2660  027F  3001               	movlw	1
  2661  0280                     u655:
  2662  0280  1003               	clrc
  2663  0281  0DF3               	rlf	___awdiv@divisor,f
  2664  0282  0DF4               	rlf	___awdiv@divisor+1,f
  2665  0283  3EFF               	addlw	-1
  2666  0284  1D03               	skipz
  2667  0285  2A80               	goto	u655
  2668  0286                     l1403:
  2669  0286  3001               	movlw	1
  2670  0287  00F7               	movwf	??___awdiv
  2671  0288  0877               	movf	??___awdiv,w
  2672  0289  07DA               	addwf	___awdiv@counter,f
  2673  028A                     l1405:
  2674  028A  1FF4               	btfss	___awdiv@divisor+1,7
  2675  028B  2A8D               	goto	u661
  2676  028C  2A8E               	goto	u660
  2677  028D                     u661:
  2678  028D  2A7F               	goto	l1401
  2679  028E                     u660:
  2680  028E                     l1407:
  2681  028E  3001               	movlw	1
  2682  028F                     u675:
  2683  028F  1003               	clrc
  2684  0290  0DDC               	rlf	___awdiv@quotient,f
  2685  0291  0DDD               	rlf	___awdiv@quotient+1,f
  2686  0292  3EFF               	addlw	-1
  2687  0293  1D03               	skipz
  2688  0294  2A8F               	goto	u675
  2689  0295  0874               	movf	___awdiv@divisor+1,w
  2690  0296  0276               	subwf	___awdiv@dividend+1,w
  2691  0297  1D03               	skipz
  2692  0298  2A9B               	goto	u685
  2693  0299  0873               	movf	___awdiv@divisor,w
  2694  029A  0275               	subwf	___awdiv@dividend,w
  2695  029B                     u685:
  2696  029B  1C03               	skipc
  2697  029C  2A9E               	goto	u681
  2698  029D  2A9F               	goto	u680
  2699  029E                     u681:
  2700  029E  2AA6               	goto	l1413
  2701  029F                     u680:
  2702  029F                     l1409:
  2703  029F  0873               	movf	___awdiv@divisor,w
  2704  02A0  02F5               	subwf	___awdiv@dividend,f
  2705  02A1  0874               	movf	___awdiv@divisor+1,w
  2706  02A2  1C03               	skipc
  2707  02A3  03F6               	decf	___awdiv@dividend+1,f
  2708  02A4  02F6               	subwf	___awdiv@dividend+1,f
  2709  02A5                     l1411:
  2710  02A5  145C               	bsf	___awdiv@quotient,0
  2711  02A6                     l1413:
  2712  02A6  3001               	movlw	1
  2713  02A7                     u695:
  2714  02A7  1003               	clrc
  2715  02A8  0CF4               	rrf	___awdiv@divisor+1,f
  2716  02A9  0CF3               	rrf	___awdiv@divisor,f
  2717  02AA  3EFF               	addlw	-1
  2718  02AB  1D03               	skipz
  2719  02AC  2AA7               	goto	u695
  2720  02AD                     l1415:
  2721  02AD  3001               	movlw	1
  2722  02AE  02DA               	subwf	___awdiv@counter,f
  2723  02AF  1D03               	btfss	3,2
  2724  02B0  2AB2               	goto	u701
  2725  02B1  2AB3               	goto	u700
  2726  02B2                     u701:
  2727  02B2  2A8E               	goto	l1407
  2728  02B3                     u700:
  2729  02B3                     l1417:
  2730  02B3  085B               	movf	___awdiv@sign,w
  2731  02B4  1903               	btfsc	3,2
  2732  02B5  2AB7               	goto	u711
  2733  02B6  2AB8               	goto	u710
  2734  02B7                     u711:
  2735  02B7  2ABD               	goto	l1421
  2736  02B8                     u710:
  2737  02B8                     l1419:
  2738  02B8  09DC               	comf	___awdiv@quotient,f
  2739  02B9  09DD               	comf	___awdiv@quotient+1,f
  2740  02BA  0ADC               	incf	___awdiv@quotient,f
  2741  02BB  1903               	skipnz
  2742  02BC  0ADD               	incf	___awdiv@quotient+1,f
  2743  02BD                     l1421:
  2744  02BD  085D               	movf	___awdiv@quotient+1,w
  2745  02BE  00F4               	movwf	?___awdiv+1
  2746  02BF  085C               	movf	___awdiv@quotient,w
  2747  02C0  00F3               	movwf	?___awdiv
  2748  02C1                     l526:
  2749  02C1  0008               	return
  2750  02C2                     __end_of___awdiv:
  2751                           
  2752                           	psect	text13
  2753  04BF                     __ptext13:	
  2754 ;; *************** function _Lcd_Write_String *****************
  2755 ;; Defined at:
  2756 ;;		line 71 in file "LCD.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  a               1    wreg     PTR unsigned char 
  2759 ;;		 -> Date(17), Time(15), 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2762 ;;		 -> Date(17), Time(15), 
  2763 ;;  i               2    0[BANK0 ] int 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       0       0
  2774 ;;      Locals:         0       3       0       0       0
  2775 ;;      Temps:          1       0       0       0       0
  2776 ;;      Totals:         1       3       0       0       0
  2777 ;;Total ram usage:        4 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    3
  2780 ;; This function calls:
  2781 ;;		_Lcd_Write_Char
  2782 ;; This function is called by:
  2783 ;;		_RTC_display
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _Lcd_Write_String
  2789  04BF                     _Lcd_Write_String:
  2790                           
  2791                           ;incstack = 0
  2792                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2793                           ;Lcd_Write_String@a stored from wreg
  2794  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2795  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2796  04C1  00DC               	movwf	Lcd_Write_String@a
  2797  04C2                     l1663:
  2798                           
  2799                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  2800  04C2  01DA               	clrf	Lcd_Write_String@i
  2801  04C3  01DB               	clrf	Lcd_Write_String@i+1
  2802  04C4  2CD8               	goto	l1669
  2803  04C5                     l1665:
  2804                           
  2805                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  2806  04C5  085A               	movf	Lcd_Write_String@i,w
  2807  04C6  075C               	addwf	Lcd_Write_String@a,w
  2808  04C7  00F6               	movwf	??_Lcd_Write_String
  2809  04C8  0876               	movf	??_Lcd_Write_String,w
  2810  04C9  0084               	movwf	4
  2811  04CA  0800               	movf	0,w
  2812  04CB  120A  118A  255C  120A  118A  	fcall	_Lcd_Write_Char
  2813  04D0                     l1667:
  2814  04D0  3001               	movlw	1
  2815  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2816  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2817  04D3  07DA               	addwf	Lcd_Write_String@i,f
  2818  04D4  1803               	skipnc
  2819  04D5  0ADB               	incf	Lcd_Write_String@i+1,f
  2820  04D6  3000               	movlw	0
  2821  04D7  07DB               	addwf	Lcd_Write_String@i+1,f
  2822  04D8                     l1669:
  2823  04D8  085A               	movf	Lcd_Write_String@i,w
  2824  04D9  075C               	addwf	Lcd_Write_String@a,w
  2825  04DA  00F6               	movwf	??_Lcd_Write_String
  2826  04DB  0876               	movf	??_Lcd_Write_String,w
  2827  04DC  0084               	movwf	4
  2828  04DD  1383               	bcf	3,7	;select IRP bank0
  2829  04DE  0800               	movf	0,w
  2830  04DF  1D03               	btfss	3,2
  2831  04E0  2CE2               	goto	u951
  2832  04E1  2CE3               	goto	u950
  2833  04E2                     u951:
  2834  04E2  2CC5               	goto	l1665
  2835  04E3                     u950:
  2836  04E3                     l212:
  2837  04E3  0008               	return
  2838  04E4                     __end_of_Lcd_Write_String:
  2839                           
  2840                           	psect	text14
  2841  055C                     __ptext14:	
  2842 ;; *************** function _Lcd_Write_Char *****************
  2843 ;; Defined at:
  2844 ;;		line 62 in file "LCD.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  a               1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  a               1    5[COMMON] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0
  2860 ;;      Temps:          1       0       0       0       0
  2861 ;;      Totals:         2       0       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    2
  2865 ;; This function calls:
  2866 ;;		_Lcd_Port
  2867 ;; This function is called by:
  2868 ;;		_Lcd_Write_String
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _Lcd_Write_Char
  2874  055C                     _Lcd_Write_Char:
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2878                           ;Lcd_Write_Char@a stored from wreg
  2879  055C  00F5               	movwf	Lcd_Write_Char@a
  2880  055D                     l1601:
  2881                           
  2882                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  2883  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2884  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2885  055F  1409               	bsf	9,0	;volatile
  2886  0560                     l1603:
  2887                           
  2888                           ;LCD.c: 64:    Lcd_Port(a);
  2889  0560  0875               	movf	Lcd_Write_Char@a,w
  2890  0561  120A  118A  25F3  120A  118A  	fcall	_Lcd_Port
  2891  0566                     l1605:
  2892                           
  2893                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  2894  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0568  1509               	bsf	9,2	;volatile
  2897  0569                     l1607:
  2898                           
  2899                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2900  0569  301A               	movlw	26
  2901  056A  00F4               	movwf	??_Lcd_Write_Char
  2902  056B                     u1087:
  2903  056B  0BF4               	decfsz	??_Lcd_Write_Char,f
  2904  056C  2D6B               	goto	u1087
  2905  056D  0000               	nop
  2906  056E                     l1609:
  2907                           
  2908                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  2909  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2910  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0570  1109               	bcf	9,2	;volatile
  2912  0571                     l206:
  2913  0571  0008               	return
  2914  0572                     __end_of_Lcd_Write_Char:
  2915                           
  2916                           	psect	text15
  2917  0499                     __ptext15:	
  2918 ;; *************** function _Lcd_Set_Cursor *****************
  2919 ;; Defined at:
  2920 ;;		line 49 in file "LCD.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  a               1    wreg     unsigned char 
  2923 ;;  b               1    7[COMMON] unsigned char 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  a               1    1[BANK0 ] unsigned char 
  2926 ;;  temp            1    2[BANK0 ] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         1       0       0       0       0
  2937 ;;      Locals:         0       2       0       0       0
  2938 ;;      Temps:          0       1       0       0       0
  2939 ;;      Totals:         1       3       0       0       0
  2940 ;;Total ram usage:        4 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    3
  2943 ;; This function calls:
  2944 ;;		_Lcd_Cmd
  2945 ;; This function is called by:
  2946 ;;		_RTC_display
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _Lcd_Set_Cursor
  2952  0499                     _Lcd_Set_Cursor:
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2956                           ;Lcd_Set_Cursor@a stored from wreg
  2957  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2958  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2959  049B  00DB               	movwf	Lcd_Set_Cursor@a
  2960  049C                     l1651:
  2961                           
  2962                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  2963  049C  035B               	decf	Lcd_Set_Cursor@a,w
  2964  049D  1D03               	btfss	3,2
  2965  049E  2CA0               	goto	u931
  2966  049F  2CA1               	goto	u930
  2967  04A0                     u931:
  2968  04A0  2CAD               	goto	l1657
  2969  04A1                     u930:
  2970  04A1                     l1653:
  2971                           
  2972                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  2973  04A1  0877               	movf	Lcd_Set_Cursor@b,w
  2974  04A2  3E7F               	addlw	127
  2975  04A3  00DA               	movwf	??_Lcd_Set_Cursor
  2976  04A4  085A               	movf	??_Lcd_Set_Cursor,w
  2977  04A5  00DC               	movwf	Lcd_Set_Cursor@temp
  2978  04A6                     l1655:
  2979                           
  2980                           ;LCD.c: 53:         Lcd_Cmd(temp);
  2981  04A6  085C               	movf	Lcd_Set_Cursor@temp,w
  2982  04A7  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2983                           
  2984                           ;LCD.c: 54:  }
  2985  04AC  2CBE               	goto	l203
  2986  04AD                     l1657:
  2987  04AD  3002               	movlw	2
  2988  04AE  065B               	xorwf	Lcd_Set_Cursor@a,w
  2989  04AF  1D03               	btfss	3,2
  2990  04B0  2CB2               	goto	u941
  2991  04B1  2CB3               	goto	u940
  2992  04B2                     u941:
  2993  04B2  2CBE               	goto	l203
  2994  04B3                     u940:
  2995  04B3                     l1659:
  2996                           
  2997                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  2998  04B3  0877               	movf	Lcd_Set_Cursor@b,w
  2999  04B4  3EBF               	addlw	191
  3000  04B5  00DA               	movwf	??_Lcd_Set_Cursor
  3001  04B6  085A               	movf	??_Lcd_Set_Cursor,w
  3002  04B7  00DC               	movwf	Lcd_Set_Cursor@temp
  3003  04B8                     l1661:
  3004                           
  3005                           ;LCD.c: 57:   Lcd_Cmd(temp);
  3006  04B8  085C               	movf	Lcd_Set_Cursor@temp,w
  3007  04B9  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3008  04BE                     l203:
  3009  04BE  0008               	return
  3010  04BF                     __end_of_Lcd_Set_Cursor:
  3011                           
  3012                           	psect	text16
  3013  03DF                     __ptext16:	
  3014 ;; *************** function _Lcd_Init *****************
  3015 ;; Defined at:
  3016 ;;		line 15 in file "LCD.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         0       0       0       0       0
  3032 ;;      Temps:          0       2       0       0       0
  3033 ;;      Totals:         0       2       0       0       0
  3034 ;;Total ram usage:        2 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    3
  3037 ;; This function calls:
  3038 ;;		_Lcd_Cmd
  3039 ;;		_Lcd_Port
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _Lcd_Init
  3047  03DF                     _Lcd_Init:
  3048  03DF                     l1745:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3051                           
  3052                           
  3053                           ;LCD.c: 16:   Lcd_Port(0x00);
  3054  03DF  3000               	movlw	0
  3055  03E0  120A  118A  25F3  120A  118A  	fcall	_Lcd_Port
  3056  03E5                     l1747:
  3057                           
  3058                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3059  03E5  3034               	movlw	52
  3060  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3061  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3062  03E8  00DB               	movwf	??_Lcd_Init+1
  3063  03E9  30F1               	movlw	241
  3064  03EA  00DA               	movwf	??_Lcd_Init
  3065  03EB                     u1097:
  3066  03EB  0BDA               	decfsz	??_Lcd_Init,f
  3067  03EC  2BEB               	goto	u1097
  3068  03ED  0BDB               	decfsz	??_Lcd_Init+1,f
  3069  03EE  2BEB               	goto	u1097
  3070  03EF                     l1749:
  3071                           
  3072                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  3073  03EF  3030               	movlw	48
  3074  03F0  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3075                           
  3076                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3077  03F5  300D               	movlw	13
  3078  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3079  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3080  03F8  00DB               	movwf	??_Lcd_Init+1
  3081  03F9  30FB               	movlw	251
  3082  03FA  00DA               	movwf	??_Lcd_Init
  3083  03FB                     u1107:
  3084  03FB  0BDA               	decfsz	??_Lcd_Init,f
  3085  03FC  2BFB               	goto	u1107
  3086  03FD  0BDB               	decfsz	??_Lcd_Init+1,f
  3087  03FE  2BFB               	goto	u1107
  3088  03FF                     l1751:
  3089                           
  3090                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  3091  03FF  3030               	movlw	48
  3092  0400  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3093  0405                     l1753:
  3094                           
  3095                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3096  0405  301D               	movlw	29
  3097  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0408  00DB               	movwf	??_Lcd_Init+1
  3100  0409  3090               	movlw	144
  3101  040A  00DA               	movwf	??_Lcd_Init
  3102  040B                     u1117:
  3103  040B  0BDA               	decfsz	??_Lcd_Init,f
  3104  040C  2C0B               	goto	u1117
  3105  040D  0BDB               	decfsz	??_Lcd_Init+1,f
  3106  040E  2C0B               	goto	u1117
  3107  040F  0000               	nop
  3108                           
  3109                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  3110  0410  3030               	movlw	48
  3111  0411  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3112                           
  3113                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  3114  0416  3038               	movlw	56
  3115  0417  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3116                           
  3117                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  3118  041C  300C               	movlw	12
  3119  041D  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3120                           
  3121                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  3122  0422  3001               	movlw	1
  3123  0423  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3124                           
  3125                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  3126  0428  3006               	movlw	6
  3127  0429  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3128  042E                     l188:
  3129  042E  0008               	return
  3130  042F                     __end_of_Lcd_Init:
  3131                           
  3132                           	psect	text17
  3133  05AC                     __ptext17:	
  3134 ;; *************** function _Lcd_Clear *****************
  3135 ;; Defined at:
  3136 ;;		line 43 in file "LCD.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0, pclath, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    3
  3157 ;; This function calls:
  3158 ;;		_Lcd_Cmd
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _Lcd_Clear
  3166  05AC                     _Lcd_Clear:
  3167  05AC                     l1755:	
  3168                           ;incstack = 0
  3169                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3170                           
  3171                           
  3172                           ;LCD.c: 44:  Lcd_Cmd(0);
  3173  05AC  3000               	movlw	0
  3174  05AD  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3175                           
  3176                           ;LCD.c: 45:  Lcd_Cmd(1);
  3177  05B2  3001               	movlw	1
  3178  05B3  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3179  05B8                     l197:
  3180  05B8  0008               	return
  3181  05B9                     __end_of_Lcd_Clear:
  3182                           
  3183                           	psect	text18
  3184  0542                     __ptext18:	
  3185 ;; *************** function _Lcd_Cmd *****************
  3186 ;; Defined at:
  3187 ;;		line 34 in file "LCD.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  a               1    wreg     unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  a               1    6[COMMON] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         1       0       0       0       0
  3203 ;;      Temps:          2       0       0       0       0
  3204 ;;      Totals:         3       0       0       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    2
  3208 ;; This function calls:
  3209 ;;		_Lcd_Port
  3210 ;; This function is called by:
  3211 ;;		_Lcd_Init
  3212 ;;		_Lcd_Clear
  3213 ;;		_Lcd_Set_Cursor
  3214 ;;		_Lcd_Shift_Right
  3215 ;;		_Lcd_Shift_Left
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _Lcd_Cmd
  3221  0542                     _Lcd_Cmd:
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3225                           ;Lcd_Cmd@a stored from wreg
  3226  0542  00F6               	movwf	Lcd_Cmd@a
  3227  0543                     l1591:
  3228                           
  3229                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  3230  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0545  1009               	bcf	9,0	;volatile
  3233  0546                     l1593:
  3234                           
  3235                           ;LCD.c: 36:  Lcd_Port(a);
  3236  0546  0876               	movf	Lcd_Cmd@a,w
  3237  0547  120A  118A  25F3  120A  118A  	fcall	_Lcd_Port
  3238  054C                     l1595:
  3239                           
  3240                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  3241  054C  1283               	bcf	3,5	;RP0=0, select bank0
  3242  054D  1303               	bcf	3,6	;RP1=0, select bank0
  3243  054E  1509               	bsf	9,2	;volatile
  3244  054F                     l1597:
  3245                           
  3246                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3247  054F  300B               	movlw	11
  3248  0550  00F5               	movwf	??_Lcd_Cmd+1
  3249  0551  3062               	movlw	98
  3250  0552  00F4               	movwf	??_Lcd_Cmd
  3251  0553                     u1127:
  3252  0553  0BF4               	decfsz	??_Lcd_Cmd,f
  3253  0554  2D53               	goto	u1127
  3254  0555  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3255  0556  2D53               	goto	u1127
  3256  0557  0000               	nop
  3257  0558                     l1599:
  3258                           
  3259                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  3260  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3262  055A  1109               	bcf	9,2	;volatile
  3263  055B                     l194:
  3264  055B  0008               	return
  3265  055C                     __end_of_Lcd_Cmd:
  3266                           
  3267                           	psect	text19
  3268  05F3                     __ptext19:	
  3269 ;; *************** function _Lcd_Port *****************
  3270 ;; Defined at:
  3271 ;;		line 30 in file "LCD.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  a               1    wreg     unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  a               1    3[COMMON] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         0       0       0       0       0
  3286 ;;      Locals:         1       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0
  3288 ;;      Totals:         1       0       0       0       0
  3289 ;;Total ram usage:        1 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_Lcd_Init
  3296 ;;		_Lcd_Cmd
  3297 ;;		_Lcd_Write_Char
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function _Lcd_Port
  3303  05F3                     _Lcd_Port:
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _Lcd_Port: [wreg]
  3307                           ;Lcd_Port@a stored from wreg
  3308  05F3  00F3               	movwf	Lcd_Port@a
  3309  05F4                     l1585:
  3310                           
  3311                           ;LCD.c: 31:     PORTD = a;
  3312  05F4  0873               	movf	Lcd_Port@a,w
  3313  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3314  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3315  05F7  0088               	movwf	8	;volatile
  3316  05F8                     l191:
  3317  05F8  0008               	return
  3318  05F9                     __end_of_Lcd_Port:
  3319                           
  3320                           	psect	text20
  3321  05E2                     __ptext20:	
  3322 ;; *************** function _I2C_Master_RepeatedStart *****************
  3323 ;; Defined at:
  3324 ;;		line 64 in file "I2C.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    2
  3345 ;; This function calls:
  3346 ;;		_I2C_Master_Wait
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _I2C_Master_RepeatedStart
  3354  05E2                     _I2C_Master_RepeatedStart:
  3355  05E2                     l1759:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3358                           
  3359                           
  3360                           ;I2C.c: 66:     I2C_Master_Wait();
  3361  05E2  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3362  05E7                     l1761:
  3363                           
  3364                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3365  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  3366  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  3367  05E9  1491               	bsf	17,1	;volatile
  3368  05EA                     l159:
  3369  05EA  0008               	return
  3370  05EB                     __end_of_I2C_Master_RepeatedStart:
  3371                           
  3372                           	psect	text21
  3373  0469                     __ptext21:	
  3374 ;; *************** function _I2C_Master_Read *****************
  3375 ;; Defined at:
  3376 ;;		line 94 in file "I2C.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  a               2    3[COMMON] unsigned short 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  temp            2    0[BANK0 ] unsigned short 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2    3[COMMON] unsigned short 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3390 ;;      Params:         2       0       0       0       0
  3391 ;;      Locals:         0       2       0       0       0
  3392 ;;      Temps:          2       0       0       0       0
  3393 ;;      Totals:         4       2       0       0       0
  3394 ;;Total ram usage:        6 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    2
  3397 ;; This function calls:
  3398 ;;		_I2C_Master_Wait
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _I2C_Master_Read
  3406  0469                     _I2C_Master_Read:
  3407  0469                     l1763:	
  3408                           ;incstack = 0
  3409                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3410                           
  3411                           
  3412                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3413  0469  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3414  046E                     l1765:
  3415                           
  3416                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3417  046E  1683               	bsf	3,5	;RP0=1, select bank1
  3418  046F  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0470  1591               	bsf	17,3	;volatile
  3420                           
  3421                           ;I2C.c: 99:     I2C_Master_Wait();
  3422  0471  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3423  0476                     l1767:
  3424                           
  3425                           ;I2C.c: 100:     temp = SSPBUF;
  3426  0476  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0477  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0478  0813               	movf	19,w	;volatile
  3429  0479  00F5               	movwf	??_I2C_Master_Read
  3430  047A  01F6               	clrf	??_I2C_Master_Read+1
  3431  047B  0875               	movf	??_I2C_Master_Read,w
  3432  047C  00DA               	movwf	I2C_Master_Read@temp
  3433  047D  0876               	movf	??_I2C_Master_Read+1,w
  3434  047E  00DB               	movwf	I2C_Master_Read@temp+1
  3435  047F                     l1769:
  3436                           
  3437                           ;I2C.c: 101:     I2C_Master_Wait();
  3438  047F  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3439  0484                     l1771:
  3440                           
  3441                           ;I2C.c: 102:     if(a == 1){
  3442  0484  0373               	decf	I2C_Master_Read@a,w
  3443  0485  0474               	iorwf	I2C_Master_Read@a+1,w
  3444  0486  1D03               	btfss	3,2
  3445  0487  2C89               	goto	u1061
  3446  0488  2C8A               	goto	u1060
  3447  0489                     u1061:
  3448  0489  2C8E               	goto	l168
  3449  048A                     u1060:
  3450  048A                     l1773:
  3451                           
  3452                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3453  048A  1683               	bsf	3,5	;RP0=1, select bank1
  3454  048B  1303               	bcf	3,6	;RP1=0, select bank1
  3455  048C  1291               	bcf	17,5	;volatile
  3456                           
  3457                           ;I2C.c: 104:     }else{
  3458  048D  2C91               	goto	l169
  3459  048E                     l168:
  3460                           
  3461                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3462  048E  1683               	bsf	3,5	;RP0=1, select bank1
  3463  048F  1303               	bcf	3,6	;RP1=0, select bank1
  3464  0490  1691               	bsf	17,5	;volatile
  3465  0491                     l169:	
  3466                           ;I2C.c: 106:     }
  3467                           
  3468                           
  3469                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3470  0491  1611               	bsf	17,4	;volatile
  3471  0492                     l1775:
  3472                           
  3473                           ;I2C.c: 108:     return temp;
  3474  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0493  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0494  085B               	movf	I2C_Master_Read@temp+1,w
  3477  0495  00F4               	movwf	?_I2C_Master_Read+1
  3478  0496  085A               	movf	I2C_Master_Read@temp,w
  3479  0497  00F3               	movwf	?_I2C_Master_Read
  3480  0498                     l170:
  3481  0498  0008               	return
  3482  0499                     __end_of_I2C_Master_Read:
  3483                           
  3484                           	psect	text22
  3485  05B9                     __ptext22:	
  3486 ;; *************** function _I2C_Master_Wait *****************
  3487 ;; Defined at:
  3488 ;;		line 48 in file "I2C.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         0       0       0       0       0
  3506 ;;Total ram usage:        0 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_I2C_Master_Start
  3513 ;;		_I2C_Master_RepeatedStart
  3514 ;;		_I2C_Master_Stop
  3515 ;;		_I2C_Master_Write
  3516 ;;		_I2C_Master_Read
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _I2C_Master_Wait
  3522  05B9                     _I2C_Master_Wait:
  3523  05B9                     l1587:	
  3524                           ;incstack = 0
  3525                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3526                           
  3527  05B9                     l150:	
  3528                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3529                           
  3530  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3531  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3532  05BB  1914               	btfsc	20,2	;volatile
  3533  05BC  2DBE               	goto	u831
  3534  05BD  2DBF               	goto	u830
  3535  05BE                     u831:
  3536  05BE  2DB9               	goto	l150
  3537  05BF                     u830:
  3538  05BF                     l1589:
  3539  05BF  0811               	movf	17,w	;volatile
  3540  05C0  391F               	andlw	31
  3541  05C1  1D03               	btfss	3,2
  3542  05C2  2DC4               	goto	u841
  3543  05C3  2DC5               	goto	u840
  3544  05C4                     u841:
  3545  05C4  2DB9               	goto	l150
  3546  05C5                     u840:
  3547  05C5                     l153:
  3548  05C5  0008               	return
  3549  05C6                     __end_of_I2C_Master_Wait:
  3550                           
  3551                           	psect	text23
  3552  059A                     __ptext23:	
  3553 ;; *************** function _ISR *****************
  3554 ;; Defined at:
  3555 ;;		line 90 in file "main_prueba3_mini2.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0
  3571 ;;      Temps:          3       0       0       0       0
  3572 ;;      Totals:         3       0       0       0       0
  3573 ;;Total ram usage:        3 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		Interrupt level 1
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function _ISR
  3584  059A                     _ISR:
  3585  059A                     i1l1527:
  3586                           
  3587                           ;main_prueba3_mini2.c: 91:     if(PIR1bits.RCIF == 1){
  3588  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3589  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3590  059C  1E8C               	btfss	12,5	;volatile
  3591  059D  2D9F               	goto	u82_21
  3592  059E  2DA0               	goto	u82_20
  3593  059F                     u82_21:
  3594  059F  2DA5               	goto	i1l95
  3595  05A0                     u82_20:
  3596  05A0                     i1l1529:
  3597                           
  3598                           ;main_prueba3_mini2.c: 92:         data_recive = RCREG;
  3599  05A0  081A               	movf	26,w	;volatile
  3600  05A1  00F0               	movwf	??_ISR
  3601  05A2  0870               	movf	??_ISR,w
  3602  05A3  00D4               	movwf	_data_recive
  3603  05A4                     i1l1539:	
  3604                           ;main_prueba3_mini2.c: 93:         if (data_recive == 'P11'){
  3605                           
  3606                           
  3607                           ;main_prueba3_mini2.c: 105:         data_recive = 0;
  3608  05A4  01D4               	clrf	_data_recive
  3609  05A5                     i1l95:
  3610  05A5  0872               	movf	??_ISR+2,w
  3611  05A6  008A               	movwf	10
  3612  05A7  0E71               	swapf	??_ISR+1,w
  3613  05A8  0083               	movwf	3
  3614  05A9  0EFE               	swapf	btemp,f
  3615  05AA  0E7E               	swapf	btemp,w
  3616  05AB  0009               	retfie
  3617  05AC                     __end_of_ISR:
  3618  007E                     btemp	set	126	;btemp
  3619  007E                     wtemp0	set	126
  3620                           
  3621                           	psect	intentry
  3622  0004                     __pintentry:	
  3623                           ;incstack = 0
  3624                           ; Regs used in _ISR: [wreg+status,2]
  3625                           
  3626  0004                     interrupt_function:
  3627  007E                     saved_w	set	btemp
  3628  0004  00FE               	movwf	btemp
  3629  0005  0E03               	swapf	3,w
  3630  0006  00F1               	movwf	??_ISR+1
  3631  0007  080A               	movf	10,w
  3632  0008  00F2               	movwf	??_ISR+2
  3633  0009  120A  118A  2D9A   	ljmp	_ISR
  3634                           
  3635                           	psect	config
  3636                           
  3637                           ;Config register CONFIG1 @ 0x2007
  3638                           ;	Oscillator Selection bits
  3639                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3640                           ;	Watchdog Timer Enable bit
  3641                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3642                           ;	Power-up Timer Enable bit
  3643                           ;	PWRTE = OFF, PWRT disabled
  3644                           ;	RE3/MCLR pin function select bit
  3645                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3646                           ;	Code Protection bit
  3647                           ;	CP = OFF, Program memory code protection is disabled
  3648                           ;	Data Code Protection bit
  3649                           ;	CPD = OFF, Data memory code protection is disabled
  3650                           ;	Brown Out Reset Selection bits
  3651                           ;	BOREN = OFF, BOR disabled
  3652                           ;	Internal External Switchover bit
  3653                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3654                           ;	Fail-Safe Clock Monitor Enabled bit
  3655                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3656                           ;	Low Voltage Programming Enable bit
  3657                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3658                           ;	In-Circuit Debugger Mode bit
  3659                           ;	DEBUG = 0x1, unprogrammed default
  3660  2007                     	org	8199
  3661  2007  20D4               	dw	8404
  3662                           
  3663                           ;Config register CONFIG2 @ 0x2008
  3664                           ;	Brown-out Reset Selection bit
  3665                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3666                           ;	Flash Program Memory Self Write Enable bits
  3667                           ;	WRT = OFF, Write protection off
  3668  2008                     	org	8200
  3669  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> Date(BANK0[17]), Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7533
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    3919
                                              4 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1338
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     264
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 22:26:19 2021

                                _i 0059                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 005B  
                               fsr 0004                        _RTC_display 002C  
                              l112 019E                                l106 0541  
                              l203 04BE                                l115 03DE  
                              l212 04E3                                l150 05B9  
                              l206 0571                                l118 0505  
                              l153 05C5                                l170 0498  
                              l162 05D8                                l147 0468  
                              l156 05E1                                l165 05CF  
                              l159 05EA                                l191 05F8  
                              l168 048E                                l169 0491  
                              l409 0329                                l194 055B  
                              l188 042E                                l197 05B8  
                              l526 02C1                                l539 0384  
                              l399 0586                                _GIE 005F  
                              u700 02B3                                u620 0260  
                              _ISR 059A                                u701 02B2  
                              u621 025F                                u710 02B8  
                              u630 026B                                u711 02B7  
                              u631 026A                                u640 027C  
                              u480 0578                                u641 027B  
                              u481 0577                                u490 0585  
                              u491 0584                                u660 028E  
                              u661 028D                                u830 05BF  
                              u910 0321                                u831 05BE  
                              u655 0280                                u911 0320  
                              u840 05C5                                u680 029F  
                              u841 05C4                                u681 029E  
                              u905 0313                                u930 04A1  
                              u850 02D4                                u931 04A0  
                              u675 028F                                u851 02D3  
                              u940 04B3                                u941 04B2  
                              u685 029B                                u925 0533  
                              u950 04E3                                u870 02E8  
                              u951 04E2                                u695 02A7  
                              u871 02E7                                u960 0446  
                              u865 02D9                                u970 0331  
                              u890 0303                                u971 0330  
                              u891 0302                                u980 033C  
                              u981 033B                                u885 02EA  
                              u965 0441                                u990 0347  
                              u991 0346                                u895 02FF  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 005B                               ?_ISR 0070  
                             l1301 057C                               l1303 057E  
                             l1401 027F                               l1305 0585  
                             l1411 02A5                               l1403 0286  
                             l1421 02BD                               l1413 02A6  
                             l1405 028A                               l1415 02AD  
                             l1407 028E                               l1601 055D  
                             l1409 029F                               l1417 02B3  
                             l1603 0560                               l1419 02B8  
                             l1611 02C2                               l1605 0566  
                             l1381 0259                               l1701 0351  
                             l1621 02F1                               l1613 02D4  
                             l1607 0569                               l1391 026B  
                             l1383 025C                               l1711 0370  
                             l1703 0355                               l1295 0573  
                             l1623 0303                               l1615 02D7  
                             l1631 0321                               l1609 056E  
                             l1393 0270                               l1385 0260  
                             l1705 0359                               l1713 0376  
                             l1297 0574                               l1641 05CB  
                             l1625 0311                               l1617 02E4  
                             l1721 04E4                               l1801 01CC  
                             l1651 049C                               l1395 0274  
                             l1387 0265                               l1715 037B  
                             l1707 0363                               l1299 0578  
                             l1635 05D9                               l1643 05D0  
                             l1627 0312                               l1619 02E8  
                             l1731 04F0                               l1723 04EB  
                             l1811 0207                               l1803 01D1  
                             l1661 04B8                               l1653 04A1  
                             l1397 0276                               l1389 0267  
                             l1717 0380                               l1709 0369  
                             l1637 05DE                               l1645 05D5  
                             l1629 031B                               l1741 04F7  
                             l1733 04F1                               l1725 04ED  
                             l1821 0241                               l1813 0210  
                             l1805 01DA                               l1591 0543  
                             l1751 03FF                               l1655 04A6  
                             l1663 04C2                               l1399 027C  
                             l1647 0527                               l1639 05C6  
                             l1671 042F                               l1743 04F8  
                             l1735 04F4                               l1727 04EE  
                             l1823 0246                               l1815 021F  
                             l1807 01E9                               l1761 05E7  
                             l1585 05F4                               l1593 0546  
                             l1753 0405                               l1745 03DF  
                             l1657 04AD                               l1665 04C5  
                             l1681 0467                               l1673 0433  
                             l1737 04F5                               l1729 04EF  
                             l1817 022E                               l1809 01F8  
                             l1587 05B9                               l1771 0484  
                             l1763 0469                               l1595 054C  
                             l1755 05AC                               l1747 03E5  
                             l1659 04B3                               l1667 04D0  
                             l1691 0338                               l1683 032A  
                             l1675 0436                               l1739 04F6  
                             l1819 023C                               l1589 05BF  
                             l1773 048A                               l1765 046E  
                             l1597 054F                               l1749 03EF  
                             l1669 04D8                               l1693 033C  
                             l1685 032D                               l1781 018A  
                             l1757 0385                               l1677 0465  
                             l1775 0492                               l1767 0476  
                             l1759 05E2                               l1599 0558  
                             l1695 0341                               l1687 0331  
                             l1783 0190                               l1679 0466  
                             l1791 01AC                               l1769 047F  
                             l1697 0347                               l1689 0336  
                             l1793 01B1                               l1785 019F  
                             l1699 034A                               l1779 002C  
                             l1795 01B6                               l1787 01A4  
                             l1797 01BB                               l1789 01A7  
                             l1799 01C4                               u1010 0359  
                             u1011 0358                               u1020 0363  
                             u1021 0362                               u1005 034B  
                             u1040 0376                               u1041 0375  
                             u1025 035F                               u1050 037B  
                             u1107 03FB                               u1051 037A  
                             u1035 036A                               u1060 048A  
                             u1061 0489                               u1117 040B  
                             u1127 0553                               u1077 024E  
                             u1087 056B                               u1097 03EB  
                             _PEIE 005E                               _RCIF 0065  
                             i1l95 05A5                               _TRMT 04C1  
                             _Date 0020                               _Time 0031  
                ?_Lcd_Write_String 0070   __end_of_I2C_Master_RepeatedStart 05EB  
                             _cont 0055                               _main 019F  
                             _hour 0078                               _year 0056  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0076                    __end_of_Lcd_Cmd 055C  
                ___bmul@multiplier 0076              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 0067  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 02C2                    __end_of___awmod 0385  
                            _ANSEL 0188                    __end_of___lldiv 032A  
                  ___awdiv@divisor 0073                    ___awdiv@counter 005A  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009            __size_of_Lcd_Set_Cursor 0026  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              u82_20 05A0  
                            _SSPIF 0063                              u82_21 059F  
                            _TXREG 0019                              _m_day 0058  
                            _month 0057                              _setup 04E4  
                            pclath 000A                       _Write_to_RTC 0385  
                            status 0003                              wtemp0 007E  
                 __end_of_Lcd_Init 042F                   __end_of_Lcd_Port 05F9  
                  __initialization 000F                       __end_of_main 0259  
                           ??_main 006B                 __size_of_Lcd_Clear 000D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
                 ___awdiv@dividend 0075                             ?_setup 0070  
                           _ANSELH 0189                             i1l1527 059A  
                           i1l1529 05A0                             i1l1539 05A4  
                        ??_Lcd_Cmd 0074                             _SPBRGH 009A  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 05E2                             ___bmul 0572  
                        ??___awdiv 0077                          ??___awmod 0077  
                        ??___lldiv 0073                   ___awdiv@quotient 005C  
                           _minute 0079                             _second 007A  
                  ___awmod@divisor 0073                    ___awmod@counter 005A  
                           saved_w 007E                    Lcd_Set_Cursor@a 005B  
                  Lcd_Set_Cursor@b 0077            __end_of__initialization 0028  
                __end_of_Lcd_Clear 05B9                ___bmul@multiplicand 0073  
                   __pcstackCOMMON 0070                       __pidataBANK0 0506  
                    __end_of_setup 0506                       ?_RTC_display 0070  
                   _Lcd_Set_Cursor 0499                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 0078  
                       __pbssBANK0 0040                         _data_total 0040  
                       __pmaintext 019F                            ?___bmul 0073  
                       __pintentry 0004          __size_of_Lcd_Write_String 0025  
           __end_of_Lcd_Set_Cursor 04BF            __size_of_bcd_to_decimal 001C  
                       ??_Lcd_Init 005A                         ??_Lcd_Port 0073  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                   _Lcd_Write_Char 055C                            _Lcd_Cmd 0542  
                  __size_of___bmul 0015                            ___awdiv 0259  
                          ___awmod 032A                            ___lldiv 02C2  
                  ?_Lcd_Set_Cursor 0077                            __ptext1 04E4  
                          __ptext2 042F                            __ptext3 02C2  
                          __ptext4 0385                            __ptext5 05C6  
                          __ptext6 05D0                            __ptext7 05D9  
                          __ptext8 002C                            __ptext9 0526  
                     __size_of_ISR 0012                   ___awmod@dividend 0075  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          clrloop0 05EC             __end_of_Lcd_Write_Char 0572  
             end_of_initialization 0028         ??_I2C_Master_RepeatedStart 0073  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 005A                    ___lldiv@counter 0066  
                        _RCSTAbits 0018                   I2C_Master_Init@c 0067  
                 I2C_Master_Read@a 0073                          Lcd_Port@a 0073  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009               __size_of_RTC_display 0173  
                        _TRISCbits 0087                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 005C                  Lcd_Write_String@i 005A  
                        _TXSTAbits 0098                          _Lcd_Clear 05AC  
                   __end_of___bmul 0587                   _Lcd_Write_String 04BF  
              start_initialization 000F                     _bcd_to_decimal 0526  
                      __end_of_ISR 05AC                  __size_of_Lcd_Init 0050  
                __size_of_Lcd_Port 0006                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073                         ?_Lcd_Clear 0070  
                         ??___bmul 0074                         init_fetch0 0587  
                      __pdataBANK0 0020                    Lcd_Write_Char@a 0075  
           __end_of_bcd_to_decimal 0542                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 005A  
                      _data_recive 0054                      ?_Write_to_RTC 0070  
                         ?_Lcd_Cmd 0070                   _I2C_Master_Start 05D9  
                 _I2C_Master_Write 05C6                   ??_Lcd_Set_Cursor 005A  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 005A                    ?_bcd_to_decimal 0070  
             bcd_to_decimal@number 0077                     ??_Write_to_RTC 0075  
                   __size_of_setup 0022                  interrupt_function 0004  
                        clear_ram0 05EB                           _PIE1bits 008C  
                         Lcd_Cmd@a 0076                           _PIR1bits 000C  
                      ??_Lcd_Clear 0077                   ??_Lcd_Write_Char 0074  
                         _Lcd_Init 03DF                           _Lcd_Port 05F3  
              I2C_Master_Read@temp 005A           __end_of_Lcd_Write_String 04E4  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                    ??_RTC_display 005E                    _I2C_Master_Init 042F  
                  _I2C_Master_Read 0469                    _I2C_Master_Wait 05B9  
                  _I2C_Master_Stop 05D0                           __ptext10 0572  
                         __ptext11 032A                           __ptext20 05E2  
                         __ptext12 0259                           __ptext21 0469  
                         __ptext13 04BF                           __ptext22 05B9  
                         __ptext14 055C                           __ptext23 059A  
                         __ptext15 0499                           __ptext16 03DF  
                         __ptext17 05AC                           __ptext18 0542  
                         __ptext19 05F3                      __size_of_main 00BA  
             __end_of_Write_to_RTC 03DF           __end_of_I2C_Master_Start 05E2  
         __end_of_I2C_Master_Write 05D0                         _INTCONbits 000B  
                         init_ram0 058B                __end_of_RTC_display 019F  
                         intlevel1 0000                   ___lldiv@dividend 005E  
                       _OSCCONbits 008F                   ??_bcd_to_decimal 005A  
          __end_of_I2C_Master_Init 0469            __end_of_I2C_Master_Read 0499  
          __end_of_I2C_Master_Wait 05C6            __end_of_I2C_Master_Stop 05D9  
               Lcd_Set_Cursor@temp 005C                   ___lldiv@quotient 0062  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
