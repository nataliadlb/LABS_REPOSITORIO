

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 07:09:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  000E                     	;# 
   409  000F                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001D                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  0081                     	;# 
   429  0085                     	;# 
   430  0086                     	;# 
   431  0087                     	;# 
   432  0088                     	;# 
   433  0089                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  008F                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  0105                     	;# 
   457  0107                     	;# 
   458  0108                     	;# 
   459  0109                     	;# 
   460  010C                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  0185                     	;# 
   466  0187                     	;# 
   467  0188                     	;# 
   468  0189                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0000                     	;# 
   472  0001                     	;# 
   473  0002                     	;# 
   474  0003                     	;# 
   475  0004                     	;# 
   476  0005                     	;# 
   477  0006                     	;# 
   478  0007                     	;# 
   479  0008                     	;# 
   480  0009                     	;# 
   481  000A                     	;# 
   482  000B                     	;# 
   483  000C                     	;# 
   484  000D                     	;# 
   485  000E                     	;# 
   486  000E                     	;# 
   487  000F                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001B                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  001D                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  0081                     	;# 
   507  0085                     	;# 
   508  0086                     	;# 
   509  0087                     	;# 
   510  0088                     	;# 
   511  0089                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  008F                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0093                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  0105                     	;# 
   535  0107                     	;# 
   536  0108                     	;# 
   537  0109                     	;# 
   538  010C                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  0185                     	;# 
   544  0187                     	;# 
   545  0188                     	;# 
   546  0189                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549                           
   550                           	psect	idataBANK1
   551  0F99                     __pidataBANK1:
   552                           
   553                           ;initializer for _Date
   554  0F99  3444               	retlw	68
   555  0F9A  3441               	retlw	65
   556  0F9B  3454               	retlw	84
   557  0F9C  3445               	retlw	69
   558  0F9D  343A               	retlw	58
   559  0F9E  3420               	retlw	32
   560  0F9F  3430               	retlw	48
   561  0FA0  3430               	retlw	48
   562  0FA1  342F               	retlw	47
   563  0FA2  3430               	retlw	48
   564  0FA3  3430               	retlw	48
   565  0FA4  342F               	retlw	47
   566  0FA5  3430               	retlw	48
   567  0FA6  3430               	retlw	48
   568  0FA7  3400               	retlw	0
   569                           
   570                           ;initializer for _Time
   571  0FA8  3454               	retlw	84
   572  0FA9  3449               	retlw	73
   573  0FAA  344D               	retlw	77
   574  0FAB  3445               	retlw	69
   575  0FAC  343A               	retlw	58
   576  0FAD  3420               	retlw	32
   577  0FAE  3430               	retlw	48
   578  0FAF  3430               	retlw	48
   579  0FB0  343A               	retlw	58
   580  0FB1  3430               	retlw	48
   581  0FB2  3430               	retlw	48
   582  0FB3  343A               	retlw	58
   583  0FB4  3430               	retlw	48
   584  0FB5  3430               	retlw	48
   585  0FB6  3400               	retlw	0
   586                           
   587                           	psect	strings
   588  0800                     __pstrings:
   589  0800                     stringtab:
   590  0800                     __stringtab:
   591  0800                     stringcode:	
   592                           ;	String table - string pointers are 1 byte each
   593                           
   594  0800                     stringdir:
   595  0800  3008               	movlw	high stringdir
   596  0801  008A               	movwf	10
   597  0802  0804               	movf	4,w
   598  0803  0A84               	incf	4,f
   599  0804  0782               	addwf	2,f
   600  0805                     __stringbase:
   601  0805  3400               	retlw	0
   602  0806                     __end_of__stringtab:
   603  0806                     _dpowers:
   604  0806  3401               	retlw	1
   605  0807  3400               	retlw	0
   606  0808  340A               	retlw	10
   607  0809  3400               	retlw	0
   608  080A  3464               	retlw	100
   609  080B  3400               	retlw	0
   610  080C  34E8               	retlw	232
   611  080D  3403               	retlw	3
   612  080E  3410               	retlw	16
   613  080F  3427               	retlw	39
   614  0810                     __end_of_dpowers:
   615  0019                     _TXREG	set	25
   616  000B                     _INTCONbits	set	11
   617  001A                     _RCREG	set	26
   618  0018                     _RCSTAbits	set	24
   619  0009                     _PORTEbits	set	9
   620  0013                     _SSPBUF	set	19
   621  0014                     _SSPCON	set	20
   622  0009                     _PORTE	set	9
   623  0008                     _PORTD	set	8
   624  0007                     _PORTC	set	7
   625  0006                     _PORTB	set	6
   626  0005                     _PORTA	set	5
   627  0008                     _PORTDbits	set	8
   628  0005                     _PORTAbits	set	5
   629  000C                     _PIR1bits	set	12
   630  0065                     _RCIF	set	101
   631  0063                     _SSPIF	set	99
   632  005E                     _PEIE	set	94
   633  005F                     _GIE	set	95
   634  008C                     _PIE1bits	set	140
   635  0099                     _SPBRG	set	153
   636  009A                     _SPBRGH	set	154
   637  0098                     _TXSTAbits	set	152
   638  008F                     _OSCCONbits	set	143
   639  0091                     _SSPCON2bits	set	145
   640  0094                     _SSPSTAT	set	148
   641  0093                     _SSPADD	set	147
   642  0091                     _SSPCON2	set	145
   643  0089                     _TRISE	set	137
   644  0087                     _TRISCbits	set	135
   645  0086                     _TRISB	set	134
   646  0085                     _TRISA	set	133
   647  0088                     _TRISD	set	136
   648  04C1                     _TRMT	set	1217
   649  0463                     _SSPIE	set	1123
   650  043C                     _TRISC4	set	1084
   651  043B                     _TRISC3	set	1083
   652  0189                     _ANSELH	set	393
   653  0188                     _ANSEL	set	392
   654  0810                     STR_2:
   655  0810  3425               	retlw	37	;'%'
   656  0811  3430               	retlw	48	;'0'
   657  0812  3432               	retlw	50	;'2'
   658  0813  3464               	retlw	100	;'d'
   659  0814  3400               	retlw	0
   660  0815                     STR_6:
   661  0815  3425               	retlw	37	;'%'
   662  0816  3432               	retlw	50	;'2'
   663  0817  3464               	retlw	100	;'d'
   664  0818  3400               	retlw	0
   665  0819                     STR_1:
   666  0819  3425               	retlw	37	;'%'
   667  081A  3464               	retlw	100	;'d'
   668  081B  3400               	retlw	0
   669  0810                     
   670                           	psect	cinit
   671  000F                     start_initialization:	
   672                           ; #config settings
   673                           
   674  000F                     __initialization:
   675                           
   676                           ; Initialize objects allocated to BANK1
   677  000F  1383               	bcf	3,7	;select IRP bank0
   678  0010  30E2               	movlw	low (__pdataBANK1+30)
   679  0011  00FD               	movwf	btemp+-1
   680  0012  300F               	movlw	high __pidataBANK1
   681  0013  00FE               	movwf	btemp
   682  0014  3099               	movlw	low __pidataBANK1
   683  0015  00FF               	movwf	btemp+1
   684  0016  30C4               	movlw	low __pdataBANK1
   685  0017  0084               	movwf	4
   686  0018  120A  118A  27F1  120A  118A  	fcall	init_ram0
   687                           
   688                           ; Clear objects allocated to BANK1
   689  001D  30A0               	movlw	low __pbssBANK1
   690  001E  0084               	movwf	4
   691  001F  30C4               	movlw	low (__pbssBANK1+36)
   692  0020  120A  158A  2702  120A  118A  	fcall	clear_ram0
   693                           
   694                           ; Clear objects allocated to BANK0
   695  0025  3020               	movlw	low __pbssBANK0
   696  0026  0084               	movwf	4
   697  0027  304E               	movlw	low (__pbssBANK0+46)
   698  0028  120A  158A  2702  120A  118A  	fcall	clear_ram0
   699                           
   700                           ; Clear objects allocated to COMMON
   701  002D  01F6               	clrf	__pbssCOMMON& (0+127)
   702  002E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   703  002F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   704  0030  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   705  0031                     end_of_initialization:	
   706                           ;End of C runtime variable initialization code
   707                           
   708  0031                     __end_of__initialization:
   709  0031  0183               	clrf	3
   710  0032  120A  118A  2C02   	ljmp	_main	;jump to C main() function
   711                           
   712                           	psect	bssCOMMON
   713  0076                     __pbssCOMMON:
   714  0076                     _data_recive:
   715  0076                     	ds	2
   716  0078                     _cont:
   717  0078                     	ds	1
   718  0079                     _i:
   719  0079                     	ds	1
   720                           
   721                           	psect	bssBANK0
   722  0020                     __pbssBANK0:
   723  0020                     _year:
   724  0020                     	ds	1
   725  0021                     _month:
   726  0021                     	ds	1
   727  0022                     _m_day:
   728  0022                     	ds	1
   729  0023                     _hour:
   730  0023                     	ds	1
   731  0024                     _minute:
   732  0024                     	ds	1
   733  0025                     _second:
   734  0025                     	ds	1
   735  0026                     _month_send:
   736  0026                     	ds	8
   737  002E                     _day_send:
   738  002E                     	ds	8
   739  0036                     _hour_send:
   740  0036                     	ds	8
   741  003E                     _min_send:
   742  003E                     	ds	8
   743  0046                     _sec_send:
   744  0046                     	ds	8
   745                           
   746                           	psect	bssBANK1
   747  00A0                     __pbssBANK1:
   748  00A0                     _data_total:
   749  00A0                     	ds	20
   750  00B4                     _cont_send:
   751  00B4                     	ds	8
   752  00BC                     _year_send:
   753  00BC                     	ds	8
   754                           
   755                           	psect	dataBANK1
   756  00C4                     __pdataBANK1:
   757  00C4                     _Date:
   758  00C4                     	ds	15
   759  00D3                     _Time:
   760  00D3                     	ds	15
   761                           
   762                           	psect	inittext
   763  07ED                     init_fetch0:	
   764                           ;	Called with low address in FSR and high address in W
   765                           
   766  07ED  087E               	movf	btemp,w
   767  07EE  008A               	movwf	10
   768  07EF  087F               	movf	btemp+1,w
   769  07F0  0082               	movwf	2
   770  07F1                     init_ram0:	
   771                           ;Called with:
   772                           ;	high address of idata address in btemp 
   773                           ;	low address of idata address in btemp+1 
   774                           ;	low address of data in FSR
   775                           ;	high address + 1 of data in btemp-1
   776                           
   777  07F1  120A  118A  27ED  120A  118A  	fcall	init_fetch0
   778  07F6  0080               	movwf	0
   779  07F7  0A84               	incf	4,f
   780  07F8  0804               	movf	4,w
   781  07F9  067D               	xorwf	btemp+-1,w
   782  07FA  1903               	btfsc	3,2
   783  07FB  3400               	retlw	0
   784  07FC  0AFF               	incf	btemp+1,f
   785  07FD  1903               	btfsc	3,2
   786  07FE  0AFE               	incf	btemp,f
   787  07FF  2FF1               	goto	init_ram0
   788                           
   789                           	psect	clrtext
   790  0F02                     clear_ram0:	
   791                           ;	Called with FSR containing the base address, and
   792                           ;	W with the last address+1
   793                           
   794  0F02  0064               	clrwdt	;clear the watchdog before getting into this loop
   795  0F03                     clrloop0:
   796  0F03  0180               	clrf	0	;clear RAM location pointed to by FSR
   797  0F04  0A84               	incf	4,f	;increment pointer
   798  0F05  0604               	xorwf	4,w	;XOR with final address
   799  0F06  1903               	btfsc	3,2	;have we reached the end yet?
   800  0F07  3400               	retlw	0	;all done for this memory range, return
   801  0F08  0604               	xorwf	4,w	;XOR again to restore value
   802  0F09  2F03               	goto	clrloop0	;do the next byte
   803                           
   804                           	psect	cstackCOMMON
   805  0070                     __pcstackCOMMON:
   806  0070                     ?_isdigit:
   807  0070                     ?_Read_USART:	
   808                           ; 1 bit 
   809                           
   810  0070                     ??_Read_USART:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_setup:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_Write_to_RTC:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_I2C_Master_Start:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_I2C_Master_RepeatedStart:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_I2C_Master_Stop:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_RTC_display:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Write_USART_String:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_Write_USART:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_USART_Init_BaudRate:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_USART_Init:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_USART_INTERRUPT:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_ISR:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ??_ISR:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_main:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_bcd_to_decimal:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_I2C_Master_Wait:	
   859                           ; 1 bytes @ 0x0
   860                           
   861                           
   862                           ; 1 bytes @ 0x0
   863  0070                     	ds	4
   864  0074                     ??_I2C_Master_Start:
   865  0074                     ?_I2C_Master_Write:	
   866                           ; 1 bytes @ 0x4
   867                           
   868  0074                     ??_I2C_Master_RepeatedStart:	
   869                           ; 1 bytes @ 0x4
   870                           
   871  0074                     ??_I2C_Master_Stop:	
   872                           ; 1 bytes @ 0x4
   873                           
   874  0074                     ??_Write_USART:	
   875                           ; 1 bytes @ 0x4
   876                           
   877  0074                     ??_USART_Init_BaudRate:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0074                     ??_USART_Init:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0074                     ??_USART_INTERRUPT:	
   884                           ; 1 bytes @ 0x4
   885                           
   886  0074                     ??_isdigit:	
   887                           ; 1 bytes @ 0x4
   888                           
   889  0074                     ??_I2C_Master_Wait:	
   890                           ; 1 bytes @ 0x4
   891                           
   892  0074                     ??___wmul:	
   893                           ; 1 bytes @ 0x4
   894                           
   895  0074                     ?___bmul:	
   896                           ; 1 bytes @ 0x4
   897                           
   898  0074                     ??___lldiv:	
   899                           ; 1 bytes @ 0x4
   900                           
   901  0074                     ??___awdiv:	
   902                           ; 1 bytes @ 0x4
   903                           
   904  0074                     ??___awmod:	
   905                           ; 1 bytes @ 0x4
   906                           
   907  0074                     ??___lwdiv:	
   908                           ; 1 bytes @ 0x4
   909                           
   910  0074                     ?_I2C_Master_Read:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0074                     Write_USART@a:	
   914                           ; 2 bytes @ 0x4
   915                           
   916  0074                     ___bmul@multiplicand:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0074                     _isdigit$1065:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0074                     I2C_Master_Write@d:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     I2C_Master_Read@a:	
   926                           ; 2 bytes @ 0x4
   927                           
   928  0074                     ___wmul@product:	
   929                           ; 2 bytes @ 0x4
   930                           
   931                           
   932                           ; 2 bytes @ 0x4
   933  0074                     	ds	1
   934  0075                     ??_setup:
   935  0075                     ??_Write_USART_String:	
   936                           ; 1 bytes @ 0x5
   937                           
   938  0075                     ??___bmul:	
   939                           ; 1 bytes @ 0x5
   940                           
   941  0075                     ??___lwmod:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0075                     isdigit@c:	
   945                           ; 1 bytes @ 0x5
   946                           
   947                           
   948                           ; 1 bytes @ 0x5
   949  0075                     	ds	1
   950  0076                     ??_Write_to_RTC:
   951  0076                     ??_I2C_Master_Write:	
   952                           ; 1 bytes @ 0x6
   953                           
   954                           
   955                           	psect	cstackBANK0
   956  004E                     __pcstackBANK0:	
   957                           ; 1 bytes @ 0x6
   958                           
   959  004E                     ??_I2C_Master_Read:
   960  004E                     ?___wmul:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  004E                     ?___awdiv:	
   964                           ; 2 bytes @ 0x0
   965                           
   966  004E                     ?___awmod:	
   967                           ; 2 bytes @ 0x0
   968                           
   969  004E                     ?___lwdiv:	
   970                           ; 2 bytes @ 0x0
   971                           
   972  004E                     ?___lldiv:	
   973                           ; 2 bytes @ 0x0
   974                           
   975  004E                     Write_USART_String@a:	
   976                           ; 4 bytes @ 0x0
   977                           
   978  004E                     ___bmul@product:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  004E                     ___wmul@multiplier:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  004E                     ___awdiv@divisor:	
   985                           ; 2 bytes @ 0x0
   986                           
   987  004E                     ___awmod@divisor:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  004E                     ___lwdiv@divisor:	
   991                           ; 2 bytes @ 0x0
   992                           
   993  004E                     ___lldiv@divisor:	
   994                           ; 2 bytes @ 0x0
   995                           
   996                           
   997                           ; 4 bytes @ 0x0
   998  004E                     	ds	1
   999  004F                     Write_USART_String@i:
  1000  004F                     ___bmul@multiplier:	
  1001                           ; 1 bytes @ 0x1
  1002                           
  1003                           
  1004                           ; 1 bytes @ 0x1
  1005  004F                     	ds	1
  1006  0050                     ??_bcd_to_decimal:
  1007  0050                     I2C_Master_Read@temp:	
  1008                           ; 1 bytes @ 0x2
  1009                           
  1010  0050                     ___wmul@multiplicand:	
  1011                           ; 2 bytes @ 0x2
  1012                           
  1013  0050                     ___awdiv@dividend:	
  1014                           ; 2 bytes @ 0x2
  1015                           
  1016  0050                     ___awmod@dividend:	
  1017                           ; 2 bytes @ 0x2
  1018                           
  1019  0050                     ___lwdiv@dividend:	
  1020                           ; 2 bytes @ 0x2
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x2
  1024  0050                     	ds	2
  1025  0052                     ___awdiv@counter:
  1026  0052                     ___awmod@counter:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029  0052                     ___lwdiv@counter:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032  0052                     ___lldiv@dividend:	
  1033                           ; 1 bytes @ 0x4
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x4
  1037  0052                     	ds	1
  1038  0053                     bcd_to_decimal@number:
  1039  0053                     ___awdiv@sign:	
  1040                           ; 1 bytes @ 0x5
  1041                           
  1042  0053                     ___awmod@sign:	
  1043                           ; 1 bytes @ 0x5
  1044                           
  1045  0053                     ___lwdiv@quotient:	
  1046                           ; 1 bytes @ 0x5
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x5
  1050  0053                     	ds	1
  1051  0054                     ___awdiv@quotient:
  1052                           
  1053                           ; 2 bytes @ 0x6
  1054  0054                     	ds	1
  1055  0055                     ?___lwmod:
  1056  0055                     ___lwmod@divisor:	
  1057                           ; 2 bytes @ 0x7
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x7
  1061  0055                     	ds	1
  1062  0056                     ___lldiv@quotient:
  1063                           
  1064                           ; 4 bytes @ 0x8
  1065  0056                     	ds	1
  1066  0057                     ___lwmod@dividend:
  1067                           
  1068                           ; 2 bytes @ 0x9
  1069  0057                     	ds	2
  1070  0059                     ___lwmod@counter:
  1071                           
  1072                           ; 1 bytes @ 0xB
  1073  0059                     	ds	1
  1074  005A                     ?_sprintf:
  1075  005A                     sprintf@f:	
  1076                           ; 2 bytes @ 0xC
  1077                           
  1078  005A                     ___lldiv@counter:	
  1079                           ; 1 bytes @ 0xC
  1080                           
  1081                           
  1082                           ; 1 bytes @ 0xC
  1083  005A                     	ds	1
  1084  005B                     ?_I2C_Master_Init:
  1085  005B                     I2C_Master_Init@c:	
  1086                           ; 1 bytes @ 0xD
  1087                           
  1088                           
  1089                           ; 4 bytes @ 0xD
  1090  005B                     	ds	2
  1091  005D                     ??_sprintf:
  1092                           
  1093                           ; 1 bytes @ 0xF
  1094  005D                     	ds	2
  1095  005F                     ??_I2C_Master_Init:
  1096                           
  1097                           ; 1 bytes @ 0x11
  1098  005F                     	ds	1
  1099  0060                     sprintf@ap:
  1100                           
  1101                           ; 1 bytes @ 0x12
  1102  0060                     	ds	1
  1103  0061                     sprintf@prec:
  1104                           
  1105                           ; 1 bytes @ 0x13
  1106  0061                     	ds	1
  1107  0062                     sprintf@val:
  1108                           
  1109                           ; 2 bytes @ 0x14
  1110  0062                     	ds	2
  1111  0064                     sprintf@flag:
  1112                           
  1113                           ; 1 bytes @ 0x16
  1114  0064                     	ds	1
  1115  0065                     sprintf@width:
  1116                           
  1117                           ; 2 bytes @ 0x17
  1118  0065                     	ds	2
  1119  0067                     sprintf@c:
  1120                           
  1121                           ; 1 bytes @ 0x19
  1122  0067                     	ds	1
  1123  0068                     sprintf@sp:
  1124                           
  1125                           ; 1 bytes @ 0x1A
  1126  0068                     	ds	1
  1127  0069                     ??_RTC_display:
  1128                           
  1129                           ; 1 bytes @ 0x1B
  1130  0069                     	ds	3
  1131  006C                     ??_main:
  1132                           
  1133                           ; 1 bytes @ 0x1E
  1134  006C                     	ds	3
  1135                           
  1136                           	psect	maintext
  1137  0402                     __pmaintext:	
  1138 ;;
  1139 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1140 ;;
  1141 ;; *************** function _main *****************
  1142 ;; Defined at:
  1143 ;;		line 120 in file "main_prueba3_mini2.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : B00/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       3       0       0       0
  1160 ;;      Totals:         0       3       0       0       0
  1161 ;;Total ram usage:        3 bytes
  1162 ;; Hardware stack levels required when called:    5
  1163 ;; This function calls:
  1164 ;;		_I2C_Master_Read
  1165 ;;		_I2C_Master_RepeatedStart
  1166 ;;		_I2C_Master_Start
  1167 ;;		_I2C_Master_Stop
  1168 ;;		_I2C_Master_Write
  1169 ;;		_RTC_display
  1170 ;;		_Write_USART
  1171 ;;		_Write_USART_String
  1172 ;;		_Write_to_RTC
  1173 ;;		_setup
  1174 ;; This function is called by:
  1175 ;;		Startup code after reset
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _main
  1181  0402                     _main:
  1182  0402                     l2582:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1185                           
  1186                           
  1187                           ;main_prueba3_mini2.c: 121:     setup();
  1188  0402  120A  118A  278C  120A  118A  	fcall	_setup
  1189  0407                     l2584:
  1190                           
  1191                           ;main_prueba3_mini2.c: 122:     TRISD = 0x00;
  1192  0407  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0408  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0409  0188               	clrf	8	;volatile
  1195  040A                     l2586:
  1196                           
  1197                           ;main_prueba3_mini2.c: 125:     Write_to_RTC();
  1198  040A  120A  118A  2632  120A  118A  	fcall	_Write_to_RTC
  1199  040F                     l2588:
  1200                           
  1201                           ;main_prueba3_mini2.c: 131:         I2C_Master_Start();
  1202  040F  120A  158A  2713  120A  118A  	fcall	_I2C_Master_Start
  1203  0414                     l2590:
  1204                           
  1205                           ;main_prueba3_mini2.c: 132:         I2C_Master_Write(0xD0);
  1206  0414  30D0               	movlw	208
  1207  0415  00F4               	movwf	I2C_Master_Write@d
  1208  0416  3000               	movlw	0
  1209  0417  00F5               	movwf	I2C_Master_Write@d+1
  1210  0418  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  1211  041D                     l2592:
  1212                           
  1213                           ;main_prueba3_mini2.c: 133:         I2C_Master_Write(0);
  1214  041D  3000               	movlw	0
  1215  041E  00F4               	movwf	I2C_Master_Write@d
  1216  041F  00F5               	movwf	I2C_Master_Write@d+1
  1217  0420  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  1218  0425                     l2594:
  1219                           
  1220                           ;main_prueba3_mini2.c: 134:         I2C_Master_RepeatedStart();
  1221  0425  120A  158A  270A  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1222  042A                     l2596:
  1223                           
  1224                           ;main_prueba3_mini2.c: 135:         I2C_Master_Write(0xD1);
  1225  042A  30D1               	movlw	209
  1226  042B  00F4               	movwf	I2C_Master_Write@d
  1227  042C  3000               	movlw	0
  1228  042D  00F5               	movwf	I2C_Master_Write@d+1
  1229  042E  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  1230  0433                     l2598:
  1231                           
  1232                           ;main_prueba3_mini2.c: 136:         second = I2C_Master_Read(1);
  1233  0433  3001               	movlw	1
  1234  0434  00F4               	movwf	I2C_Master_Read@a
  1235  0435  3000               	movlw	0
  1236  0436  00F5               	movwf	I2C_Master_Read@a+1
  1237  0437  120A  118A  27BD  120A  118A  	fcall	_I2C_Master_Read
  1238  043C  0874               	movf	?_I2C_Master_Read,w
  1239  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1240  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1241  043F  00EC               	movwf	??_main
  1242  0440  086C               	movf	??_main,w
  1243  0441  00A5               	movwf	_second
  1244  0442                     l2600:
  1245                           
  1246                           ;main_prueba3_mini2.c: 137:         minute = I2C_Master_Read(1);
  1247  0442  3001               	movlw	1
  1248  0443  00F4               	movwf	I2C_Master_Read@a
  1249  0444  3000               	movlw	0
  1250  0445  00F5               	movwf	I2C_Master_Read@a+1
  1251  0446  120A  118A  27BD  120A  118A  	fcall	_I2C_Master_Read
  1252  044B  0874               	movf	?_I2C_Master_Read,w
  1253  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1254  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1255  044E  00EC               	movwf	??_main
  1256  044F  086C               	movf	??_main,w
  1257  0450  00A4               	movwf	_minute
  1258  0451                     l2602:
  1259                           
  1260                           ;main_prueba3_mini2.c: 138:         hour = I2C_Master_Read(1);
  1261  0451  3001               	movlw	1
  1262  0452  00F4               	movwf	I2C_Master_Read@a
  1263  0453  3000               	movlw	0
  1264  0454  00F5               	movwf	I2C_Master_Read@a+1
  1265  0455  120A  118A  27BD  120A  118A  	fcall	_I2C_Master_Read
  1266  045A  0874               	movf	?_I2C_Master_Read,w
  1267  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1268  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1269  045D  00EC               	movwf	??_main
  1270  045E  086C               	movf	??_main,w
  1271  045F  00A3               	movwf	_hour
  1272  0460                     l2604:
  1273                           
  1274                           ;main_prueba3_mini2.c: 139:         I2C_Master_Read(1);
  1275  0460  3001               	movlw	1
  1276  0461  00F4               	movwf	I2C_Master_Read@a
  1277  0462  3000               	movlw	0
  1278  0463  00F5               	movwf	I2C_Master_Read@a+1
  1279  0464  120A  118A  27BD  120A  118A  	fcall	_I2C_Master_Read
  1280  0469                     l2606:
  1281                           
  1282                           ;main_prueba3_mini2.c: 140:         m_day = I2C_Master_Read(1);
  1283  0469  3001               	movlw	1
  1284  046A  00F4               	movwf	I2C_Master_Read@a
  1285  046B  3000               	movlw	0
  1286  046C  00F5               	movwf	I2C_Master_Read@a+1
  1287  046D  120A  118A  27BD  120A  118A  	fcall	_I2C_Master_Read
  1288  0472  0874               	movf	?_I2C_Master_Read,w
  1289  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0475  00EC               	movwf	??_main
  1292  0476  086C               	movf	??_main,w
  1293  0477  00A2               	movwf	_m_day
  1294  0478                     l2608:
  1295                           
  1296                           ;main_prueba3_mini2.c: 141:         month = I2C_Master_Read(1);
  1297  0478  3001               	movlw	1
  1298  0479  00F4               	movwf	I2C_Master_Read@a
  1299  047A  3000               	movlw	0
  1300  047B  00F5               	movwf	I2C_Master_Read@a+1
  1301  047C  120A  118A  27BD  120A  118A  	fcall	_I2C_Master_Read
  1302  0481  0874               	movf	?_I2C_Master_Read,w
  1303  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0484  00EC               	movwf	??_main
  1306  0485  086C               	movf	??_main,w
  1307  0486  00A1               	movwf	_month
  1308  0487                     l2610:
  1309                           
  1310                           ;main_prueba3_mini2.c: 142:         year = I2C_Master_Read(0);
  1311  0487  3000               	movlw	0
  1312  0488  00F4               	movwf	I2C_Master_Read@a
  1313  0489  00F5               	movwf	I2C_Master_Read@a+1
  1314  048A  120A  118A  27BD  120A  118A  	fcall	_I2C_Master_Read
  1315  048F  0874               	movf	?_I2C_Master_Read,w
  1316  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0492  00EC               	movwf	??_main
  1319  0493  086C               	movf	??_main,w
  1320  0494  00A0               	movwf	_year
  1321  0495                     l2612:
  1322                           
  1323                           ;main_prueba3_mini2.c: 143:         I2C_Master_Stop();
  1324  0495  120A  158A  271C  120A  118A  	fcall	_I2C_Master_Stop
  1325  049A                     l2614:
  1326                           
  1327                           ;main_prueba3_mini2.c: 145:         RTC_display();
  1328  049A  120A  118A  2035  120A  118A  	fcall	_RTC_display
  1329  049F                     l2616:
  1330                           
  1331                           ;main_prueba3_mini2.c: 147:         if (second == 2){
  1332  049F  3002               	movlw	2
  1333  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1334  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1335  04A2  0625               	xorwf	_second,w
  1336  04A3  1D03               	btfss	3,2
  1337  04A4  2CA6               	goto	u2391
  1338  04A5  2CA7               	goto	u2390
  1339  04A6                     u2391:
  1340  04A6  2CA9               	goto	l2620
  1341  04A7                     u2390:
  1342  04A7                     l2618:
  1343                           
  1344                           ;main_prueba3_mini2.c: 148:             PORTDbits.RD0 = 1;
  1345  04A7  1408               	bsf	8,0	;volatile
  1346                           
  1347                           ;main_prueba3_mini2.c: 149:         }
  1348  04A8  2CE1               	goto	l2648
  1349  04A9                     l2620:
  1350  04A9  3003               	movlw	3
  1351  04AA  0625               	xorwf	_second,w
  1352  04AB  1D03               	btfss	3,2
  1353  04AC  2CAE               	goto	u2401
  1354  04AD  2CAF               	goto	u2400
  1355  04AE                     u2401:
  1356  04AE  2CB1               	goto	l2624
  1357  04AF                     u2400:
  1358  04AF                     l2622:
  1359                           
  1360                           ;main_prueba3_mini2.c: 151:             PORTDbits.RD1 = 1;
  1361  04AF  1488               	bsf	8,1	;volatile
  1362                           
  1363                           ;main_prueba3_mini2.c: 152:         }
  1364  04B0  2CE1               	goto	l2648
  1365  04B1                     l2624:
  1366  04B1  3004               	movlw	4
  1367  04B2  0625               	xorwf	_second,w
  1368  04B3  1D03               	btfss	3,2
  1369  04B4  2CB6               	goto	u2411
  1370  04B5  2CB7               	goto	u2410
  1371  04B6                     u2411:
  1372  04B6  2CB9               	goto	l2628
  1373  04B7                     u2410:
  1374  04B7                     l2626:
  1375                           
  1376                           ;main_prueba3_mini2.c: 154:             PORTDbits.RD2 = 1;
  1377  04B7  1508               	bsf	8,2	;volatile
  1378                           
  1379                           ;main_prueba3_mini2.c: 155:         }
  1380  04B8  2CE1               	goto	l2648
  1381  04B9                     l2628:
  1382  04B9  3005               	movlw	5
  1383  04BA  0625               	xorwf	_second,w
  1384  04BB  1D03               	btfss	3,2
  1385  04BC  2CBE               	goto	u2421
  1386  04BD  2CBF               	goto	u2420
  1387  04BE                     u2421:
  1388  04BE  2CC1               	goto	l2632
  1389  04BF                     u2420:
  1390  04BF                     l2630:
  1391                           
  1392                           ;main_prueba3_mini2.c: 157:             PORTDbits.RD3 = 1;
  1393  04BF  1588               	bsf	8,3	;volatile
  1394                           
  1395                           ;main_prueba3_mini2.c: 158:         }
  1396  04C0  2CE1               	goto	l2648
  1397  04C1                     l2632:
  1398  04C1  3006               	movlw	6
  1399  04C2  0625               	xorwf	_second,w
  1400  04C3  1D03               	btfss	3,2
  1401  04C4  2CC6               	goto	u2431
  1402  04C5  2CC7               	goto	u2430
  1403  04C6                     u2431:
  1404  04C6  2CC9               	goto	l2636
  1405  04C7                     u2430:
  1406  04C7                     l2634:
  1407                           
  1408                           ;main_prueba3_mini2.c: 160:             PORTDbits.RD4 = 1;
  1409  04C7  1608               	bsf	8,4	;volatile
  1410                           
  1411                           ;main_prueba3_mini2.c: 161:         }
  1412  04C8  2CE1               	goto	l2648
  1413  04C9                     l2636:
  1414  04C9  300A               	movlw	10
  1415  04CA  0625               	xorwf	_second,w
  1416  04CB  1D03               	btfss	3,2
  1417  04CC  2CCE               	goto	u2441
  1418  04CD  2CCF               	goto	u2440
  1419  04CE                     u2441:
  1420  04CE  2CD1               	goto	l2640
  1421  04CF                     u2440:
  1422  04CF                     l2638:
  1423                           
  1424                           ;main_prueba3_mini2.c: 163:             PORTDbits.RD5 = 1;
  1425  04CF  1688               	bsf	8,5	;volatile
  1426                           
  1427                           ;main_prueba3_mini2.c: 164:         }
  1428  04D0  2CE1               	goto	l2648
  1429  04D1                     l2640:
  1430  04D1  300F               	movlw	15
  1431  04D2  0625               	xorwf	_second,w
  1432  04D3  1D03               	btfss	3,2
  1433  04D4  2CD6               	goto	u2451
  1434  04D5  2CD7               	goto	u2450
  1435  04D6                     u2451:
  1436  04D6  2CD9               	goto	l2644
  1437  04D7                     u2450:
  1438  04D7                     l2642:
  1439                           
  1440                           ;main_prueba3_mini2.c: 166:             PORTDbits.RD6 = 1;
  1441  04D7  1708               	bsf	8,6	;volatile
  1442                           
  1443                           ;main_prueba3_mini2.c: 167:         }
  1444  04D8  2CE1               	goto	l2648
  1445  04D9                     l2644:
  1446  04D9  301F               	movlw	31
  1447  04DA  0624               	xorwf	_minute,w
  1448  04DB  1D03               	btfss	3,2
  1449  04DC  2CDE               	goto	u2461
  1450  04DD  2CDF               	goto	u2460
  1451  04DE                     u2461:
  1452  04DE  2CE1               	goto	l130
  1453  04DF                     u2460:
  1454  04DF                     l2646:
  1455                           
  1456                           ;main_prueba3_mini2.c: 169:             PORTDbits.RD7 = 1;
  1457  04DF  1788               	bsf	8,7	;volatile
  1458  04E0  2CE1               	goto	l2648
  1459  04E1                     l130:
  1460  04E1                     l2648:
  1461                           
  1462                           ;main_prueba3_mini2.c: 182:         Write_USART_String(sec_send);
  1463  04E1  3046               	movlw	(low (_sec_send| 0))& (0+255)
  1464  04E2  120A  158A  27B7  120A  118A  	fcall	_Write_USART_String
  1465  04E7                     l2650:
  1466                           
  1467                           ;main_prueba3_mini2.c: 186:         Write_USART(13);
  1468  04E7  300D               	movlw	13
  1469  04E8  120A  158A  272F  120A  118A  	fcall	_Write_USART
  1470  04ED                     l2652:
  1471                           
  1472                           ;main_prueba3_mini2.c: 187:         Write_USART(10);
  1473  04ED  300A               	movlw	10
  1474  04EE  120A  158A  272F  120A  118A  	fcall	_Write_USART
  1475  04F3                     l2654:
  1476                           
  1477                           ;main_prueba3_mini2.c: 199:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1478  04F3  3002               	movlw	2
  1479  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1480  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1481  04F6  00EE               	movwf	??_main+2
  1482  04F7  3004               	movlw	4
  1483  04F8  00ED               	movwf	??_main+1
  1484  04F9  30B9               	movlw	185
  1485  04FA  00EC               	movwf	??_main
  1486  04FB                     u2477:
  1487  04FB  0BEC               	decfsz	??_main,f
  1488  04FC  2CFB               	goto	u2477
  1489  04FD  0BED               	decfsz	??_main+1,f
  1490  04FE  2CFB               	goto	u2477
  1491  04FF  0BEE               	decfsz	??_main+2,f
  1492  0500  2CFB               	goto	u2477
  1493  0501  2D02               	nop2
  1494  0502  2C0F               	goto	l2588
  1495  0503  120A  118A  280C   	ljmp	start
  1496  0506                     __end_of_main:
  1497                           
  1498                           	psect	text1
  1499  078C                     __ptext1:	
  1500 ;; *************** function _setup *****************
  1501 ;; Defined at:
  1502 ;;		line 273 in file "main_prueba3_mini2.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0
  1519 ;;      Totals:         0       0       0       0       0
  1520 ;;Total ram usage:        0 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    4
  1523 ;; This function calls:
  1524 ;;		_I2C_Master_Init
  1525 ;;		_USART_INTERRUPT
  1526 ;;		_USART_Init
  1527 ;;		_USART_Init_BaudRate
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _setup
  1535  078C                     _setup:
  1536  078C                     l2508:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1539                           
  1540                           
  1541                           ;main_prueba3_mini2.c: 275:     ANSEL = 0;
  1542  078C  1683               	bsf	3,5	;RP0=1, select bank3
  1543  078D  1703               	bsf	3,6	;RP1=1, select bank3
  1544  078E  0188               	clrf	8	;volatile
  1545                           
  1546                           ;main_prueba3_mini2.c: 276:     ANSELH = 0;
  1547  078F  0189               	clrf	9	;volatile
  1548                           
  1549                           ;main_prueba3_mini2.c: 277:     TRISA = 0;
  1550  0790  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0791  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0792  0185               	clrf	5	;volatile
  1553  0793                     l2510:
  1554                           
  1555                           ;main_prueba3_mini2.c: 278:     TRISB = 0b00000011;
  1556  0793  3003               	movlw	3
  1557  0794  0086               	movwf	6	;volatile
  1558  0795                     l2512:
  1559                           
  1560                           ;main_prueba3_mini2.c: 279:     TRISCbits.TRISC6 = 0;
  1561  0795  1307               	bcf	7,6	;volatile
  1562  0796                     l2514:
  1563                           
  1564                           ;main_prueba3_mini2.c: 280:     TRISCbits.TRISC7 = 1;
  1565  0796  1787               	bsf	7,7	;volatile
  1566  0797                     l2516:
  1567                           
  1568                           ;main_prueba3_mini2.c: 281:     TRISD = 0;
  1569  0797  0188               	clrf	8	;volatile
  1570  0798                     l2518:
  1571                           
  1572                           ;main_prueba3_mini2.c: 282:     TRISE = 0;
  1573  0798  0189               	clrf	9	;volatile
  1574  0799                     l2520:
  1575                           
  1576                           ;main_prueba3_mini2.c: 283:     PORTA = 0;
  1577  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1578  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1579  079B  0185               	clrf	5	;volatile
  1580  079C                     l2522:
  1581                           
  1582                           ;main_prueba3_mini2.c: 284:     PORTB = 0;
  1583  079C  0186               	clrf	6	;volatile
  1584  079D                     l2524:
  1585                           
  1586                           ;main_prueba3_mini2.c: 285:     PORTC = 0;
  1587  079D  0187               	clrf	7	;volatile
  1588  079E                     l2526:
  1589                           
  1590                           ;main_prueba3_mini2.c: 286:     PORTD = 0;
  1591  079E  0188               	clrf	8	;volatile
  1592  079F                     l2528:
  1593                           
  1594                           ;main_prueba3_mini2.c: 287:     PORTE = 0;
  1595  079F  0189               	clrf	9	;volatile
  1596  07A0                     l2530:
  1597                           
  1598                           ;main_prueba3_mini2.c: 288:     I2C_Master_Init(100000);
  1599  07A0  3000               	movlw	0
  1600  07A1  00DE               	movwf	I2C_Master_Init@c+3
  1601  07A2  3001               	movlw	1
  1602  07A3  00DD               	movwf	I2C_Master_Init@c+2
  1603  07A4  3086               	movlw	134
  1604  07A5  00DC               	movwf	I2C_Master_Init@c+1
  1605  07A6  30A0               	movlw	160
  1606  07A7  00DB               	movwf	I2C_Master_Init@c
  1607  07A8  120A  118A  2752  120A  118A  	fcall	_I2C_Master_Init
  1608  07AD                     l2532:
  1609                           
  1610                           ;main_prueba3_mini2.c: 289:     USART_Init_BaudRate();
  1611  07AD  120A  158A  26F4  120A  118A  	fcall	_USART_Init_BaudRate
  1612  07B2                     l2534:
  1613                           
  1614                           ;main_prueba3_mini2.c: 290:     USART_Init();
  1615  07B2  120A  158A  273B  120A  118A  	fcall	_USART_Init
  1616  07B7                     l2536:
  1617                           
  1618                           ;main_prueba3_mini2.c: 291:     USART_INTERRUPT();
  1619  07B7  120A  158A  26EE  120A  118A  	fcall	_USART_INTERRUPT
  1620  07BC                     l153:
  1621  07BC  0008               	return
  1622  07BD                     __end_of_setup:
  1623                           
  1624                           	psect	text2
  1625  0EF4                     __ptext2:	
  1626 ;; *************** function _USART_Init_BaudRate *****************
  1627 ;; Defined at:
  1628 ;;		line 19 in file "USART.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       0       0       0       0
  1643 ;;      Locals:         0       0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0
  1645 ;;      Totals:         0       0       0       0       0
  1646 ;;Total ram usage:        0 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    2
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_setup
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _USART_Init_BaudRate
  1658  0EF4                     _USART_Init_BaudRate:
  1659  0EF4                     l1914:	
  1660                           ;incstack = 0
  1661                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1662                           
  1663                           
  1664                           ;USART.c: 20:     SPBRGH = 0;
  1665  0EF4  1683               	bsf	3,5	;RP0=1, select bank1
  1666  0EF5  1303               	bcf	3,6	;RP1=0, select bank1
  1667  0EF6  019A               	clrf	26	;volatile
  1668  0EF7                     l1916:
  1669                           
  1670                           ;USART.c: 21:     SPBRG = 12;
  1671  0EF7  300C               	movlw	12
  1672  0EF8  0099               	movwf	25	;volatile
  1673  0EF9                     l301:
  1674  0EF9  0008               	return
  1675  0EFA                     __end_of_USART_Init_BaudRate:
  1676                           
  1677                           	psect	text3
  1678  0F3B                     __ptext3:	
  1679 ;; *************** function _USART_Init *****************
  1680 ;; Defined at:
  1681 ;;		line 8 in file "USART.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		status,2
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0
  1698 ;;      Totals:         0       0       0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    2
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_setup
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _USART_Init
  1711  0F3B                     _USART_Init:
  1712  0F3B                     l1918:	
  1713                           ;incstack = 0
  1714                           ; Regs used in _USART_Init: [status,2]
  1715                           
  1716                           
  1717                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1718  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0F3D  1798               	bsf	24,7	;volatile
  1721                           
  1722                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  1723  0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  1724  0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  1725  0F40  1218               	bcf	24,4	;volatile
  1726                           
  1727                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  1728  0F41  1698               	bsf	24,5	;volatile
  1729                           
  1730                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1731  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0F44  1618               	bsf	24,4	;volatile
  1734  0F45                     l1920:
  1735                           
  1736                           ;USART.c: 16:     RCREG = 0;
  1737  0F45  019A               	clrf	26	;volatile
  1738  0F46                     l298:
  1739  0F46  0008               	return
  1740  0F47                     __end_of_USART_Init:
  1741                           
  1742                           	psect	text4
  1743  0EEE                     __ptext4:	
  1744 ;; *************** function _USART_INTERRUPT *****************
  1745 ;; Defined at:
  1746 ;;		line 24 in file "USART.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		None
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    2
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_setup
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _USART_INTERRUPT
  1776  0EEE                     _USART_INTERRUPT:
  1777  0EEE                     l1922:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _USART_INTERRUPT: []
  1780                           
  1781                           
  1782                           ;USART.c: 25:     INTCONbits.GIE = 1;
  1783  0EEE  178B               	bsf	11,7	;volatile
  1784                           
  1785                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  1786  0EEF  170B               	bsf	11,6	;volatile
  1787                           
  1788                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  1789  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0EF2  168C               	bsf	12,5	;volatile
  1792  0EF3                     l304:
  1793  0EF3  0008               	return
  1794  0EF4                     __end_of_USART_INTERRUPT:
  1795                           
  1796                           	psect	text5
  1797  0752                     __ptext5:	
  1798 ;; *************** function _I2C_Master_Init *****************
  1799 ;; Defined at:
  1800 ;;		line 21 in file "I2C.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  c               4   13[BANK0 ] const unsigned long 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       4       0       0       0
  1815 ;;      Locals:         0       0       0       0       0
  1816 ;;      Temps:          0       4       0       0       0
  1817 ;;      Totals:         0       8       0       0       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		___lldiv
  1823 ;; This function is called by:
  1824 ;;		_setup
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _I2C_Master_Init
  1830  0752                     _I2C_Master_Init:
  1831  0752                     l2414:	
  1832                           ;incstack = 0
  1833                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1834                           
  1835                           
  1836                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1837  0752  3028               	movlw	40
  1838  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0755  0094               	movwf	20	;volatile
  1841  0756                     l2416:
  1842                           
  1843                           ;I2C.c: 28:     SSPCON2 = 0;
  1844  0756  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0757  1303               	bcf	3,6	;RP1=0, select bank1
  1846  0758  0191               	clrf	17	;volatile
  1847  0759                     l2418:
  1848                           
  1849                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1850  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1851  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1852  075B  085B               	movf	I2C_Master_Init@c,w
  1853  075C  00DF               	movwf	??_I2C_Master_Init
  1854  075D  085C               	movf	I2C_Master_Init@c+1,w
  1855  075E  00E0               	movwf	??_I2C_Master_Init+1
  1856  075F  085D               	movf	I2C_Master_Init@c+2,w
  1857  0760  00E1               	movwf	??_I2C_Master_Init+2
  1858  0761  085E               	movf	I2C_Master_Init@c+3,w
  1859  0762  00E2               	movwf	??_I2C_Master_Init+3
  1860  0763  3002               	movlw	2
  1861  0764                     u2175:
  1862  0764  1003               	clrc
  1863  0765  0DDF               	rlf	??_I2C_Master_Init,f
  1864  0766  0DE0               	rlf	??_I2C_Master_Init+1,f
  1865  0767  0DE1               	rlf	??_I2C_Master_Init+2,f
  1866  0768  0DE2               	rlf	??_I2C_Master_Init+3,f
  1867  0769                     u2170:
  1868  0769  3EFF               	addlw	-1
  1869  076A  1D03               	skipz
  1870  076B  2F64               	goto	u2175
  1871  076C  0862               	movf	??_I2C_Master_Init+3,w
  1872  076D  00D1               	movwf	___lldiv@divisor+3
  1873  076E  0861               	movf	??_I2C_Master_Init+2,w
  1874  076F  00D0               	movwf	___lldiv@divisor+2
  1875  0770  0860               	movf	??_I2C_Master_Init+1,w
  1876  0771  00CF               	movwf	___lldiv@divisor+1
  1877  0772  085F               	movf	??_I2C_Master_Init,w
  1878  0773  00CE               	movwf	___lldiv@divisor
  1879  0774  3000               	movlw	0
  1880  0775  00D5               	movwf	___lldiv@dividend+3
  1881  0776  307A               	movlw	122
  1882  0777  00D4               	movwf	___lldiv@dividend+2
  1883  0778  3012               	movlw	18
  1884  0779  00D3               	movwf	___lldiv@dividend+1
  1885  077A  3000               	movlw	0
  1886  077B  00D2               	movwf	___lldiv@dividend
  1887  077C  120A  118A  256F  120A  118A  	fcall	___lldiv
  1888  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0783  084E               	movf	?___lldiv,w
  1891  0784  3EFF               	addlw	255
  1892  0785  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0786  1303               	bcf	3,6	;RP1=0, select bank1
  1894  0787  0093               	movwf	19	;volatile
  1895  0788                     l2420:
  1896                           
  1897                           ;I2C.c: 36:     SSPSTAT = 0;
  1898  0788  0194               	clrf	20	;volatile
  1899  0789                     l2422:
  1900                           
  1901                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1902  0789  1587               	bsf	7,3	;volatile
  1903  078A                     l2424:
  1904                           
  1905                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1906  078A  1607               	bsf	7,4	;volatile
  1907  078B                     l182:
  1908  078B  0008               	return
  1909  078C                     __end_of_I2C_Master_Init:
  1910                           
  1911                           	psect	text6
  1912  056F                     __ptext6:	
  1913 ;; *************** function ___lldiv *****************
  1914 ;; Defined at:
  1915 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  divisor         4    0[BANK0 ] unsigned long 
  1918 ;;  dividend        4    4[BANK0 ] unsigned long 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  quotient        4    8[BANK0 ] unsigned long 
  1921 ;;  counter         1   12[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  4    0[BANK0 ] unsigned long 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       8       0       0       0
  1932 ;;      Locals:         0       5       0       0       0
  1933 ;;      Temps:          1       0       0       0       0
  1934 ;;      Totals:         1      13       0       0       0
  1935 ;;Total ram usage:       14 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    2
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_I2C_Master_Init
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function ___lldiv
  1947  056F                     ___lldiv:
  1948  056F                     l2226:	
  1949                           ;incstack = 0
  1950                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1951                           
  1952  056F  3000               	movlw	0
  1953  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0572  00D9               	movwf	___lldiv@quotient+3
  1956  0573  3000               	movlw	0
  1957  0574  00D8               	movwf	___lldiv@quotient+2
  1958  0575  3000               	movlw	0
  1959  0576  00D7               	movwf	___lldiv@quotient+1
  1960  0577  3000               	movlw	0
  1961  0578  00D6               	movwf	___lldiv@quotient
  1962  0579  0851               	movf	___lldiv@divisor+3,w
  1963  057A  0450               	iorwf	___lldiv@divisor+2,w
  1964  057B  044F               	iorwf	___lldiv@divisor+1,w
  1965  057C  044E               	iorwf	___lldiv@divisor,w
  1966  057D  1903               	skipnz
  1967  057E  2D80               	goto	u1831
  1968  057F  2D81               	goto	u1830
  1969  0580                     u1831:
  1970  0580  2DCE               	goto	l2246
  1971  0581                     u1830:
  1972  0581                     l2228:
  1973  0581  01DA               	clrf	___lldiv@counter
  1974  0582  0ADA               	incf	___lldiv@counter,f
  1975  0583  2D91               	goto	l2232
  1976  0584                     l2230:
  1977  0584  3001               	movlw	1
  1978  0585  00F4               	movwf	??___lldiv
  1979  0586                     u1845:
  1980  0586  1003               	clrc
  1981  0587  0DCE               	rlf	___lldiv@divisor,f
  1982  0588  0DCF               	rlf	___lldiv@divisor+1,f
  1983  0589  0DD0               	rlf	___lldiv@divisor+2,f
  1984  058A  0DD1               	rlf	___lldiv@divisor+3,f
  1985  058B  0BF4               	decfsz	??___lldiv,f
  1986  058C  2D86               	goto	u1845
  1987  058D  3001               	movlw	1
  1988  058E  00F4               	movwf	??___lldiv
  1989  058F  0874               	movf	??___lldiv,w
  1990  0590  07DA               	addwf	___lldiv@counter,f
  1991  0591                     l2232:
  1992  0591  1FD1               	btfss	___lldiv@divisor+3,7
  1993  0592  2D94               	goto	u1851
  1994  0593  2D95               	goto	u1850
  1995  0594                     u1851:
  1996  0594  2D84               	goto	l2230
  1997  0595                     u1850:
  1998  0595                     l2234:
  1999  0595  3001               	movlw	1
  2000  0596  00F4               	movwf	??___lldiv
  2001  0597                     u1865:
  2002  0597  1003               	clrc
  2003  0598  0DD6               	rlf	___lldiv@quotient,f
  2004  0599  0DD7               	rlf	___lldiv@quotient+1,f
  2005  059A  0DD8               	rlf	___lldiv@quotient+2,f
  2006  059B  0DD9               	rlf	___lldiv@quotient+3,f
  2007  059C  0BF4               	decfsz	??___lldiv,f
  2008  059D  2D97               	goto	u1865
  2009  059E                     l2236:
  2010  059E  0851               	movf	___lldiv@divisor+3,w
  2011  059F  0255               	subwf	___lldiv@dividend+3,w
  2012  05A0  1D03               	skipz
  2013  05A1  2DAC               	goto	u1875
  2014  05A2  0850               	movf	___lldiv@divisor+2,w
  2015  05A3  0254               	subwf	___lldiv@dividend+2,w
  2016  05A4  1D03               	skipz
  2017  05A5  2DAC               	goto	u1875
  2018  05A6  084F               	movf	___lldiv@divisor+1,w
  2019  05A7  0253               	subwf	___lldiv@dividend+1,w
  2020  05A8  1D03               	skipz
  2021  05A9  2DAC               	goto	u1875
  2022  05AA  084E               	movf	___lldiv@divisor,w
  2023  05AB  0252               	subwf	___lldiv@dividend,w
  2024  05AC                     u1875:
  2025  05AC  1C03               	skipc
  2026  05AD  2DAF               	goto	u1871
  2027  05AE  2DB0               	goto	u1870
  2028  05AF                     u1871:
  2029  05AF  2DBF               	goto	l2242
  2030  05B0                     u1870:
  2031  05B0                     l2238:
  2032  05B0  084E               	movf	___lldiv@divisor,w
  2033  05B1  02D2               	subwf	___lldiv@dividend,f
  2034  05B2  084F               	movf	___lldiv@divisor+1,w
  2035  05B3  1C03               	skipc
  2036  05B4  0F4F               	incfsz	___lldiv@divisor+1,w
  2037  05B5  02D3               	subwf	___lldiv@dividend+1,f
  2038  05B6  0850               	movf	___lldiv@divisor+2,w
  2039  05B7  1C03               	skipc
  2040  05B8  0F50               	incfsz	___lldiv@divisor+2,w
  2041  05B9  02D4               	subwf	___lldiv@dividend+2,f
  2042  05BA  0851               	movf	___lldiv@divisor+3,w
  2043  05BB  1C03               	skipc
  2044  05BC  0F51               	incfsz	___lldiv@divisor+3,w
  2045  05BD  02D5               	subwf	___lldiv@dividend+3,f
  2046  05BE                     l2240:
  2047  05BE  1456               	bsf	___lldiv@quotient,0
  2048  05BF                     l2242:
  2049  05BF  3001               	movlw	1
  2050  05C0                     u1885:
  2051  05C0  1003               	clrc
  2052  05C1  0CD1               	rrf	___lldiv@divisor+3,f
  2053  05C2  0CD0               	rrf	___lldiv@divisor+2,f
  2054  05C3  0CCF               	rrf	___lldiv@divisor+1,f
  2055  05C4  0CCE               	rrf	___lldiv@divisor,f
  2056  05C5  3EFF               	addlw	-1
  2057  05C6  1D03               	skipz
  2058  05C7  2DC0               	goto	u1885
  2059  05C8                     l2244:
  2060  05C8  3001               	movlw	1
  2061  05C9  02DA               	subwf	___lldiv@counter,f
  2062  05CA  1D03               	btfss	3,2
  2063  05CB  2DCD               	goto	u1891
  2064  05CC  2DCE               	goto	u1890
  2065  05CD                     u1891:
  2066  05CD  2D95               	goto	l2234
  2067  05CE                     u1890:
  2068  05CE                     l2246:
  2069  05CE  0859               	movf	___lldiv@quotient+3,w
  2070  05CF  00D1               	movwf	?___lldiv+3
  2071  05D0  0858               	movf	___lldiv@quotient+2,w
  2072  05D1  00D0               	movwf	?___lldiv+2
  2073  05D2  0857               	movf	___lldiv@quotient+1,w
  2074  05D3  00CF               	movwf	?___lldiv+1
  2075  05D4  0856               	movf	___lldiv@quotient,w
  2076  05D5  00CE               	movwf	?___lldiv
  2077  05D6                     l495:
  2078  05D6  0008               	return
  2079  05D7                     __end_of___lldiv:
  2080                           
  2081                           	psect	text7
  2082  0632                     __ptext7:	
  2083 ;; *************** function _Write_to_RTC *****************
  2084 ;; Defined at:
  2085 ;;		line 258 in file "main_prueba3_mini2.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    4
  2106 ;; This function calls:
  2107 ;;		_I2C_Master_Start
  2108 ;;		_I2C_Master_Stop
  2109 ;;		_I2C_Master_Write
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _Write_to_RTC
  2117  0632                     _Write_to_RTC:
  2118  0632                     l2538:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  2121                           
  2122                           
  2123                           ;main_prueba3_mini2.c: 259:     I2C_Master_Start();
  2124  0632  120A  158A  2713  120A  118A  	fcall	_I2C_Master_Start
  2125                           
  2126                           ;main_prueba3_mini2.c: 260:     I2C_Master_Write(0xD0);
  2127  0637  30D0               	movlw	208
  2128  0638  00F4               	movwf	I2C_Master_Write@d
  2129  0639  3000               	movlw	0
  2130  063A  00F5               	movwf	I2C_Master_Write@d+1
  2131  063B  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2132                           
  2133                           ;main_prueba3_mini2.c: 261:     I2C_Master_Write(0);
  2134  0640  3000               	movlw	0
  2135  0641  00F4               	movwf	I2C_Master_Write@d
  2136  0642  00F5               	movwf	I2C_Master_Write@d+1
  2137  0643  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2138                           
  2139                           ;main_prueba3_mini2.c: 262:     I2C_Master_Write(0);
  2140  0648  3000               	movlw	0
  2141  0649  00F4               	movwf	I2C_Master_Write@d
  2142  064A  00F5               	movwf	I2C_Master_Write@d+1
  2143  064B  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2144                           
  2145                           ;main_prueba3_mini2.c: 263:     I2C_Master_Write(48);
  2146  0650  3030               	movlw	48
  2147  0651  00F4               	movwf	I2C_Master_Write@d
  2148  0652  3000               	movlw	0
  2149  0653  00F5               	movwf	I2C_Master_Write@d+1
  2150  0654  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2151                           
  2152                           ;main_prueba3_mini2.c: 264:     I2C_Master_Write(6);
  2153  0659  3006               	movlw	6
  2154  065A  00F4               	movwf	I2C_Master_Write@d
  2155  065B  3000               	movlw	0
  2156  065C  00F5               	movwf	I2C_Master_Write@d+1
  2157  065D  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2158                           
  2159                           ;main_prueba3_mini2.c: 265:     I2C_Master_Write(1);
  2160  0662  3001               	movlw	1
  2161  0663  00F4               	movwf	I2C_Master_Write@d
  2162  0664  3000               	movlw	0
  2163  0665  00F5               	movwf	I2C_Master_Write@d+1
  2164  0666  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2165                           
  2166                           ;main_prueba3_mini2.c: 266:     I2C_Master_Write(8);
  2167  066B  3008               	movlw	8
  2168  066C  00F4               	movwf	I2C_Master_Write@d
  2169  066D  3000               	movlw	0
  2170  066E  00F5               	movwf	I2C_Master_Write@d+1
  2171  066F  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2172                           
  2173                           ;main_prueba3_mini2.c: 267:     I2C_Master_Write(3);
  2174  0674  3003               	movlw	3
  2175  0675  00F4               	movwf	I2C_Master_Write@d
  2176  0676  3000               	movlw	0
  2177  0677  00F5               	movwf	I2C_Master_Write@d+1
  2178  0678  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2179                           
  2180                           ;main_prueba3_mini2.c: 268:     I2C_Master_Write(27);
  2181  067D  301B               	movlw	27
  2182  067E  00F4               	movwf	I2C_Master_Write@d
  2183  067F  3000               	movlw	0
  2184  0680  00F5               	movwf	I2C_Master_Write@d+1
  2185  0681  120A  158A  2725  120A  118A  	fcall	_I2C_Master_Write
  2186                           
  2187                           ;main_prueba3_mini2.c: 269:     I2C_Master_Stop();
  2188  0686  120A  158A  271C  120A  118A  	fcall	_I2C_Master_Stop
  2189  068B                     l150:
  2190  068B  0008               	return
  2191  068C                     __end_of_Write_to_RTC:
  2192                           
  2193                           	psect	text8
  2194  0F25                     __ptext8:	
  2195 ;; *************** function _I2C_Master_Write *****************
  2196 ;; Defined at:
  2197 ;;		line 84 in file "I2C.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  d               2    4[COMMON] unsigned int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         2       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0
  2214 ;;      Totals:         2       0       0       0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    3
  2218 ;; This function calls:
  2219 ;;		_I2C_Master_Wait
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;;		_Write_to_RTC
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _I2C_Master_Write
  2228  0F25                     _I2C_Master_Write:
  2229  0F25                     l2280:	
  2230                           ;incstack = 0
  2231                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2232                           
  2233                           
  2234                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2235  0F25  120A  158A  2747  120A  158A  	fcall	_I2C_Master_Wait
  2236  0F2A                     l2282:
  2237                           
  2238                           ;I2C.c: 87:     SSPBUF = d;
  2239  0F2A  0874               	movf	I2C_Master_Write@d,w
  2240  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0F2D  0093               	movwf	19	;volatile
  2243  0F2E                     l200:
  2244  0F2E  0008               	return
  2245  0F2F                     __end_of_I2C_Master_Write:
  2246                           
  2247                           	psect	text9
  2248  0F1C                     __ptext9:	
  2249 ;; *************** function _I2C_Master_Stop *****************
  2250 ;; Defined at:
  2251 ;;		line 73 in file "I2C.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    3
  2272 ;; This function calls:
  2273 ;;		_I2C_Master_Wait
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;;		_Write_to_RTC
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _I2C_Master_Stop
  2282  0F1C                     _I2C_Master_Stop:
  2283  0F1C                     l2284:	
  2284                           ;incstack = 0
  2285                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2286                           
  2287                           
  2288                           ;I2C.c: 75:     I2C_Master_Wait();
  2289  0F1C  120A  158A  2747  120A  158A  	fcall	_I2C_Master_Wait
  2290  0F21                     l2286:
  2291                           
  2292                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2293  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  2294  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  2295  0F23  1511               	bsf	17,2	;volatile
  2296  0F24                     l197:
  2297  0F24  0008               	return
  2298  0F25                     __end_of_I2C_Master_Stop:
  2299                           
  2300                           	psect	text10
  2301  0F13                     __ptext10:	
  2302 ;; *************** function _I2C_Master_Start *****************
  2303 ;; Defined at:
  2304 ;;		line 56 in file "I2C.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2318 ;;      Params:         0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    3
  2325 ;; This function calls:
  2326 ;;		_I2C_Master_Wait
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;;		_Write_to_RTC
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _I2C_Master_Start
  2335  0F13                     _I2C_Master_Start:
  2336  0F13                     l2276:	
  2337                           ;incstack = 0
  2338                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2339                           
  2340                           
  2341                           ;I2C.c: 57:     I2C_Master_Wait();
  2342  0F13  120A  158A  2747  120A  158A  	fcall	_I2C_Master_Wait
  2343  0F18                     l2278:
  2344                           
  2345                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  2346  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  2347  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  2348  0F1A  1411               	bsf	17,0	;volatile
  2349  0F1B                     l191:
  2350  0F1B  0008               	return
  2351  0F1C                     __end_of_I2C_Master_Start:
  2352                           
  2353                           	psect	text11
  2354  0FB7                     __ptext11:	
  2355 ;; *************** function _Write_USART_String *****************
  2356 ;; Defined at:
  2357 ;;		line 37 in file "USART.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  a               1    wreg     PTR unsigned char 
  2360 ;;		 -> sec_send(8), 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  a               1    0[BANK0 ] PTR unsigned char 
  2363 ;;		 -> sec_send(8), 
  2364 ;;  i               1    1[BANK0 ] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         0       0       0       0       0
  2375 ;;      Locals:         0       2       0       0       0
  2376 ;;      Temps:          1       0       0       0       0
  2377 ;;      Totals:         1       2       0       0       0
  2378 ;;Total ram usage:        3 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		_Write_USART
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _Write_USART_String
  2390  0FB7                     _Write_USART_String:
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2394                           ;Write_USART_String@a stored from wreg
  2395  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  2396  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0FB9  00CE               	movwf	Write_USART_String@a
  2398  0FBA                     l2574:
  2399                           
  2400                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2401  0FBA  01CF               	clrf	Write_USART_String@i
  2402  0FBB  2FCD               	goto	l2580
  2403  0FBC                     l2576:
  2404                           
  2405                           ;USART.c: 40:         Write_USART(a[i]);
  2406  0FBC  084F               	movf	Write_USART_String@i,w
  2407  0FBD  074E               	addwf	Write_USART_String@a,w
  2408  0FBE  00F5               	movwf	??_Write_USART_String
  2409  0FBF  0875               	movf	??_Write_USART_String,w
  2410  0FC0  0084               	movwf	4
  2411  0FC1  0800               	movf	0,w
  2412  0FC2  120A  158A  272F  120A  158A  	fcall	_Write_USART
  2413  0FC7                     l2578:
  2414                           
  2415                           ;USART.c: 41:     }
  2416  0FC7  3001               	movlw	1
  2417  0FC8  00F5               	movwf	??_Write_USART_String
  2418  0FC9  0875               	movf	??_Write_USART_String,w
  2419  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0FCC  07CF               	addwf	Write_USART_String@i,f
  2422  0FCD                     l2580:
  2423  0FCD  084F               	movf	Write_USART_String@i,w
  2424  0FCE  074E               	addwf	Write_USART_String@a,w
  2425  0FCF  00F5               	movwf	??_Write_USART_String
  2426  0FD0  0875               	movf	??_Write_USART_String,w
  2427  0FD1  0084               	movwf	4
  2428  0FD2  1383               	bcf	3,7	;select IRP bank0
  2429  0FD3  0800               	movf	0,w
  2430  0FD4  1D03               	btfss	3,2
  2431  0FD5  2FD7               	goto	u2381
  2432  0FD6  2FD8               	goto	u2380
  2433  0FD7                     u2381:
  2434  0FD7  2FBC               	goto	l2576
  2435  0FD8                     u2380:
  2436  0FD8                     l316:
  2437  0FD8  0008               	return
  2438  0FD9                     __end_of_Write_USART_String:
  2439                           
  2440                           	psect	text12
  2441  0F2F                     __ptext12:	
  2442 ;; *************** function _Write_USART *****************
  2443 ;; Defined at:
  2444 ;;		line 33 in file "USART.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  a               1    wreg     unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  a               1    4[COMMON] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       0       0       0       0
  2459 ;;      Locals:         1       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0
  2461 ;;      Totals:         1       0       0       0       0
  2462 ;;Total ram usage:        1 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    2
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;;		_Write_USART_String
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _Write_USART
  2475  0F2F                     _Write_USART:
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _Write_USART: [wreg]
  2479                           ;Write_USART@a stored from wreg
  2480  0F2F  00F4               	movwf	Write_USART@a
  2481  0F30                     l2288:
  2482  0F30                     l307:	
  2483                           ;USART.c: 34:     while(!TRMT);
  2484                           
  2485  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0F32  1C98               	btfss	24,1	;volatile
  2488  0F33  2F35               	goto	u1971
  2489  0F34  2F36               	goto	u1970
  2490  0F35                     u1971:
  2491  0F35  2F30               	goto	l307
  2492  0F36                     u1970:
  2493  0F36                     l2290:
  2494                           
  2495                           ;USART.c: 35:     TXREG=a;
  2496  0F36  0874               	movf	Write_USART@a,w
  2497  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0F39  0099               	movwf	25	;volatile
  2500  0F3A                     l310:
  2501  0F3A  0008               	return
  2502  0F3B                     __end_of_Write_USART:
  2503                           
  2504                           	psect	text13
  2505  0035                     __ptext13:	
  2506 ;; *************** function _RTC_display *****************
  2507 ;; Defined at:
  2508 ;;		line 217 in file "main_prueba3_mini2.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0
  2524 ;;      Temps:          0       3       0       0       0
  2525 ;;      Totals:         0       3       0       0       0
  2526 ;;Total ram usage:        3 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    4
  2529 ;; This function calls:
  2530 ;;		___awdiv
  2531 ;;		___awmod
  2532 ;;		_bcd_to_decimal
  2533 ;;		_sprintf
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _RTC_display
  2541  0035                     _RTC_display:
  2542  0035                     l2560:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2545                           
  2546                           
  2547                           ;main_prueba3_mini2.c: 219:     second = bcd_to_decimal(second);
  2548  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0037  0825               	movf	_second,w
  2551  0038  120A  158A  277D  120A  118A  	fcall	_bcd_to_decimal
  2552  003D  1283               	bcf	3,5	;RP0=0, select bank0
  2553  003E  1303               	bcf	3,6	;RP1=0, select bank0
  2554  003F  00E9               	movwf	??_RTC_display
  2555  0040  0869               	movf	??_RTC_display,w
  2556  0041  00A5               	movwf	_second
  2557                           
  2558                           ;main_prueba3_mini2.c: 220:     minute = bcd_to_decimal(minute);
  2559  0042  0824               	movf	_minute,w
  2560  0043  120A  158A  277D  120A  118A  	fcall	_bcd_to_decimal
  2561  0048  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0049  1303               	bcf	3,6	;RP1=0, select bank0
  2563  004A  00E9               	movwf	??_RTC_display
  2564  004B  0869               	movf	??_RTC_display,w
  2565  004C  00A4               	movwf	_minute
  2566                           
  2567                           ;main_prueba3_mini2.c: 221:     hour = bcd_to_decimal(hour);
  2568  004D  0823               	movf	_hour,w
  2569  004E  120A  158A  277D  120A  118A  	fcall	_bcd_to_decimal
  2570  0053  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0054  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0055  00E9               	movwf	??_RTC_display
  2573  0056  0869               	movf	??_RTC_display,w
  2574  0057  00A3               	movwf	_hour
  2575                           
  2576                           ;main_prueba3_mini2.c: 222:     m_day = bcd_to_decimal(m_day);
  2577  0058  0822               	movf	_m_day,w
  2578  0059  120A  158A  277D  120A  118A  	fcall	_bcd_to_decimal
  2579  005E  1283               	bcf	3,5	;RP0=0, select bank0
  2580  005F  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0060  00E9               	movwf	??_RTC_display
  2582  0061  0869               	movf	??_RTC_display,w
  2583  0062  00A2               	movwf	_m_day
  2584                           
  2585                           ;main_prueba3_mini2.c: 223:     month = bcd_to_decimal(month);
  2586  0063  0821               	movf	_month,w
  2587  0064  120A  158A  277D  120A  118A  	fcall	_bcd_to_decimal
  2588  0069  1283               	bcf	3,5	;RP0=0, select bank0
  2589  006A  1303               	bcf	3,6	;RP1=0, select bank0
  2590  006B  00E9               	movwf	??_RTC_display
  2591  006C  0869               	movf	??_RTC_display,w
  2592  006D  00A1               	movwf	_month
  2593                           
  2594                           ;main_prueba3_mini2.c: 224:     year = bcd_to_decimal(year);
  2595  006E  0820               	movf	_year,w
  2596  006F  120A  158A  277D  120A  118A  	fcall	_bcd_to_decimal
  2597  0074  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0075  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0076  00E9               	movwf	??_RTC_display
  2600  0077  0869               	movf	??_RTC_display,w
  2601  0078  00A0               	movwf	_year
  2602                           
  2603                           ;main_prueba3_mini2.c: 228:     Time[6] = hour / 10 + '0';
  2604  0079  300A               	movlw	10
  2605  007A  00CE               	movwf	___awdiv@divisor
  2606  007B  3000               	movlw	0
  2607  007C  00CF               	movwf	___awdiv@divisor+1
  2608  007D  0823               	movf	_hour,w
  2609  007E  00E9               	movwf	??_RTC_display
  2610  007F  01EA               	clrf	??_RTC_display+1
  2611  0080  0869               	movf	??_RTC_display,w
  2612  0081  00D0               	movwf	___awdiv@dividend
  2613  0082  086A               	movf	??_RTC_display+1,w
  2614  0083  00D1               	movwf	___awdiv@dividend+1
  2615  0084  120A  118A  2506  120A  118A  	fcall	___awdiv
  2616  0089  1283               	bcf	3,5	;RP0=0, select bank0
  2617  008A  1303               	bcf	3,6	;RP1=0, select bank0
  2618  008B  084E               	movf	?___awdiv,w
  2619  008C  3E30               	addlw	48
  2620  008D  00EB               	movwf	??_RTC_display+2
  2621  008E  086B               	movf	??_RTC_display+2,w
  2622  008F  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0090  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0091  00D9               	movwf	(_Time^(0+128)+6)
  2625                           
  2626                           ;main_prueba3_mini2.c: 229:     Time[7] = hour % 10 + '0';
  2627  0092  300A               	movlw	10
  2628  0093  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0094  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0095  00CE               	movwf	___awmod@divisor
  2631  0096  3000               	movlw	0
  2632  0097  00CF               	movwf	___awmod@divisor+1
  2633  0098  0823               	movf	_hour,w
  2634  0099  00E9               	movwf	??_RTC_display
  2635  009A  01EA               	clrf	??_RTC_display+1
  2636  009B  0869               	movf	??_RTC_display,w
  2637  009C  00D0               	movwf	___awmod@dividend
  2638  009D  086A               	movf	??_RTC_display+1,w
  2639  009E  00D1               	movwf	___awmod@dividend+1
  2640  009F  120A  118A  25D7  120A  118A  	fcall	___awmod
  2641  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  2642  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  2643  00A6  084E               	movf	?___awmod,w
  2644  00A7  3E30               	addlw	48
  2645  00A8  00EB               	movwf	??_RTC_display+2
  2646  00A9  086B               	movf	??_RTC_display+2,w
  2647  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  2648  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  2649  00AC  00DA               	movwf	(_Time^(0+128)+7)
  2650                           
  2651                           ;main_prueba3_mini2.c: 230:     Time[9] = minute / 10 + '0';
  2652  00AD  300A               	movlw	10
  2653  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2654  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2655  00B0  00CE               	movwf	___awdiv@divisor
  2656  00B1  3000               	movlw	0
  2657  00B2  00CF               	movwf	___awdiv@divisor+1
  2658  00B3  0824               	movf	_minute,w
  2659  00B4  00E9               	movwf	??_RTC_display
  2660  00B5  01EA               	clrf	??_RTC_display+1
  2661  00B6  0869               	movf	??_RTC_display,w
  2662  00B7  00D0               	movwf	___awdiv@dividend
  2663  00B8  086A               	movf	??_RTC_display+1,w
  2664  00B9  00D1               	movwf	___awdiv@dividend+1
  2665  00BA  120A  118A  2506  120A  118A  	fcall	___awdiv
  2666  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  2667  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  2668  00C1  084E               	movf	?___awdiv,w
  2669  00C2  3E30               	addlw	48
  2670  00C3  00EB               	movwf	??_RTC_display+2
  2671  00C4  086B               	movf	??_RTC_display+2,w
  2672  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  2673  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  2674  00C7  00DC               	movwf	(_Time^(0+128)+9)
  2675                           
  2676                           ;main_prueba3_mini2.c: 231:     Time[10] = minute % 10 + '0';
  2677  00C8  300A               	movlw	10
  2678  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2679  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2680  00CB  00CE               	movwf	___awmod@divisor
  2681  00CC  3000               	movlw	0
  2682  00CD  00CF               	movwf	___awmod@divisor+1
  2683  00CE  0824               	movf	_minute,w
  2684  00CF  00E9               	movwf	??_RTC_display
  2685  00D0  01EA               	clrf	??_RTC_display+1
  2686  00D1  0869               	movf	??_RTC_display,w
  2687  00D2  00D0               	movwf	___awmod@dividend
  2688  00D3  086A               	movf	??_RTC_display+1,w
  2689  00D4  00D1               	movwf	___awmod@dividend+1
  2690  00D5  120A  118A  25D7  120A  118A  	fcall	___awmod
  2691  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2692  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2693  00DC  084E               	movf	?___awmod,w
  2694  00DD  3E30               	addlw	48
  2695  00DE  00EB               	movwf	??_RTC_display+2
  2696  00DF  086B               	movf	??_RTC_display+2,w
  2697  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  2698  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  2699  00E2  00DD               	movwf	(_Time^(0+128)+10)
  2700                           
  2701                           ;main_prueba3_mini2.c: 232:     Time[12] = second / 10 + '0';
  2702  00E3  300A               	movlw	10
  2703  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2704  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2705  00E6  00CE               	movwf	___awdiv@divisor
  2706  00E7  3000               	movlw	0
  2707  00E8  00CF               	movwf	___awdiv@divisor+1
  2708  00E9  0825               	movf	_second,w
  2709  00EA  00E9               	movwf	??_RTC_display
  2710  00EB  01EA               	clrf	??_RTC_display+1
  2711  00EC  0869               	movf	??_RTC_display,w
  2712  00ED  00D0               	movwf	___awdiv@dividend
  2713  00EE  086A               	movf	??_RTC_display+1,w
  2714  00EF  00D1               	movwf	___awdiv@dividend+1
  2715  00F0  120A  118A  2506  120A  118A  	fcall	___awdiv
  2716  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  2717  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  2718  00F7  084E               	movf	?___awdiv,w
  2719  00F8  3E30               	addlw	48
  2720  00F9  00EB               	movwf	??_RTC_display+2
  2721  00FA  086B               	movf	??_RTC_display+2,w
  2722  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  2723  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  2724  00FD  00DF               	movwf	(_Time^(0+128)+12)
  2725                           
  2726                           ;main_prueba3_mini2.c: 233:     Time[13] = second % 10 + '0';
  2727  00FE  300A               	movlw	10
  2728  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0101  00CE               	movwf	___awmod@divisor
  2731  0102  3000               	movlw	0
  2732  0103  00CF               	movwf	___awmod@divisor+1
  2733  0104  0825               	movf	_second,w
  2734  0105  00E9               	movwf	??_RTC_display
  2735  0106  01EA               	clrf	??_RTC_display+1
  2736  0107  0869               	movf	??_RTC_display,w
  2737  0108  00D0               	movwf	___awmod@dividend
  2738  0109  086A               	movf	??_RTC_display+1,w
  2739  010A  00D1               	movwf	___awmod@dividend+1
  2740  010B  120A  118A  25D7  120A  118A  	fcall	___awmod
  2741  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0112  084E               	movf	?___awmod,w
  2744  0113  3E30               	addlw	48
  2745  0114  00EB               	movwf	??_RTC_display+2
  2746  0115  086B               	movf	??_RTC_display+2,w
  2747  0116  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0117  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0118  00E0               	movwf	(_Time^(0+128)+13)
  2750                           
  2751                           ;main_prueba3_mini2.c: 236:     Date[6] = m_day / 10 + '0';
  2752  0119  300A               	movlw	10
  2753  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2754  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2755  011C  00CE               	movwf	___awdiv@divisor
  2756  011D  3000               	movlw	0
  2757  011E  00CF               	movwf	___awdiv@divisor+1
  2758  011F  0822               	movf	_m_day,w
  2759  0120  00E9               	movwf	??_RTC_display
  2760  0121  01EA               	clrf	??_RTC_display+1
  2761  0122  0869               	movf	??_RTC_display,w
  2762  0123  00D0               	movwf	___awdiv@dividend
  2763  0124  086A               	movf	??_RTC_display+1,w
  2764  0125  00D1               	movwf	___awdiv@dividend+1
  2765  0126  120A  118A  2506  120A  118A  	fcall	___awdiv
  2766  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2767  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2768  012D  084E               	movf	?___awdiv,w
  2769  012E  3E30               	addlw	48
  2770  012F  00EB               	movwf	??_RTC_display+2
  2771  0130  086B               	movf	??_RTC_display+2,w
  2772  0131  1683               	bsf	3,5	;RP0=1, select bank1
  2773  0132  1303               	bcf	3,6	;RP1=0, select bank1
  2774  0133  00CA               	movwf	(_Date^(0+128)+6)
  2775                           
  2776                           ;main_prueba3_mini2.c: 237:     Date[7] = m_day % 10 + '0';
  2777  0134  300A               	movlw	10
  2778  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0137  00CE               	movwf	___awmod@divisor
  2781  0138  3000               	movlw	0
  2782  0139  00CF               	movwf	___awmod@divisor+1
  2783  013A  0822               	movf	_m_day,w
  2784  013B  00E9               	movwf	??_RTC_display
  2785  013C  01EA               	clrf	??_RTC_display+1
  2786  013D  0869               	movf	??_RTC_display,w
  2787  013E  00D0               	movwf	___awmod@dividend
  2788  013F  086A               	movf	??_RTC_display+1,w
  2789  0140  00D1               	movwf	___awmod@dividend+1
  2790  0141  120A  118A  25D7  120A  118A  	fcall	___awmod
  2791  0146  1283               	bcf	3,5	;RP0=0, select bank0
  2792  0147  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0148  084E               	movf	?___awmod,w
  2794  0149  3E30               	addlw	48
  2795  014A  00EB               	movwf	??_RTC_display+2
  2796  014B  086B               	movf	??_RTC_display+2,w
  2797  014C  1683               	bsf	3,5	;RP0=1, select bank1
  2798  014D  1303               	bcf	3,6	;RP1=0, select bank1
  2799  014E  00CB               	movwf	(_Date^(0+128)+7)
  2800                           
  2801                           ;main_prueba3_mini2.c: 238:     Date[9] = month / 10 + '0';
  2802  014F  300A               	movlw	10
  2803  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0152  00CE               	movwf	___awdiv@divisor
  2806  0153  3000               	movlw	0
  2807  0154  00CF               	movwf	___awdiv@divisor+1
  2808  0155  0821               	movf	_month,w
  2809  0156  00E9               	movwf	??_RTC_display
  2810  0157  01EA               	clrf	??_RTC_display+1
  2811  0158  0869               	movf	??_RTC_display,w
  2812  0159  00D0               	movwf	___awdiv@dividend
  2813  015A  086A               	movf	??_RTC_display+1,w
  2814  015B  00D1               	movwf	___awdiv@dividend+1
  2815  015C  120A  118A  2506  120A  118A  	fcall	___awdiv
  2816  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0163  084E               	movf	?___awdiv,w
  2819  0164  3E30               	addlw	48
  2820  0165  00EB               	movwf	??_RTC_display+2
  2821  0166  086B               	movf	??_RTC_display+2,w
  2822  0167  1683               	bsf	3,5	;RP0=1, select bank1
  2823  0168  1303               	bcf	3,6	;RP1=0, select bank1
  2824  0169  00CD               	movwf	(_Date^(0+128)+9)
  2825                           
  2826                           ;main_prueba3_mini2.c: 239:     Date[10] = month % 10 + '0';
  2827  016A  300A               	movlw	10
  2828  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2829  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2830  016D  00CE               	movwf	___awmod@divisor
  2831  016E  3000               	movlw	0
  2832  016F  00CF               	movwf	___awmod@divisor+1
  2833  0170  0821               	movf	_month,w
  2834  0171  00E9               	movwf	??_RTC_display
  2835  0172  01EA               	clrf	??_RTC_display+1
  2836  0173  0869               	movf	??_RTC_display,w
  2837  0174  00D0               	movwf	___awmod@dividend
  2838  0175  086A               	movf	??_RTC_display+1,w
  2839  0176  00D1               	movwf	___awmod@dividend+1
  2840  0177  120A  118A  25D7  120A  118A  	fcall	___awmod
  2841  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2842  017D  1303               	bcf	3,6	;RP1=0, select bank0
  2843  017E  084E               	movf	?___awmod,w
  2844  017F  3E30               	addlw	48
  2845  0180  00EB               	movwf	??_RTC_display+2
  2846  0181  086B               	movf	??_RTC_display+2,w
  2847  0182  1683               	bsf	3,5	;RP0=1, select bank1
  2848  0183  1303               	bcf	3,6	;RP1=0, select bank1
  2849  0184  00CE               	movwf	(_Date^(0+128)+10)
  2850                           
  2851                           ;main_prueba3_mini2.c: 240:     Date[12] = year / 10 + '0';
  2852  0185  300A               	movlw	10
  2853  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0188  00CE               	movwf	___awdiv@divisor
  2856  0189  3000               	movlw	0
  2857  018A  00CF               	movwf	___awdiv@divisor+1
  2858  018B  0820               	movf	_year,w
  2859  018C  00E9               	movwf	??_RTC_display
  2860  018D  01EA               	clrf	??_RTC_display+1
  2861  018E  0869               	movf	??_RTC_display,w
  2862  018F  00D0               	movwf	___awdiv@dividend
  2863  0190  086A               	movf	??_RTC_display+1,w
  2864  0191  00D1               	movwf	___awdiv@dividend+1
  2865  0192  120A  118A  2506  120A  118A  	fcall	___awdiv
  2866  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0199  084E               	movf	?___awdiv,w
  2869  019A  3E30               	addlw	48
  2870  019B  00EB               	movwf	??_RTC_display+2
  2871  019C  086B               	movf	??_RTC_display+2,w
  2872  019D  1683               	bsf	3,5	;RP0=1, select bank1
  2873  019E  1303               	bcf	3,6	;RP1=0, select bank1
  2874  019F  00D0               	movwf	(_Date^(0+128)+12)
  2875                           
  2876                           ;main_prueba3_mini2.c: 241:     Date[13] = year % 10 + '0';
  2877  01A0  300A               	movlw	10
  2878  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2879  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2880  01A3  00CE               	movwf	___awmod@divisor
  2881  01A4  3000               	movlw	0
  2882  01A5  00CF               	movwf	___awmod@divisor+1
  2883  01A6  0820               	movf	_year,w
  2884  01A7  00E9               	movwf	??_RTC_display
  2885  01A8  01EA               	clrf	??_RTC_display+1
  2886  01A9  0869               	movf	??_RTC_display,w
  2887  01AA  00D0               	movwf	___awmod@dividend
  2888  01AB  086A               	movf	??_RTC_display+1,w
  2889  01AC  00D1               	movwf	___awmod@dividend+1
  2890  01AD  120A  118A  25D7  120A  118A  	fcall	___awmod
  2891  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2892  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2893  01B4  084E               	movf	?___awmod,w
  2894  01B5  3E30               	addlw	48
  2895  01B6  00EB               	movwf	??_RTC_display+2
  2896  01B7  086B               	movf	??_RTC_display+2,w
  2897  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2898  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2899  01BA  00D1               	movwf	(_Date^(0+128)+13)
  2900  01BB                     l2562:
  2901                           
  2902                           ;main_prueba3_mini2.c: 244:     sprintf(sec_send, "%d", second);
  2903  01BB  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2904  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2905  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2906  01BE  00E9               	movwf	??_RTC_display
  2907  01BF  0869               	movf	??_RTC_display,w
  2908  01C0  00DA               	movwf	sprintf@f
  2909  01C1  0825               	movf	_second,w
  2910  01C2  00EA               	movwf	??_RTC_display+1
  2911  01C3  01EB               	clrf	??_RTC_display+2
  2912  01C4  086A               	movf	??_RTC_display+1,w
  2913  01C5  00DB               	movwf	?_sprintf+1
  2914  01C6  086B               	movf	??_RTC_display+2,w
  2915  01C7  00DC               	movwf	?_sprintf+2
  2916  01C8  3046               	movlw	(low (_sec_send| 0))& (0+255)
  2917  01C9  120A  118A  222E  120A  118A  	fcall	_sprintf
  2918  01CE                     l2564:
  2919                           
  2920                           ;main_prueba3_mini2.c: 245:     sprintf(min_send, "%02d", minute);
  2921  01CE  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2922  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2923  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2924  01D1  00E9               	movwf	??_RTC_display
  2925  01D2  0869               	movf	??_RTC_display,w
  2926  01D3  00DA               	movwf	sprintf@f
  2927  01D4  0824               	movf	_minute,w
  2928  01D5  00EA               	movwf	??_RTC_display+1
  2929  01D6  01EB               	clrf	??_RTC_display+2
  2930  01D7  086A               	movf	??_RTC_display+1,w
  2931  01D8  00DB               	movwf	?_sprintf+1
  2932  01D9  086B               	movf	??_RTC_display+2,w
  2933  01DA  00DC               	movwf	?_sprintf+2
  2934  01DB  303E               	movlw	(low (_min_send| 0))& (0+255)
  2935  01DC  120A  118A  222E  120A  118A  	fcall	_sprintf
  2936  01E1                     l2566:
  2937                           
  2938                           ;main_prueba3_mini2.c: 246:     sprintf(hour_send, "%02d", hour);
  2939  01E1  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2940  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2941  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2942  01E4  00E9               	movwf	??_RTC_display
  2943  01E5  0869               	movf	??_RTC_display,w
  2944  01E6  00DA               	movwf	sprintf@f
  2945  01E7  0823               	movf	_hour,w
  2946  01E8  00EA               	movwf	??_RTC_display+1
  2947  01E9  01EB               	clrf	??_RTC_display+2
  2948  01EA  086A               	movf	??_RTC_display+1,w
  2949  01EB  00DB               	movwf	?_sprintf+1
  2950  01EC  086B               	movf	??_RTC_display+2,w
  2951  01ED  00DC               	movwf	?_sprintf+2
  2952  01EE  3036               	movlw	(low (_hour_send| 0))& (0+255)
  2953  01EF  120A  118A  222E  120A  118A  	fcall	_sprintf
  2954  01F4                     l2568:
  2955                           
  2956                           ;main_prueba3_mini2.c: 247:     sprintf(day_send, "%02d", m_day);
  2957  01F4  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2958  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2959  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2960  01F7  00E9               	movwf	??_RTC_display
  2961  01F8  0869               	movf	??_RTC_display,w
  2962  01F9  00DA               	movwf	sprintf@f
  2963  01FA  0822               	movf	_m_day,w
  2964  01FB  00EA               	movwf	??_RTC_display+1
  2965  01FC  01EB               	clrf	??_RTC_display+2
  2966  01FD  086A               	movf	??_RTC_display+1,w
  2967  01FE  00DB               	movwf	?_sprintf+1
  2968  01FF  086B               	movf	??_RTC_display+2,w
  2969  0200  00DC               	movwf	?_sprintf+2
  2970  0201  302E               	movlw	(low (_day_send| 0))& (0+255)
  2971  0202  120A  118A  222E  120A  118A  	fcall	_sprintf
  2972  0207                     l2570:
  2973                           
  2974                           ;main_prueba3_mini2.c: 248:     sprintf(month_send, "%02d", month);
  2975  0207  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2976  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2977  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2978  020A  00E9               	movwf	??_RTC_display
  2979  020B  0869               	movf	??_RTC_display,w
  2980  020C  00DA               	movwf	sprintf@f
  2981  020D  0821               	movf	_month,w
  2982  020E  00EA               	movwf	??_RTC_display+1
  2983  020F  01EB               	clrf	??_RTC_display+2
  2984  0210  086A               	movf	??_RTC_display+1,w
  2985  0211  00DB               	movwf	?_sprintf+1
  2986  0212  086B               	movf	??_RTC_display+2,w
  2987  0213  00DC               	movwf	?_sprintf+2
  2988  0214  3026               	movlw	(low (_month_send| 0))& (0+255)
  2989  0215  120A  118A  222E  120A  118A  	fcall	_sprintf
  2990  021A                     l2572:
  2991                           
  2992                           ;main_prueba3_mini2.c: 249:     sprintf(year_send, "%2d", year);
  2993  021A  3010               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2994  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2995  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2996  021D  00E9               	movwf	??_RTC_display
  2997  021E  0869               	movf	??_RTC_display,w
  2998  021F  00DA               	movwf	sprintf@f
  2999  0220  0820               	movf	_year,w
  3000  0221  00EA               	movwf	??_RTC_display+1
  3001  0222  01EB               	clrf	??_RTC_display+2
  3002  0223  086A               	movf	??_RTC_display+1,w
  3003  0224  00DB               	movwf	?_sprintf+1
  3004  0225  086B               	movf	??_RTC_display+2,w
  3005  0226  00DC               	movwf	?_sprintf+2
  3006  0227  30BC               	movlw	(low (_year_send| 0))& (0+255)
  3007  0228  120A  118A  222E  120A  118A  	fcall	_sprintf
  3008  022D                     l147:
  3009  022D  0008               	return
  3010  022E                     __end_of_RTC_display:
  3011                           
  3012                           	psect	text14
  3013  022E                     __ptext14:	
  3014 ;; *************** function _sprintf *****************
  3015 ;; Defined at:
  3016 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  sp              1    wreg     PTR unsigned char 
  3019 ;;		 -> year_send(8), month_send(8), day_send(8), hour_send(8), 
  3020 ;;		 -> min_send(8), sec_send(8), 
  3021 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  3022 ;;		 -> STR_6(4), STR_5(5), STR_4(5), STR_3(5), 
  3023 ;;		 -> STR_2(5), STR_1(3), 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  3026 ;;		 -> year_send(8), month_send(8), day_send(8), hour_send(8), 
  3027 ;;		 -> min_send(8), sec_send(8), 
  3028 ;;  tmpval          4    0        struct .
  3029 ;;  width           2   23[BANK0 ] int 
  3030 ;;  val             2   20[BANK0 ] unsigned int 
  3031 ;;  cp              2    0        PTR const unsigned char 
  3032 ;;  len             2    0        unsigned int 
  3033 ;;  c               1   25[BANK0 ] unsigned char 
  3034 ;;  flag            1   22[BANK0 ] unsigned char 
  3035 ;;  prec            1   19[BANK0 ] char 
  3036 ;;  ap              1   18[BANK0 ] PTR void [1]
  3037 ;;		 -> ?_sprintf(2), 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2   12[BANK0 ] int 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       3       0       0       0
  3048 ;;      Locals:         0       9       0       0       0
  3049 ;;      Temps:          0       3       0       0       0
  3050 ;;      Totals:         0      15       0       0       0
  3051 ;;Total ram usage:       15 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    3
  3054 ;; This function calls:
  3055 ;;		___lwdiv
  3056 ;;		___lwmod
  3057 ;;		___wmul
  3058 ;;		_isdigit
  3059 ;; This function is called by:
  3060 ;;		_RTC_display
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _sprintf
  3066  022E                     _sprintf:
  3067                           
  3068                           ;incstack = 0
  3069                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3070                           ;sprintf@sp stored from wreg
  3071  022E  1283               	bcf	3,5	;RP0=0, select bank0
  3072  022F  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0230  00E8               	movwf	sprintf@sp
  3074  0231                     l2296:
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  3077  0231  305B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3078  0232  00DD               	movwf	??_sprintf
  3079  0233  085D               	movf	??_sprintf,w
  3080  0234  00E0               	movwf	sprintf@ap
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3083  0235  2BEB               	goto	l2400
  3084  0236                     l2298:
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3087  0236  3025               	movlw	37
  3088  0237  0667               	xorwf	sprintf@c,w
  3089  0238  1903               	btfsc	3,2
  3090  0239  2A3B               	goto	u1991
  3091  023A  2A3C               	goto	u1990
  3092  023B                     u1991:
  3093  023B  2A48               	goto	l2304
  3094  023C                     u1990:
  3095  023C                     l2300:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3098  023C  0867               	movf	sprintf@c,w
  3099  023D  00DD               	movwf	??_sprintf
  3100  023E  0868               	movf	sprintf@sp,w
  3101  023F  0084               	movwf	4
  3102  0240  085D               	movf	??_sprintf,w
  3103  0241  1383               	bcf	3,7	;select IRP bank0
  3104  0242  0080               	movwf	0
  3105  0243                     l2302:
  3106  0243  3001               	movlw	1
  3107  0244  00DD               	movwf	??_sprintf
  3108  0245  085D               	movf	??_sprintf,w
  3109  0246  07E8               	addwf	sprintf@sp,f
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3112  0247  2BEB               	goto	l2400
  3113  0248                     l2304:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3116  0248  01E5               	clrf	sprintf@width
  3117  0249  01E6               	clrf	sprintf@width+1
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3120  024A  01E4               	clrf	sprintf@flag
  3121  024B  2A51               	goto	l2310
  3122  024C                     l420:	
  3123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  3124                           
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  3127  024C  1564               	bsf	sprintf@flag,2
  3128  024D                     l2306:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  3131  024D  3001               	movlw	1
  3132  024E  00DD               	movwf	??_sprintf
  3133  024F  085D               	movf	??_sprintf,w
  3134  0250  07DA               	addwf	sprintf@f,f
  3135  0251                     l2310:	
  3136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  3137                           
  3138  0251  085A               	movf	sprintf@f,w
  3139  0252  0084               	movwf	4
  3140  0253  120A  158A  2000  120A  118A  	fcall	stringdir
  3141  0258  00DD               	movwf	??_sprintf
  3142  0259  01DE               	clrf	??_sprintf+1
  3143                           
  3144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3145                           ; Switch size 1, requested type "simple"
  3146                           ; Number of cases is 1, Range of values is 0 to 0
  3147                           ; switch strategies available:
  3148                           ; Name         Instructions Cycles
  3149                           ; simple_byte            4     3 (average)
  3150                           ; direct_byte           11     8 (fixed)
  3151                           ; jumptable            260     6 (fixed)
  3152                           ;	Chosen strategy is simple_byte
  3153  025A  085E               	movf	??_sprintf+1,w
  3154  025B  3A00               	xorlw	0	; case 0
  3155  025C  1903               	skipnz
  3156  025D  2A5F               	goto	l2696
  3157  025E  2A64               	goto	l2312
  3158  025F                     l2696:
  3159                           
  3160                           ; Switch size 1, requested type "simple"
  3161                           ; Number of cases is 1, Range of values is 48 to 48
  3162                           ; switch strategies available:
  3163                           ; Name         Instructions Cycles
  3164                           ; simple_byte            4     3 (average)
  3165                           ; direct_byte           14    11 (fixed)
  3166                           ; jumptable            263     9 (fixed)
  3167                           ;	Chosen strategy is simple_byte
  3168  025F  085D               	movf	??_sprintf,w
  3169  0260  3A30               	xorlw	48	; case 48
  3170  0261  1903               	skipnz
  3171  0262  2A4C               	goto	l420
  3172  0263  2A64               	goto	l2312
  3173  0264                     l2312:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3176  0264  085A               	movf	sprintf@f,w
  3177  0265  0084               	movwf	4
  3178  0266  120A  158A  2000  120A  118A  	fcall	stringdir
  3179  026B  120A  158A  2754  120A  118A  	fcall	_isdigit
  3180  0270  1C03               	btfss	3,0
  3181  0271  2A73               	goto	u2001
  3182  0272  2A74               	goto	u2000
  3183  0273                     u2001:
  3184  0273  2AB4               	goto	l2326
  3185  0274                     u2000:
  3186  0274                     l2314:
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3189  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0276  01E5               	clrf	sprintf@width
  3192  0277  01E6               	clrf	sprintf@width+1
  3193  0278                     l2316:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3196  0278  300A               	movlw	10
  3197  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3198  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3199  027B  00CE               	movwf	___wmul@multiplier
  3200  027C  3000               	movlw	0
  3201  027D  00CF               	movwf	___wmul@multiplier+1
  3202  027E  0866               	movf	sprintf@width+1,w
  3203  027F  00D1               	movwf	___wmul@multiplicand+1
  3204  0280  0865               	movf	sprintf@width,w
  3205  0281  00D0               	movwf	___wmul@multiplicand
  3206  0282  120A  158A  27D9  120A  118A  	fcall	___wmul
  3207  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0289  084F               	movf	?___wmul+1,w
  3210  028A  00E6               	movwf	sprintf@width+1
  3211  028B  084E               	movf	?___wmul,w
  3212  028C  00E5               	movwf	sprintf@width
  3213  028D                     l2318:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3216  028D  085A               	movf	sprintf@f,w
  3217  028E  0084               	movwf	4
  3218  028F  120A  158A  2000  120A  118A  	fcall	stringdir
  3219  0294  3ED0               	addlw	208
  3220  0295  00DD               	movwf	??_sprintf
  3221  0296  30FF               	movlw	255
  3222  0297  1803               	skipnc
  3223  0298  3000               	movlw	0
  3224  0299  00DE               	movwf	??_sprintf+1
  3225  029A  085D               	movf	??_sprintf,w
  3226  029B  07E5               	addwf	sprintf@width,f
  3227  029C  1803               	skipnc
  3228  029D  0AE6               	incf	sprintf@width+1,f
  3229  029E  085E               	movf	??_sprintf+1,w
  3230  029F  07E6               	addwf	sprintf@width+1,f
  3231  02A0                     l2320:
  3232  02A0  3001               	movlw	1
  3233  02A1  00DD               	movwf	??_sprintf
  3234  02A2  085D               	movf	??_sprintf,w
  3235  02A3  07DA               	addwf	sprintf@f,f
  3236  02A4                     l2322:
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3239  02A4  085A               	movf	sprintf@f,w
  3240  02A5  0084               	movwf	4
  3241  02A6  120A  158A  2000  120A  118A  	fcall	stringdir
  3242  02AB  120A  158A  2754  120A  118A  	fcall	_isdigit
  3243  02B0  1803               	btfsc	3,0
  3244  02B1  2AB3               	goto	u2011
  3245  02B2  2AB4               	goto	u2010
  3246  02B3                     u2011:
  3247  02B3  2A78               	goto	l2316
  3248  02B4                     u2010:
  3249  02B4                     l2326:
  3250  02B4  3001               	movlw	1
  3251  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  3252  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  3253  02B7  07DA               	addwf	sprintf@f,f
  3254  02B8  30FF               	movlw	-1
  3255  02B9  075A               	addwf	sprintf@f,w
  3256  02BA  0084               	movwf	4
  3257  02BB  120A  158A  2000  120A  118A  	fcall	stringdir
  3258  02C0  00E7               	movwf	sprintf@c
  3259  02C1  00DD               	movwf	??_sprintf
  3260  02C2  01DE               	clrf	??_sprintf+1
  3261                           
  3262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3263                           ; Switch size 1, requested type "simple"
  3264                           ; Number of cases is 1, Range of values is 0 to 0
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte            4     3 (average)
  3268                           ; direct_byte           11     8 (fixed)
  3269                           ; jumptable            260     6 (fixed)
  3270                           ;	Chosen strategy is simple_byte
  3271  02C3  085E               	movf	??_sprintf+1,w
  3272  02C4  3A00               	xorlw	0	; case 0
  3273  02C5  1903               	skipnz
  3274  02C6  2AC8               	goto	l2698
  3275  02C7  2BEB               	goto	l2400
  3276  02C8                     l2698:
  3277                           
  3278                           ; Switch size 1, requested type "simple"
  3279                           ; Number of cases is 3, Range of values is 0 to 105
  3280                           ; switch strategies available:
  3281                           ; Name         Instructions Cycles
  3282                           ; simple_byte           10     6 (average)
  3283                           ; jumptable            260     6 (fixed)
  3284                           ;	Chosen strategy is simple_byte
  3285  02C8  085D               	movf	??_sprintf,w
  3286  02C9  3A00               	xorlw	0	; case 0
  3287  02CA  1903               	skipnz
  3288  02CB  2BFD               	goto	l2402
  3289  02CC  3A64               	xorlw	100	; case 100
  3290  02CD  1903               	skipnz
  3291  02CE  2AD3               	goto	l2328
  3292  02CF  3A0D               	xorlw	13	; case 105
  3293  02D0  1903               	skipnz
  3294  02D1  2AD3               	goto	l2328
  3295  02D2  2BEB               	goto	l2400
  3296  02D3                     l2328:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3299  02D3  0860               	movf	sprintf@ap,w
  3300  02D4  0084               	movwf	4
  3301  02D5  1383               	bcf	3,7	;select IRP bank0
  3302  02D6  0800               	movf	0,w
  3303  02D7  00E2               	movwf	sprintf@val
  3304  02D8  0A84               	incf	4,f
  3305  02D9  0800               	movf	0,w
  3306  02DA  00E3               	movwf	sprintf@val+1
  3307  02DB                     l2330:
  3308  02DB  3002               	movlw	2
  3309  02DC  00DD               	movwf	??_sprintf
  3310  02DD  085D               	movf	??_sprintf,w
  3311  02DE  07E0               	addwf	sprintf@ap,f
  3312  02DF                     l2332:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3315  02DF  1FE3               	btfss	sprintf@val+1,7
  3316  02E0  2AE2               	goto	u2021
  3317  02E1  2AE3               	goto	u2020
  3318  02E2                     u2021:
  3319  02E2  2AEC               	goto	l2338
  3320  02E3                     u2020:
  3321  02E3                     l2334:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3324  02E3  3003               	movlw	3
  3325  02E4  00DD               	movwf	??_sprintf
  3326  02E5  085D               	movf	??_sprintf,w
  3327  02E6  04E4               	iorwf	sprintf@flag,f
  3328  02E7                     l2336:
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3331  02E7  09E2               	comf	sprintf@val,f
  3332  02E8  09E3               	comf	sprintf@val+1,f
  3333  02E9  0AE2               	incf	sprintf@val,f
  3334  02EA  1903               	skipnz
  3335  02EB  0AE3               	incf	sprintf@val+1,f
  3336  02EC                     l2338:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3339  02EC  01E7               	clrf	sprintf@c
  3340  02ED  0AE7               	incf	sprintf@c,f
  3341  02EE                     l2344:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3344  02EE  0867               	movf	sprintf@c,w
  3345  02EF  00DD               	movwf	??_sprintf
  3346  02F0  075D               	addwf	??_sprintf,w
  3347  02F1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3348  02F2  0084               	movwf	4
  3349  02F3  120A  158A  2000  120A  118A  	fcall	stringdir
  3350  02F8  00DE               	movwf	??_sprintf+1
  3351  02F9  120A  158A  2000  120A  118A  	fcall	stringdir
  3352  02FE  00DF               	movwf	??_sprintf+2
  3353  02FF  085F               	movf	??_sprintf+2,w
  3354  0300  0263               	subwf	sprintf@val+1,w
  3355  0301  1D03               	skipz
  3356  0302  2B05               	goto	u2035
  3357  0303  085E               	movf	??_sprintf+1,w
  3358  0304  0262               	subwf	sprintf@val,w
  3359  0305                     u2035:
  3360  0305  1803               	skipnc
  3361  0306  2B08               	goto	u2031
  3362  0307  2B09               	goto	u2030
  3363  0308                     u2031:
  3364  0308  2B0A               	goto	l2348
  3365  0309                     u2030:
  3366  0309  2B14               	goto	l2350
  3367  030A                     l2348:
  3368  030A  3001               	movlw	1
  3369  030B  00DD               	movwf	??_sprintf
  3370  030C  085D               	movf	??_sprintf,w
  3371  030D  07E7               	addwf	sprintf@c,f
  3372  030E  3005               	movlw	5
  3373  030F  0667               	xorwf	sprintf@c,w
  3374  0310  1D03               	btfss	3,2
  3375  0311  2B13               	goto	u2041
  3376  0312  2B14               	goto	u2040
  3377  0313                     u2041:
  3378  0313  2AEE               	goto	l2344
  3379  0314                     u2040:
  3380  0314                     l2350:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3383  0314  0865               	movf	sprintf@width,w
  3384  0315  0466               	iorwf	sprintf@width+1,w
  3385  0316  1903               	btfsc	3,2
  3386  0317  2B19               	goto	u2051
  3387  0318  2B1A               	goto	u2050
  3388  0319                     u2051:
  3389  0319  2B26               	goto	l438
  3390  031A                     u2050:
  3391  031A                     l2352:
  3392  031A  0864               	movf	sprintf@flag,w
  3393  031B  3903               	andlw	3
  3394  031C  1903               	btfsc	3,2
  3395  031D  2B1F               	goto	u2061
  3396  031E  2B20               	goto	u2060
  3397  031F                     u2061:
  3398  031F  2B26               	goto	l438
  3399  0320                     u2060:
  3400  0320                     l2354:
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3403  0320  30FF               	movlw	255
  3404  0321  07E5               	addwf	sprintf@width,f
  3405  0322  1803               	skipnc
  3406  0323  0AE6               	incf	sprintf@width+1,f
  3407  0324  30FF               	movlw	255
  3408  0325  07E6               	addwf	sprintf@width+1,f
  3409  0326                     l438:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3412  0326  0866               	movf	sprintf@width+1,w
  3413  0327  3A80               	xorlw	128
  3414  0328  3C80               	sublw	128
  3415  0329  1D03               	skipz
  3416  032A  2B2D               	goto	u2075
  3417  032B  0865               	movf	sprintf@width,w
  3418  032C  0267               	subwf	sprintf@c,w
  3419  032D                     u2075:
  3420  032D  1803               	skipnc
  3421  032E  2B30               	goto	u2071
  3422  032F  2B31               	goto	u2070
  3423  0330                     u2071:
  3424  0330  2B3D               	goto	l2358
  3425  0331                     u2070:
  3426  0331                     l2356:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3429  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3430  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3431  0333  0867               	movf	sprintf@c,w
  3432  0334  00DD               	movwf	??_sprintf
  3433  0335  01DE               	clrf	??_sprintf+1
  3434  0336  085D               	movf	??_sprintf,w
  3435  0337  02E5               	subwf	sprintf@width,f
  3436  0338  085E               	movf	??_sprintf+1,w
  3437  0339  1C03               	skipc
  3438  033A  03E6               	decf	sprintf@width+1,f
  3439  033B  02E6               	subwf	sprintf@width+1,f
  3440  033C  2B41               	goto	l2360
  3441  033D                     l2358:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3444  033D  1283               	bcf	3,5	;RP0=0, select bank0
  3445  033E  1303               	bcf	3,6	;RP1=0, select bank0
  3446  033F  01E5               	clrf	sprintf@width
  3447  0340  01E6               	clrf	sprintf@width+1
  3448  0341                     l2360:
  3449                           
  3450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3451  0341  1D64               	btfss	sprintf@flag,2
  3452  0342  2B44               	goto	u2081
  3453  0343  2B45               	goto	u2080
  3454  0344                     u2081:
  3455  0344  2B74               	goto	l2376
  3456  0345                     u2080:
  3457  0345                     l2362:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  3460  0345  0864               	movf	sprintf@flag,w
  3461  0346  3903               	andlw	3
  3462  0347  1903               	btfsc	3,2
  3463  0348  2B4A               	goto	u2091
  3464  0349  2B4B               	goto	u2090
  3465  034A                     u2091:
  3466  034A  2B56               	goto	l2368
  3467  034B                     u2090:
  3468  034B                     l2364:
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  3471  034B  302D               	movlw	45
  3472  034C  00DD               	movwf	??_sprintf
  3473  034D  0868               	movf	sprintf@sp,w
  3474  034E  0084               	movwf	4
  3475  034F  085D               	movf	??_sprintf,w
  3476  0350  1383               	bcf	3,7	;select IRP bank0
  3477  0351  0080               	movwf	0
  3478  0352                     l2366:
  3479  0352  3001               	movlw	1
  3480  0353  00DD               	movwf	??_sprintf
  3481  0354  085D               	movf	??_sprintf,w
  3482  0355  07E8               	addwf	sprintf@sp,f
  3483  0356                     l2368:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3486  0356  0865               	movf	sprintf@width,w
  3487  0357  0466               	iorwf	sprintf@width+1,w
  3488  0358  1903               	btfsc	3,2
  3489  0359  2B5B               	goto	u2101
  3490  035A  2B5C               	goto	u2100
  3491  035B                     u2101:
  3492  035B  2BA2               	goto	l2390
  3493  035C                     u2100:
  3494  035C                     l2370:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3497  035C  3030               	movlw	48
  3498  035D  00DD               	movwf	??_sprintf
  3499  035E  0868               	movf	sprintf@sp,w
  3500  035F  0084               	movwf	4
  3501  0360  085D               	movf	??_sprintf,w
  3502  0361  1383               	bcf	3,7	;select IRP bank0
  3503  0362  0080               	movwf	0
  3504  0363                     l2372:
  3505  0363  3001               	movlw	1
  3506  0364  00DD               	movwf	??_sprintf
  3507  0365  085D               	movf	??_sprintf,w
  3508  0366  07E8               	addwf	sprintf@sp,f
  3509  0367                     l2374:
  3510  0367  30FF               	movlw	255
  3511  0368  07E5               	addwf	sprintf@width,f
  3512  0369  1803               	skipnc
  3513  036A  0AE6               	incf	sprintf@width+1,f
  3514  036B  30FF               	movlw	255
  3515  036C  07E6               	addwf	sprintf@width+1,f
  3516  036D  0865               	movf	sprintf@width,w
  3517  036E  0466               	iorwf	sprintf@width+1,w
  3518  036F  1D03               	btfss	3,2
  3519  0370  2B72               	goto	u2111
  3520  0371  2B73               	goto	u2110
  3521  0372                     u2111:
  3522  0372  2B5C               	goto	l2370
  3523  0373                     u2110:
  3524  0373  2BA2               	goto	l2390
  3525  0374                     l2376:
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3528  0374  0865               	movf	sprintf@width,w
  3529  0375  0466               	iorwf	sprintf@width+1,w
  3530  0376  1903               	btfsc	3,2
  3531  0377  2B79               	goto	u2121
  3532  0378  2B7A               	goto	u2120
  3533  0379                     u2121:
  3534  0379  2B91               	goto	l2384
  3535  037A                     u2120:
  3536  037A                     l2378:
  3537                           
  3538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3539  037A  3020               	movlw	32
  3540  037B  00DD               	movwf	??_sprintf
  3541  037C  0868               	movf	sprintf@sp,w
  3542  037D  0084               	movwf	4
  3543  037E  085D               	movf	??_sprintf,w
  3544  037F  1383               	bcf	3,7	;select IRP bank0
  3545  0380  0080               	movwf	0
  3546  0381                     l2380:
  3547  0381  3001               	movlw	1
  3548  0382  00DD               	movwf	??_sprintf
  3549  0383  085D               	movf	??_sprintf,w
  3550  0384  07E8               	addwf	sprintf@sp,f
  3551  0385                     l2382:
  3552  0385  30FF               	movlw	255
  3553  0386  07E5               	addwf	sprintf@width,f
  3554  0387  1803               	skipnc
  3555  0388  0AE6               	incf	sprintf@width+1,f
  3556  0389  30FF               	movlw	255
  3557  038A  07E6               	addwf	sprintf@width+1,f
  3558  038B  0865               	movf	sprintf@width,w
  3559  038C  0466               	iorwf	sprintf@width+1,w
  3560  038D  1D03               	btfss	3,2
  3561  038E  2B90               	goto	u2131
  3562  038F  2B91               	goto	u2130
  3563  0390                     u2131:
  3564  0390  2B7A               	goto	l2378
  3565  0391                     u2130:
  3566  0391                     l2384:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3569  0391  0864               	movf	sprintf@flag,w
  3570  0392  3903               	andlw	3
  3571  0393  1903               	btfsc	3,2
  3572  0394  2B96               	goto	u2141
  3573  0395  2B97               	goto	u2140
  3574  0396                     u2141:
  3575  0396  2BA2               	goto	l2390
  3576  0397                     u2140:
  3577  0397                     l2386:
  3578                           
  3579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3580  0397  302D               	movlw	45
  3581  0398  00DD               	movwf	??_sprintf
  3582  0399  0868               	movf	sprintf@sp,w
  3583  039A  0084               	movwf	4
  3584  039B  085D               	movf	??_sprintf,w
  3585  039C  1383               	bcf	3,7	;select IRP bank0
  3586  039D  0080               	movwf	0
  3587  039E                     l2388:
  3588  039E  3001               	movlw	1
  3589  039F  00DD               	movwf	??_sprintf
  3590  03A0  085D               	movf	??_sprintf,w
  3591  03A1  07E8               	addwf	sprintf@sp,f
  3592  03A2                     l2390:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3595  03A2  0867               	movf	sprintf@c,w
  3596  03A3  00DD               	movwf	??_sprintf
  3597  03A4  085D               	movf	??_sprintf,w
  3598  03A5  00E1               	movwf	sprintf@prec
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3601  03A6  2BE2               	goto	l2398
  3602  03A7                     l2392:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3605  03A7  300A               	movlw	10
  3606  03A8  00D5               	movwf	___lwmod@divisor
  3607  03A9  3000               	movlw	0
  3608  03AA  00D6               	movwf	___lwmod@divisor+1
  3609  03AB  0861               	movf	sprintf@prec,w
  3610  03AC  00DD               	movwf	??_sprintf
  3611  03AD  075D               	addwf	??_sprintf,w
  3612  03AE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3613  03AF  0084               	movwf	4
  3614  03B0  120A  158A  2000  120A  118A  	fcall	stringdir
  3615  03B5  00CE               	movwf	___lwdiv@divisor
  3616  03B6  120A  158A  2000  120A  118A  	fcall	stringdir
  3617  03BB  00CF               	movwf	___lwdiv@divisor+1
  3618  03BC  0863               	movf	sprintf@val+1,w
  3619  03BD  00D1               	movwf	___lwdiv@dividend+1
  3620  03BE  0862               	movf	sprintf@val,w
  3621  03BF  00D0               	movwf	___lwdiv@dividend
  3622  03C0  120A  118A  268C  120A  118A  	fcall	___lwdiv
  3623  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3624  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3625  03C7  084F               	movf	?___lwdiv+1,w
  3626  03C8  00D8               	movwf	___lwmod@dividend+1
  3627  03C9  084E               	movf	?___lwdiv,w
  3628  03CA  00D7               	movwf	___lwmod@dividend
  3629  03CB  120A  118A  2716  120A  118A  	fcall	___lwmod
  3630  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3631  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3632  03D2  0855               	movf	?___lwmod,w
  3633  03D3  3E30               	addlw	48
  3634  03D4  00DE               	movwf	??_sprintf+1
  3635  03D5  085E               	movf	??_sprintf+1,w
  3636  03D6  00E7               	movwf	sprintf@c
  3637  03D7                     l2394:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3640  03D7  0867               	movf	sprintf@c,w
  3641  03D8  00DD               	movwf	??_sprintf
  3642  03D9  0868               	movf	sprintf@sp,w
  3643  03DA  0084               	movwf	4
  3644  03DB  085D               	movf	??_sprintf,w
  3645  03DC  1383               	bcf	3,7	;select IRP bank0
  3646  03DD  0080               	movwf	0
  3647  03DE                     l2396:
  3648  03DE  3001               	movlw	1
  3649  03DF  00DD               	movwf	??_sprintf
  3650  03E0  085D               	movf	??_sprintf,w
  3651  03E1  07E8               	addwf	sprintf@sp,f
  3652  03E2                     l2398:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3655  03E2  30FF               	movlw	255
  3656  03E3  00DD               	movwf	??_sprintf
  3657  03E4  085D               	movf	??_sprintf,w
  3658  03E5  07E1               	addwf	sprintf@prec,f
  3659  03E6  0A61               	incf	sprintf@prec,w
  3660  03E7  1D03               	btfss	3,2
  3661  03E8  2BEA               	goto	u2151
  3662  03E9  2BEB               	goto	u2150
  3663  03EA                     u2151:
  3664  03EA  2BA7               	goto	l2392
  3665  03EB                     u2150:
  3666  03EB                     l2400:
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3669  03EB  3001               	movlw	1
  3670  03EC  07DA               	addwf	sprintf@f,f
  3671  03ED  30FF               	movlw	-1
  3672  03EE  075A               	addwf	sprintf@f,w
  3673  03EF  0084               	movwf	4
  3674  03F0  120A  158A  2000  120A  118A  	fcall	stringdir
  3675  03F5  00DD               	movwf	??_sprintf
  3676  03F6  085D               	movf	??_sprintf,w
  3677  03F7  00E7               	movwf	sprintf@c
  3678  03F8  0867               	movf	sprintf@c,w
  3679  03F9  1D03               	btfss	3,2
  3680  03FA  2BFC               	goto	u2161
  3681  03FB  2BFD               	goto	u2160
  3682  03FC                     u2161:
  3683  03FC  2A36               	goto	l2298
  3684  03FD                     u2160:
  3685  03FD                     l2402:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3688  03FD  0868               	movf	sprintf@sp,w
  3689  03FE  0084               	movwf	4
  3690  03FF  1383               	bcf	3,7	;select IRP bank0
  3691  0400  0180               	clrf	0
  3692  0401                     l455:
  3693  0401  0008               	return
  3694  0402                     __end_of_sprintf:
  3695                           
  3696                           	psect	text15
  3697  0F54                     __ptext15:	
  3698 ;; *************** function _isdigit *****************
  3699 ;; Defined at:
  3700 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  c               1    wreg     unsigned char 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  c               1    5[COMMON] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;		None               void
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3714 ;;      Params:         0       0       0       0       0
  3715 ;;      Locals:         2       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0
  3717 ;;      Totals:         2       0       0       0       0
  3718 ;;Total ram usage:        2 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    2
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_sprintf
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _isdigit
  3730  0F54                     _isdigit:
  3731                           
  3732                           ;incstack = 0
  3733                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3734                           ;isdigit@c stored from wreg
  3735  0F54  00F5               	movwf	isdigit@c
  3736  0F55                     l1652:
  3737  0F55  01F4               	clrf	_isdigit$1065
  3738  0F56                     l1654:
  3739  0F56  303A               	movlw	58
  3740  0F57  0275               	subwf	isdigit@c,w
  3741  0F58  1803               	skipnc
  3742  0F59  2F5B               	goto	u971
  3743  0F5A  2F5C               	goto	u970
  3744  0F5B                     u971:
  3745  0F5B  2F64               	goto	l1660
  3746  0F5C                     u970:
  3747  0F5C                     l1656:
  3748  0F5C  3030               	movlw	48
  3749  0F5D  0275               	subwf	isdigit@c,w
  3750  0F5E  1C03               	skipc
  3751  0F5F  2F61               	goto	u981
  3752  0F60  2F62               	goto	u980
  3753  0F61                     u981:
  3754  0F61  2F64               	goto	l1660
  3755  0F62                     u980:
  3756  0F62                     l1658:
  3757  0F62  01F4               	clrf	_isdigit$1065
  3758  0F63  0AF4               	incf	_isdigit$1065,f
  3759  0F64                     l1660:
  3760  0F64  0C74               	rrf	_isdigit$1065,w
  3761  0F65                     l912:
  3762  0F65  0008               	return
  3763  0F66                     __end_of_isdigit:
  3764                           
  3765                           	psect	text16
  3766  0FD9                     __ptext16:	
  3767 ;; *************** function ___wmul *****************
  3768 ;; Defined at:
  3769 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3772 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  product         2    4[COMMON] unsigned int 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    0[BANK0 ] unsigned int 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3784 ;;      Params:         0       4       0       0       0
  3785 ;;      Locals:         2       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0
  3787 ;;      Totals:         2       4       0       0       0
  3788 ;;Total ram usage:        6 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    2
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_sprintf
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function ___wmul
  3800  0FD9                     ___wmul:
  3801  0FD9                     l2198:	
  3802                           ;incstack = 0
  3803                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3804                           
  3805  0FD9  01F4               	clrf	___wmul@product
  3806  0FDA  01F5               	clrf	___wmul@product+1
  3807  0FDB                     l2200:
  3808  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  3810  0FDD  1C4E               	btfss	___wmul@multiplier,0
  3811  0FDE  2FE0               	goto	u1771
  3812  0FDF  2FE1               	goto	u1770
  3813  0FE0                     u1771:
  3814  0FE0  2FE7               	goto	l459
  3815  0FE1                     u1770:
  3816  0FE1                     l2202:
  3817  0FE1  0850               	movf	___wmul@multiplicand,w
  3818  0FE2  07F4               	addwf	___wmul@product,f
  3819  0FE3  1803               	skipnc
  3820  0FE4  0AF5               	incf	___wmul@product+1,f
  3821  0FE5  0851               	movf	___wmul@multiplicand+1,w
  3822  0FE6  07F5               	addwf	___wmul@product+1,f
  3823  0FE7                     l459:
  3824  0FE7  3001               	movlw	1
  3825  0FE8                     u1785:
  3826  0FE8  1003               	clrc
  3827  0FE9  0DD0               	rlf	___wmul@multiplicand,f
  3828  0FEA  0DD1               	rlf	___wmul@multiplicand+1,f
  3829  0FEB  3EFF               	addlw	-1
  3830  0FEC  1D03               	skipz
  3831  0FED  2FE8               	goto	u1785
  3832  0FEE                     l2204:
  3833  0FEE  3001               	movlw	1
  3834  0FEF                     u1795:
  3835  0FEF  1003               	clrc
  3836  0FF0  0CCF               	rrf	___wmul@multiplier+1,f
  3837  0FF1  0CCE               	rrf	___wmul@multiplier,f
  3838  0FF2  3EFF               	addlw	-1
  3839  0FF3  1D03               	skipz
  3840  0FF4  2FEF               	goto	u1795
  3841  0FF5                     l2206:
  3842  0FF5  084E               	movf	___wmul@multiplier,w
  3843  0FF6  044F               	iorwf	___wmul@multiplier+1,w
  3844  0FF7  1D03               	btfss	3,2
  3845  0FF8  2FFA               	goto	u1801
  3846  0FF9  2FFB               	goto	u1800
  3847  0FFA                     u1801:
  3848  0FFA  2FDB               	goto	l2200
  3849  0FFB                     u1800:
  3850  0FFB                     l2208:
  3851  0FFB  0875               	movf	___wmul@product+1,w
  3852  0FFC  00CF               	movwf	?___wmul+1
  3853  0FFD  0874               	movf	___wmul@product,w
  3854  0FFE  00CE               	movwf	?___wmul
  3855  0FFF                     l461:
  3856  0FFF  0008               	return
  3857  1000                     __end_of___wmul:
  3858                           
  3859                           	psect	text17
  3860  0716                     __ptext17:	
  3861 ;; *************** function ___lwmod *****************
  3862 ;; Defined at:
  3863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  divisor         2    7[BANK0 ] unsigned int 
  3866 ;;  dividend        2    9[BANK0 ] unsigned int 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  counter         1   11[BANK0 ] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  2    7[BANK0 ] unsigned int 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       4       0       0       0
  3879 ;;      Locals:         0       1       0       0       0
  3880 ;;      Temps:          1       0       0       0       0
  3881 ;;      Totals:         1       5       0       0       0
  3882 ;;Total ram usage:        6 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    2
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_sprintf
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           
  3893                           ;psect for function ___lwmod
  3894  0716                     ___lwmod:
  3895  0716                     l1742:	
  3896                           ;incstack = 0
  3897                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3898                           
  3899  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3900  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3901  0718  0855               	movf	___lwmod@divisor,w
  3902  0719  0456               	iorwf	___lwmod@divisor+1,w
  3903  071A  1903               	btfsc	3,2
  3904  071B  2F1D               	goto	u1191
  3905  071C  2F1E               	goto	u1190
  3906  071D                     u1191:
  3907  071D  2F4D               	goto	l1760
  3908  071E                     u1190:
  3909  071E                     l1744:
  3910  071E  01D9               	clrf	___lwmod@counter
  3911  071F  0AD9               	incf	___lwmod@counter,f
  3912  0720  2F2C               	goto	l1750
  3913  0721                     l1746:
  3914  0721  3001               	movlw	1
  3915  0722                     u1205:
  3916  0722  1003               	clrc
  3917  0723  0DD5               	rlf	___lwmod@divisor,f
  3918  0724  0DD6               	rlf	___lwmod@divisor+1,f
  3919  0725  3EFF               	addlw	-1
  3920  0726  1D03               	skipz
  3921  0727  2F22               	goto	u1205
  3922  0728                     l1748:
  3923  0728  3001               	movlw	1
  3924  0729  00F5               	movwf	??___lwmod
  3925  072A  0875               	movf	??___lwmod,w
  3926  072B  07D9               	addwf	___lwmod@counter,f
  3927  072C                     l1750:
  3928  072C  1FD6               	btfss	___lwmod@divisor+1,7
  3929  072D  2F2F               	goto	u1211
  3930  072E  2F30               	goto	u1210
  3931  072F                     u1211:
  3932  072F  2F21               	goto	l1746
  3933  0730                     u1210:
  3934  0730                     l1752:
  3935  0730  0856               	movf	___lwmod@divisor+1,w
  3936  0731  0258               	subwf	___lwmod@dividend+1,w
  3937  0732  1D03               	skipz
  3938  0733  2F36               	goto	u1225
  3939  0734  0855               	movf	___lwmod@divisor,w
  3940  0735  0257               	subwf	___lwmod@dividend,w
  3941  0736                     u1225:
  3942  0736  1C03               	skipc
  3943  0737  2F39               	goto	u1221
  3944  0738  2F3A               	goto	u1220
  3945  0739                     u1221:
  3946  0739  2F40               	goto	l1756
  3947  073A                     u1220:
  3948  073A                     l1754:
  3949  073A  0855               	movf	___lwmod@divisor,w
  3950  073B  02D7               	subwf	___lwmod@dividend,f
  3951  073C  0856               	movf	___lwmod@divisor+1,w
  3952  073D  1C03               	skipc
  3953  073E  03D8               	decf	___lwmod@dividend+1,f
  3954  073F  02D8               	subwf	___lwmod@dividend+1,f
  3955  0740                     l1756:
  3956  0740  3001               	movlw	1
  3957  0741                     u1235:
  3958  0741  1003               	clrc
  3959  0742  0CD6               	rrf	___lwmod@divisor+1,f
  3960  0743  0CD5               	rrf	___lwmod@divisor,f
  3961  0744  3EFF               	addlw	-1
  3962  0745  1D03               	skipz
  3963  0746  2F41               	goto	u1235
  3964  0747                     l1758:
  3965  0747  3001               	movlw	1
  3966  0748  02D9               	subwf	___lwmod@counter,f
  3967  0749  1D03               	btfss	3,2
  3968  074A  2F4C               	goto	u1241
  3969  074B  2F4D               	goto	u1240
  3970  074C                     u1241:
  3971  074C  2F30               	goto	l1752
  3972  074D                     u1240:
  3973  074D                     l1760:
  3974  074D  0858               	movf	___lwmod@dividend+1,w
  3975  074E  00D6               	movwf	?___lwmod+1
  3976  074F  0857               	movf	___lwmod@dividend,w
  3977  0750  00D5               	movwf	?___lwmod
  3978  0751                     l741:
  3979  0751  0008               	return
  3980  0752                     __end_of___lwmod:
  3981                           
  3982                           	psect	text18
  3983  068C                     __ptext18:	
  3984 ;; *************** function ___lwdiv *****************
  3985 ;; Defined at:
  3986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  divisor         2    0[BANK0 ] unsigned int 
  3989 ;;  dividend        2    2[BANK0 ] unsigned int 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  quotient        2    5[BANK0 ] unsigned int 
  3992 ;;  counter         1    4[BANK0 ] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2    0[BANK0 ] unsigned int 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         0       4       0       0       0
  4003 ;;      Locals:         0       3       0       0       0
  4004 ;;      Temps:          1       0       0       0       0
  4005 ;;      Totals:         1       7       0       0       0
  4006 ;;Total ram usage:        8 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    2
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_sprintf
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           
  4017                           ;psect for function ___lwdiv
  4018  068C                     ___lwdiv:
  4019  068C                     l2250:	
  4020                           ;incstack = 0
  4021                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4022                           
  4023  068C  1283               	bcf	3,5	;RP0=0, select bank0
  4024  068D  1303               	bcf	3,6	;RP1=0, select bank0
  4025  068E  01D3               	clrf	___lwdiv@quotient
  4026  068F  01D4               	clrf	___lwdiv@quotient+1
  4027  0690                     l2252:
  4028  0690  084E               	movf	___lwdiv@divisor,w
  4029  0691  044F               	iorwf	___lwdiv@divisor+1,w
  4030  0692  1903               	btfsc	3,2
  4031  0693  2E95               	goto	u1901
  4032  0694  2E96               	goto	u1900
  4033  0695                     u1901:
  4034  0695  2ECD               	goto	l2272
  4035  0696                     u1900:
  4036  0696                     l2254:
  4037  0696  01D2               	clrf	___lwdiv@counter
  4038  0697  0AD2               	incf	___lwdiv@counter,f
  4039  0698  2EA4               	goto	l2260
  4040  0699                     l2256:
  4041  0699  3001               	movlw	1
  4042  069A                     u1915:
  4043  069A  1003               	clrc
  4044  069B  0DCE               	rlf	___lwdiv@divisor,f
  4045  069C  0DCF               	rlf	___lwdiv@divisor+1,f
  4046  069D  3EFF               	addlw	-1
  4047  069E  1D03               	skipz
  4048  069F  2E9A               	goto	u1915
  4049  06A0                     l2258:
  4050  06A0  3001               	movlw	1
  4051  06A1  00F4               	movwf	??___lwdiv
  4052  06A2  0874               	movf	??___lwdiv,w
  4053  06A3  07D2               	addwf	___lwdiv@counter,f
  4054  06A4                     l2260:
  4055  06A4  1FCF               	btfss	___lwdiv@divisor+1,7
  4056  06A5  2EA7               	goto	u1921
  4057  06A6  2EA8               	goto	u1920
  4058  06A7                     u1921:
  4059  06A7  2E99               	goto	l2256
  4060  06A8                     u1920:
  4061  06A8                     l2262:
  4062  06A8  3001               	movlw	1
  4063  06A9                     u1935:
  4064  06A9  1003               	clrc
  4065  06AA  0DD3               	rlf	___lwdiv@quotient,f
  4066  06AB  0DD4               	rlf	___lwdiv@quotient+1,f
  4067  06AC  3EFF               	addlw	-1
  4068  06AD  1D03               	skipz
  4069  06AE  2EA9               	goto	u1935
  4070  06AF  084F               	movf	___lwdiv@divisor+1,w
  4071  06B0  0251               	subwf	___lwdiv@dividend+1,w
  4072  06B1  1D03               	skipz
  4073  06B2  2EB5               	goto	u1945
  4074  06B3  084E               	movf	___lwdiv@divisor,w
  4075  06B4  0250               	subwf	___lwdiv@dividend,w
  4076  06B5                     u1945:
  4077  06B5  1C03               	skipc
  4078  06B6  2EB8               	goto	u1941
  4079  06B7  2EB9               	goto	u1940
  4080  06B8                     u1941:
  4081  06B8  2EC0               	goto	l2268
  4082  06B9                     u1940:
  4083  06B9                     l2264:
  4084  06B9  084E               	movf	___lwdiv@divisor,w
  4085  06BA  02D0               	subwf	___lwdiv@dividend,f
  4086  06BB  084F               	movf	___lwdiv@divisor+1,w
  4087  06BC  1C03               	skipc
  4088  06BD  03D1               	decf	___lwdiv@dividend+1,f
  4089  06BE  02D1               	subwf	___lwdiv@dividend+1,f
  4090  06BF                     l2266:
  4091  06BF  1453               	bsf	___lwdiv@quotient,0
  4092  06C0                     l2268:
  4093  06C0  3001               	movlw	1
  4094  06C1                     u1955:
  4095  06C1  1003               	clrc
  4096  06C2  0CCF               	rrf	___lwdiv@divisor+1,f
  4097  06C3  0CCE               	rrf	___lwdiv@divisor,f
  4098  06C4  3EFF               	addlw	-1
  4099  06C5  1D03               	skipz
  4100  06C6  2EC1               	goto	u1955
  4101  06C7                     l2270:
  4102  06C7  3001               	movlw	1
  4103  06C8  02D2               	subwf	___lwdiv@counter,f
  4104  06C9  1D03               	btfss	3,2
  4105  06CA  2ECC               	goto	u1961
  4106  06CB  2ECD               	goto	u1960
  4107  06CC                     u1961:
  4108  06CC  2EA8               	goto	l2262
  4109  06CD                     u1960:
  4110  06CD                     l2272:
  4111  06CD  0854               	movf	___lwdiv@quotient+1,w
  4112  06CE  00CF               	movwf	?___lwdiv+1
  4113  06CF  0853               	movf	___lwdiv@quotient,w
  4114  06D0  00CE               	movwf	?___lwdiv
  4115  06D1                     l731:
  4116  06D1  0008               	return
  4117  06D2                     __end_of___lwdiv:
  4118                           
  4119                           	psect	text19
  4120  0F7D                     __ptext19:	
  4121 ;; *************** function _bcd_to_decimal *****************
  4122 ;; Defined at:
  4123 ;;		line 208 in file "main_prueba3_mini2.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  number          1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  number          1    5[BANK0 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0, pclath, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4137 ;;      Params:         0       0       0       0       0
  4138 ;;      Locals:         0       1       0       0       0
  4139 ;;      Temps:          0       3       0       0       0
  4140 ;;      Totals:         0       4       0       0       0
  4141 ;;Total ram usage:        4 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    3
  4144 ;; This function calls:
  4145 ;;		___bmul
  4146 ;; This function is called by:
  4147 ;;		_RTC_display
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           
  4152                           ;psect for function _bcd_to_decimal
  4153  0F7D                     _bcd_to_decimal:
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  4157                           ;bcd_to_decimal@number stored from wreg
  4158  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0F7F  00D3               	movwf	bcd_to_decimal@number
  4161  0F80                     l2292:
  4162                           
  4163                           ;main_prueba3_mini2.c: 209:   return((number >> 4) * 10 + (number & 0x0F));
  4164  0F80  300F               	movlw	15
  4165  0F81  0553               	andwf	bcd_to_decimal@number,w
  4166  0F82  00D0               	movwf	??_bcd_to_decimal
  4167  0F83  300A               	movlw	10
  4168  0F84  00D1               	movwf	??_bcd_to_decimal+1
  4169  0F85  0851               	movf	??_bcd_to_decimal+1,w
  4170  0F86  00F4               	movwf	___bmul@multiplicand
  4171  0F87  0853               	movf	bcd_to_decimal@number,w
  4172  0F88  00D2               	movwf	??_bcd_to_decimal+2
  4173  0F89  3004               	movlw	4
  4174  0F8A                     u1985:
  4175  0F8A  1003               	clrc
  4176  0F8B  0CD2               	rrf	??_bcd_to_decimal+2,f
  4177  0F8C  3EFF               	addlw	-1
  4178  0F8D  1D03               	skipz
  4179  0F8E  2F8A               	goto	u1985
  4180  0F8F  0852               	movf	??_bcd_to_decimal+2,w
  4181  0F90  120A  158A  2766  120A  158A  	fcall	___bmul
  4182  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4183  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4184  0F97  0750               	addwf	??_bcd_to_decimal,w
  4185  0F98                     l141:
  4186  0F98  0008               	return
  4187  0F99                     __end_of_bcd_to_decimal:
  4188                           
  4189                           	psect	text20
  4190  0F66                     __ptext20:	
  4191 ;; *************** function ___bmul *****************
  4192 ;; Defined at:
  4193 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  multiplier      1    wreg     unsigned char 
  4196 ;;  multiplicand    1    4[COMMON] unsigned char 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  multiplier      1    1[BANK0 ] unsigned char 
  4199 ;;  product         1    0[BANK0 ] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      unsigned char 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4209 ;;      Params:         1       0       0       0       0
  4210 ;;      Locals:         0       2       0       0       0
  4211 ;;      Temps:          1       0       0       0       0
  4212 ;;      Totals:         2       2       0       0       0
  4213 ;;Total ram usage:        4 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    2
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_bcd_to_decimal
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function ___bmul
  4225  0F66                     ___bmul:
  4226                           
  4227                           ;incstack = 0
  4228                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4229                           ;___bmul@multiplier stored from wreg
  4230  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4231  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4232  0F68  00CF               	movwf	___bmul@multiplier
  4233  0F69                     l2212:
  4234  0F69  01CE               	clrf	___bmul@product
  4235  0F6A                     l2214:
  4236  0F6A  1C4F               	btfss	___bmul@multiplier,0
  4237  0F6B  2F6D               	goto	u1811
  4238  0F6C  2F6E               	goto	u1810
  4239  0F6D                     u1811:
  4240  0F6D  2F72               	goto	l2218
  4241  0F6E                     u1810:
  4242  0F6E                     l2216:
  4243  0F6E  0874               	movf	___bmul@multiplicand,w
  4244  0F6F  00F5               	movwf	??___bmul
  4245  0F70  0875               	movf	??___bmul,w
  4246  0F71  07CE               	addwf	___bmul@product,f
  4247  0F72                     l2218:
  4248  0F72  1003               	clrc
  4249  0F73  0DF4               	rlf	___bmul@multiplicand,f
  4250  0F74                     l2220:
  4251  0F74  1003               	clrc
  4252  0F75  0CCF               	rrf	___bmul@multiplier,f
  4253  0F76  084F               	movf	___bmul@multiplier,w
  4254  0F77  1D03               	btfss	3,2
  4255  0F78  2F7A               	goto	u1821
  4256  0F79  2F7B               	goto	u1820
  4257  0F7A                     u1821:
  4258  0F7A  2F6A               	goto	l2214
  4259  0F7B                     u1820:
  4260  0F7B                     l2222:
  4261  0F7B  084E               	movf	___bmul@product,w
  4262  0F7C                     l485:
  4263  0F7C  0008               	return
  4264  0F7D                     __end_of___bmul:
  4265                           
  4266                           	psect	text21
  4267  05D7                     __ptext21:	
  4268 ;; *************** function ___awmod *****************
  4269 ;; Defined at:
  4270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  divisor         2    0[BANK0 ] int 
  4273 ;;  dividend        2    2[BANK0 ] int 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  sign            1    5[BANK0 ] unsigned char 
  4276 ;;  counter         1    4[BANK0 ] unsigned char 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  2    0[BANK0 ] int 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4286 ;;      Params:         0       4       0       0       0
  4287 ;;      Locals:         0       2       0       0       0
  4288 ;;      Temps:          1       0       0       0       0
  4289 ;;      Totals:         1       6       0       0       0
  4290 ;;Total ram usage:        7 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    2
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_RTC_display
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function ___awmod
  4302  05D7                     ___awmod:
  4303  05D7                     l2470:	
  4304                           ;incstack = 0
  4305                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4306                           
  4307  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  4308  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  4309  05D9  01D3               	clrf	___awmod@sign
  4310  05DA                     l2472:
  4311  05DA  1FD1               	btfss	___awmod@dividend+1,7
  4312  05DB  2DDD               	goto	u2281
  4313  05DC  2DDE               	goto	u2280
  4314  05DD                     u2281:
  4315  05DD  2DE5               	goto	l2478
  4316  05DE                     u2280:
  4317  05DE                     l2474:
  4318  05DE  09D0               	comf	___awmod@dividend,f
  4319  05DF  09D1               	comf	___awmod@dividend+1,f
  4320  05E0  0AD0               	incf	___awmod@dividend,f
  4321  05E1  1903               	skipnz
  4322  05E2  0AD1               	incf	___awmod@dividend+1,f
  4323  05E3                     l2476:
  4324  05E3  01D3               	clrf	___awmod@sign
  4325  05E4  0AD3               	incf	___awmod@sign,f
  4326  05E5                     l2478:
  4327  05E5  1FCF               	btfss	___awmod@divisor+1,7
  4328  05E6  2DE8               	goto	u2291
  4329  05E7  2DE9               	goto	u2290
  4330  05E8                     u2291:
  4331  05E8  2DEE               	goto	l2482
  4332  05E9                     u2290:
  4333  05E9                     l2480:
  4334  05E9  09CE               	comf	___awmod@divisor,f
  4335  05EA  09CF               	comf	___awmod@divisor+1,f
  4336  05EB  0ACE               	incf	___awmod@divisor,f
  4337  05EC  1903               	skipnz
  4338  05ED  0ACF               	incf	___awmod@divisor+1,f
  4339  05EE                     l2482:
  4340  05EE  084E               	movf	___awmod@divisor,w
  4341  05EF  044F               	iorwf	___awmod@divisor+1,w
  4342  05F0  1903               	btfsc	3,2
  4343  05F1  2DF3               	goto	u2301
  4344  05F2  2DF4               	goto	u2300
  4345  05F3                     u2301:
  4346  05F3  2E23               	goto	l2500
  4347  05F4                     u2300:
  4348  05F4                     l2484:
  4349  05F4  01D2               	clrf	___awmod@counter
  4350  05F5  0AD2               	incf	___awmod@counter,f
  4351  05F6  2E02               	goto	l2490
  4352  05F7                     l2486:
  4353  05F7  3001               	movlw	1
  4354  05F8                     u2315:
  4355  05F8  1003               	clrc
  4356  05F9  0DCE               	rlf	___awmod@divisor,f
  4357  05FA  0DCF               	rlf	___awmod@divisor+1,f
  4358  05FB  3EFF               	addlw	-1
  4359  05FC  1D03               	skipz
  4360  05FD  2DF8               	goto	u2315
  4361  05FE                     l2488:
  4362  05FE  3001               	movlw	1
  4363  05FF  00F4               	movwf	??___awmod
  4364  0600  0874               	movf	??___awmod,w
  4365  0601  07D2               	addwf	___awmod@counter,f
  4366  0602                     l2490:
  4367  0602  1FCF               	btfss	___awmod@divisor+1,7
  4368  0603  2E05               	goto	u2321
  4369  0604  2E06               	goto	u2320
  4370  0605                     u2321:
  4371  0605  2DF7               	goto	l2486
  4372  0606                     u2320:
  4373  0606                     l2492:
  4374  0606  084F               	movf	___awmod@divisor+1,w
  4375  0607  0251               	subwf	___awmod@dividend+1,w
  4376  0608  1D03               	skipz
  4377  0609  2E0C               	goto	u2335
  4378  060A  084E               	movf	___awmod@divisor,w
  4379  060B  0250               	subwf	___awmod@dividend,w
  4380  060C                     u2335:
  4381  060C  1C03               	skipc
  4382  060D  2E0F               	goto	u2331
  4383  060E  2E10               	goto	u2330
  4384  060F                     u2331:
  4385  060F  2E16               	goto	l2496
  4386  0610                     u2330:
  4387  0610                     l2494:
  4388  0610  084E               	movf	___awmod@divisor,w
  4389  0611  02D0               	subwf	___awmod@dividend,f
  4390  0612  084F               	movf	___awmod@divisor+1,w
  4391  0613  1C03               	skipc
  4392  0614  03D1               	decf	___awmod@dividend+1,f
  4393  0615  02D1               	subwf	___awmod@dividend+1,f
  4394  0616                     l2496:
  4395  0616  3001               	movlw	1
  4396  0617                     u2345:
  4397  0617  1003               	clrc
  4398  0618  0CCF               	rrf	___awmod@divisor+1,f
  4399  0619  0CCE               	rrf	___awmod@divisor,f
  4400  061A  3EFF               	addlw	-1
  4401  061B  1D03               	skipz
  4402  061C  2E17               	goto	u2345
  4403  061D                     l2498:
  4404  061D  3001               	movlw	1
  4405  061E  02D2               	subwf	___awmod@counter,f
  4406  061F  1D03               	btfss	3,2
  4407  0620  2E22               	goto	u2351
  4408  0621  2E23               	goto	u2350
  4409  0622                     u2351:
  4410  0622  2E06               	goto	l2492
  4411  0623                     u2350:
  4412  0623                     l2500:
  4413  0623  0853               	movf	___awmod@sign,w
  4414  0624  1903               	btfsc	3,2
  4415  0625  2E27               	goto	u2361
  4416  0626  2E28               	goto	u2360
  4417  0627                     u2361:
  4418  0627  2E2D               	goto	l2504
  4419  0628                     u2360:
  4420  0628                     l2502:
  4421  0628  09D0               	comf	___awmod@dividend,f
  4422  0629  09D1               	comf	___awmod@dividend+1,f
  4423  062A  0AD0               	incf	___awmod@dividend,f
  4424  062B  1903               	skipnz
  4425  062C  0AD1               	incf	___awmod@dividend+1,f
  4426  062D                     l2504:
  4427  062D  0851               	movf	___awmod@dividend+1,w
  4428  062E  00CF               	movwf	?___awmod+1
  4429  062F  0850               	movf	___awmod@dividend,w
  4430  0630  00CE               	movwf	?___awmod
  4431  0631                     l625:
  4432  0631  0008               	return
  4433  0632                     __end_of___awmod:
  4434                           
  4435                           	psect	text22
  4436  0506                     __ptext22:	
  4437 ;; *************** function ___awdiv *****************
  4438 ;; Defined at:
  4439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  divisor         2    0[BANK0 ] int 
  4442 ;;  dividend        2    2[BANK0 ] int 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  quotient        2    6[BANK0 ] int 
  4445 ;;  sign            1    5[BANK0 ] unsigned char 
  4446 ;;  counter         1    4[BANK0 ] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  2    0[BANK0 ] int 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         0       4       0       0       0
  4457 ;;      Locals:         0       4       0       0       0
  4458 ;;      Temps:          1       0       0       0       0
  4459 ;;      Totals:         1       8       0       0       0
  4460 ;;Total ram usage:        9 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    2
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_RTC_display
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           
  4471                           ;psect for function ___awdiv
  4472  0506                     ___awdiv:
  4473  0506                     l2426:	
  4474                           ;incstack = 0
  4475                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4476                           
  4477  0506  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0507  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0508  01D3               	clrf	___awdiv@sign
  4480  0509                     l2428:
  4481  0509  1FCF               	btfss	___awdiv@divisor+1,7
  4482  050A  2D0C               	goto	u2181
  4483  050B  2D0D               	goto	u2180
  4484  050C                     u2181:
  4485  050C  2D14               	goto	l2434
  4486  050D                     u2180:
  4487  050D                     l2430:
  4488  050D  09CE               	comf	___awdiv@divisor,f
  4489  050E  09CF               	comf	___awdiv@divisor+1,f
  4490  050F  0ACE               	incf	___awdiv@divisor,f
  4491  0510  1903               	skipnz
  4492  0511  0ACF               	incf	___awdiv@divisor+1,f
  4493  0512                     l2432:
  4494  0512  01D3               	clrf	___awdiv@sign
  4495  0513  0AD3               	incf	___awdiv@sign,f
  4496  0514                     l2434:
  4497  0514  1FD1               	btfss	___awdiv@dividend+1,7
  4498  0515  2D17               	goto	u2191
  4499  0516  2D18               	goto	u2190
  4500  0517                     u2191:
  4501  0517  2D21               	goto	l2440
  4502  0518                     u2190:
  4503  0518                     l2436:
  4504  0518  09D0               	comf	___awdiv@dividend,f
  4505  0519  09D1               	comf	___awdiv@dividend+1,f
  4506  051A  0AD0               	incf	___awdiv@dividend,f
  4507  051B  1903               	skipnz
  4508  051C  0AD1               	incf	___awdiv@dividend+1,f
  4509  051D                     l2438:
  4510  051D  3001               	movlw	1
  4511  051E  00F4               	movwf	??___awdiv
  4512  051F  0874               	movf	??___awdiv,w
  4513  0520  06D3               	xorwf	___awdiv@sign,f
  4514  0521                     l2440:
  4515  0521  01D4               	clrf	___awdiv@quotient
  4516  0522  01D5               	clrf	___awdiv@quotient+1
  4517  0523                     l2442:
  4518  0523  084E               	movf	___awdiv@divisor,w
  4519  0524  044F               	iorwf	___awdiv@divisor+1,w
  4520  0525  1903               	btfsc	3,2
  4521  0526  2D28               	goto	u2201
  4522  0527  2D29               	goto	u2200
  4523  0528                     u2201:
  4524  0528  2D60               	goto	l2462
  4525  0529                     u2200:
  4526  0529                     l2444:
  4527  0529  01D2               	clrf	___awdiv@counter
  4528  052A  0AD2               	incf	___awdiv@counter,f
  4529  052B  2D37               	goto	l2450
  4530  052C                     l2446:
  4531  052C  3001               	movlw	1
  4532  052D                     u2215:
  4533  052D  1003               	clrc
  4534  052E  0DCE               	rlf	___awdiv@divisor,f
  4535  052F  0DCF               	rlf	___awdiv@divisor+1,f
  4536  0530  3EFF               	addlw	-1
  4537  0531  1D03               	skipz
  4538  0532  2D2D               	goto	u2215
  4539  0533                     l2448:
  4540  0533  3001               	movlw	1
  4541  0534  00F4               	movwf	??___awdiv
  4542  0535  0874               	movf	??___awdiv,w
  4543  0536  07D2               	addwf	___awdiv@counter,f
  4544  0537                     l2450:
  4545  0537  1FCF               	btfss	___awdiv@divisor+1,7
  4546  0538  2D3A               	goto	u2221
  4547  0539  2D3B               	goto	u2220
  4548  053A                     u2221:
  4549  053A  2D2C               	goto	l2446
  4550  053B                     u2220:
  4551  053B                     l2452:
  4552  053B  3001               	movlw	1
  4553  053C                     u2235:
  4554  053C  1003               	clrc
  4555  053D  0DD4               	rlf	___awdiv@quotient,f
  4556  053E  0DD5               	rlf	___awdiv@quotient+1,f
  4557  053F  3EFF               	addlw	-1
  4558  0540  1D03               	skipz
  4559  0541  2D3C               	goto	u2235
  4560  0542  084F               	movf	___awdiv@divisor+1,w
  4561  0543  0251               	subwf	___awdiv@dividend+1,w
  4562  0544  1D03               	skipz
  4563  0545  2D48               	goto	u2245
  4564  0546  084E               	movf	___awdiv@divisor,w
  4565  0547  0250               	subwf	___awdiv@dividend,w
  4566  0548                     u2245:
  4567  0548  1C03               	skipc
  4568  0549  2D4B               	goto	u2241
  4569  054A  2D4C               	goto	u2240
  4570  054B                     u2241:
  4571  054B  2D53               	goto	l2458
  4572  054C                     u2240:
  4573  054C                     l2454:
  4574  054C  084E               	movf	___awdiv@divisor,w
  4575  054D  02D0               	subwf	___awdiv@dividend,f
  4576  054E  084F               	movf	___awdiv@divisor+1,w
  4577  054F  1C03               	skipc
  4578  0550  03D1               	decf	___awdiv@dividend+1,f
  4579  0551  02D1               	subwf	___awdiv@dividend+1,f
  4580  0552                     l2456:
  4581  0552  1454               	bsf	___awdiv@quotient,0
  4582  0553                     l2458:
  4583  0553  3001               	movlw	1
  4584  0554                     u2255:
  4585  0554  1003               	clrc
  4586  0555  0CCF               	rrf	___awdiv@divisor+1,f
  4587  0556  0CCE               	rrf	___awdiv@divisor,f
  4588  0557  3EFF               	addlw	-1
  4589  0558  1D03               	skipz
  4590  0559  2D54               	goto	u2255
  4591  055A                     l2460:
  4592  055A  3001               	movlw	1
  4593  055B  02D2               	subwf	___awdiv@counter,f
  4594  055C  1D03               	btfss	3,2
  4595  055D  2D5F               	goto	u2261
  4596  055E  2D60               	goto	u2260
  4597  055F                     u2261:
  4598  055F  2D3B               	goto	l2452
  4599  0560                     u2260:
  4600  0560                     l2462:
  4601  0560  0853               	movf	___awdiv@sign,w
  4602  0561  1903               	btfsc	3,2
  4603  0562  2D64               	goto	u2271
  4604  0563  2D65               	goto	u2270
  4605  0564                     u2271:
  4606  0564  2D6A               	goto	l2466
  4607  0565                     u2270:
  4608  0565                     l2464:
  4609  0565  09D4               	comf	___awdiv@quotient,f
  4610  0566  09D5               	comf	___awdiv@quotient+1,f
  4611  0567  0AD4               	incf	___awdiv@quotient,f
  4612  0568  1903               	skipnz
  4613  0569  0AD5               	incf	___awdiv@quotient+1,f
  4614  056A                     l2466:
  4615  056A  0855               	movf	___awdiv@quotient+1,w
  4616  056B  00CF               	movwf	?___awdiv+1
  4617  056C  0854               	movf	___awdiv@quotient,w
  4618  056D  00CE               	movwf	?___awdiv
  4619  056E                     l612:
  4620  056E  0008               	return
  4621  056F                     __end_of___awdiv:
  4622                           
  4623                           	psect	text23
  4624  0F0A                     __ptext23:	
  4625 ;; *************** function _I2C_Master_RepeatedStart *****************
  4626 ;; Defined at:
  4627 ;;		line 64 in file "I2C.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0, pclath, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4641 ;;      Params:         0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    3
  4648 ;; This function calls:
  4649 ;;		_I2C_Master_Wait
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function _I2C_Master_RepeatedStart
  4657  0F0A                     _I2C_Master_RepeatedStart:
  4658  0F0A                     l2540:	
  4659                           ;incstack = 0
  4660                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4661                           
  4662                           
  4663                           ;I2C.c: 66:     I2C_Master_Wait();
  4664  0F0A  120A  158A  2747  120A  158A  	fcall	_I2C_Master_Wait
  4665  0F0F                     l2542:
  4666                           
  4667                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  4668  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  4669  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  4670  0F11  1491               	bsf	17,1	;volatile
  4671  0F12                     l194:
  4672  0F12  0008               	return
  4673  0F13                     __end_of_I2C_Master_RepeatedStart:
  4674                           
  4675                           	psect	text24
  4676  07BD                     __ptext24:	
  4677 ;; *************** function _I2C_Master_Read *****************
  4678 ;; Defined at:
  4679 ;;		line 94 in file "I2C.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  a               2    4[COMMON] unsigned short 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  temp            2    2[BANK0 ] unsigned short 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  2    4[COMMON] unsigned short 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2, status,0, pclath, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4693 ;;      Params:         2       0       0       0       0
  4694 ;;      Locals:         0       2       0       0       0
  4695 ;;      Temps:          0       2       0       0       0
  4696 ;;      Totals:         2       4       0       0       0
  4697 ;;Total ram usage:        6 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    3
  4700 ;; This function calls:
  4701 ;;		_I2C_Master_Wait
  4702 ;; This function is called by:
  4703 ;;		_main
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           
  4708                           ;psect for function _I2C_Master_Read
  4709  07BD                     _I2C_Master_Read:
  4710  07BD                     l2544:	
  4711                           ;incstack = 0
  4712                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4713                           
  4714                           
  4715                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  4716  07BD  120A  158A  2747  120A  118A  	fcall	_I2C_Master_Wait
  4717  07C2                     l2546:
  4718                           
  4719                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  4720  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  4721  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  4722  07C4  1591               	bsf	17,3	;volatile
  4723                           
  4724                           ;I2C.c: 99:     I2C_Master_Wait();
  4725  07C5  120A  158A  2747  120A  118A  	fcall	_I2C_Master_Wait
  4726  07CA                     l2548:
  4727                           
  4728                           ;I2C.c: 100:     temp = SSPBUF;
  4729  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  4730  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  4731  07CC  0813               	movf	19,w	;volatile
  4732  07CD  00CE               	movwf	??_I2C_Master_Read
  4733  07CE  01CF               	clrf	??_I2C_Master_Read+1
  4734  07CF  084E               	movf	??_I2C_Master_Read,w
  4735  07D0  00D0               	movwf	I2C_Master_Read@temp
  4736  07D1  084F               	movf	??_I2C_Master_Read+1,w
  4737  07D2  00D1               	movwf	I2C_Master_Read@temp+1
  4738  07D3                     l2550:
  4739                           
  4740                           ;I2C.c: 101:     I2C_Master_Wait();
  4741  07D3  120A  158A  2747  120A  118A  	fcall	_I2C_Master_Wait
  4742  07D8                     l2552:
  4743                           
  4744                           ;I2C.c: 102:     if(a == 1){
  4745  07D8  0374               	decf	I2C_Master_Read@a,w
  4746  07D9  0475               	iorwf	I2C_Master_Read@a+1,w
  4747  07DA  1D03               	btfss	3,2
  4748  07DB  2FDD               	goto	u2371
  4749  07DC  2FDE               	goto	u2370
  4750  07DD                     u2371:
  4751  07DD  2FE2               	goto	l203
  4752  07DE                     u2370:
  4753  07DE                     l2554:
  4754                           
  4755                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  4756  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  4757  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  4758  07E0  1291               	bcf	17,5	;volatile
  4759                           
  4760                           ;I2C.c: 104:     }else{
  4761  07E1  2FE5               	goto	l204
  4762  07E2                     l203:
  4763                           
  4764                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  4765  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  4766  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  4767  07E4  1691               	bsf	17,5	;volatile
  4768  07E5                     l204:	
  4769                           ;I2C.c: 106:     }
  4770                           
  4771                           
  4772                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  4773  07E5  1611               	bsf	17,4	;volatile
  4774  07E6                     l2556:
  4775                           
  4776                           ;I2C.c: 108:     return temp;
  4777  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  4778  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  4779  07E8  0851               	movf	I2C_Master_Read@temp+1,w
  4780  07E9  00F5               	movwf	?_I2C_Master_Read+1
  4781  07EA  0850               	movf	I2C_Master_Read@temp,w
  4782  07EB  00F4               	movwf	?_I2C_Master_Read
  4783  07EC                     l205:
  4784  07EC  0008               	return
  4785  07ED                     __end_of_I2C_Master_Read:
  4786                           
  4787                           	psect	text25
  4788  0F47                     __ptext25:	
  4789 ;; *************** function _I2C_Master_Wait *****************
  4790 ;; Defined at:
  4791 ;;		line 48 in file "I2C.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4805 ;;      Params:         0       0       0       0       0
  4806 ;;      Locals:         0       0       0       0       0
  4807 ;;      Temps:          0       0       0       0       0
  4808 ;;      Totals:         0       0       0       0       0
  4809 ;;Total ram usage:        0 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    2
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_I2C_Master_Start
  4816 ;;		_I2C_Master_RepeatedStart
  4817 ;;		_I2C_Master_Stop
  4818 ;;		_I2C_Master_Write
  4819 ;;		_I2C_Master_Read
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           
  4824                           ;psect for function _I2C_Master_Wait
  4825  0F47                     _I2C_Master_Wait:
  4826  0F47                     l2194:	
  4827                           ;incstack = 0
  4828                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4829                           
  4830  0F47                     l185:	
  4831                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4832                           
  4833  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  4834  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  4835  0F49  1914               	btfsc	20,2	;volatile
  4836  0F4A  2F4C               	goto	u1751
  4837  0F4B  2F4D               	goto	u1750
  4838  0F4C                     u1751:
  4839  0F4C  2F47               	goto	l185
  4840  0F4D                     u1750:
  4841  0F4D                     l2196:
  4842  0F4D  0811               	movf	17,w	;volatile
  4843  0F4E  391F               	andlw	31
  4844  0F4F  1D03               	btfss	3,2
  4845  0F50  2F52               	goto	u1761
  4846  0F51  2F53               	goto	u1760
  4847  0F52                     u1761:
  4848  0F52  2F47               	goto	l185
  4849  0F53                     u1760:
  4850  0F53                     l188:
  4851  0F53  0008               	return
  4852  0F54                     __end_of_I2C_Master_Wait:
  4853                           
  4854                           	psect	text26
  4855  06D2                     __ptext26:	
  4856 ;; *************** function _ISR *****************
  4857 ;; Defined at:
  4858 ;;		line 97 in file "main_prueba3_mini2.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0
  4874 ;;      Temps:          4       0       0       0       0
  4875 ;;      Totals:         4       0       0       0       0
  4876 ;;Total ram usage:        4 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    1
  4879 ;; This function calls:
  4880 ;;		_Read_USART
  4881 ;; This function is called by:
  4882 ;;		Interrupt level 1
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function _ISR
  4888  06D2                     _ISR:
  4889  06D2                     i1l1446:
  4890                           
  4891                           ;main_prueba3_mini2.c: 98:     if(PIR1bits.RCIF == 1){
  4892  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  4893  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  4894  06D4  1E8C               	btfss	12,5	;volatile
  4895  06D5  2ED7               	goto	u78_21
  4896  06D6  2ED8               	goto	u78_20
  4897  06D7                     u78_21:
  4898  06D7  2F0F               	goto	i1l115
  4899  06D8                     u78_20:
  4900  06D8                     i1l1448:
  4901                           
  4902                           ;main_prueba3_mini2.c: 99:         data_recive = Read_USART();
  4903  06D8  120A  158A  26FA  120A  118A  	fcall	_Read_USART
  4904  06DD  00F0               	movwf	??_ISR
  4905  06DE  01F1               	clrf	??_ISR+1
  4906  06DF  0870               	movf	??_ISR,w
  4907  06E0  00F6               	movwf	_data_recive
  4908  06E1  0871               	movf	??_ISR+1,w
  4909  06E2  00F7               	movwf	_data_recive+1
  4910  06E3                     i1l1450:
  4911                           
  4912                           ;main_prueba3_mini2.c: 100:         if (data_recive == 1){
  4913  06E3  0376               	decf	_data_recive,w
  4914  06E4  0477               	iorwf	_data_recive+1,w
  4915  06E5  1D03               	btfss	3,2
  4916  06E6  2EE8               	goto	u79_21
  4917  06E7  2EE9               	goto	u79_20
  4918  06E8                     u79_21:
  4919  06E8  2EED               	goto	i1l1454
  4920  06E9                     u79_20:
  4921  06E9                     i1l1452:
  4922                           
  4923                           ;main_prueba3_mini2.c: 101:             PORTAbits.RA6 = 1;
  4924  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  4925  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  4926  06EB  1705               	bsf	5,6	;volatile
  4927                           
  4928                           ;main_prueba3_mini2.c: 102:         }
  4929  06EC  2F0D               	goto	i1l1466
  4930  06ED                     i1l1454:
  4931  06ED  0876               	movf	_data_recive,w
  4932  06EE  0477               	iorwf	_data_recive+1,w
  4933  06EF  1D03               	btfss	3,2
  4934  06F0  2EF2               	goto	u80_21
  4935  06F1  2EF3               	goto	u80_20
  4936  06F2                     u80_21:
  4937  06F2  2EF7               	goto	i1l1458
  4938  06F3                     u80_20:
  4939  06F3                     i1l1456:
  4940                           
  4941                           ;main_prueba3_mini2.c: 104:             PORTAbits.RA6 = 0;
  4942  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4943  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4944  06F5  1305               	bcf	5,6	;volatile
  4945                           
  4946                           ;main_prueba3_mini2.c: 105:         }
  4947  06F6  2F0D               	goto	i1l1466
  4948  06F7                     i1l1458:
  4949  06F7  3003               	movlw	3
  4950  06F8  0676               	xorwf	_data_recive,w
  4951  06F9  0477               	iorwf	_data_recive+1,w
  4952  06FA  1D03               	btfss	3,2
  4953  06FB  2EFD               	goto	u81_21
  4954  06FC  2EFE               	goto	u81_20
  4955  06FD                     u81_21:
  4956  06FD  2F02               	goto	i1l1462
  4957  06FE                     u81_20:
  4958  06FE                     i1l1460:
  4959                           
  4960                           ;main_prueba3_mini2.c: 107:             PORTAbits.RA7 = 1;
  4961  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  4962  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0700  1785               	bsf	5,7	;volatile
  4964                           
  4965                           ;main_prueba3_mini2.c: 108:         }
  4966  0701  2F0D               	goto	i1l1466
  4967  0702                     i1l1462:
  4968  0702  3002               	movlw	2
  4969  0703  0676               	xorwf	_data_recive,w
  4970  0704  0477               	iorwf	_data_recive+1,w
  4971  0705  1D03               	btfss	3,2
  4972  0706  2F08               	goto	u82_21
  4973  0707  2F09               	goto	u82_20
  4974  0708                     u82_21:
  4975  0708  2F0D               	goto	i1l111
  4976  0709                     u82_20:
  4977  0709                     i1l1464:
  4978                           
  4979                           ;main_prueba3_mini2.c: 110:             PORTAbits.RA7 = 0;
  4980  0709  1283               	bcf	3,5	;RP0=0, select bank0
  4981  070A  1303               	bcf	3,6	;RP1=0, select bank0
  4982  070B  1385               	bcf	5,7	;volatile
  4983  070C  2F0D               	goto	i1l1466
  4984  070D                     i1l111:
  4985  070D                     i1l1466:
  4986                           
  4987                           ;main_prueba3_mini2.c: 112:         data_recive = 0;
  4988  070D  01F6               	clrf	_data_recive
  4989  070E  01F7               	clrf	_data_recive+1
  4990  070F                     i1l115:
  4991  070F  0873               	movf	??_ISR+3,w
  4992  0710  008A               	movwf	10
  4993  0711  0E72               	swapf	??_ISR+2,w
  4994  0712  0083               	movwf	3
  4995  0713  0EFE               	swapf	btemp,f
  4996  0714  0E7E               	swapf	btemp,w
  4997  0715  0009               	retfie
  4998  0716                     __end_of_ISR:
  4999                           
  5000                           	psect	intentry
  5001  0004                     __pintentry:	
  5002                           ;incstack = 0
  5003                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  5004                           
  5005  0004                     interrupt_function:
  5006  007E                     saved_w	set	btemp
  5007  0004  00FE               	movwf	btemp
  5008  0005  0E03               	swapf	3,w
  5009  0006  00F2               	movwf	??_ISR+2
  5010  0007  080A               	movf	10,w
  5011  0008  00F3               	movwf	??_ISR+3
  5012  0009  120A  118A  2ED2   	ljmp	_ISR
  5013                           
  5014                           	psect	text27
  5015  0EFA                     __ptext27:	
  5016 ;; *************** function _Read_USART *****************
  5017 ;; Defined at:
  5018 ;;		line 43 in file "USART.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      unsigned char 
  5025 ;; Registers used:
  5026 ;;		wreg
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5032 ;;      Params:         0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_ISR
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function _Read_USART
  5047  0EFA                     _Read_USART:
  5048  0EFA                     i1l1330:	
  5049                           ;incstack = 0
  5050                           ; Regs used in _Read_USART: [wreg]
  5051                           
  5052  0EFA                     i1l319:	
  5053                           ;USART.c: 44:   while(!RCIF);
  5054                           
  5055  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0EFC  1E8C               	btfss	12,5	;volatile
  5058  0EFD  2EFF               	goto	u71_21
  5059  0EFE  2F00               	goto	u71_20
  5060  0EFF                     u71_21:
  5061  0EFF  2EFA               	goto	i1l319
  5062  0F00                     u71_20:
  5063  0F00                     i1l1332:
  5064                           
  5065                           ;USART.c: 45:   return RCREG;
  5066  0F00  081A               	movf	26,w	;volatile
  5067  0F01                     i1l322:
  5068  0F01  0008               	return
  5069  0F02                     __end_of_Read_USART:
  5070  007E                     btemp	set	126	;btemp
  5071  007E                     wtemp0	set	126
  5072                           
  5073                           	psect	config
  5074                           
  5075                           ;Config register CONFIG1 @ 0x2007
  5076                           ;	Oscillator Selection bits
  5077                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5078                           ;	Watchdog Timer Enable bit
  5079                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5080                           ;	Power-up Timer Enable bit
  5081                           ;	PWRTE = OFF, PWRT disabled
  5082                           ;	RE3/MCLR pin function select bit
  5083                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5084                           ;	Code Protection bit
  5085                           ;	CP = OFF, Program memory code protection is disabled
  5086                           ;	Data Code Protection bit
  5087                           ;	CPD = OFF, Data memory code protection is disabled
  5088                           ;	Brown Out Reset Selection bits
  5089                           ;	BOREN = OFF, BOR disabled
  5090                           ;	Internal External Switchover bit
  5091                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5092                           ;	Fail-Safe Clock Monitor Enabled bit
  5093                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5094                           ;	Low Voltage Programming Enable bit
  5095                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5096                           ;	In-Circuit Debugger Mode bit
  5097                           ;	DEBUG = 0x1, unprogrammed default
  5098  2007                     	org	8199
  5099  2007  20D4               	dw	8404
  5100                           
  5101                           ;Config register CONFIG2 @ 0x2008
  5102                           ;	Brown-out Reset Selection bit
  5103                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  5104                           ;	Flash Program Memory Self Write Enable bits
  5105                           ;	WRT = OFF, Write protection off
  5106  2008                     	org	8200
  5107  2008  3EFF               	dw	16127

Data Sizes:
    Strings     12
    Constant    10
    Data        30
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     33      79
    BANK1            80      0      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> year_send(BANK1[8]), month_send(BANK0[8]), day_send(BANK0[8]), hour_send(BANK0[8]), 
		 -> min_send(BANK0[8]), sec_send(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 8
		 -> sec_send(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _main->_I2C_Master_Write
    _main->_Write_USART_String
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _sprintf->___lwmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _bcd_to_decimal->___bmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_RTC_display
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _bcd_to_decimal->___bmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10489
                                             30 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                        _RTC_display
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     197
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    6802
                                             27 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    3196
                                             12 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     288
                                              2 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1665
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (5) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _RTC_display
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      42       7       82.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9B      12        0.0%
ABS                  0      0      9B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 07:09:28 2021

                                _i 0079                                  pc 0002  
                   ___bmul@product 004E                       ___awdiv@sign 0053  
                               fsr 0004                ___wmul@multiplicand 0050  
             __size_of_Write_USART 000C                   ?_USART_INTERRUPT 0070  
                      _RTC_display 0035                                l200 0F2E  
                              l130 04E1                                l203 07E2  
                              l204 07E5                                l205 07EC  
                              l141 0F98                                l301 0EF9  
                              l310 0F3A                                l150 068B  
                              l304 0EF3                                l153 07BC  
                              l147 022D                                l307 0F30  
                              l420 024C                                l316 0FD8  
                              l182 078B                                l191 0F1B  
                              l185 0F47                                l194 0F12  
                              l188 0F53                                l612 056E  
                              l461 0FFF                                l197 0F24  
                              l438 0326                                l455 0401  
                              l625 0631                                l298 0F46  
                              l731 06D1                                l459 0FE7  
                              l485 0F7C                                l741 0751  
                              l495 05D6                                l912 0F65  
                              _GIE 005F                                _ISR 06D2  
                              u970 0F5C                                u971 0F5B  
                              u980 0F62                                u981 0F61  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0053        __size_of_Write_USART_String 0022  
                             ?_ISR 0070                               l2200 0FDB  
                             l2202 0FE1                               l2220 0F74  
                             l2212 0F69                               l2204 0FEE  
                             l2300 023C                               l2222 0F7B  
                             l2214 0F6A                               l2206 0FF5  
                             l2310 0251                               l2302 0243  
                             l2230 0584                               l2216 0F6E  
                             l2208 0FFB                               l2320 02A0  
                             l2312 0264                               l2304 0248  
                             l2400 03EB                               l2240 05BE  
                             l2232 0591                               l2218 0F72  
                             l2250 068C                               l2330 02DB  
                             l2402 03FD                               l2322 02A4  
                             l2314 0274                               l2306 024D  
                             l2242 05BF                               l2234 0595  
                             l2226 056F                               l2500 0623  
                             l2260 06A4                               l2252 0690  
                             l2332 02DF                               l2316 0278  
                             l2244 05C8                               l2236 059E  
                             l2228 0581                               l2420 0788  
                             l2430 050D                               l2502 0628  
                             l2270 06C7                               l2262 06A8  
                             l2254 0696                               l2350 0314  
                             l2334 02E3                               l2318 028D  
                             l2326 02B4                               l2238 05B0  
                             l2246 05CE                               l2422 0789  
                             l2414 0752                               l2510 0793  
                             l2440 0521                               l2432 0512  
                             l2504 062D                               l2264 06B9  
                             l2256 0699                               l2272 06CD  
                             l2360 0341                               l2352 031A  
                             l2344 02EE                               l2336 02E7  
                             l2328 02D3                               l2280 0F25  
                             l2424 078A                               l2416 0756  
                             l2520 0799                               l2512 0795  
                             l2600 0442                               l2194 0F47  
                             l2450 0537                               l2442 0523  
                             l2434 0514                               l2426 0506  
                             l2266 06BF                               l2258 06A0  
                             l2370 035C                               l2362 0345  
                             l2354 0320                               l2338 02EC  
                             l2290 0F36                               l2282 0F2A  
                             l2418 0759                               l2530 07A0  
                             l2522 079C                               l2514 0796  
                             l2610 0487                               l2602 0451  
                             l2196 0F4D                               l2540 0F0A  
                             l2460 055A                               l2452 053B  
                             l2444 0529                               l2436 0518  
                             l2428 0509                               l2292 0F80  
                             l2268 06C0                               l1660 0F64  
                             l1652 0F55                               l2380 0381  
                             l2372 0363                               l2364 034B  
                             l2356 0331                               l2348 030A  
                             l2276 0F13                               l2284 0F1C  
                             l2532 07AD                               l2524 079D  
                             l2516 0797                               l2508 078C  
                             l2620 04A9                               l2612 0495  
                             l2604 0460                               l2550 07D3  
                             l2542 0F0F                               l2454 054C  
                             l2446 052C                               l2462 0560  
                             l2438 051D                               l2470 05D7  
                             l1750 072C                               l1742 0716  
                             l2198 0FD9                               l1654 0F56  
                             l2382 0385                               l2374 0367  
                             l2390 03A2                               l2366 0352  
                             l2358 033D                               l2278 0F18  
                             l2286 0F21                               l2534 07B2  
                             l2526 079E                               l2518 0798  
                             l2630 04BF                               l2622 04AF  
                             l2614 049A                               l2606 0469  
                             l2552 07D8                               l2544 07BD  
                             l2464 0565                               l2456 0552  
                             l2448 0533                               l2480 05E9  
                             l2472 05DA                               l1752 0730  
                             l1744 071E                               l1760 074D  
                             l1656 0F5C                               l2392 03A7  
                             l2384 0391                               l2368 0356  
                             l2376 0374                               l2296 0231  
                             l2560 0035                               l2288 0F30  
                             l1920 0F45                               l2536 07B7  
                             l2528 079F                               l2640 04D1  
                             l2632 04C1                               l2624 04B1  
                             l2616 049F                               l2608 0478  
                             l2554 07DE                               l2546 07C2  
                             l2466 056A                               l2458 0553  
                             l2490 0602                               l2482 05EE  
                             l2474 05DE                               l1754 073A  
                             l1746 0721                               l1658 0F62  
                             l2394 03D7                               l2386 0397  
                             l2378 037A                               l2298 0236  
                             l2570 0207                               l2562 01BB  
                             l2538 0632                               l1922 0EEE  
                             l1914 0EF4                               l2650 04E7  
                             l2642 04D7                               l2634 04C7  
                             l2626 04B7                               l2618 04A7  
                             l2556 07E6                               l2548 07CA  
                             l2492 0606                               l2484 05F4  
                             l2476 05E3                               l1756 0740  
                             l1748 0728                               l2396 03DE  
                             l2388 039E                               l2572 021A  
                             l2564 01CE                               l2580 0FCD  
                             l1916 0EF7                               l2652 04ED  
                             l2644 04D9                               l2636 04C9  
                             l2628 04B9                               l2494 0610  
                             l2486 05F7                               l2478 05E5  
                             l1758 0747                               l2398 03E2  
                             l2566 01E1                               l2574 0FBA  
                             l1918 0F3B                               l2654 04F3  
                             l2646 04DF                               l2638 04CF  
                             l2590 0414                               l2582 0402  
                             l2496 0616                               l2488 05FE  
                             l2568 01F4                               l2576 0FBC  
                             l2648 04E1                               l2592 041D  
                             l2584 0407                               l2498 061D  
                             l2578 0FC7                               l2594 0425  
                             l2586 040A                               l2596 042A  
                             l2588 040F                               l2598 0433  
                             l2696 025F                               l2698 02C8  
                             STR_1 0819                               STR_2 0810  
                             STR_3 0810                               STR_4 0810  
                             STR_5 0810                               STR_6 0815  
                             u2000 0274                               u2001 0273  
                             u1210 0730                               u2010 02B4  
                             u1211 072F                               u2011 02B3  
                             u1220 073A                               u2100 035C  
                             u2020 02E3                               u1221 0739  
                             u1205 0722                               u2101 035B  
                             u2021 02E2                               u2110 0373  
                             u2030 0309                               u2111 0372  
                             u2031 0308                               u2200 0529  
                             u1240 074D                               u2120 037A  
                             u2040 0314                               u2201 0528  
                             u1241 074C                               u1225 0736  
                             u2121 0379                               u2041 0313  
                             u2130 0391                               u2050 031A  
                             u1235 0741                               u2131 0390  
                             u2051 0319                               u2035 0305  
                             u2220 053B                               u2300 05F4  
                             u2140 0397                               u2060 0320  
                             u2221 053A                               u2301 05F3  
                             u2141 0396                               u2061 031F  
                             u1190 071E                               u2150 03EB  
                             u2070 0331                               u2215 052D  
                             u1191 071D                               u2151 03EA  
                             u2071 0330                               u2240 054C  
                             u2320 0606                               u2160 03FD  
                             u2080 0345                               u2400 04AF  
                             u2241 054B                               u2321 0605  
                             u2161 03FC                               u2081 0344  
                             u2401 04AE                               u2330 0610  
                             u2090 034B                               u2170 0769  
                             u2410 04B7                               u2235 053C  
                             u2331 060F                               u2315 05F8  
                             u2091 034A                               u2075 032D  
                             u2411 04B6                               u2260 0560  
                             u2180 050D                               u2420 04BF  
                             u2261 055F                               u2245 0548  
                             u2181 050C                               u2421 04BE  
                             u2270 0565                               u2190 0518  
                             u2350 0623                               u2430 04C7  
                             u2271 0564                               u2255 0554  
                             u2191 0517                               u2351 0622  
                             u2335 060C                               u2175 0764  
                             u2431 04C6                               u2360 0628  
                             u2280 05DE                               u1800 0FFB  
                             u2440 04CF                               u2361 0627  
                             u2345 0617                               u2281 05DD  
                             u1801 0FFA                               u2441 04CE  
                             u2370 07DE                               u2290 05E9  
                             u1810 0F6E                               u2450 04D7  
                             u2371 07DD                               u2291 05E8  
                             u1811 0F6D                               u2451 04D6  
                             u1820 0F7B                               u1900 0696  
                             u2380 0FD8                               u2460 04DF  
                             u1821 0F7A                               u1901 0695  
                             u2381 0FD7                               u2461 04DE  
                             u1750 0F4D                               u1830 0581  
                             u2390 04A7                               u1751 0F4C  
                             u1831 0580                               u2391 04A6  
                             u1760 0F53                               u1920 06A8  
                             u1761 0F52                               u1921 06A7  
                             u1770 0FE1                               u1850 0595  
                             u1915 069A                               u1771 0FE0  
                             u1851 0594                               u1940 06B9  
                             u1941 06B8                               u1845 0586  
                             u2477 04FB                               u1870 05B0  
                             u1935 06A9                               u1871 05AF  
                             u1960 06CD                               u1961 06CC  
                             u1945 06B5                               u1785 0FE8  
                             u1865 0597                               u1970 0F36  
                             u1890 05CE                               u1955 06C1  
                             u1795 0FEF                               u1971 0F35  
                             u1891 05CD                               u1875 05AC  
                             _PEIE 005E                               u1885 05C0  
                             u1990 023C                               u1991 023B  
                             u1985 0F8A                               _RCIF 0065  
                             _TRMT 04C1                               _Date 00C4  
                             _Time 00D3   __end_of_I2C_Master_RepeatedStart 0F13  
                             _cont 0078                               _main 0402  
                             _hour 0023                               _year 0020  
                             btemp 007E                               start 000C  
                ___bmul@multiplier 004F              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 005B  
                 ?_I2C_Master_Read 0074                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 056F                    __end_of___awmod 0632  
                            _ANSEL 0188                    __end_of___lldiv 05D7  
                  ___awdiv@divisor 004E                    __end_of___lwdiv 06D2  
                            i1l111 070D                              i1l115 070F  
                            i1l322 0F01                              i1l319 0EFA  
                  __end_of___lwmod 0752                    ___awdiv@counter 0052  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u71_20 0F00  
                            u71_21 0EFF                              u80_20 06F3  
                            u80_21 06F2                              u81_20 06FE  
                            u81_21 06FD                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            u82_20 0709                              _SSPIF 0063  
                            u82_21 0708                              u78_20 06D8  
                            u78_21 06D7                              u79_20 06E9  
                            u79_21 06E8                              _TXREG 0019  
                            _m_day 0022                    __end_of_dpowers 0810  
                  __end_of_isdigit 0F66                              _month 0021  
                            _setup 078C                              pclath 000A  
                     _Write_to_RTC 0632                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0402  
                      ?_USART_Init 0070                    __initialization 000F  
                       _Read_USART 0EFA                       __end_of_main 0506  
                           ??_main 006C                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0074                 ??_I2C_Master_Start 0074  
               ??_I2C_Master_Write 0076                   ___awdiv@dividend 0050  
              _USART_Init_BaudRate 0EF4                             ?_setup 0070  
                           _ANSELH 0189                             i1l1330 0EFA  
                           i1l1332 0F00                             i1l1450 06E3  
                           i1l1460 06FE                             i1l1452 06E9  
                           i1l1462 0702                             i1l1454 06ED  
                           i1l1446 06D2                             i1l1464 0709  
                           i1l1456 06F3                             i1l1448 06D8  
                           i1l1458 06F7                             i1l1466 070D  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0F0A                             ___bmul 0F66  
                           ___wmul 0FD9                          ??___awdiv 0074  
                        ??___awmod 0074               ?_USART_Init_BaudRate 0070  
                        ??___lldiv 0074                          ??___lwdiv 0074  
                        ??___lwmod 0075                   ___awdiv@quotient 0054  
                           _minute 0024                             _second 0025  
                  ___awmod@divisor 004E                    ___awmod@counter 0052  
                        ??_isdigit 0074                             saved_w 007E  
              __size_of_USART_Init 000C                          ??_sprintf 005D  
          __end_of__initialization 0031                ___bmul@multiplicand 0074  
                      ?_Read_USART 0070                     __pcstackCOMMON 0070  
            ??_USART_Init_BaudRate 0074                       __pidataBANK1 0F99  
                    __end_of_setup 07BD                       ?_RTC_display 0070  
                     sprintf@width 0065                            ??_setup 0075  
                     Write_USART@a 0074                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                         _data_total 00A0  
                       __pmaintext 0402                            ?___bmul 0074  
                          ?___wmul 004E                      ??_Write_USART 0074  
                       __pintentry 0004         __end_of_Write_USART_String 0FD9  
          __size_of_bcd_to_decimal 001C                __size_of_Read_USART 0008  
         __size_of_USART_INTERRUPT 0006                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0800  
                     ??_USART_Init 0074                    __size_of___bmul 0017  
                          ___awdiv 0506                            ___awmod 05D7  
                          ___lldiv 056F                    __size_of___wmul 0027  
                          ___lwdiv 068C                            ___lwmod 0716  
                          __ptext1 078C                            __ptext2 0EF4  
                          __ptext3 0F3B                            __ptext4 0EEE  
                          __ptext5 0752                            __ptext6 056F  
                          __ptext7 0632                            __ptext8 0F25  
                          __ptext9 0F1C                       __size_of_ISR 0044  
                          _dpowers 0806                __end_of_Write_USART 0F3B  
                          _isdigit 0F54                   ___awmod@dividend 0050  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
               __end_of_USART_Init 0F47                            _sprintf 022E  
                          clrloop0 0F03               end_of_initialization 0031  
       ??_I2C_Master_RepeatedStart 0074          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 004E  
                  ___lldiv@counter 005A                         _month_send 0026  
                        _RCSTAbits 0018                   I2C_Master_Init@c 005B  
                 I2C_Master_Read@a 0074                          _PORTAbits 0005  
                        _PORTDbits 0008                          _PORTEbits 0009  
             __size_of_RTC_display 01F9                          _TRISCbits 0087  
                        _TXSTAbits 0098                  ??_USART_INTERRUPT 0074  
                     ??_Read_USART 0070                     __end_of___bmul 0F7D  
                      _Write_USART 0F2F                     __end_of___wmul 1000  
              start_initialization 000F                     _bcd_to_decimal 0F7D  
                      __end_of_ISR 0716                 __end_of_Read_USART 0F02  
                ??_I2C_Master_Init 005F                  ??_I2C_Master_Read 004E  
                ??_I2C_Master_Wait 0074                  ??_I2C_Master_Stop 0074  
      __end_of_USART_Init_BaudRate 0EFA                           ??___bmul 0075  
                         ??___wmul 0074                         init_fetch0 07ED  
                      __pdataBANK1 00C4             __end_of_bcd_to_decimal 0F99  
                      __pbssCOMMON 0076                          ___latbits 0002  
                    __pcstackBANK0 004E                       _isdigit$1065 0074  
                      _data_recive 0076                      ?_Write_to_RTC 0070  
                      sprintf@flag 0064                 _Write_USART_String 0FB7  
                      sprintf@prec 0061                   _I2C_Master_Start 0F13  
                 _I2C_Master_Write 0F25                   ___lwdiv@dividend 0050  
              ?_Write_USART_String 0070                           ?___awdiv 004E  
                         ?___awmod 004E                           ?___lldiv 004E  
                         ?___lwdiv 004E                           ?___lwmod 0055  
                        __pstrings 0800                          _cont_send 00B4  
                  ?_bcd_to_decimal 0070                           ?_isdigit 0070  
             ??_Write_USART_String 0075                   ___lwdiv@quotient 0053  
                         ?_sprintf 005A               bcd_to_decimal@number 0053  
                   ??_Write_to_RTC 0076                     __size_of_setup 0031  
                        _hour_send 0036                  interrupt_function 0004  
                   ___wmul@product 0074                          clear_ram0 0F02  
                         _PIE1bits 008C                           _PIR1bits 000C  
                        _year_send 00BC                        __stringbase 0805  
                ___wmul@multiplier 004E                    _USART_INTERRUPT 0EEE  
              I2C_Master_Read@temp 0050                       ?_Write_USART 0070  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 005B          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                      ??_RTC_display 0069  
               __end_of__stringtab 0806                         sprintf@val 0062  
                  _I2C_Master_Init 0752                    _I2C_Master_Read 07BD  
                  _I2C_Master_Wait 0F47                    _I2C_Master_Stop 0F1C  
                 __size_of_isdigit 0012                    ___lwdiv@divisor 004E  
                         _day_send 002E                    ___lwdiv@counter 0052  
                         __ptext10 0F13                           __ptext11 0FB7  
                         __ptext20 0F66                           __ptext12 0F2F  
                         __ptext21 05D7                           __ptext13 0035  
                         __ptext22 0506                           __ptext14 022E  
                         __ptext23 0F0A                           __ptext15 0F54  
                         __ptext24 07BD                           __ptext16 0FD9  
                         __ptext25 0F47                           __ptext17 0716  
                         __ptext26 06D2                           __ptext18 068C  
                         __ptext27 0EFA                           __ptext19 0F7D  
                 __size_of_sprintf 01D4                      __size_of_main 0104  
                         _min_send 003E                           _sec_send 0046  
             __end_of_Write_to_RTC 068C            __end_of_USART_INTERRUPT 0EF4  
         __end_of_I2C_Master_Start 0F1C           __end_of_I2C_Master_Write 0F2F  
                       _INTCONbits 000B                Write_USART_String@a 004E  
              Write_USART_String@i 004F                           init_ram0 07F1  
              __end_of_RTC_display 022E                           isdigit@c 0075  
                         intlevel1 0000                          sprintf@ap 0060  
                        sprintf@sp 0068                   ___lwmod@dividend 0057  
                 ___lldiv@dividend 0052                          stringcode 0800  
                       _OSCCONbits 008F                   ??_bcd_to_decimal 0050  
     __size_of_USART_Init_BaudRate 0006            __end_of_I2C_Master_Init 078C  
          __end_of_I2C_Master_Read 07ED            __end_of_I2C_Master_Wait 0F54  
          __end_of_I2C_Master_Stop 0F25                           sprintf@c 0067  
                         sprintf@f 005A                   ___lldiv@quotient 0056  
                I2C_Master_Write@d 0074                    ___lwmod@divisor 0055  
                  ___lwmod@counter 0059                           stringdir 0800  
                         stringtab 0800                        _SSPCON2bits 0091  
                       _USART_Init 0F3B  
