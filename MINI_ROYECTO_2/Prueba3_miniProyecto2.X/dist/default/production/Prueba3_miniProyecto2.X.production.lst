

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 21:58:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387                           
   388                           	psect	idataBANK0
   389  0506                     __pidataBANK0:
   390                           
   391                           ;initializer for _Date
   392  0506  3444               	retlw	68
   393  0507  3441               	retlw	65
   394  0508  3454               	retlw	84
   395  0509  3445               	retlw	69
   396  050A  343A               	retlw	58
   397  050B  3420               	retlw	32
   398  050C  3430               	retlw	48
   399  050D  3436               	retlw	54
   400  050E  342F               	retlw	47
   401  050F  3430               	retlw	48
   402  0510  3433               	retlw	51
   403  0511  342F               	retlw	47
   404  0512  3432               	retlw	50
   405  0513  3430               	retlw	48
   406  0514  3432               	retlw	50
   407  0515  3431               	retlw	49
   408  0516  3400               	retlw	0
   409                           
   410                           ;initializer for _Time
   411  0517  3454               	retlw	84
   412  0518  3449               	retlw	73
   413  0519  344D               	retlw	77
   414  051A  3445               	retlw	69
   415  051B  343A               	retlw	58
   416  051C  3420               	retlw	32
   417  051D  3432               	retlw	50
   418  051E  3430               	retlw	48
   419  051F  343A               	retlw	58
   420  0520  3433               	retlw	51
   421  0521  3437               	retlw	55
   422  0522  343A               	retlw	58
   423  0523  3430               	retlw	48
   424  0524  3430               	retlw	48
   425  0525  3400               	retlw	0
   426  0008                     _PORTDbits	set	8
   427  0009                     _PORTEbits	set	9
   428  0013                     _SSPBUF	set	19
   429  0014                     _SSPCON	set	20
   430  0009                     _PORTE	set	9
   431  0008                     _PORTD	set	8
   432  0007                     _PORTC	set	7
   433  0006                     _PORTB	set	6
   434  0005                     _PORTA	set	5
   435  0005                     _PORTAbits	set	5
   436  001A                     _RCREG	set	26
   437  000C                     _PIR1bits	set	12
   438  0063                     _SSPIF	set	99
   439  005E                     _PEIE	set	94
   440  005F                     _GIE	set	95
   441  0091                     _SSPCON2bits	set	145
   442  0094                     _SSPSTAT	set	148
   443  0093                     _SSPADD	set	147
   444  0091                     _SSPCON2	set	145
   445  0089                     _TRISE	set	137
   446  0087                     _TRISCbits	set	135
   447  0086                     _TRISB	set	134
   448  0085                     _TRISA	set	133
   449  0088                     _TRISD	set	136
   450  0463                     _SSPIE	set	1123
   451  043C                     _TRISC4	set	1084
   452  043B                     _TRISC3	set	1083
   453  0189                     _ANSELH	set	393
   454  0188                     _ANSEL	set	392
   455                           
   456                           	psect	cinit
   457  000F                     start_initialization:	
   458                           ; #config settings
   459                           
   460  000F                     __initialization:
   461                           
   462                           ; Initialize objects allocated to BANK0
   463  000F  1383               	bcf	3,7	;select IRP bank0
   464  0010  3040               	movlw	low (__pdataBANK0+32)
   465  0011  00FD               	movwf	btemp+-1
   466  0012  3005               	movlw	high __pidataBANK0
   467  0013  00FE               	movwf	btemp
   468  0014  3006               	movlw	low __pidataBANK0
   469  0015  00FF               	movwf	btemp+1
   470  0016  3020               	movlw	low __pdataBANK0
   471  0017  0084               	movwf	4
   472  0018  120A  118A  258B  120A  118A  	fcall	init_ram0
   473                           
   474                           ; Clear objects allocated to BANK0
   475  001D  3040               	movlw	low __pbssBANK0
   476  001E  0084               	movwf	4
   477  001F  305A               	movlw	low (__pbssBANK0+26)
   478  0020  120A  118A  25EB  120A  118A  	fcall	clear_ram0
   479                           
   480                           ; Clear objects allocated to COMMON
   481  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   482  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   483  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   484  0028                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487  0028                     __end_of__initialization:
   488  0028  0183               	clrf	3
   489  0029  120A  118A  299F   	ljmp	_main	;jump to C main() function
   490                           
   491                           	psect	bssCOMMON
   492  0078                     __pbssCOMMON:
   493  0078                     _hour:
   494  0078                     	ds	1
   495  0079                     _minute:
   496  0079                     	ds	1
   497  007A                     _second:
   498  007A                     	ds	1
   499                           
   500                           	psect	bssBANK0
   501  0040                     __pbssBANK0:
   502  0040                     _data_total:
   503  0040                     	ds	20
   504  0054                     _data_recive:
   505  0054                     	ds	1
   506  0055                     _cont:
   507  0055                     	ds	1
   508  0056                     _year:
   509  0056                     	ds	1
   510  0057                     _month:
   511  0057                     	ds	1
   512  0058                     _m_day:
   513  0058                     	ds	1
   514  0059                     _i:
   515  0059                     	ds	1
   516                           
   517                           	psect	dataBANK0
   518  0020                     __pdataBANK0:
   519  0020                     _Date:
   520  0020                     	ds	17
   521  0031                     _Time:
   522  0031                     	ds	15
   523                           
   524                           	psect	inittext
   525  0587                     init_fetch0:	
   526                           ;	Called with low address in FSR and high address in W
   527                           
   528  0587  087E               	movf	btemp,w
   529  0588  008A               	movwf	10
   530  0589  087F               	movf	btemp+1,w
   531  058A  0082               	movwf	2
   532  058B                     init_ram0:	
   533                           ;Called with:
   534                           ;	high address of idata address in btemp 
   535                           ;	low address of idata address in btemp+1 
   536                           ;	low address of data in FSR
   537                           ;	high address + 1 of data in btemp-1
   538                           
   539  058B  120A  118A  2587  120A  118A  	fcall	init_fetch0
   540  0590  0080               	movwf	0
   541  0591  0A84               	incf	4,f
   542  0592  0804               	movf	4,w
   543  0593  067D               	xorwf	btemp+-1,w
   544  0594  1903               	btfsc	3,2
   545  0595  3400               	retlw	0
   546  0596  0AFF               	incf	btemp+1,f
   547  0597  1903               	btfsc	3,2
   548  0598  0AFE               	incf	btemp,f
   549  0599  2D8B               	goto	init_ram0
   550                           
   551                           	psect	clrtext
   552  05EB                     clear_ram0:	
   553                           ;	Called with FSR containing the base address, and
   554                           ;	W with the last address+1
   555                           
   556  05EB  0064               	clrwdt	;clear the watchdog before getting into this loop
   557  05EC                     clrloop0:
   558  05EC  0180               	clrf	0	;clear RAM location pointed to by FSR
   559  05ED  0A84               	incf	4,f	;increment pointer
   560  05EE  0604               	xorwf	4,w	;XOR with final address
   561  05EF  1903               	btfsc	3,2	;have we reached the end yet?
   562  05F0  3400               	retlw	0	;all done for this memory range, return
   563  05F1  0604               	xorwf	4,w	;XOR again to restore value
   564  05F2  2DEC               	goto	clrloop0	;do the next byte
   565                           
   566                           	psect	cstackCOMMON
   567  0070                     __pcstackCOMMON:
   568  0070                     ?_setup:
   569  0070                     ?_Lcd_Init:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_Lcd_Clear:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_Write_to_RTC:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_I2C_Master_Start:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_I2C_Master_RepeatedStart:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_I2C_Master_Stop:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_RTC_display:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_Lcd_Write_String:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_Lcd_Port:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Lcd_Cmd:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_ISR:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ??_ISR:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_main:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_bcd_to_decimal:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_I2C_Master_Wait:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_Lcd_Write_Char:	
   615                           ; 1 bytes @ 0x0
   616                           
   617                           
   618                           ; 1 bytes @ 0x0
   619  0070                     	ds	3
   620  0073                     ??_I2C_Master_Start:
   621  0073                     ?_I2C_Master_Write:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     ??_I2C_Master_RepeatedStart:	
   625                           ; 1 bytes @ 0x3
   626                           
   627  0073                     ??_I2C_Master_Stop:	
   628                           ; 1 bytes @ 0x3
   629                           
   630  0073                     ??_Lcd_Port:	
   631                           ; 1 bytes @ 0x3
   632                           
   633  0073                     ??_I2C_Master_Wait:	
   634                           ; 1 bytes @ 0x3
   635                           
   636  0073                     ?___bmul:	
   637                           ; 1 bytes @ 0x3
   638                           
   639  0073                     ??___lldiv:	
   640                           ; 1 bytes @ 0x3
   641                           
   642  0073                     ?_I2C_Master_Read:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0073                     ?___awdiv:	
   646                           ; 2 bytes @ 0x3
   647                           
   648  0073                     ?___awmod:	
   649                           ; 2 bytes @ 0x3
   650                           
   651  0073                     Lcd_Port@a:	
   652                           ; 2 bytes @ 0x3
   653                           
   654  0073                     ___bmul@multiplicand:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     I2C_Master_Write@d:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     I2C_Master_Read@a:	
   661                           ; 2 bytes @ 0x3
   662                           
   663  0073                     ___awdiv@divisor:	
   664                           ; 2 bytes @ 0x3
   665                           
   666  0073                     ___awmod@divisor:	
   667                           ; 2 bytes @ 0x3
   668                           
   669                           
   670                           ; 2 bytes @ 0x3
   671  0073                     	ds	1
   672  0074                     ??_I2C_Master_Init:
   673  0074                     ??_Lcd_Cmd:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ??_Lcd_Write_Char:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ??___bmul:	
   680                           ; 1 bytes @ 0x4
   681                           
   682                           
   683                           ; 1 bytes @ 0x4
   684  0074                     	ds	1
   685  0075                     ??_Write_to_RTC:
   686  0075                     ??_I2C_Master_Write:	
   687                           ; 1 bytes @ 0x5
   688                           
   689  0075                     ??_I2C_Master_Read:	
   690                           ; 1 bytes @ 0x5
   691                           
   692  0075                     Lcd_Write_Char@a:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     ___bmul@product:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     ___awdiv@dividend:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0075                     ___awmod@dividend:	
   702                           ; 2 bytes @ 0x5
   703                           
   704                           
   705                           ; 2 bytes @ 0x5
   706  0075                     	ds	1
   707  0076                     ??_Lcd_Write_String:
   708  0076                     Lcd_Cmd@a:	
   709                           ; 1 bytes @ 0x6
   710                           
   711  0076                     ___bmul@multiplier:	
   712                           ; 1 bytes @ 0x6
   713                           
   714                           
   715                           ; 1 bytes @ 0x6
   716  0076                     	ds	1
   717  0077                     ??_Lcd_Clear:
   718  0077                     ?_Lcd_Set_Cursor:	
   719                           ; 1 bytes @ 0x7
   720                           
   721  0077                     ??___awdiv:	
   722                           ; 1 bytes @ 0x7
   723                           
   724  0077                     ??___awmod:	
   725                           ; 1 bytes @ 0x7
   726                           
   727  0077                     bcd_to_decimal@number:	
   728                           ; 1 bytes @ 0x7
   729                           
   730  0077                     Lcd_Set_Cursor@b:	
   731                           ; 1 bytes @ 0x7
   732                           
   733                           
   734                           ; 1 bytes @ 0x7
   735  0077                     	ds	1
   736  0078                     ??_setup:
   737                           
   738                           	psect	cstackBANK0
   739  005A                     __pcstackBANK0:	
   740                           ; 1 bytes @ 0x8
   741                           
   742  005A                     ??_Lcd_Init:
   743  005A                     ??_Lcd_Set_Cursor:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  005A                     ??_bcd_to_decimal:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  005A                     ?___lldiv:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  005A                     ___awdiv@counter:	
   753                           ; 4 bytes @ 0x0
   754                           
   755  005A                     ___awmod@counter:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  005A                     I2C_Master_Read@temp:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  005A                     Lcd_Write_String@i:	
   762                           ; 2 bytes @ 0x0
   763                           
   764  005A                     ___lldiv@divisor:	
   765                           ; 2 bytes @ 0x0
   766                           
   767                           
   768                           ; 4 bytes @ 0x0
   769  005A                     	ds	1
   770  005B                     Lcd_Set_Cursor@a:
   771  005B                     ___awdiv@sign:	
   772                           ; 1 bytes @ 0x1
   773                           
   774  005B                     ___awmod@sign:	
   775                           ; 1 bytes @ 0x1
   776                           
   777                           
   778                           ; 1 bytes @ 0x1
   779  005B                     	ds	1
   780  005C                     Lcd_Set_Cursor@temp:
   781  005C                     Lcd_Write_String@a:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  005C                     ___awdiv@quotient:	
   785                           ; 1 bytes @ 0x2
   786                           
   787                           
   788                           ; 2 bytes @ 0x2
   789  005C                     	ds	2
   790  005E                     ??_RTC_display:
   791  005E                     ___lldiv@dividend:	
   792                           ; 1 bytes @ 0x4
   793                           
   794                           
   795                           ; 4 bytes @ 0x4
   796  005E                     	ds	4
   797  0062                     ___lldiv@quotient:
   798                           
   799                           ; 4 bytes @ 0x8
   800  0062                     	ds	4
   801  0066                     ___lldiv@counter:
   802                           
   803                           ; 1 bytes @ 0xC
   804  0066                     	ds	1
   805  0067                     ?_I2C_Master_Init:
   806  0067                     I2C_Master_Init@c:	
   807                           ; 1 bytes @ 0xD
   808                           
   809                           
   810                           ; 4 bytes @ 0xD
   811  0067                     	ds	4
   812  006B                     ??_main:
   813                           
   814                           ; 1 bytes @ 0x11
   815  006B                     	ds	3
   816                           
   817                           	psect	maintext
   818  019F                     __pmaintext:	
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 113 in file "main_prueba3_mini2.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : B00/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0
   840 ;;      Temps:          0       3       0       0       0
   841 ;;      Totals:         0       3       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels required when called:    5
   844 ;; This function calls:
   845 ;;		_I2C_Master_Read
   846 ;;		_I2C_Master_RepeatedStart
   847 ;;		_I2C_Master_Start
   848 ;;		_I2C_Master_Stop
   849 ;;		_I2C_Master_Write
   850 ;;		_Lcd_Clear
   851 ;;		_Lcd_Init
   852 ;;		_RTC_display
   853 ;;		_Write_to_RTC
   854 ;;		_setup
   855 ;; This function is called by:
   856 ;;		Startup code after reset
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _main
   862  019F                     _main:
   863  019F                     l1684:	
   864                           ;incstack = 0
   865                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   866                           
   867                           
   868                           ;main_prueba3_mini2.c: 114:     setup();
   869  019F  120A  118A  24E4  120A  118A  	fcall	_setup
   870  01A4                     l1686:
   871                           
   872                           ;main_prueba3_mini2.c: 115:     TRISD = 0x00;
   873  01A4  1683               	bsf	3,5	;RP0=1, select bank1
   874  01A5  1303               	bcf	3,6	;RP1=0, select bank1
   875  01A6  0188               	clrf	8	;volatile
   876  01A7                     l1688:
   877                           
   878                           ;main_prueba3_mini2.c: 116:     Lcd_Init();
   879  01A7  120A  118A  23DF  120A  118A  	fcall	_Lcd_Init
   880  01AC                     l1690:
   881                           
   882                           ;main_prueba3_mini2.c: 117:     Lcd_Clear();
   883  01AC  120A  118A  25AC  120A  118A  	fcall	_Lcd_Clear
   884  01B1                     l1692:
   885                           
   886                           ;main_prueba3_mini2.c: 118:     Write_to_RTC();
   887  01B1  120A  118A  2385  120A  118A  	fcall	_Write_to_RTC
   888  01B6                     l1694:
   889                           
   890                           ;main_prueba3_mini2.c: 122:         I2C_Master_Start();
   891  01B6  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Start
   892  01BB                     l1696:
   893                           
   894                           ;main_prueba3_mini2.c: 123:         I2C_Master_Write(0xD0);
   895  01BB  30D0               	movlw	208
   896  01BC  00F3               	movwf	I2C_Master_Write@d
   897  01BD  3000               	movlw	0
   898  01BE  00F4               	movwf	I2C_Master_Write@d+1
   899  01BF  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
   900  01C4                     l1698:
   901                           
   902                           ;main_prueba3_mini2.c: 124:         I2C_Master_Write(0);
   903  01C4  3000               	movlw	0
   904  01C5  00F3               	movwf	I2C_Master_Write@d
   905  01C6  00F4               	movwf	I2C_Master_Write@d+1
   906  01C7  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
   907  01CC                     l1700:
   908                           
   909                           ;main_prueba3_mini2.c: 125:         I2C_Master_RepeatedStart();
   910  01CC  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_RepeatedStart
   911  01D1                     l1702:
   912                           
   913                           ;main_prueba3_mini2.c: 126:         I2C_Master_Write(0xD1);
   914  01D1  30D1               	movlw	209
   915  01D2  00F3               	movwf	I2C_Master_Write@d
   916  01D3  3000               	movlw	0
   917  01D4  00F4               	movwf	I2C_Master_Write@d+1
   918  01D5  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
   919  01DA                     l1704:
   920                           
   921                           ;main_prueba3_mini2.c: 127:         second = I2C_Master_Read(1);
   922  01DA  3001               	movlw	1
   923  01DB  00F3               	movwf	I2C_Master_Read@a
   924  01DC  3000               	movlw	0
   925  01DD  00F4               	movwf	I2C_Master_Read@a+1
   926  01DE  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
   927  01E3  0873               	movf	?_I2C_Master_Read,w
   928  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   929  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   930  01E6  00EB               	movwf	??_main
   931  01E7  086B               	movf	??_main,w
   932  01E8  00FA               	movwf	_second
   933  01E9                     l1706:
   934                           
   935                           ;main_prueba3_mini2.c: 128:         minute = I2C_Master_Read(1);
   936  01E9  3001               	movlw	1
   937  01EA  00F3               	movwf	I2C_Master_Read@a
   938  01EB  3000               	movlw	0
   939  01EC  00F4               	movwf	I2C_Master_Read@a+1
   940  01ED  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
   941  01F2  0873               	movf	?_I2C_Master_Read,w
   942  01F3  1283               	bcf	3,5	;RP0=0, select bank0
   943  01F4  1303               	bcf	3,6	;RP1=0, select bank0
   944  01F5  00EB               	movwf	??_main
   945  01F6  086B               	movf	??_main,w
   946  01F7  00F9               	movwf	_minute
   947  01F8                     l1708:
   948                           
   949                           ;main_prueba3_mini2.c: 129:         hour = I2C_Master_Read(1);
   950  01F8  3001               	movlw	1
   951  01F9  00F3               	movwf	I2C_Master_Read@a
   952  01FA  3000               	movlw	0
   953  01FB  00F4               	movwf	I2C_Master_Read@a+1
   954  01FC  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
   955  0201  0873               	movf	?_I2C_Master_Read,w
   956  0202  1283               	bcf	3,5	;RP0=0, select bank0
   957  0203  1303               	bcf	3,6	;RP1=0, select bank0
   958  0204  00EB               	movwf	??_main
   959  0205  086B               	movf	??_main,w
   960  0206  00F8               	movwf	_hour
   961  0207                     l1710:
   962                           
   963                           ;main_prueba3_mini2.c: 130:         I2C_Master_Read(1);
   964  0207  3001               	movlw	1
   965  0208  00F3               	movwf	I2C_Master_Read@a
   966  0209  3000               	movlw	0
   967  020A  00F4               	movwf	I2C_Master_Read@a+1
   968  020B  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
   969  0210                     l1712:
   970                           
   971                           ;main_prueba3_mini2.c: 131:         m_day = I2C_Master_Read(1);
   972  0210  3001               	movlw	1
   973  0211  00F3               	movwf	I2C_Master_Read@a
   974  0212  3000               	movlw	0
   975  0213  00F4               	movwf	I2C_Master_Read@a+1
   976  0214  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
   977  0219  0873               	movf	?_I2C_Master_Read,w
   978  021A  1283               	bcf	3,5	;RP0=0, select bank0
   979  021B  1303               	bcf	3,6	;RP1=0, select bank0
   980  021C  00EB               	movwf	??_main
   981  021D  086B               	movf	??_main,w
   982  021E  00D8               	movwf	_m_day
   983  021F                     l1714:
   984                           
   985                           ;main_prueba3_mini2.c: 132:         month = I2C_Master_Read(1);
   986  021F  3001               	movlw	1
   987  0220  00F3               	movwf	I2C_Master_Read@a
   988  0221  3000               	movlw	0
   989  0222  00F4               	movwf	I2C_Master_Read@a+1
   990  0223  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
   991  0228  0873               	movf	?_I2C_Master_Read,w
   992  0229  1283               	bcf	3,5	;RP0=0, select bank0
   993  022A  1303               	bcf	3,6	;RP1=0, select bank0
   994  022B  00EB               	movwf	??_main
   995  022C  086B               	movf	??_main,w
   996  022D  00D7               	movwf	_month
   997  022E                     l1716:
   998                           
   999                           ;main_prueba3_mini2.c: 133:         year = I2C_Master_Read(0);
  1000  022E  3000               	movlw	0
  1001  022F  00F3               	movwf	I2C_Master_Read@a
  1002  0230  00F4               	movwf	I2C_Master_Read@a+1
  1003  0231  120A  118A  2469  120A  118A  	fcall	_I2C_Master_Read
  1004  0236  0873               	movf	?_I2C_Master_Read,w
  1005  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0239  00EB               	movwf	??_main
  1008  023A  086B               	movf	??_main,w
  1009  023B  00D6               	movwf	_year
  1010  023C                     l1718:
  1011                           
  1012                           ;main_prueba3_mini2.c: 134:         I2C_Master_Stop();
  1013  023C  120A  118A  25D0  120A  118A  	fcall	_I2C_Master_Stop
  1014  0241                     l1720:
  1015                           
  1016                           ;main_prueba3_mini2.c: 136:         RTC_display();
  1017  0241  120A  118A  202C  120A  118A  	fcall	_RTC_display
  1018  0246                     l1722:
  1019                           
  1020                           ;main_prueba3_mini2.c: 138:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1021  0246  3002               	movlw	2
  1022  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0249  00ED               	movwf	??_main+2
  1025  024A  3004               	movlw	4
  1026  024B  00EC               	movwf	??_main+1
  1027  024C  30B9               	movlw	185
  1028  024D  00EB               	movwf	??_main
  1029  024E                     u1047:
  1030  024E  0BEB               	decfsz	??_main,f
  1031  024F  2A4E               	goto	u1047
  1032  0250  0BEC               	decfsz	??_main+1,f
  1033  0251  2A4E               	goto	u1047
  1034  0252  0BED               	decfsz	??_main+2,f
  1035  0253  2A4E               	goto	u1047
  1036  0254  2A55               	nop2
  1037  0255  29B6               	goto	l1694
  1038  0256  120A  118A  280C   	ljmp	start
  1039  0259                     __end_of_main:
  1040                           
  1041                           	psect	text1
  1042  04E4                     __ptext1:	
  1043 ;; *************** function _setup *****************
  1044 ;; Defined at:
  1045 ;;		line 203 in file "main_prueba3_mini2.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    3
  1066 ;; This function calls:
  1067 ;;		_I2C_Master_Init
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _setup
  1075  04E4                     _setup:
  1076  04E4                     l1620:	
  1077                           ;incstack = 0
  1078                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1079                           
  1080                           
  1081                           ;main_prueba3_mini2.c: 205:     ANSEL = 0;
  1082  04E4  1683               	bsf	3,5	;RP0=1, select bank3
  1083  04E5  1703               	bsf	3,6	;RP1=1, select bank3
  1084  04E6  0188               	clrf	8	;volatile
  1085                           
  1086                           ;main_prueba3_mini2.c: 206:     ANSELH = 0;
  1087  04E7  0189               	clrf	9	;volatile
  1088                           
  1089                           ;main_prueba3_mini2.c: 207:     TRISA = 0;
  1090  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  1091  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  1092  04EA  0185               	clrf	5	;volatile
  1093  04EB                     l1622:
  1094                           
  1095                           ;main_prueba3_mini2.c: 208:     TRISB = 0b00000011;
  1096  04EB  3003               	movlw	3
  1097  04EC  0086               	movwf	6	;volatile
  1098  04ED                     l1624:
  1099                           
  1100                           ;main_prueba3_mini2.c: 209:     TRISCbits.TRISC6 = 0;
  1101  04ED  1307               	bcf	7,6	;volatile
  1102  04EE                     l1626:
  1103                           
  1104                           ;main_prueba3_mini2.c: 210:     TRISCbits.TRISC7 = 1;
  1105  04EE  1787               	bsf	7,7	;volatile
  1106  04EF                     l1628:
  1107                           
  1108                           ;main_prueba3_mini2.c: 211:     TRISD = 0;
  1109  04EF  0188               	clrf	8	;volatile
  1110  04F0                     l1630:
  1111                           
  1112                           ;main_prueba3_mini2.c: 212:     TRISE = 0;
  1113  04F0  0189               	clrf	9	;volatile
  1114  04F1                     l1632:
  1115                           
  1116                           ;main_prueba3_mini2.c: 213:     PORTA = 0;
  1117  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1118  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1119  04F3  0185               	clrf	5	;volatile
  1120  04F4                     l1634:
  1121                           
  1122                           ;main_prueba3_mini2.c: 214:     PORTB = 0;
  1123  04F4  0186               	clrf	6	;volatile
  1124  04F5                     l1636:
  1125                           
  1126                           ;main_prueba3_mini2.c: 215:     PORTC = 0;
  1127  04F5  0187               	clrf	7	;volatile
  1128  04F6                     l1638:
  1129                           
  1130                           ;main_prueba3_mini2.c: 216:     PORTD = 0;
  1131  04F6  0188               	clrf	8	;volatile
  1132  04F7                     l1640:
  1133                           
  1134                           ;main_prueba3_mini2.c: 217:     PORTE = 0;
  1135  04F7  0189               	clrf	9	;volatile
  1136  04F8                     l1642:
  1137                           
  1138                           ;main_prueba3_mini2.c: 218:     I2C_Master_Init(100000);
  1139  04F8  3000               	movlw	0
  1140  04F9  00EA               	movwf	I2C_Master_Init@c+3
  1141  04FA  3001               	movlw	1
  1142  04FB  00E9               	movwf	I2C_Master_Init@c+2
  1143  04FC  3086               	movlw	134
  1144  04FD  00E8               	movwf	I2C_Master_Init@c+1
  1145  04FE  30A0               	movlw	160
  1146  04FF  00E7               	movwf	I2C_Master_Init@c
  1147  0500  120A  118A  242F  120A  118A  	fcall	_I2C_Master_Init
  1148  0505                     l118:
  1149  0505  0008               	return
  1150  0506                     __end_of_setup:
  1151                           
  1152                           	psect	text2
  1153  042F                     __ptext2:	
  1154 ;; *************** function _I2C_Master_Init *****************
  1155 ;; Defined at:
  1156 ;;		line 21 in file "I2C.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  c               4   13[BANK0 ] const unsigned long 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       4       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          4       0       0       0       0
  1173 ;;      Totals:         4       4       0       0       0
  1174 ;;Total ram usage:        8 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    2
  1177 ;; This function calls:
  1178 ;;		___lldiv
  1179 ;; This function is called by:
  1180 ;;		_setup
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _I2C_Master_Init
  1186  042F                     _I2C_Master_Init:
  1187  042F                     l1570:	
  1188                           ;incstack = 0
  1189                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1190                           
  1191                           
  1192                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1193  042F  3028               	movlw	40
  1194  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0432  0094               	movwf	20	;volatile
  1197  0433                     l1572:
  1198                           
  1199                           ;I2C.c: 28:     SSPCON2 = 0;
  1200  0433  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0434  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0435  0191               	clrf	17	;volatile
  1203  0436                     l1574:
  1204                           
  1205                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1206  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0438  0867               	movf	I2C_Master_Init@c,w
  1209  0439  00F4               	movwf	??_I2C_Master_Init
  1210  043A  0868               	movf	I2C_Master_Init@c+1,w
  1211  043B  00F5               	movwf	??_I2C_Master_Init+1
  1212  043C  0869               	movf	I2C_Master_Init@c+2,w
  1213  043D  00F6               	movwf	??_I2C_Master_Init+2
  1214  043E  086A               	movf	I2C_Master_Init@c+3,w
  1215  043F  00F7               	movwf	??_I2C_Master_Init+3
  1216  0440  3002               	movlw	2
  1217  0441                     u935:
  1218  0441  1003               	clrc
  1219  0442  0DF4               	rlf	??_I2C_Master_Init,f
  1220  0443  0DF5               	rlf	??_I2C_Master_Init+1,f
  1221  0444  0DF6               	rlf	??_I2C_Master_Init+2,f
  1222  0445  0DF7               	rlf	??_I2C_Master_Init+3,f
  1223  0446                     u930:
  1224  0446  3EFF               	addlw	-1
  1225  0447  1D03               	skipz
  1226  0448  2C41               	goto	u935
  1227  0449  0877               	movf	??_I2C_Master_Init+3,w
  1228  044A  00DD               	movwf	___lldiv@divisor+3
  1229  044B  0876               	movf	??_I2C_Master_Init+2,w
  1230  044C  00DC               	movwf	___lldiv@divisor+2
  1231  044D  0875               	movf	??_I2C_Master_Init+1,w
  1232  044E  00DB               	movwf	___lldiv@divisor+1
  1233  044F  0874               	movf	??_I2C_Master_Init,w
  1234  0450  00DA               	movwf	___lldiv@divisor
  1235  0451  3000               	movlw	0
  1236  0452  00E1               	movwf	___lldiv@dividend+3
  1237  0453  307A               	movlw	122
  1238  0454  00E0               	movwf	___lldiv@dividend+2
  1239  0455  3012               	movlw	18
  1240  0456  00DF               	movwf	___lldiv@dividend+1
  1241  0457  3000               	movlw	0
  1242  0458  00DE               	movwf	___lldiv@dividend
  1243  0459  120A  118A  22C2  120A  118A  	fcall	___lldiv
  1244  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1245  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0460  085A               	movf	?___lldiv,w
  1247  0461  3EFF               	addlw	255
  1248  0462  1683               	bsf	3,5	;RP0=1, select bank1
  1249  0463  1303               	bcf	3,6	;RP1=0, select bank1
  1250  0464  0093               	movwf	19	;volatile
  1251  0465                     l1576:
  1252                           
  1253                           ;I2C.c: 36:     SSPSTAT = 0;
  1254  0465  0194               	clrf	20	;volatile
  1255  0466                     l1578:
  1256                           
  1257                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1258  0466  1587               	bsf	7,3	;volatile
  1259  0467                     l1580:
  1260                           
  1261                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1262  0467  1607               	bsf	7,4	;volatile
  1263  0468                     l147:
  1264  0468  0008               	return
  1265  0469                     __end_of_I2C_Master_Init:
  1266                           
  1267                           	psect	text3
  1268  02C2                     __ptext3:	
  1269 ;; *************** function ___lldiv *****************
  1270 ;; Defined at:
  1271 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  divisor         4    0[BANK0 ] unsigned long 
  1274 ;;  dividend        4    4[BANK0 ] unsigned long 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  quotient        4    8[BANK0 ] unsigned long 
  1277 ;;  counter         1   12[BANK0 ] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  4    0[BANK0 ] unsigned long 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       8       0       0       0
  1288 ;;      Locals:         0       5       0       0       0
  1289 ;;      Temps:          1       0       0       0       0
  1290 ;;      Totals:         1      13       0       0       0
  1291 ;;Total ram usage:       14 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_I2C_Master_Init
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           
  1302                           ;psect for function ___lldiv
  1303  02C2                     ___lldiv:
  1304  02C2                     l1510:	
  1305                           ;incstack = 0
  1306                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1307                           
  1308  02C2  3000               	movlw	0
  1309  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1310  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1311  02C5  00E5               	movwf	___lldiv@quotient+3
  1312  02C6  3000               	movlw	0
  1313  02C7  00E4               	movwf	___lldiv@quotient+2
  1314  02C8  3000               	movlw	0
  1315  02C9  00E3               	movwf	___lldiv@quotient+1
  1316  02CA  3000               	movlw	0
  1317  02CB  00E2               	movwf	___lldiv@quotient
  1318  02CC  085D               	movf	___lldiv@divisor+3,w
  1319  02CD  045C               	iorwf	___lldiv@divisor+2,w
  1320  02CE  045B               	iorwf	___lldiv@divisor+1,w
  1321  02CF  045A               	iorwf	___lldiv@divisor,w
  1322  02D0  1903               	skipnz
  1323  02D1  2AD3               	goto	u821
  1324  02D2  2AD4               	goto	u820
  1325  02D3                     u821:
  1326  02D3  2B21               	goto	l1530
  1327  02D4                     u820:
  1328  02D4                     l1512:
  1329  02D4  01E6               	clrf	___lldiv@counter
  1330  02D5  0AE6               	incf	___lldiv@counter,f
  1331  02D6  2AE4               	goto	l1516
  1332  02D7                     l1514:
  1333  02D7  3001               	movlw	1
  1334  02D8  00F3               	movwf	??___lldiv
  1335  02D9                     u835:
  1336  02D9  1003               	clrc
  1337  02DA  0DDA               	rlf	___lldiv@divisor,f
  1338  02DB  0DDB               	rlf	___lldiv@divisor+1,f
  1339  02DC  0DDC               	rlf	___lldiv@divisor+2,f
  1340  02DD  0DDD               	rlf	___lldiv@divisor+3,f
  1341  02DE  0BF3               	decfsz	??___lldiv,f
  1342  02DF  2AD9               	goto	u835
  1343  02E0  3001               	movlw	1
  1344  02E1  00F3               	movwf	??___lldiv
  1345  02E2  0873               	movf	??___lldiv,w
  1346  02E3  07E6               	addwf	___lldiv@counter,f
  1347  02E4                     l1516:
  1348  02E4  1FDD               	btfss	___lldiv@divisor+3,7
  1349  02E5  2AE7               	goto	u841
  1350  02E6  2AE8               	goto	u840
  1351  02E7                     u841:
  1352  02E7  2AD7               	goto	l1514
  1353  02E8                     u840:
  1354  02E8                     l1518:
  1355  02E8  3001               	movlw	1
  1356  02E9  00F3               	movwf	??___lldiv
  1357  02EA                     u855:
  1358  02EA  1003               	clrc
  1359  02EB  0DE2               	rlf	___lldiv@quotient,f
  1360  02EC  0DE3               	rlf	___lldiv@quotient+1,f
  1361  02ED  0DE4               	rlf	___lldiv@quotient+2,f
  1362  02EE  0DE5               	rlf	___lldiv@quotient+3,f
  1363  02EF  0BF3               	decfsz	??___lldiv,f
  1364  02F0  2AEA               	goto	u855
  1365  02F1                     l1520:
  1366  02F1  085D               	movf	___lldiv@divisor+3,w
  1367  02F2  0261               	subwf	___lldiv@dividend+3,w
  1368  02F3  1D03               	skipz
  1369  02F4  2AFF               	goto	u865
  1370  02F5  085C               	movf	___lldiv@divisor+2,w
  1371  02F6  0260               	subwf	___lldiv@dividend+2,w
  1372  02F7  1D03               	skipz
  1373  02F8  2AFF               	goto	u865
  1374  02F9  085B               	movf	___lldiv@divisor+1,w
  1375  02FA  025F               	subwf	___lldiv@dividend+1,w
  1376  02FB  1D03               	skipz
  1377  02FC  2AFF               	goto	u865
  1378  02FD  085A               	movf	___lldiv@divisor,w
  1379  02FE  025E               	subwf	___lldiv@dividend,w
  1380  02FF                     u865:
  1381  02FF  1C03               	skipc
  1382  0300  2B02               	goto	u861
  1383  0301  2B03               	goto	u860
  1384  0302                     u861:
  1385  0302  2B12               	goto	l1526
  1386  0303                     u860:
  1387  0303                     l1522:
  1388  0303  085A               	movf	___lldiv@divisor,w
  1389  0304  02DE               	subwf	___lldiv@dividend,f
  1390  0305  085B               	movf	___lldiv@divisor+1,w
  1391  0306  1C03               	skipc
  1392  0307  0F5B               	incfsz	___lldiv@divisor+1,w
  1393  0308  02DF               	subwf	___lldiv@dividend+1,f
  1394  0309  085C               	movf	___lldiv@divisor+2,w
  1395  030A  1C03               	skipc
  1396  030B  0F5C               	incfsz	___lldiv@divisor+2,w
  1397  030C  02E0               	subwf	___lldiv@dividend+2,f
  1398  030D  085D               	movf	___lldiv@divisor+3,w
  1399  030E  1C03               	skipc
  1400  030F  0F5D               	incfsz	___lldiv@divisor+3,w
  1401  0310  02E1               	subwf	___lldiv@dividend+3,f
  1402  0311                     l1524:
  1403  0311  1462               	bsf	___lldiv@quotient,0
  1404  0312                     l1526:
  1405  0312  3001               	movlw	1
  1406  0313                     u875:
  1407  0313  1003               	clrc
  1408  0314  0CDD               	rrf	___lldiv@divisor+3,f
  1409  0315  0CDC               	rrf	___lldiv@divisor+2,f
  1410  0316  0CDB               	rrf	___lldiv@divisor+1,f
  1411  0317  0CDA               	rrf	___lldiv@divisor,f
  1412  0318  3EFF               	addlw	-1
  1413  0319  1D03               	skipz
  1414  031A  2B13               	goto	u875
  1415  031B                     l1528:
  1416  031B  3001               	movlw	1
  1417  031C  02E6               	subwf	___lldiv@counter,f
  1418  031D  1D03               	btfss	3,2
  1419  031E  2B20               	goto	u881
  1420  031F  2B21               	goto	u880
  1421  0320                     u881:
  1422  0320  2AE8               	goto	l1518
  1423  0321                     u880:
  1424  0321                     l1530:
  1425  0321  0865               	movf	___lldiv@quotient+3,w
  1426  0322  00DD               	movwf	?___lldiv+3
  1427  0323  0864               	movf	___lldiv@quotient+2,w
  1428  0324  00DC               	movwf	?___lldiv+2
  1429  0325  0863               	movf	___lldiv@quotient+1,w
  1430  0326  00DB               	movwf	?___lldiv+1
  1431  0327  0862               	movf	___lldiv@quotient,w
  1432  0328  00DA               	movwf	?___lldiv
  1433  0329                     l346:
  1434  0329  0008               	return
  1435  032A                     __end_of___lldiv:
  1436                           
  1437                           	psect	text4
  1438  0385                     __ptext4:	
  1439 ;; *************** function _Write_to_RTC *****************
  1440 ;; Defined at:
  1441 ;;		line 189 in file "main_prueba3_mini2.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    3
  1462 ;; This function calls:
  1463 ;;		_I2C_Master_Start
  1464 ;;		_I2C_Master_Stop
  1465 ;;		_I2C_Master_Write
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _Write_to_RTC
  1473  0385                     _Write_to_RTC:
  1474  0385                     l1656:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  1477                           
  1478                           
  1479                           ;main_prueba3_mini2.c: 190:     I2C_Master_Start();
  1480  0385  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Start
  1481                           
  1482                           ;main_prueba3_mini2.c: 191:     I2C_Master_Write(0xD0);
  1483  038A  30D0               	movlw	208
  1484  038B  00F3               	movwf	I2C_Master_Write@d
  1485  038C  3000               	movlw	0
  1486  038D  00F4               	movwf	I2C_Master_Write@d+1
  1487  038E  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1488                           
  1489                           ;main_prueba3_mini2.c: 192:     I2C_Master_Write(0);
  1490  0393  3000               	movlw	0
  1491  0394  00F3               	movwf	I2C_Master_Write@d
  1492  0395  00F4               	movwf	I2C_Master_Write@d+1
  1493  0396  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1494                           
  1495                           ;main_prueba3_mini2.c: 193:     I2C_Master_Write(0);
  1496  039B  3000               	movlw	0
  1497  039C  00F3               	movwf	I2C_Master_Write@d
  1498  039D  00F4               	movwf	I2C_Master_Write@d+1
  1499  039E  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1500                           
  1501                           ;main_prueba3_mini2.c: 194:     I2C_Master_Write(58);
  1502  03A3  303A               	movlw	58
  1503  03A4  00F3               	movwf	I2C_Master_Write@d
  1504  03A5  3000               	movlw	0
  1505  03A6  00F4               	movwf	I2C_Master_Write@d+1
  1506  03A7  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1507                           
  1508                           ;main_prueba3_mini2.c: 195:     I2C_Master_Write(9);
  1509  03AC  3009               	movlw	9
  1510  03AD  00F3               	movwf	I2C_Master_Write@d
  1511  03AE  3000               	movlw	0
  1512  03AF  00F4               	movwf	I2C_Master_Write@d+1
  1513  03B0  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1514                           
  1515                           ;main_prueba3_mini2.c: 196:     I2C_Master_Write(1);
  1516  03B5  3001               	movlw	1
  1517  03B6  00F3               	movwf	I2C_Master_Write@d
  1518  03B7  3000               	movlw	0
  1519  03B8  00F4               	movwf	I2C_Master_Write@d+1
  1520  03B9  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1521                           
  1522                           ;main_prueba3_mini2.c: 197:     I2C_Master_Write(6);
  1523  03BE  3006               	movlw	6
  1524  03BF  00F3               	movwf	I2C_Master_Write@d
  1525  03C0  3000               	movlw	0
  1526  03C1  00F4               	movwf	I2C_Master_Write@d+1
  1527  03C2  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1528                           
  1529                           ;main_prueba3_mini2.c: 198:     I2C_Master_Write(3);
  1530  03C7  3003               	movlw	3
  1531  03C8  00F3               	movwf	I2C_Master_Write@d
  1532  03C9  3000               	movlw	0
  1533  03CA  00F4               	movwf	I2C_Master_Write@d+1
  1534  03CB  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1535                           
  1536                           ;main_prueba3_mini2.c: 199:     I2C_Master_Write(27);
  1537  03D0  301B               	movlw	27
  1538  03D1  00F3               	movwf	I2C_Master_Write@d
  1539  03D2  3000               	movlw	0
  1540  03D3  00F4               	movwf	I2C_Master_Write@d+1
  1541  03D4  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_Write
  1542                           
  1543                           ;main_prueba3_mini2.c: 200:     I2C_Master_Stop();
  1544  03D9  120A  118A  25D0  120A  118A  	fcall	_I2C_Master_Stop
  1545  03DE                     l115:
  1546  03DE  0008               	return
  1547  03DF                     __end_of_Write_to_RTC:
  1548                           
  1549                           	psect	text5
  1550  05C6                     __ptext5:	
  1551 ;; *************** function _I2C_Master_Write *****************
  1552 ;; Defined at:
  1553 ;;		line 84 in file "I2C.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  d               2    3[COMMON] unsigned int 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         2       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0
  1570 ;;      Totals:         2       0       0       0       0
  1571 ;;Total ram usage:        2 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    2
  1574 ;; This function calls:
  1575 ;;		_I2C_Master_Wait
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;;		_Write_to_RTC
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _I2C_Master_Write
  1584  05C6                     _I2C_Master_Write:
  1585  05C6                     l1538:	
  1586                           ;incstack = 0
  1587                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1588                           
  1589                           
  1590                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  1591  05C6  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  1592  05CB                     l1540:
  1593                           
  1594                           ;I2C.c: 87:     SSPBUF = d;
  1595  05CB  0873               	movf	I2C_Master_Write@d,w
  1596  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1597  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1598  05CE  0093               	movwf	19	;volatile
  1599  05CF                     l165:
  1600  05CF  0008               	return
  1601  05D0                     __end_of_I2C_Master_Write:
  1602                           
  1603                           	psect	text6
  1604  05D0                     __ptext6:	
  1605 ;; *************** function _I2C_Master_Stop *****************
  1606 ;; Defined at:
  1607 ;;		line 73 in file "I2C.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0
  1624 ;;      Totals:         0       0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    2
  1628 ;; This function calls:
  1629 ;;		_I2C_Master_Wait
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;;		_Write_to_RTC
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _I2C_Master_Stop
  1638  05D0                     _I2C_Master_Stop:
  1639  05D0                     l1542:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1642                           
  1643                           
  1644                           ;I2C.c: 75:     I2C_Master_Wait();
  1645  05D0  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  1646  05D5                     l1544:
  1647                           
  1648                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  1649  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  1650  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  1651  05D7  1511               	bsf	17,2	;volatile
  1652  05D8                     l162:
  1653  05D8  0008               	return
  1654  05D9                     __end_of_I2C_Master_Stop:
  1655                           
  1656                           	psect	text7
  1657  05D9                     __ptext7:	
  1658 ;; *************** function _I2C_Master_Start *****************
  1659 ;; Defined at:
  1660 ;;		line 56 in file "I2C.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, pclath, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    2
  1681 ;; This function calls:
  1682 ;;		_I2C_Master_Wait
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;;		_Write_to_RTC
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _I2C_Master_Start
  1691  05D9                     _I2C_Master_Start:
  1692  05D9                     l1534:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1695                           
  1696                           
  1697                           ;I2C.c: 57:     I2C_Master_Wait();
  1698  05D9  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  1699  05DE                     l1536:
  1700                           
  1701                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  1702  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1703  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  1704  05E0  1411               	bsf	17,0	;volatile
  1705  05E1                     l156:
  1706  05E1  0008               	return
  1707  05E2                     __end_of_I2C_Master_Start:
  1708                           
  1709                           	psect	text8
  1710  002C                     __ptext8:	
  1711 ;; *************** function _RTC_display *****************
  1712 ;; Defined at:
  1713 ;;		line 158 in file "main_prueba3_mini2.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0
  1729 ;;      Temps:          0       3       0       0       0
  1730 ;;      Totals:         0       3       0       0       0
  1731 ;;Total ram usage:        3 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    4
  1734 ;; This function calls:
  1735 ;;		_Lcd_Set_Cursor
  1736 ;;		_Lcd_Write_String
  1737 ;;		___awdiv
  1738 ;;		___awmod
  1739 ;;		_bcd_to_decimal
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _RTC_display
  1747  002C                     _RTC_display:
  1748  002C                     l1678:	
  1749                           ;incstack = 0
  1750                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1751                           
  1752                           
  1753                           ;main_prueba3_mini2.c: 160:     second = bcd_to_decimal(second);
  1754  002C  087A               	movf	_second,w
  1755  002D  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1756  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0034  00DE               	movwf	??_RTC_display
  1759  0035  085E               	movf	??_RTC_display,w
  1760  0036  00FA               	movwf	_second
  1761                           
  1762                           ;main_prueba3_mini2.c: 161:     minute = bcd_to_decimal(minute);
  1763  0037  0879               	movf	_minute,w
  1764  0038  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1765  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1766  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1767  003F  00DE               	movwf	??_RTC_display
  1768  0040  085E               	movf	??_RTC_display,w
  1769  0041  00F9               	movwf	_minute
  1770                           
  1771                           ;main_prueba3_mini2.c: 162:     hour = bcd_to_decimal(hour);
  1772  0042  0878               	movf	_hour,w
  1773  0043  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1774  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1776  004A  00DE               	movwf	??_RTC_display
  1777  004B  085E               	movf	??_RTC_display,w
  1778  004C  00F8               	movwf	_hour
  1779                           
  1780                           ;main_prueba3_mini2.c: 163:     m_day = bcd_to_decimal(m_day);
  1781  004D  0858               	movf	_m_day,w
  1782  004E  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1783  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0055  00DE               	movwf	??_RTC_display
  1786  0056  085E               	movf	??_RTC_display,w
  1787  0057  00D8               	movwf	_m_day
  1788                           
  1789                           ;main_prueba3_mini2.c: 164:     month = bcd_to_decimal(month);
  1790  0058  0857               	movf	_month,w
  1791  0059  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1792  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1793  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0060  00DE               	movwf	??_RTC_display
  1795  0061  085E               	movf	??_RTC_display,w
  1796  0062  00D7               	movwf	_month
  1797                           
  1798                           ;main_prueba3_mini2.c: 165:     year = bcd_to_decimal(year);
  1799  0063  0856               	movf	_year,w
  1800  0064  120A  118A  2526  120A  118A  	fcall	_bcd_to_decimal
  1801  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1802  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1803  006B  00DE               	movwf	??_RTC_display
  1804  006C  085E               	movf	??_RTC_display,w
  1805  006D  00D6               	movwf	_year
  1806                           
  1807                           ;main_prueba3_mini2.c: 169:     Time[6] = hour / 10 + '0';
  1808  006E  300A               	movlw	10
  1809  006F  00F3               	movwf	___awdiv@divisor
  1810  0070  3000               	movlw	0
  1811  0071  00F4               	movwf	___awdiv@divisor+1
  1812  0072  0878               	movf	_hour,w
  1813  0073  00DE               	movwf	??_RTC_display
  1814  0074  01DF               	clrf	??_RTC_display+1
  1815  0075  085E               	movf	??_RTC_display,w
  1816  0076  00F5               	movwf	___awdiv@dividend
  1817  0077  085F               	movf	??_RTC_display+1,w
  1818  0078  00F6               	movwf	___awdiv@dividend+1
  1819  0079  120A  118A  2259  120A  118A  	fcall	___awdiv
  1820  007E  0873               	movf	?___awdiv,w
  1821  007F  3E30               	addlw	48
  1822  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0082  00E0               	movwf	??_RTC_display+2
  1825  0083  0860               	movf	??_RTC_display+2,w
  1826  0084  00B7               	movwf	_Time+6
  1827                           
  1828                           ;main_prueba3_mini2.c: 170:     Time[7] = hour % 10 + '0';
  1829  0085  300A               	movlw	10
  1830  0086  00F3               	movwf	___awmod@divisor
  1831  0087  3000               	movlw	0
  1832  0088  00F4               	movwf	___awmod@divisor+1
  1833  0089  0878               	movf	_hour,w
  1834  008A  00DE               	movwf	??_RTC_display
  1835  008B  01DF               	clrf	??_RTC_display+1
  1836  008C  085E               	movf	??_RTC_display,w
  1837  008D  00F5               	movwf	___awmod@dividend
  1838  008E  085F               	movf	??_RTC_display+1,w
  1839  008F  00F6               	movwf	___awmod@dividend+1
  1840  0090  120A  118A  232A  120A  118A  	fcall	___awmod
  1841  0095  0873               	movf	?___awmod,w
  1842  0096  3E30               	addlw	48
  1843  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0099  00E0               	movwf	??_RTC_display+2
  1846  009A  0860               	movf	??_RTC_display+2,w
  1847  009B  00B8               	movwf	_Time+7
  1848                           
  1849                           ;main_prueba3_mini2.c: 171:     Time[9] = minute / 10 + '0';
  1850  009C  300A               	movlw	10
  1851  009D  00F3               	movwf	___awdiv@divisor
  1852  009E  3000               	movlw	0
  1853  009F  00F4               	movwf	___awdiv@divisor+1
  1854  00A0  0879               	movf	_minute,w
  1855  00A1  00DE               	movwf	??_RTC_display
  1856  00A2  01DF               	clrf	??_RTC_display+1
  1857  00A3  085E               	movf	??_RTC_display,w
  1858  00A4  00F5               	movwf	___awdiv@dividend
  1859  00A5  085F               	movf	??_RTC_display+1,w
  1860  00A6  00F6               	movwf	___awdiv@dividend+1
  1861  00A7  120A  118A  2259  120A  118A  	fcall	___awdiv
  1862  00AC  0873               	movf	?___awdiv,w
  1863  00AD  3E30               	addlw	48
  1864  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1865  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1866  00B0  00E0               	movwf	??_RTC_display+2
  1867  00B1  0860               	movf	??_RTC_display+2,w
  1868  00B2  00BA               	movwf	_Time+9
  1869                           
  1870                           ;main_prueba3_mini2.c: 172:     Time[10] = minute % 10 + '0';
  1871  00B3  300A               	movlw	10
  1872  00B4  00F3               	movwf	___awmod@divisor
  1873  00B5  3000               	movlw	0
  1874  00B6  00F4               	movwf	___awmod@divisor+1
  1875  00B7  0879               	movf	_minute,w
  1876  00B8  00DE               	movwf	??_RTC_display
  1877  00B9  01DF               	clrf	??_RTC_display+1
  1878  00BA  085E               	movf	??_RTC_display,w
  1879  00BB  00F5               	movwf	___awmod@dividend
  1880  00BC  085F               	movf	??_RTC_display+1,w
  1881  00BD  00F6               	movwf	___awmod@dividend+1
  1882  00BE  120A  118A  232A  120A  118A  	fcall	___awmod
  1883  00C3  0873               	movf	?___awmod,w
  1884  00C4  3E30               	addlw	48
  1885  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1886  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1887  00C7  00E0               	movwf	??_RTC_display+2
  1888  00C8  0860               	movf	??_RTC_display+2,w
  1889  00C9  00BB               	movwf	_Time+10
  1890                           
  1891                           ;main_prueba3_mini2.c: 173:     Time[12] = second / 10 + '0';
  1892  00CA  300A               	movlw	10
  1893  00CB  00F3               	movwf	___awdiv@divisor
  1894  00CC  3000               	movlw	0
  1895  00CD  00F4               	movwf	___awdiv@divisor+1
  1896  00CE  087A               	movf	_second,w
  1897  00CF  00DE               	movwf	??_RTC_display
  1898  00D0  01DF               	clrf	??_RTC_display+1
  1899  00D1  085E               	movf	??_RTC_display,w
  1900  00D2  00F5               	movwf	___awdiv@dividend
  1901  00D3  085F               	movf	??_RTC_display+1,w
  1902  00D4  00F6               	movwf	___awdiv@dividend+1
  1903  00D5  120A  118A  2259  120A  118A  	fcall	___awdiv
  1904  00DA  0873               	movf	?___awdiv,w
  1905  00DB  3E30               	addlw	48
  1906  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1907  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1908  00DE  00E0               	movwf	??_RTC_display+2
  1909  00DF  0860               	movf	??_RTC_display+2,w
  1910  00E0  00BD               	movwf	_Time+12
  1911                           
  1912                           ;main_prueba3_mini2.c: 174:     Time[13] = second % 10 + '0';
  1913  00E1  300A               	movlw	10
  1914  00E2  00F3               	movwf	___awmod@divisor
  1915  00E3  3000               	movlw	0
  1916  00E4  00F4               	movwf	___awmod@divisor+1
  1917  00E5  087A               	movf	_second,w
  1918  00E6  00DE               	movwf	??_RTC_display
  1919  00E7  01DF               	clrf	??_RTC_display+1
  1920  00E8  085E               	movf	??_RTC_display,w
  1921  00E9  00F5               	movwf	___awmod@dividend
  1922  00EA  085F               	movf	??_RTC_display+1,w
  1923  00EB  00F6               	movwf	___awmod@dividend+1
  1924  00EC  120A  118A  232A  120A  118A  	fcall	___awmod
  1925  00F1  0873               	movf	?___awmod,w
  1926  00F2  3E30               	addlw	48
  1927  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1928  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1929  00F5  00E0               	movwf	??_RTC_display+2
  1930  00F6  0860               	movf	??_RTC_display+2,w
  1931  00F7  00BE               	movwf	_Time+13
  1932                           
  1933                           ;main_prueba3_mini2.c: 176:     Date[6] = m_day / 10 + '0';
  1934  00F8  300A               	movlw	10
  1935  00F9  00F3               	movwf	___awdiv@divisor
  1936  00FA  3000               	movlw	0
  1937  00FB  00F4               	movwf	___awdiv@divisor+1
  1938  00FC  0858               	movf	_m_day,w
  1939  00FD  00DE               	movwf	??_RTC_display
  1940  00FE  01DF               	clrf	??_RTC_display+1
  1941  00FF  085E               	movf	??_RTC_display,w
  1942  0100  00F5               	movwf	___awdiv@dividend
  1943  0101  085F               	movf	??_RTC_display+1,w
  1944  0102  00F6               	movwf	___awdiv@dividend+1
  1945  0103  120A  118A  2259  120A  118A  	fcall	___awdiv
  1946  0108  0873               	movf	?___awdiv,w
  1947  0109  3E30               	addlw	48
  1948  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1949  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1950  010C  00E0               	movwf	??_RTC_display+2
  1951  010D  0860               	movf	??_RTC_display+2,w
  1952  010E  00A6               	movwf	_Date+6
  1953                           
  1954                           ;main_prueba3_mini2.c: 177:     Date[7] = m_day % 10 + '0';
  1955  010F  300A               	movlw	10
  1956  0110  00F3               	movwf	___awmod@divisor
  1957  0111  3000               	movlw	0
  1958  0112  00F4               	movwf	___awmod@divisor+1
  1959  0113  0858               	movf	_m_day,w
  1960  0114  00DE               	movwf	??_RTC_display
  1961  0115  01DF               	clrf	??_RTC_display+1
  1962  0116  085E               	movf	??_RTC_display,w
  1963  0117  00F5               	movwf	___awmod@dividend
  1964  0118  085F               	movf	??_RTC_display+1,w
  1965  0119  00F6               	movwf	___awmod@dividend+1
  1966  011A  120A  118A  232A  120A  118A  	fcall	___awmod
  1967  011F  0873               	movf	?___awmod,w
  1968  0120  3E30               	addlw	48
  1969  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0123  00E0               	movwf	??_RTC_display+2
  1972  0124  0860               	movf	??_RTC_display+2,w
  1973  0125  00A7               	movwf	_Date+7
  1974                           
  1975                           ;main_prueba3_mini2.c: 178:     Date[9] = month / 10 + '0';
  1976  0126  300A               	movlw	10
  1977  0127  00F3               	movwf	___awdiv@divisor
  1978  0128  3000               	movlw	0
  1979  0129  00F4               	movwf	___awdiv@divisor+1
  1980  012A  0857               	movf	_month,w
  1981  012B  00DE               	movwf	??_RTC_display
  1982  012C  01DF               	clrf	??_RTC_display+1
  1983  012D  085E               	movf	??_RTC_display,w
  1984  012E  00F5               	movwf	___awdiv@dividend
  1985  012F  085F               	movf	??_RTC_display+1,w
  1986  0130  00F6               	movwf	___awdiv@dividend+1
  1987  0131  120A  118A  2259  120A  118A  	fcall	___awdiv
  1988  0136  0873               	movf	?___awdiv,w
  1989  0137  3E30               	addlw	48
  1990  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1992  013A  00E0               	movwf	??_RTC_display+2
  1993  013B  0860               	movf	??_RTC_display+2,w
  1994  013C  00A9               	movwf	_Date+9
  1995                           
  1996                           ;main_prueba3_mini2.c: 179:     Date[10] = month % 10 + '0';
  1997  013D  300A               	movlw	10
  1998  013E  00F3               	movwf	___awmod@divisor
  1999  013F  3000               	movlw	0
  2000  0140  00F4               	movwf	___awmod@divisor+1
  2001  0141  0857               	movf	_month,w
  2002  0142  00DE               	movwf	??_RTC_display
  2003  0143  01DF               	clrf	??_RTC_display+1
  2004  0144  085E               	movf	??_RTC_display,w
  2005  0145  00F5               	movwf	___awmod@dividend
  2006  0146  085F               	movf	??_RTC_display+1,w
  2007  0147  00F6               	movwf	___awmod@dividend+1
  2008  0148  120A  118A  232A  120A  118A  	fcall	___awmod
  2009  014D  0873               	movf	?___awmod,w
  2010  014E  3E30               	addlw	48
  2011  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0151  00E0               	movwf	??_RTC_display+2
  2014  0152  0860               	movf	??_RTC_display+2,w
  2015  0153  00AA               	movwf	_Date+10
  2016                           
  2017                           ;main_prueba3_mini2.c: 180:     Date[14] = year / 10 + '0';
  2018  0154  300A               	movlw	10
  2019  0155  00F3               	movwf	___awdiv@divisor
  2020  0156  3000               	movlw	0
  2021  0157  00F4               	movwf	___awdiv@divisor+1
  2022  0158  0856               	movf	_year,w
  2023  0159  00DE               	movwf	??_RTC_display
  2024  015A  01DF               	clrf	??_RTC_display+1
  2025  015B  085E               	movf	??_RTC_display,w
  2026  015C  00F5               	movwf	___awdiv@dividend
  2027  015D  085F               	movf	??_RTC_display+1,w
  2028  015E  00F6               	movwf	___awdiv@dividend+1
  2029  015F  120A  118A  2259  120A  118A  	fcall	___awdiv
  2030  0164  0873               	movf	?___awdiv,w
  2031  0165  3E30               	addlw	48
  2032  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0168  00E0               	movwf	??_RTC_display+2
  2035  0169  0860               	movf	??_RTC_display+2,w
  2036  016A  00AE               	movwf	_Date+14
  2037                           
  2038                           ;main_prueba3_mini2.c: 181:     Date[15] = year % 10 + '0';
  2039  016B  300A               	movlw	10
  2040  016C  00F3               	movwf	___awmod@divisor
  2041  016D  3000               	movlw	0
  2042  016E  00F4               	movwf	___awmod@divisor+1
  2043  016F  0856               	movf	_year,w
  2044  0170  00DE               	movwf	??_RTC_display
  2045  0171  01DF               	clrf	??_RTC_display+1
  2046  0172  085E               	movf	??_RTC_display,w
  2047  0173  00F5               	movwf	___awmod@dividend
  2048  0174  085F               	movf	??_RTC_display+1,w
  2049  0175  00F6               	movwf	___awmod@dividend+1
  2050  0176  120A  118A  232A  120A  118A  	fcall	___awmod
  2051  017B  0873               	movf	?___awmod,w
  2052  017C  3E30               	addlw	48
  2053  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2054  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2055  017F  00E0               	movwf	??_RTC_display+2
  2056  0180  0860               	movf	??_RTC_display+2,w
  2057  0181  00AF               	movwf	_Date+15
  2058                           
  2059                           ;main_prueba3_mini2.c: 183:     Lcd_Set_Cursor(1,1);
  2060  0182  01F7               	clrf	Lcd_Set_Cursor@b
  2061  0183  0AF7               	incf	Lcd_Set_Cursor@b,f
  2062  0184  3001               	movlw	1
  2063  0185  120A  118A  2499  120A  118A  	fcall	_Lcd_Set_Cursor
  2064  018A                     l1680:
  2065                           
  2066                           ;main_prueba3_mini2.c: 184:     Lcd_Write_String(Time);
  2067  018A  3031               	movlw	(low (_Time| 0))& (0+255)
  2068  018B  120A  118A  24BF  120A  118A  	fcall	_Lcd_Write_String
  2069  0190                     l1682:
  2070                           
  2071                           ;main_prueba3_mini2.c: 185:     Lcd_Set_Cursor(2,1);
  2072  0190  01F7               	clrf	Lcd_Set_Cursor@b
  2073  0191  0AF7               	incf	Lcd_Set_Cursor@b,f
  2074  0192  3002               	movlw	2
  2075  0193  120A  118A  2499  120A  118A  	fcall	_Lcd_Set_Cursor
  2076                           
  2077                           ;main_prueba3_mini2.c: 186:     Lcd_Write_String(Date);
  2078  0198  3020               	movlw	(low (_Date| 0))& (0+255)
  2079  0199  120A  118A  24BF  120A  118A  	fcall	_Lcd_Write_String
  2080  019E                     l112:
  2081  019E  0008               	return
  2082  019F                     __end_of_RTC_display:
  2083                           
  2084                           	psect	text9
  2085  0526                     __ptext9:	
  2086 ;; *************** function _bcd_to_decimal *****************
  2087 ;; Defined at:
  2088 ;;		line 149 in file "main_prueba3_mini2.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  number          1    wreg     unsigned char 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  number          1    7[COMMON] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      unsigned char 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0, pclath, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         0       0       0       0       0
  2103 ;;      Locals:         1       0       0       0       0
  2104 ;;      Temps:          0       3       0       0       0
  2105 ;;      Totals:         1       3       0       0       0
  2106 ;;Total ram usage:        4 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    2
  2109 ;; This function calls:
  2110 ;;		___bmul
  2111 ;; This function is called by:
  2112 ;;		_RTC_display
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function _bcd_to_decimal
  2118  0526                     _bcd_to_decimal:
  2119                           
  2120                           ;incstack = 0
  2121                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2122                           ;bcd_to_decimal@number stored from wreg
  2123  0526  00F7               	movwf	bcd_to_decimal@number
  2124  0527                     l1546:
  2125                           
  2126                           ;main_prueba3_mini2.c: 150:   return((number >> 4) * 10 + (number & 0x0F));
  2127  0527  300F               	movlw	15
  2128  0528  0577               	andwf	bcd_to_decimal@number,w
  2129  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2130  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2131  052B  00DA               	movwf	??_bcd_to_decimal
  2132  052C  300A               	movlw	10
  2133  052D  00DB               	movwf	??_bcd_to_decimal+1
  2134  052E  085B               	movf	??_bcd_to_decimal+1,w
  2135  052F  00F3               	movwf	___bmul@multiplicand
  2136  0530  0877               	movf	bcd_to_decimal@number,w
  2137  0531  00DC               	movwf	??_bcd_to_decimal+2
  2138  0532  3004               	movlw	4
  2139  0533                     u895:
  2140  0533  1003               	clrc
  2141  0534  0CDC               	rrf	??_bcd_to_decimal+2,f
  2142  0535  3EFF               	addlw	-1
  2143  0536  1D03               	skipz
  2144  0537  2D33               	goto	u895
  2145  0538  085C               	movf	??_bcd_to_decimal+2,w
  2146  0539  120A  118A  2572  120A  118A  	fcall	___bmul
  2147  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2148  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0540  075A               	addwf	??_bcd_to_decimal,w
  2150  0541                     l106:
  2151  0541  0008               	return
  2152  0542                     __end_of_bcd_to_decimal:
  2153                           
  2154                           	psect	text10
  2155  0572                     __ptext10:	
  2156 ;; *************** function ___bmul *****************
  2157 ;; Defined at:
  2158 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  multiplier      1    wreg     unsigned char 
  2161 ;;  multiplicand    1    3[COMMON] unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  multiplier      1    6[COMMON] unsigned char 
  2164 ;;  product         1    5[COMMON] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      unsigned char 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         1       0       0       0       0
  2175 ;;      Locals:         2       0       0       0       0
  2176 ;;      Temps:          1       0       0       0       0
  2177 ;;      Totals:         4       0       0       0       0
  2178 ;;Total ram usage:        4 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_bcd_to_decimal
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function ___bmul
  2190  0572                     ___bmul:
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2194                           ;___bmul@multiplier stored from wreg
  2195  0572  00F6               	movwf	___bmul@multiplier
  2196  0573                     l1194:
  2197  0573  01F5               	clrf	___bmul@product
  2198  0574                     l1196:
  2199  0574  1C76               	btfss	___bmul@multiplier,0
  2200  0575  2D77               	goto	u451
  2201  0576  2D78               	goto	u450
  2202  0577                     u451:
  2203  0577  2D7C               	goto	l1200
  2204  0578                     u450:
  2205  0578                     l1198:
  2206  0578  0873               	movf	___bmul@multiplicand,w
  2207  0579  00F4               	movwf	??___bmul
  2208  057A  0874               	movf	??___bmul,w
  2209  057B  07F5               	addwf	___bmul@product,f
  2210  057C                     l1200:
  2211  057C  1003               	clrc
  2212  057D  0DF3               	rlf	___bmul@multiplicand,f
  2213  057E                     l1202:
  2214  057E  1003               	clrc
  2215  057F  0CF6               	rrf	___bmul@multiplier,f
  2216  0580  0876               	movf	___bmul@multiplier,w
  2217  0581  1D03               	btfss	3,2
  2218  0582  2D84               	goto	u461
  2219  0583  2D85               	goto	u460
  2220  0584                     u461:
  2221  0584  2D74               	goto	l1196
  2222  0585                     u460:
  2223  0585                     l1204:
  2224  0585  0875               	movf	___bmul@product,w
  2225  0586                     l336:
  2226  0586  0008               	return
  2227  0587                     __end_of___bmul:
  2228                           
  2229                           	psect	text11
  2230  032A                     __ptext11:	
  2231 ;; *************** function ___awmod *****************
  2232 ;; Defined at:
  2233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  divisor         2    3[COMMON] int 
  2236 ;;  dividend        2    5[COMMON] int 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  sign            1    1[BANK0 ] unsigned char 
  2239 ;;  counter         1    0[BANK0 ] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  2    3[COMMON] int 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         4       0       0       0       0
  2250 ;;      Locals:         0       2       0       0       0
  2251 ;;      Temps:          1       0       0       0       0
  2252 ;;      Totals:         5       2       0       0       0
  2253 ;;Total ram usage:        7 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    1
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_RTC_display
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function ___awmod
  2265  032A                     ___awmod:
  2266  032A                     l1582:	
  2267                           ;incstack = 0
  2268                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2269                           
  2270  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2271  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2272  032C  01DB               	clrf	___awmod@sign
  2273  032D                     l1584:
  2274  032D  1FF6               	btfss	___awmod@dividend+1,7
  2275  032E  2B30               	goto	u941
  2276  032F  2B31               	goto	u940
  2277  0330                     u941:
  2278  0330  2B38               	goto	l1590
  2279  0331                     u940:
  2280  0331                     l1586:
  2281  0331  09F5               	comf	___awmod@dividend,f
  2282  0332  09F6               	comf	___awmod@dividend+1,f
  2283  0333  0AF5               	incf	___awmod@dividend,f
  2284  0334  1903               	skipnz
  2285  0335  0AF6               	incf	___awmod@dividend+1,f
  2286  0336                     l1588:
  2287  0336  01DB               	clrf	___awmod@sign
  2288  0337  0ADB               	incf	___awmod@sign,f
  2289  0338                     l1590:
  2290  0338  1FF4               	btfss	___awmod@divisor+1,7
  2291  0339  2B3B               	goto	u951
  2292  033A  2B3C               	goto	u950
  2293  033B                     u951:
  2294  033B  2B41               	goto	l1594
  2295  033C                     u950:
  2296  033C                     l1592:
  2297  033C  09F3               	comf	___awmod@divisor,f
  2298  033D  09F4               	comf	___awmod@divisor+1,f
  2299  033E  0AF3               	incf	___awmod@divisor,f
  2300  033F  1903               	skipnz
  2301  0340  0AF4               	incf	___awmod@divisor+1,f
  2302  0341                     l1594:
  2303  0341  0873               	movf	___awmod@divisor,w
  2304  0342  0474               	iorwf	___awmod@divisor+1,w
  2305  0343  1903               	btfsc	3,2
  2306  0344  2B46               	goto	u961
  2307  0345  2B47               	goto	u960
  2308  0346                     u961:
  2309  0346  2B76               	goto	l1612
  2310  0347                     u960:
  2311  0347                     l1596:
  2312  0347  01DA               	clrf	___awmod@counter
  2313  0348  0ADA               	incf	___awmod@counter,f
  2314  0349  2B55               	goto	l1602
  2315  034A                     l1598:
  2316  034A  3001               	movlw	1
  2317  034B                     u975:
  2318  034B  1003               	clrc
  2319  034C  0DF3               	rlf	___awmod@divisor,f
  2320  034D  0DF4               	rlf	___awmod@divisor+1,f
  2321  034E  3EFF               	addlw	-1
  2322  034F  1D03               	skipz
  2323  0350  2B4B               	goto	u975
  2324  0351                     l1600:
  2325  0351  3001               	movlw	1
  2326  0352  00F7               	movwf	??___awmod
  2327  0353  0877               	movf	??___awmod,w
  2328  0354  07DA               	addwf	___awmod@counter,f
  2329  0355                     l1602:
  2330  0355  1FF4               	btfss	___awmod@divisor+1,7
  2331  0356  2B58               	goto	u981
  2332  0357  2B59               	goto	u980
  2333  0358                     u981:
  2334  0358  2B4A               	goto	l1598
  2335  0359                     u980:
  2336  0359                     l1604:
  2337  0359  0874               	movf	___awmod@divisor+1,w
  2338  035A  0276               	subwf	___awmod@dividend+1,w
  2339  035B  1D03               	skipz
  2340  035C  2B5F               	goto	u995
  2341  035D  0873               	movf	___awmod@divisor,w
  2342  035E  0275               	subwf	___awmod@dividend,w
  2343  035F                     u995:
  2344  035F  1C03               	skipc
  2345  0360  2B62               	goto	u991
  2346  0361  2B63               	goto	u990
  2347  0362                     u991:
  2348  0362  2B69               	goto	l1608
  2349  0363                     u990:
  2350  0363                     l1606:
  2351  0363  0873               	movf	___awmod@divisor,w
  2352  0364  02F5               	subwf	___awmod@dividend,f
  2353  0365  0874               	movf	___awmod@divisor+1,w
  2354  0366  1C03               	skipc
  2355  0367  03F6               	decf	___awmod@dividend+1,f
  2356  0368  02F6               	subwf	___awmod@dividend+1,f
  2357  0369                     l1608:
  2358  0369  3001               	movlw	1
  2359  036A                     u1005:
  2360  036A  1003               	clrc
  2361  036B  0CF4               	rrf	___awmod@divisor+1,f
  2362  036C  0CF3               	rrf	___awmod@divisor,f
  2363  036D  3EFF               	addlw	-1
  2364  036E  1D03               	skipz
  2365  036F  2B6A               	goto	u1005
  2366  0370                     l1610:
  2367  0370  3001               	movlw	1
  2368  0371  02DA               	subwf	___awmod@counter,f
  2369  0372  1D03               	btfss	3,2
  2370  0373  2B75               	goto	u1011
  2371  0374  2B76               	goto	u1010
  2372  0375                     u1011:
  2373  0375  2B59               	goto	l1604
  2374  0376                     u1010:
  2375  0376                     l1612:
  2376  0376  085B               	movf	___awmod@sign,w
  2377  0377  1903               	btfsc	3,2
  2378  0378  2B7A               	goto	u1021
  2379  0379  2B7B               	goto	u1020
  2380  037A                     u1021:
  2381  037A  2B80               	goto	l1616
  2382  037B                     u1020:
  2383  037B                     l1614:
  2384  037B  09F5               	comf	___awmod@dividend,f
  2385  037C  09F6               	comf	___awmod@dividend+1,f
  2386  037D  0AF5               	incf	___awmod@dividend,f
  2387  037E  1903               	skipnz
  2388  037F  0AF6               	incf	___awmod@dividend+1,f
  2389  0380                     l1616:
  2390  0380  0876               	movf	___awmod@dividend+1,w
  2391  0381  00F4               	movwf	?___awmod+1
  2392  0382  0875               	movf	___awmod@dividend,w
  2393  0383  00F3               	movwf	?___awmod
  2394  0384                     l476:
  2395  0384  0008               	return
  2396  0385                     __end_of___awmod:
  2397                           
  2398                           	psect	text12
  2399  0259                     __ptext12:	
  2400 ;; *************** function ___awdiv *****************
  2401 ;; Defined at:
  2402 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  divisor         2    3[COMMON] int 
  2405 ;;  dividend        2    5[COMMON] int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  quotient        2    2[BANK0 ] int 
  2408 ;;  sign            1    1[BANK0 ] unsigned char 
  2409 ;;  counter         1    0[BANK0 ] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2    3[COMMON] int 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         4       0       0       0       0
  2420 ;;      Locals:         0       4       0       0       0
  2421 ;;      Temps:          1       0       0       0       0
  2422 ;;      Totals:         5       4       0       0       0
  2423 ;;Total ram usage:        9 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_RTC_display
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function ___awdiv
  2435  0259                     ___awdiv:
  2436  0259                     l1280:	
  2437                           ;incstack = 0
  2438                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2439                           
  2440  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2441  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2442  025B  01DB               	clrf	___awdiv@sign
  2443  025C                     l1282:
  2444  025C  1FF4               	btfss	___awdiv@divisor+1,7
  2445  025D  2A5F               	goto	u591
  2446  025E  2A60               	goto	u590
  2447  025F                     u591:
  2448  025F  2A67               	goto	l1288
  2449  0260                     u590:
  2450  0260                     l1284:
  2451  0260  09F3               	comf	___awdiv@divisor,f
  2452  0261  09F4               	comf	___awdiv@divisor+1,f
  2453  0262  0AF3               	incf	___awdiv@divisor,f
  2454  0263  1903               	skipnz
  2455  0264  0AF4               	incf	___awdiv@divisor+1,f
  2456  0265                     l1286:
  2457  0265  01DB               	clrf	___awdiv@sign
  2458  0266  0ADB               	incf	___awdiv@sign,f
  2459  0267                     l1288:
  2460  0267  1FF6               	btfss	___awdiv@dividend+1,7
  2461  0268  2A6A               	goto	u601
  2462  0269  2A6B               	goto	u600
  2463  026A                     u601:
  2464  026A  2A74               	goto	l1294
  2465  026B                     u600:
  2466  026B                     l1290:
  2467  026B  09F5               	comf	___awdiv@dividend,f
  2468  026C  09F6               	comf	___awdiv@dividend+1,f
  2469  026D  0AF5               	incf	___awdiv@dividend,f
  2470  026E  1903               	skipnz
  2471  026F  0AF6               	incf	___awdiv@dividend+1,f
  2472  0270                     l1292:
  2473  0270  3001               	movlw	1
  2474  0271  00F7               	movwf	??___awdiv
  2475  0272  0877               	movf	??___awdiv,w
  2476  0273  06DB               	xorwf	___awdiv@sign,f
  2477  0274                     l1294:
  2478  0274  01DC               	clrf	___awdiv@quotient
  2479  0275  01DD               	clrf	___awdiv@quotient+1
  2480  0276                     l1296:
  2481  0276  0873               	movf	___awdiv@divisor,w
  2482  0277  0474               	iorwf	___awdiv@divisor+1,w
  2483  0278  1903               	btfsc	3,2
  2484  0279  2A7B               	goto	u611
  2485  027A  2A7C               	goto	u610
  2486  027B                     u611:
  2487  027B  2AB3               	goto	l1316
  2488  027C                     u610:
  2489  027C                     l1298:
  2490  027C  01DA               	clrf	___awdiv@counter
  2491  027D  0ADA               	incf	___awdiv@counter,f
  2492  027E  2A8A               	goto	l1304
  2493  027F                     l1300:
  2494  027F  3001               	movlw	1
  2495  0280                     u625:
  2496  0280  1003               	clrc
  2497  0281  0DF3               	rlf	___awdiv@divisor,f
  2498  0282  0DF4               	rlf	___awdiv@divisor+1,f
  2499  0283  3EFF               	addlw	-1
  2500  0284  1D03               	skipz
  2501  0285  2A80               	goto	u625
  2502  0286                     l1302:
  2503  0286  3001               	movlw	1
  2504  0287  00F7               	movwf	??___awdiv
  2505  0288  0877               	movf	??___awdiv,w
  2506  0289  07DA               	addwf	___awdiv@counter,f
  2507  028A                     l1304:
  2508  028A  1FF4               	btfss	___awdiv@divisor+1,7
  2509  028B  2A8D               	goto	u631
  2510  028C  2A8E               	goto	u630
  2511  028D                     u631:
  2512  028D  2A7F               	goto	l1300
  2513  028E                     u630:
  2514  028E                     l1306:
  2515  028E  3001               	movlw	1
  2516  028F                     u645:
  2517  028F  1003               	clrc
  2518  0290  0DDC               	rlf	___awdiv@quotient,f
  2519  0291  0DDD               	rlf	___awdiv@quotient+1,f
  2520  0292  3EFF               	addlw	-1
  2521  0293  1D03               	skipz
  2522  0294  2A8F               	goto	u645
  2523  0295  0874               	movf	___awdiv@divisor+1,w
  2524  0296  0276               	subwf	___awdiv@dividend+1,w
  2525  0297  1D03               	skipz
  2526  0298  2A9B               	goto	u655
  2527  0299  0873               	movf	___awdiv@divisor,w
  2528  029A  0275               	subwf	___awdiv@dividend,w
  2529  029B                     u655:
  2530  029B  1C03               	skipc
  2531  029C  2A9E               	goto	u651
  2532  029D  2A9F               	goto	u650
  2533  029E                     u651:
  2534  029E  2AA6               	goto	l1312
  2535  029F                     u650:
  2536  029F                     l1308:
  2537  029F  0873               	movf	___awdiv@divisor,w
  2538  02A0  02F5               	subwf	___awdiv@dividend,f
  2539  02A1  0874               	movf	___awdiv@divisor+1,w
  2540  02A2  1C03               	skipc
  2541  02A3  03F6               	decf	___awdiv@dividend+1,f
  2542  02A4  02F6               	subwf	___awdiv@dividend+1,f
  2543  02A5                     l1310:
  2544  02A5  145C               	bsf	___awdiv@quotient,0
  2545  02A6                     l1312:
  2546  02A6  3001               	movlw	1
  2547  02A7                     u665:
  2548  02A7  1003               	clrc
  2549  02A8  0CF4               	rrf	___awdiv@divisor+1,f
  2550  02A9  0CF3               	rrf	___awdiv@divisor,f
  2551  02AA  3EFF               	addlw	-1
  2552  02AB  1D03               	skipz
  2553  02AC  2AA7               	goto	u665
  2554  02AD                     l1314:
  2555  02AD  3001               	movlw	1
  2556  02AE  02DA               	subwf	___awdiv@counter,f
  2557  02AF  1D03               	btfss	3,2
  2558  02B0  2AB2               	goto	u671
  2559  02B1  2AB3               	goto	u670
  2560  02B2                     u671:
  2561  02B2  2A8E               	goto	l1306
  2562  02B3                     u670:
  2563  02B3                     l1316:
  2564  02B3  085B               	movf	___awdiv@sign,w
  2565  02B4  1903               	btfsc	3,2
  2566  02B5  2AB7               	goto	u681
  2567  02B6  2AB8               	goto	u680
  2568  02B7                     u681:
  2569  02B7  2ABD               	goto	l1320
  2570  02B8                     u680:
  2571  02B8                     l1318:
  2572  02B8  09DC               	comf	___awdiv@quotient,f
  2573  02B9  09DD               	comf	___awdiv@quotient+1,f
  2574  02BA  0ADC               	incf	___awdiv@quotient,f
  2575  02BB  1903               	skipnz
  2576  02BC  0ADD               	incf	___awdiv@quotient+1,f
  2577  02BD                     l1320:
  2578  02BD  085D               	movf	___awdiv@quotient+1,w
  2579  02BE  00F4               	movwf	?___awdiv+1
  2580  02BF  085C               	movf	___awdiv@quotient,w
  2581  02C0  00F3               	movwf	?___awdiv
  2582  02C1                     l463:
  2583  02C1  0008               	return
  2584  02C2                     __end_of___awdiv:
  2585                           
  2586                           	psect	text13
  2587  04BF                     __ptext13:	
  2588 ;; *************** function _Lcd_Write_String *****************
  2589 ;; Defined at:
  2590 ;;		line 71 in file "LCD.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  a               1    wreg     PTR unsigned char 
  2593 ;;		 -> Date(17), Time(15), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2596 ;;		 -> Date(17), Time(15), 
  2597 ;;  i               2    0[BANK0 ] int 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       3       0       0       0
  2609 ;;      Temps:          1       0       0       0       0
  2610 ;;      Totals:         1       3       0       0       0
  2611 ;;Total ram usage:        4 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    3
  2614 ;; This function calls:
  2615 ;;		_Lcd_Write_Char
  2616 ;; This function is called by:
  2617 ;;		_RTC_display
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function _Lcd_Write_String
  2623  04BF                     _Lcd_Write_String:
  2624                           
  2625                           ;incstack = 0
  2626                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2627                           ;Lcd_Write_String@a stored from wreg
  2628  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2629  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2630  04C1  00DC               	movwf	Lcd_Write_String@a
  2631  04C2                     l1562:
  2632                           
  2633                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  2634  04C2  01DA               	clrf	Lcd_Write_String@i
  2635  04C3  01DB               	clrf	Lcd_Write_String@i+1
  2636  04C4  2CD8               	goto	l1568
  2637  04C5                     l1564:
  2638                           
  2639                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  2640  04C5  085A               	movf	Lcd_Write_String@i,w
  2641  04C6  075C               	addwf	Lcd_Write_String@a,w
  2642  04C7  00F6               	movwf	??_Lcd_Write_String
  2643  04C8  0876               	movf	??_Lcd_Write_String,w
  2644  04C9  0084               	movwf	4
  2645  04CA  0800               	movf	0,w
  2646  04CB  120A  118A  255C  120A  118A  	fcall	_Lcd_Write_Char
  2647  04D0                     l1566:
  2648  04D0  3001               	movlw	1
  2649  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2650  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2651  04D3  07DA               	addwf	Lcd_Write_String@i,f
  2652  04D4  1803               	skipnc
  2653  04D5  0ADB               	incf	Lcd_Write_String@i+1,f
  2654  04D6  3000               	movlw	0
  2655  04D7  07DB               	addwf	Lcd_Write_String@i+1,f
  2656  04D8                     l1568:
  2657  04D8  085A               	movf	Lcd_Write_String@i,w
  2658  04D9  075C               	addwf	Lcd_Write_String@a,w
  2659  04DA  00F6               	movwf	??_Lcd_Write_String
  2660  04DB  0876               	movf	??_Lcd_Write_String,w
  2661  04DC  0084               	movwf	4
  2662  04DD  1383               	bcf	3,7	;select IRP bank0
  2663  04DE  0800               	movf	0,w
  2664  04DF  1D03               	btfss	3,2
  2665  04E0  2CE2               	goto	u921
  2666  04E1  2CE3               	goto	u920
  2667  04E2                     u921:
  2668  04E2  2CC5               	goto	l1564
  2669  04E3                     u920:
  2670  04E3                     l212:
  2671  04E3  0008               	return
  2672  04E4                     __end_of_Lcd_Write_String:
  2673                           
  2674                           	psect	text14
  2675  055C                     __ptext14:	
  2676 ;; *************** function _Lcd_Write_Char *****************
  2677 ;; Defined at:
  2678 ;;		line 62 in file "LCD.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  a               1    wreg     unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  a               1    5[COMMON] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         1       0       0       0       0
  2694 ;;      Temps:          1       0       0       0       0
  2695 ;;      Totals:         2       0       0       0       0
  2696 ;;Total ram usage:        2 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    2
  2699 ;; This function calls:
  2700 ;;		_Lcd_Port
  2701 ;; This function is called by:
  2702 ;;		_Lcd_Write_String
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _Lcd_Write_Char
  2708  055C                     _Lcd_Write_Char:
  2709                           
  2710                           ;incstack = 0
  2711                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2712                           ;Lcd_Write_Char@a stored from wreg
  2713  055C  00F5               	movwf	Lcd_Write_Char@a
  2714  055D                     l1500:
  2715                           
  2716                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  2717  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2718  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2719  055F  1409               	bsf	9,0	;volatile
  2720  0560                     l1502:
  2721                           
  2722                           ;LCD.c: 64:    Lcd_Port(a);
  2723  0560  0875               	movf	Lcd_Write_Char@a,w
  2724  0561  120A  118A  25F3  120A  118A  	fcall	_Lcd_Port
  2725  0566                     l1504:
  2726                           
  2727                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  2728  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0568  1509               	bsf	9,2	;volatile
  2731  0569                     l1506:
  2732                           
  2733                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2734  0569  301A               	movlw	26
  2735  056A  00F4               	movwf	??_Lcd_Write_Char
  2736  056B                     u1057:
  2737  056B  0BF4               	decfsz	??_Lcd_Write_Char,f
  2738  056C  2D6B               	goto	u1057
  2739  056D  0000               	nop
  2740  056E                     l1508:
  2741                           
  2742                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  2743  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2744  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0570  1109               	bcf	9,2	;volatile
  2746  0571                     l206:
  2747  0571  0008               	return
  2748  0572                     __end_of_Lcd_Write_Char:
  2749                           
  2750                           	psect	text15
  2751  0499                     __ptext15:	
  2752 ;; *************** function _Lcd_Set_Cursor *****************
  2753 ;; Defined at:
  2754 ;;		line 49 in file "LCD.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  a               1    wreg     unsigned char 
  2757 ;;  b               1    7[COMMON] unsigned char 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  a               1    1[BANK0 ] unsigned char 
  2760 ;;  temp            1    2[BANK0 ] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         1       0       0       0       0
  2771 ;;      Locals:         0       2       0       0       0
  2772 ;;      Temps:          0       1       0       0       0
  2773 ;;      Totals:         1       3       0       0       0
  2774 ;;Total ram usage:        4 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    3
  2777 ;; This function calls:
  2778 ;;		_Lcd_Cmd
  2779 ;; This function is called by:
  2780 ;;		_RTC_display
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _Lcd_Set_Cursor
  2786  0499                     _Lcd_Set_Cursor:
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2790                           ;Lcd_Set_Cursor@a stored from wreg
  2791  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2792  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2793  049B  00DB               	movwf	Lcd_Set_Cursor@a
  2794  049C                     l1550:
  2795                           
  2796                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  2797  049C  035B               	decf	Lcd_Set_Cursor@a,w
  2798  049D  1D03               	btfss	3,2
  2799  049E  2CA0               	goto	u901
  2800  049F  2CA1               	goto	u900
  2801  04A0                     u901:
  2802  04A0  2CAD               	goto	l1556
  2803  04A1                     u900:
  2804  04A1                     l1552:
  2805                           
  2806                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  2807  04A1  0877               	movf	Lcd_Set_Cursor@b,w
  2808  04A2  3E7F               	addlw	127
  2809  04A3  00DA               	movwf	??_Lcd_Set_Cursor
  2810  04A4  085A               	movf	??_Lcd_Set_Cursor,w
  2811  04A5  00DC               	movwf	Lcd_Set_Cursor@temp
  2812  04A6                     l1554:
  2813                           
  2814                           ;LCD.c: 53:         Lcd_Cmd(temp);
  2815  04A6  085C               	movf	Lcd_Set_Cursor@temp,w
  2816  04A7  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2817                           
  2818                           ;LCD.c: 54:  }
  2819  04AC  2CBE               	goto	l203
  2820  04AD                     l1556:
  2821  04AD  3002               	movlw	2
  2822  04AE  065B               	xorwf	Lcd_Set_Cursor@a,w
  2823  04AF  1D03               	btfss	3,2
  2824  04B0  2CB2               	goto	u911
  2825  04B1  2CB3               	goto	u910
  2826  04B2                     u911:
  2827  04B2  2CBE               	goto	l203
  2828  04B3                     u910:
  2829  04B3                     l1558:
  2830                           
  2831                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  2832  04B3  0877               	movf	Lcd_Set_Cursor@b,w
  2833  04B4  3EBF               	addlw	191
  2834  04B5  00DA               	movwf	??_Lcd_Set_Cursor
  2835  04B6  085A               	movf	??_Lcd_Set_Cursor,w
  2836  04B7  00DC               	movwf	Lcd_Set_Cursor@temp
  2837  04B8                     l1560:
  2838                           
  2839                           ;LCD.c: 57:   Lcd_Cmd(temp);
  2840  04B8  085C               	movf	Lcd_Set_Cursor@temp,w
  2841  04B9  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2842  04BE                     l203:
  2843  04BE  0008               	return
  2844  04BF                     __end_of_Lcd_Set_Cursor:
  2845                           
  2846                           	psect	text16
  2847  03DF                     __ptext16:	
  2848 ;; *************** function _Lcd_Init *****************
  2849 ;; Defined at:
  2850 ;;		line 15 in file "LCD.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0
  2866 ;;      Temps:          0       2       0       0       0
  2867 ;;      Totals:         0       2       0       0       0
  2868 ;;Total ram usage:        2 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    3
  2871 ;; This function calls:
  2872 ;;		_Lcd_Cmd
  2873 ;;		_Lcd_Port
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _Lcd_Init
  2881  03DF                     _Lcd_Init:
  2882  03DF                     l1644:	
  2883                           ;incstack = 0
  2884                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2885                           
  2886                           
  2887                           ;LCD.c: 16:   Lcd_Port(0x00);
  2888  03DF  3000               	movlw	0
  2889  03E0  120A  118A  25F3  120A  118A  	fcall	_Lcd_Port
  2890  03E5                     l1646:
  2891                           
  2892                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2893  03E5  3034               	movlw	52
  2894  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2895  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2896  03E8  00DB               	movwf	??_Lcd_Init+1
  2897  03E9  30F1               	movlw	241
  2898  03EA  00DA               	movwf	??_Lcd_Init
  2899  03EB                     u1067:
  2900  03EB  0BDA               	decfsz	??_Lcd_Init,f
  2901  03EC  2BEB               	goto	u1067
  2902  03ED  0BDB               	decfsz	??_Lcd_Init+1,f
  2903  03EE  2BEB               	goto	u1067
  2904  03EF                     l1648:
  2905                           
  2906                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  2907  03EF  3030               	movlw	48
  2908  03F0  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2909                           
  2910                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2911  03F5  300D               	movlw	13
  2912  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2913  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2914  03F8  00DB               	movwf	??_Lcd_Init+1
  2915  03F9  30FB               	movlw	251
  2916  03FA  00DA               	movwf	??_Lcd_Init
  2917  03FB                     u1077:
  2918  03FB  0BDA               	decfsz	??_Lcd_Init,f
  2919  03FC  2BFB               	goto	u1077
  2920  03FD  0BDB               	decfsz	??_Lcd_Init+1,f
  2921  03FE  2BFB               	goto	u1077
  2922  03FF                     l1650:
  2923                           
  2924                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  2925  03FF  3030               	movlw	48
  2926  0400  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2927  0405                     l1652:
  2928                           
  2929                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2930  0405  301D               	movlw	29
  2931  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0408  00DB               	movwf	??_Lcd_Init+1
  2934  0409  3090               	movlw	144
  2935  040A  00DA               	movwf	??_Lcd_Init
  2936  040B                     u1087:
  2937  040B  0BDA               	decfsz	??_Lcd_Init,f
  2938  040C  2C0B               	goto	u1087
  2939  040D  0BDB               	decfsz	??_Lcd_Init+1,f
  2940  040E  2C0B               	goto	u1087
  2941  040F  0000               	nop
  2942                           
  2943                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  2944  0410  3030               	movlw	48
  2945  0411  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2946                           
  2947                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  2948  0416  3038               	movlw	56
  2949  0417  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2950                           
  2951                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  2952  041C  300C               	movlw	12
  2953  041D  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2954                           
  2955                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  2956  0422  3001               	movlw	1
  2957  0423  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2958                           
  2959                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  2960  0428  3006               	movlw	6
  2961  0429  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  2962  042E                     l188:
  2963  042E  0008               	return
  2964  042F                     __end_of_Lcd_Init:
  2965                           
  2966                           	psect	text17
  2967  05AC                     __ptext17:	
  2968 ;; *************** function _Lcd_Clear *****************
  2969 ;; Defined at:
  2970 ;;		line 43 in file "LCD.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    3
  2991 ;; This function calls:
  2992 ;;		_Lcd_Cmd
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _Lcd_Clear
  3000  05AC                     _Lcd_Clear:
  3001  05AC                     l1654:	
  3002                           ;incstack = 0
  3003                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3004                           
  3005                           
  3006                           ;LCD.c: 44:  Lcd_Cmd(0);
  3007  05AC  3000               	movlw	0
  3008  05AD  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3009                           
  3010                           ;LCD.c: 45:  Lcd_Cmd(1);
  3011  05B2  3001               	movlw	1
  3012  05B3  120A  118A  2542  120A  118A  	fcall	_Lcd_Cmd
  3013  05B8                     l197:
  3014  05B8  0008               	return
  3015  05B9                     __end_of_Lcd_Clear:
  3016                           
  3017                           	psect	text18
  3018  0542                     __ptext18:	
  3019 ;; *************** function _Lcd_Cmd *****************
  3020 ;; Defined at:
  3021 ;;		line 34 in file "LCD.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  a               1    wreg     unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  a               1    6[COMMON] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         1       0       0       0       0
  3037 ;;      Temps:          2       0       0       0       0
  3038 ;;      Totals:         3       0       0       0       0
  3039 ;;Total ram usage:        3 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    2
  3042 ;; This function calls:
  3043 ;;		_Lcd_Port
  3044 ;; This function is called by:
  3045 ;;		_Lcd_Init
  3046 ;;		_Lcd_Clear
  3047 ;;		_Lcd_Set_Cursor
  3048 ;;		_Lcd_Shift_Right
  3049 ;;		_Lcd_Shift_Left
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _Lcd_Cmd
  3055  0542                     _Lcd_Cmd:
  3056                           
  3057                           ;incstack = 0
  3058                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3059                           ;Lcd_Cmd@a stored from wreg
  3060  0542  00F6               	movwf	Lcd_Cmd@a
  3061  0543                     l1490:
  3062                           
  3063                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  3064  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0545  1009               	bcf	9,0	;volatile
  3067  0546                     l1492:
  3068                           
  3069                           ;LCD.c: 36:  Lcd_Port(a);
  3070  0546  0876               	movf	Lcd_Cmd@a,w
  3071  0547  120A  118A  25F3  120A  118A  	fcall	_Lcd_Port
  3072  054C                     l1494:
  3073                           
  3074                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  3075  054C  1283               	bcf	3,5	;RP0=0, select bank0
  3076  054D  1303               	bcf	3,6	;RP1=0, select bank0
  3077  054E  1509               	bsf	9,2	;volatile
  3078  054F                     l1496:
  3079                           
  3080                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3081  054F  300B               	movlw	11
  3082  0550  00F5               	movwf	??_Lcd_Cmd+1
  3083  0551  3062               	movlw	98
  3084  0552  00F4               	movwf	??_Lcd_Cmd
  3085  0553                     u1097:
  3086  0553  0BF4               	decfsz	??_Lcd_Cmd,f
  3087  0554  2D53               	goto	u1097
  3088  0555  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3089  0556  2D53               	goto	u1097
  3090  0557  0000               	nop
  3091  0558                     l1498:
  3092                           
  3093                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  3094  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3096  055A  1109               	bcf	9,2	;volatile
  3097  055B                     l194:
  3098  055B  0008               	return
  3099  055C                     __end_of_Lcd_Cmd:
  3100                           
  3101                           	psect	text19
  3102  05F3                     __ptext19:	
  3103 ;; *************** function _Lcd_Port *****************
  3104 ;; Defined at:
  3105 ;;		line 30 in file "LCD.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  a               1    wreg     unsigned char 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  a               1    3[COMMON] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3119 ;;      Params:         0       0       0       0       0
  3120 ;;      Locals:         1       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0
  3122 ;;      Totals:         1       0       0       0       0
  3123 ;;Total ram usage:        1 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_Lcd_Init
  3130 ;;		_Lcd_Cmd
  3131 ;;		_Lcd_Write_Char
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _Lcd_Port
  3137  05F3                     _Lcd_Port:
  3138                           
  3139                           ;incstack = 0
  3140                           ; Regs used in _Lcd_Port: [wreg]
  3141                           ;Lcd_Port@a stored from wreg
  3142  05F3  00F3               	movwf	Lcd_Port@a
  3143  05F4                     l1484:
  3144                           
  3145                           ;LCD.c: 31:     PORTD = a;
  3146  05F4  0873               	movf	Lcd_Port@a,w
  3147  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3148  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3149  05F7  0088               	movwf	8	;volatile
  3150  05F8                     l191:
  3151  05F8  0008               	return
  3152  05F9                     __end_of_Lcd_Port:
  3153                           
  3154                           	psect	text20
  3155  05E2                     __ptext20:	
  3156 ;; *************** function _I2C_Master_RepeatedStart *****************
  3157 ;; Defined at:
  3158 ;;		line 64 in file "I2C.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    2
  3179 ;; This function calls:
  3180 ;;		_I2C_Master_Wait
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           
  3187                           ;psect for function _I2C_Master_RepeatedStart
  3188  05E2                     _I2C_Master_RepeatedStart:
  3189  05E2                     l1658:	
  3190                           ;incstack = 0
  3191                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3192                           
  3193                           
  3194                           ;I2C.c: 66:     I2C_Master_Wait();
  3195  05E2  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3196  05E7                     l1660:
  3197                           
  3198                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3199  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  3200  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  3201  05E9  1491               	bsf	17,1	;volatile
  3202  05EA                     l159:
  3203  05EA  0008               	return
  3204  05EB                     __end_of_I2C_Master_RepeatedStart:
  3205                           
  3206                           	psect	text21
  3207  0469                     __ptext21:	
  3208 ;; *************** function _I2C_Master_Read *****************
  3209 ;; Defined at:
  3210 ;;		line 94 in file "I2C.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  a               2    3[COMMON] unsigned short 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  temp            2    0[BANK0 ] unsigned short 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  2    3[COMMON] unsigned short 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         2       0       0       0       0
  3225 ;;      Locals:         0       2       0       0       0
  3226 ;;      Temps:          2       0       0       0       0
  3227 ;;      Totals:         4       2       0       0       0
  3228 ;;Total ram usage:        6 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    2
  3231 ;; This function calls:
  3232 ;;		_I2C_Master_Wait
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _I2C_Master_Read
  3240  0469                     _I2C_Master_Read:
  3241  0469                     l1662:	
  3242                           ;incstack = 0
  3243                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3244                           
  3245                           
  3246                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3247  0469  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3248  046E                     l1664:
  3249                           
  3250                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3251  046E  1683               	bsf	3,5	;RP0=1, select bank1
  3252  046F  1303               	bcf	3,6	;RP1=0, select bank1
  3253  0470  1591               	bsf	17,3	;volatile
  3254                           
  3255                           ;I2C.c: 99:     I2C_Master_Wait();
  3256  0471  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3257  0476                     l1666:
  3258                           
  3259                           ;I2C.c: 100:     temp = SSPBUF;
  3260  0476  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0477  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0478  0813               	movf	19,w	;volatile
  3263  0479  00F5               	movwf	??_I2C_Master_Read
  3264  047A  01F6               	clrf	??_I2C_Master_Read+1
  3265  047B  0875               	movf	??_I2C_Master_Read,w
  3266  047C  00DA               	movwf	I2C_Master_Read@temp
  3267  047D  0876               	movf	??_I2C_Master_Read+1,w
  3268  047E  00DB               	movwf	I2C_Master_Read@temp+1
  3269  047F                     l1668:
  3270                           
  3271                           ;I2C.c: 101:     I2C_Master_Wait();
  3272  047F  120A  118A  25B9  120A  118A  	fcall	_I2C_Master_Wait
  3273  0484                     l1670:
  3274                           
  3275                           ;I2C.c: 102:     if(a == 1){
  3276  0484  0373               	decf	I2C_Master_Read@a,w
  3277  0485  0474               	iorwf	I2C_Master_Read@a+1,w
  3278  0486  1D03               	btfss	3,2
  3279  0487  2C89               	goto	u1031
  3280  0488  2C8A               	goto	u1030
  3281  0489                     u1031:
  3282  0489  2C8E               	goto	l168
  3283  048A                     u1030:
  3284  048A                     l1672:
  3285                           
  3286                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3287  048A  1683               	bsf	3,5	;RP0=1, select bank1
  3288  048B  1303               	bcf	3,6	;RP1=0, select bank1
  3289  048C  1291               	bcf	17,5	;volatile
  3290                           
  3291                           ;I2C.c: 104:     }else{
  3292  048D  2C91               	goto	l169
  3293  048E                     l168:
  3294                           
  3295                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3296  048E  1683               	bsf	3,5	;RP0=1, select bank1
  3297  048F  1303               	bcf	3,6	;RP1=0, select bank1
  3298  0490  1691               	bsf	17,5	;volatile
  3299  0491                     l169:	
  3300                           ;I2C.c: 106:     }
  3301                           
  3302                           
  3303                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3304  0491  1611               	bsf	17,4	;volatile
  3305  0492                     l1674:
  3306                           
  3307                           ;I2C.c: 108:     return temp;
  3308  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0493  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0494  085B               	movf	I2C_Master_Read@temp+1,w
  3311  0495  00F4               	movwf	?_I2C_Master_Read+1
  3312  0496  085A               	movf	I2C_Master_Read@temp,w
  3313  0497  00F3               	movwf	?_I2C_Master_Read
  3314  0498                     l170:
  3315  0498  0008               	return
  3316  0499                     __end_of_I2C_Master_Read:
  3317                           
  3318                           	psect	text22
  3319  05B9                     __ptext22:	
  3320 ;; *************** function _I2C_Master_Wait *****************
  3321 ;; Defined at:
  3322 ;;		line 48 in file "I2C.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_I2C_Master_Start
  3347 ;;		_I2C_Master_RepeatedStart
  3348 ;;		_I2C_Master_Stop
  3349 ;;		_I2C_Master_Write
  3350 ;;		_I2C_Master_Read
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _I2C_Master_Wait
  3356  05B9                     _I2C_Master_Wait:
  3357  05B9                     l1486:	
  3358                           ;incstack = 0
  3359                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3360                           
  3361  05B9                     l150:	
  3362                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3363                           
  3364  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3365  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3366  05BB  1914               	btfsc	20,2	;volatile
  3367  05BC  2DBE               	goto	u801
  3368  05BD  2DBF               	goto	u800
  3369  05BE                     u801:
  3370  05BE  2DB9               	goto	l150
  3371  05BF                     u800:
  3372  05BF                     l1488:
  3373  05BF  0811               	movf	17,w	;volatile
  3374  05C0  391F               	andlw	31
  3375  05C1  1D03               	btfss	3,2
  3376  05C2  2DC4               	goto	u811
  3377  05C3  2DC5               	goto	u810
  3378  05C4                     u811:
  3379  05C4  2DB9               	goto	l150
  3380  05C5                     u810:
  3381  05C5                     l153:
  3382  05C5  0008               	return
  3383  05C6                     __end_of_I2C_Master_Wait:
  3384                           
  3385                           	psect	text23
  3386  059A                     __ptext23:	
  3387 ;; *************** function _ISR *****************
  3388 ;; Defined at:
  3389 ;;		line 90 in file "main_prueba3_mini2.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0
  3405 ;;      Temps:          3       0       0       0       0
  3406 ;;      Totals:         3       0       0       0       0
  3407 ;;Total ram usage:        3 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		Interrupt level 1
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _ISR
  3418  059A                     _ISR:
  3419  059A                     i1l1426:
  3420                           
  3421                           ;main_prueba3_mini2.c: 91:     if(PIR1bits.RCIF == 1){
  3422  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3423  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3424  059C  1E8C               	btfss	12,5	;volatile
  3425  059D  2D9F               	goto	u79_21
  3426  059E  2DA0               	goto	u79_20
  3427  059F                     u79_21:
  3428  059F  2DA5               	goto	i1l95
  3429  05A0                     u79_20:
  3430  05A0                     i1l1428:
  3431                           
  3432                           ;main_prueba3_mini2.c: 92:         data_recive = RCREG;
  3433  05A0  081A               	movf	26,w	;volatile
  3434  05A1  00F0               	movwf	??_ISR
  3435  05A2  0870               	movf	??_ISR,w
  3436  05A3  00D4               	movwf	_data_recive
  3437  05A4                     i1l1438:	
  3438                           ;main_prueba3_mini2.c: 93:         if (data_recive == 'P11'){
  3439                           
  3440                           
  3441                           ;main_prueba3_mini2.c: 105:         data_recive = 0;
  3442  05A4  01D4               	clrf	_data_recive
  3443  05A5                     i1l95:
  3444  05A5  0872               	movf	??_ISR+2,w
  3445  05A6  008A               	movwf	10
  3446  05A7  0E71               	swapf	??_ISR+1,w
  3447  05A8  0083               	movwf	3
  3448  05A9  0EFE               	swapf	btemp,f
  3449  05AA  0E7E               	swapf	btemp,w
  3450  05AB  0009               	retfie
  3451  05AC                     __end_of_ISR:
  3452  007E                     btemp	set	126	;btemp
  3453  007E                     wtemp0	set	126
  3454                           
  3455                           	psect	intentry
  3456  0004                     __pintentry:	
  3457                           ;incstack = 0
  3458                           ; Regs used in _ISR: [wreg+status,2]
  3459                           
  3460  0004                     interrupt_function:
  3461  007E                     saved_w	set	btemp
  3462  0004  00FE               	movwf	btemp
  3463  0005  0E03               	swapf	3,w
  3464  0006  00F1               	movwf	??_ISR+1
  3465  0007  080A               	movf	10,w
  3466  0008  00F2               	movwf	??_ISR+2
  3467  0009  120A  118A  2D9A   	ljmp	_ISR
  3468                           
  3469                           	psect	config
  3470                           
  3471                           ;Config register CONFIG1 @ 0x2007
  3472                           ;	Oscillator Selection bits
  3473                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3474                           ;	Watchdog Timer Enable bit
  3475                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3476                           ;	Power-up Timer Enable bit
  3477                           ;	PWRTE = OFF, PWRT disabled
  3478                           ;	RE3/MCLR pin function select bit
  3479                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3480                           ;	Code Protection bit
  3481                           ;	CP = OFF, Program memory code protection is disabled
  3482                           ;	Data Code Protection bit
  3483                           ;	CPD = OFF, Data memory code protection is disabled
  3484                           ;	Brown Out Reset Selection bits
  3485                           ;	BOREN = OFF, BOR disabled
  3486                           ;	Internal External Switchover bit
  3487                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3488                           ;	Fail-Safe Clock Monitor Enabled bit
  3489                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3490                           ;	Low Voltage Programming Enable bit
  3491                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3492                           ;	In-Circuit Debugger Mode bit
  3493                           ;	DEBUG = 0x1, unprogrammed default
  3494  2007                     	org	8199
  3495  2007  20D4               	dw	8404
  3496                           
  3497                           ;Config register CONFIG2 @ 0x2008
  3498                           ;	Brown-out Reset Selection bit
  3499                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3500                           ;	Flash Program Memory Self Write Enable bits
  3501                           ;	WRT = OFF, Write protection off
  3502  2008                     	org	8200
  3503  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> Date(BANK0[17]), Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7533
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    3919
                                              4 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1338
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     264
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 21:58:54 2021

                                _i 0059                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 005B  
                               fsr 0004                        _RTC_display 002C  
                              l112 019E                                l106 0541  
                              l203 04BE                                l115 03DE  
                              l212 04E3                                l150 05B9  
                              l206 0571                                l118 0505  
                              l153 05C5                                l170 0498  
                              l162 05D8                                l147 0468  
                              l156 05E1                                l165 05CF  
                              l159 05EA                                l191 05F8  
                              l168 048E                                l336 0586  
                              l169 0491                                l194 055B  
                              l346 0329                                l188 042E  
                              l197 05B8                                l463 02C1  
                              l476 0384                                _GIE 005F  
                              u600 026B                                u601 026A  
                              u610 027C                                u450 0578  
                              u611 027B                                u451 0577  
                              u460 0585                                _ISR 059A  
                              u461 0584                                u630 028E  
                              u631 028D                                u800 05BF  
                              u801 05BE                                u625 0280  
                              u810 05C5                                u650 029F  
                              u811 05C4                                u651 029E  
                              u900 04A1                                u820 02D4  
                              u901 04A0                                u645 028F  
                              u821 02D3                                u910 04B3  
                              u670 02B3                                u590 0260  
                              u911 04B2                                u671 02B2  
                              u655 029B                                u591 025F  
                              u920 04E3                                u680 02B8  
                              u840 02E8                                u921 04E2  
                              u681 02B7                                u665 02A7  
                              u841 02E7                                u930 0446  
                              u835 02D9                                u940 0331  
                              u860 0303                                u941 0330  
                              u861 0302                                u950 033C  
                              u951 033B                                u855 02EA  
                              u935 0441                                u960 0347  
                              u880 0321                                u961 0346  
                              u881 0320                                u865 02FF  
                              u875 0313                                u980 0359  
                              u981 0358                                u990 0363  
                              u991 0362                                u975 034B  
                              u895 0533                                u995 035F  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 005B                               ?_ISR 0070  
                             l1200 057C                               l1202 057E  
                             l1300 027F                               l1204 0585  
                             l1310 02A5                               l1302 0286  
                             l1320 02BD                               l1312 02A6  
                             l1304 028A                               l1314 02AD  
                             l1306 028E                               l1500 055D  
                             l1308 029F                               l1316 02B3  
                             l1502 0560                               l1318 02B8  
                             l1510 02C2                               l1504 0566  
                             l1280 0259                               l1600 0351  
                             l1520 02F1                               l1512 02D4  
                             l1506 0569                               l1290 026B  
                             l1282 025C                               l1610 0370  
                             l1602 0355                               l1194 0573  
                             l1522 0303                               l1514 02D7  
                             l1530 0321                               l1508 056E  
                             l1292 0270                               l1284 0260  
                             l1604 0359                               l1612 0376  
                             l1196 0574                               l1540 05CB  
                             l1524 0311                               l1516 02E4  
                             l1620 04E4                               l1700 01CC  
                             l1550 049C                               l1294 0274  
                             l1286 0265                               l1614 037B  
                             l1606 0363                               l1198 0578  
                             l1534 05D9                               l1542 05D0  
                             l1526 0312                               l1518 02E8  
                             l1630 04F0                               l1622 04EB  
                             l1710 0207                               l1702 01D1  
                             l1560 04B8                               l1552 04A1  
                             l1296 0276                               l1288 0267  
                             l1616 0380                               l1608 0369  
                             l1536 05DE                               l1544 05D5  
                             l1528 031B                               l1640 04F7  
                             l1632 04F1                               l1624 04ED  
                             l1720 0241                               l1712 0210  
                             l1704 01DA                               l1490 0543  
                             l1650 03FF                               l1554 04A6  
                             l1562 04C2                               l1298 027C  
                             l1546 0527                               l1538 05C6  
                             l1570 042F                               l1642 04F8  
                             l1634 04F4                               l1626 04EE  
                             l1722 0246                               l1714 021F  
                             l1706 01E9                               l1660 05E7  
                             l1484 05F4                               l1492 0546  
                             l1652 0405                               l1644 03DF  
                             l1556 04AD                               l1564 04C5  
                             l1580 0467                               l1572 0433  
                             l1636 04F5                               l1628 04EF  
                             l1716 022E                               l1708 01F8  
                             l1486 05B9                               l1670 0484  
                             l1662 0469                               l1494 054C  
                             l1654 05AC                               l1646 03E5  
                             l1558 04B3                               l1566 04D0  
                             l1590 0338                               l1582 032A  
                             l1574 0436                               l1638 04F6  
                             l1718 023C                               l1488 05BF  
                             l1672 048A                               l1664 046E  
                             l1496 054F                               l1648 03EF  
                             l1568 04D8                               l1592 033C  
                             l1584 032D                               l1680 018A  
                             l1656 0385                               l1576 0465  
                             l1674 0492                               l1666 0476  
                             l1658 05E2                               l1498 0558  
                             l1594 0341                               l1586 0331  
                             l1682 0190                               l1578 0466  
                             l1690 01AC                               l1668 047F  
                             l1596 0347                               l1588 0336  
                             l1692 01B1                               l1684 019F  
                             l1598 034A                               l1678 002C  
                             l1694 01B6                               l1686 01A4  
                             l1696 01BB                               l1688 01A7  
                             l1698 01C4                               u1010 0376  
                             u1011 0375                               u1020 037B  
                             u1021 037A                               u1005 036A  
                             u1030 048A                               u1031 0489  
                             u1047 024E                               u1057 056B  
                             u1067 03EB                               u1077 03FB  
                             u1087 040B                               u1097 0553  
                             _PEIE 005E                               i1l95 05A5  
                             _Date 0020                               _Time 0031  
                ?_Lcd_Write_String 0070   __end_of_I2C_Master_RepeatedStart 05EB  
                             _cont 0055                               _main 019F  
                             _hour 0078                               _year 0056  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0076                    __end_of_Lcd_Cmd 055C  
                ___bmul@multiplier 0076              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 0067  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 02C2                    __end_of___awmod 0385  
                            _ANSEL 0188                    __end_of___lldiv 032A  
                  ___awdiv@divisor 0073                    ___awdiv@counter 005A  
                            _RCREG 001A                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
          __size_of_Lcd_Set_Cursor 0026                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              u79_20 05A0  
                            u79_21 059F                              _m_day 0058  
                            _month 0057                              _setup 04E4  
                            pclath 000A                       _Write_to_RTC 0385  
                            status 0003                              wtemp0 007E  
                 __end_of_Lcd_Init 042F                   __end_of_Lcd_Port 05F9  
                  __initialization 000F                       __end_of_main 0259  
                           ??_main 006B                 __size_of_Lcd_Clear 000D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
                 ___awdiv@dividend 0075                             ?_setup 0070  
                           _ANSELH 0189                             i1l1426 059A  
                           i1l1428 05A0                             i1l1438 05A4  
                        ??_Lcd_Cmd 0074            __size_of_Lcd_Write_Char 0016  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 05E2  
                           ___bmul 0572                          ??___awdiv 0077  
                        ??___awmod 0077                          ??___lldiv 0073  
                 ___awdiv@quotient 005C                             _minute 0079  
                           _second 007A                    ___awmod@divisor 0073  
                  ___awmod@counter 005A                             saved_w 007E  
                  Lcd_Set_Cursor@a 005B                    Lcd_Set_Cursor@b 0077  
          __end_of__initialization 0028                  __end_of_Lcd_Clear 05B9  
              ___bmul@multiplicand 0073                     __pcstackCOMMON 0070  
                     __pidataBANK0 0506                      __end_of_setup 0506  
                     ?_RTC_display 0070                     _Lcd_Set_Cursor 0499  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 0078                         __pbssBANK0 0040  
                       _data_total 0040                         __pmaintext 019F  
                          ?___bmul 0073                         __pintentry 0004  
        __size_of_Lcd_Write_String 0025             __end_of_Lcd_Set_Cursor 04BF  
          __size_of_bcd_to_decimal 001C                         ??_Lcd_Init 005A  
                       ??_Lcd_Port 0073                            _SSPCON2 0091  
                          _SSPSTAT 0094                     _Lcd_Write_Char 055C  
                          _Lcd_Cmd 0542                    __size_of___bmul 0015  
                          ___awdiv 0259                            ___awmod 032A  
                          ___lldiv 02C2                    ?_Lcd_Set_Cursor 0077  
                          __ptext1 04E4                            __ptext2 042F  
                          __ptext3 02C2                            __ptext4 0385  
                          __ptext5 05C6                            __ptext6 05D0  
                          __ptext7 05D9                            __ptext8 002C  
                          __ptext9 0526                       __size_of_ISR 0012  
                 ___awmod@dividend 0075           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 05EC  
           __end_of_Lcd_Write_Char 0572               end_of_initialization 0028  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 005A  
                  ___lldiv@counter 0066                   I2C_Master_Init@c 0067  
                 I2C_Master_Read@a 0073                          Lcd_Port@a 0073  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009               __size_of_RTC_display 0173  
                        _TRISCbits 0087                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 005C                  Lcd_Write_String@i 005A  
                        _Lcd_Clear 05AC                     __end_of___bmul 0587  
                 _Lcd_Write_String 04BF                start_initialization 000F  
                   _bcd_to_decimal 0526                        __end_of_ISR 05AC  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                       ?_Lcd_Clear 0070                           ??___bmul 0074  
                       init_fetch0 0587                        __pdataBANK0 0020  
                  Lcd_Write_Char@a 0075             __end_of_bcd_to_decimal 0542  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 005A                        _data_recive 0054  
                    ?_Write_to_RTC 0070                           ?_Lcd_Cmd 0070  
                 _I2C_Master_Start 05D9                   _I2C_Master_Write 05C6  
                 ??_Lcd_Set_Cursor 005A                           ?___awdiv 0073  
                         ?___awmod 0073                           ?___lldiv 005A  
                  ?_bcd_to_decimal 0070               bcd_to_decimal@number 0077  
                   ??_Write_to_RTC 0075                     __size_of_setup 0022  
                interrupt_function 0004                          clear_ram0 05EB  
                         Lcd_Cmd@a 0076                           _PIR1bits 000C  
                      ??_Lcd_Clear 0077                   ??_Lcd_Write_Char 0074  
                         _Lcd_Init 03DF                           _Lcd_Port 05F3  
              I2C_Master_Read@temp 005A           __end_of_Lcd_Write_String 04E4  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                    ??_RTC_display 005E                    _I2C_Master_Init 042F  
                  _I2C_Master_Read 0469                    _I2C_Master_Wait 05B9  
                  _I2C_Master_Stop 05D0                           __ptext10 0572  
                         __ptext11 032A                           __ptext20 05E2  
                         __ptext12 0259                           __ptext21 0469  
                         __ptext13 04BF                           __ptext22 05B9  
                         __ptext14 055C                           __ptext23 059A  
                         __ptext15 0499                           __ptext16 03DF  
                         __ptext17 05AC                           __ptext18 0542  
                         __ptext19 05F3                      __size_of_main 00BA  
             __end_of_Write_to_RTC 03DF           __end_of_I2C_Master_Start 05E2  
         __end_of_I2C_Master_Write 05D0                           init_ram0 058B  
              __end_of_RTC_display 019F                           intlevel1 0000  
                 ___lldiv@dividend 005E                   ??_bcd_to_decimal 005A  
          __end_of_I2C_Master_Init 0469            __end_of_I2C_Master_Read 0499  
          __end_of_I2C_Master_Wait 05C6            __end_of_I2C_Master_Stop 05D9  
               Lcd_Set_Cursor@temp 005C                   ___lldiv@quotient 0062  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
