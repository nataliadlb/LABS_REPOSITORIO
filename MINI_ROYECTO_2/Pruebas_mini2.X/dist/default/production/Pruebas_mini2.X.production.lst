

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 01 09:20:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0009                     _PORTE	set	9
   284  0007                     _PORTC	set	7
   285  0006                     _PORTB	set	6
   286  0005                     _PORTA	set	5
   287  0008                     _PORTD	set	8
   288  0006                     _PORTBbits	set	6
   289  000B                     _INTCONbits	set	11
   290  008F                     _OSCCONbits	set	143
   291  0096                     _IOCB	set	150
   292  0089                     _TRISE	set	137
   293  0088                     _TRISD	set	136
   294  0087                     _TRISC	set	135
   295  0086                     _TRISB	set	134
   296  0085                     _TRISA	set	133
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299                           
   300                           	psect	cinit
   301  000F                     start_initialization:	
   302                           ; #config settings
   303                           
   304  000F                     __initialization:
   305                           
   306                           ; Clear objects allocated to COMMON
   307  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   308  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   309  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   310  0012                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0012                     __end_of__initialization:
   314  0012  0183               	clrf	3
   315  0013  120A  118A  2867   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  0070                     __pbssCOMMON:
   319  0070                     _debouncing2:
   320  0070                     	ds	1
   321  0071                     _debouncing1:
   322  0071                     	ds	1
   323  0072                     _contador:
   324  0072                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0073                     __pcstackCOMMON:
   328  0073                     ?_setup:
   329  0073                     ?_Config_INTERRUPT:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0073                     ?_ISR:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0073                     ??_ISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0073                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0073                     	ds	3
   344  0076                     ??_setup:
   345  0076                     ??_Config_INTERRUPT:	
   346                           ; 1 bytes @ 0x3
   347                           
   348  0076                     ??_main:	
   349                           ; 1 bytes @ 0x3
   350                           
   351                           
   352                           	psect	maintext
   353  0067                     __pmaintext:	
   354                           ; 1 bytes @ 0x3
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 89 in file "main_pruebas_mini2.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels required when called:    3
   380 ;; This function calls:
   381 ;;		_setup
   382 ;; This function is called by:
   383 ;;		Startup code after reset
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           
   388                           ;psect for function _main
   389  0067                     _main:
   390  0067                     l726:	
   391                           ;incstack = 0
   392                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   393                           
   394                           
   395                           ;main_pruebas_mini2.c: 90:     contador = 0;
   396  0067  01F2               	clrf	_contador
   397  0068                     l728:
   398                           
   399                           ;main_pruebas_mini2.c: 91:     setup();
   400  0068  120A  118A  204E  120A  118A  	fcall	_setup
   401  006D                     l55:	
   402                           ;main_pruebas_mini2.c: 96:     while (1) {
   403                           
   404  006D                     l56:	
   405                           ;main_pruebas_mini2.c: 97:     }
   406                           
   407  006D  286D               	goto	l55
   408  006E  120A  118A  280C   	ljmp	start
   409  0071                     __end_of_main:
   410                           
   411                           	psect	text1
   412  004E                     __ptext1:	
   413 ;; *************** function _setup *****************
   414 ;; Defined at:
   415 ;;		line 105 in file "main_pruebas_mini2.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; Hardware stack levels required when called:    2
   436 ;; This function calls:
   437 ;;		_Config_INTERRUPT
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _setup
   445  004E                     _setup:
   446  004E                     l676:	
   447                           ;incstack = 0
   448                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   449                           
   450                           
   451                           ;main_pruebas_mini2.c: 107:     ANSEL = 0;
   452  004E  1683               	bsf	3,5	;RP0=1, select bank3
   453  004F  1703               	bsf	3,6	;RP1=1, select bank3
   454  0050  0188               	clrf	8	;volatile
   455                           
   456                           ;main_pruebas_mini2.c: 108:     ANSELH = 0;
   457  0051  0189               	clrf	9	;volatile
   458                           
   459                           ;main_pruebas_mini2.c: 110:     TRISA = 0;
   460  0052  1683               	bsf	3,5	;RP0=1, select bank1
   461  0053  1303               	bcf	3,6	;RP1=0, select bank1
   462  0054  0185               	clrf	5	;volatile
   463  0055                     l678:
   464                           
   465                           ;main_pruebas_mini2.c: 111:     TRISB = 0b00000011;
   466  0055  3003               	movlw	3
   467  0056  0086               	movwf	6	;volatile
   468  0057                     l680:
   469                           
   470                           ;main_pruebas_mini2.c: 112:     TRISC = 0;
   471  0057  0187               	clrf	7	;volatile
   472  0058                     l682:
   473                           
   474                           ;main_pruebas_mini2.c: 113:     TRISD = 0;
   475  0058  0188               	clrf	8	;volatile
   476  0059                     l684:
   477                           
   478                           ;main_pruebas_mini2.c: 114:     TRISE = 0;
   479  0059  0189               	clrf	9	;volatile
   480  005A                     l686:
   481                           
   482                           ;main_pruebas_mini2.c: 116:     PORTA = 0;
   483  005A  1283               	bcf	3,5	;RP0=0, select bank0
   484  005B  1303               	bcf	3,6	;RP1=0, select bank0
   485  005C  0185               	clrf	5	;volatile
   486  005D                     l688:
   487                           
   488                           ;main_pruebas_mini2.c: 117:     PORTB = 0;
   489  005D  0186               	clrf	6	;volatile
   490  005E                     l690:
   491                           
   492                           ;main_pruebas_mini2.c: 118:     PORTC = 0;
   493  005E  0187               	clrf	7	;volatile
   494  005F                     l692:
   495                           
   496                           ;main_pruebas_mini2.c: 119:     PORTD = 0;
   497  005F  0188               	clrf	8	;volatile
   498  0060                     l694:
   499                           
   500                           ;main_pruebas_mini2.c: 120:     PORTE = 0;
   501  0060  0189               	clrf	9	;volatile
   502  0061                     l696:
   503                           
   504                           ;main_pruebas_mini2.c: 122:     Config_INTERRUPT();
   505  0061  120A  118A  2071  120A  118A  	fcall	_Config_INTERRUPT
   506  0066                     l61:
   507  0066  0008               	return
   508  0067                     __end_of_setup:
   509                           
   510                           	psect	text2
   511  0071                     __ptext2:	
   512 ;; *************** function _Config_INTERRUPT *****************
   513 ;; Defined at:
   514 ;;		line 128 in file "main_pruebas_mini2.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_setup
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _Config_INTERRUPT
   544  0071                     _Config_INTERRUPT:
   545  0071                     l672:	
   546                           ;incstack = 0
   547                           ; Regs used in _Config_INTERRUPT: [wreg]
   548                           
   549                           
   550                           ;main_pruebas_mini2.c: 129:     INTCONbits.GIE = 1;
   551  0071  178B               	bsf	11,7	;volatile
   552                           
   553                           ;main_pruebas_mini2.c: 130:     INTCONbits.RBIE = 1;
   554  0072  158B               	bsf	11,3	;volatile
   555                           
   556                           ;main_pruebas_mini2.c: 131:     INTCONbits.RBIF = 0;
   557  0073  100B               	bcf	11,0	;volatile
   558  0074                     l674:
   559                           
   560                           ;main_pruebas_mini2.c: 132:     IOCB = 0b00000011;
   561  0074  3003               	movlw	3
   562  0075  1683               	bsf	3,5	;RP0=1, select bank1
   563  0076  1303               	bcf	3,6	;RP1=0, select bank1
   564  0077  0096               	movwf	22	;volatile
   565  0078                     l64:
   566  0078  0008               	return
   567  0079                     __end_of_Config_INTERRUPT:
   568                           
   569                           	psect	text3
   570  0016                     __ptext3:	
   571 ;; *************** function _ISR *****************
   572 ;; Defined at:
   573 ;;		line 61 in file "main_pruebas_mini2.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          3       0       0       0       0
   590 ;;      Totals:         3       0       0       0       0
   591 ;;Total ram usage:        3 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		Interrupt level 1
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _ISR
   602  0016                     _ISR:
   603  0016                     i1l698:
   604                           
   605                           ;main_pruebas_mini2.c: 62:     if (INTCONbits.RBIF == 1){
   606  0016  1C0B               	btfss	11,0	;volatile
   607  0017  2819               	goto	u1_21
   608  0018  281A               	goto	u1_20
   609  0019                     u1_21:
   610  0019  2847               	goto	i1l50
   611  001A                     u1_20:
   612  001A                     i1l700:
   613                           
   614                           ;main_pruebas_mini2.c: 64:             if (PORTBbits.RB0 == 1){
   615  001A  1283               	bcf	3,5	;RP0=0, select bank0
   616  001B  1303               	bcf	3,6	;RP1=0, select bank0
   617  001C  1C06               	btfss	6,0	;volatile
   618  001D  281F               	goto	u2_21
   619  001E  2820               	goto	u2_20
   620  001F                     u2_21:
   621  001F  2822               	goto	i1l46
   622  0020                     u2_20:
   623  0020                     i1l702:
   624                           
   625                           ;main_pruebas_mini2.c: 65:                 debouncing1 = 1;
   626  0020  01F1               	clrf	_debouncing1
   627  0021  0AF1               	incf	_debouncing1,f
   628  0022                     i1l46:	
   629                           ;main_pruebas_mini2.c: 67:             }
   630                           
   631                           
   632                           ;main_pruebas_mini2.c: 68:             if (PORTBbits.RB1 == 1){
   633  0022  1C86               	btfss	6,1	;volatile
   634  0023  2825               	goto	u3_21
   635  0024  2826               	goto	u3_20
   636  0025                     u3_21:
   637  0025  2828               	goto	i1l47
   638  0026                     u3_20:
   639  0026                     i1l704:
   640                           
   641                           ;main_pruebas_mini2.c: 69:                 debouncing2 = 1;
   642  0026  01F0               	clrf	_debouncing2
   643  0027  0AF0               	incf	_debouncing2,f
   644  0028                     i1l47:	
   645                           ;main_pruebas_mini2.c: 71:             }
   646                           
   647                           
   648                           ;main_pruebas_mini2.c: 72:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
   649  0028  1806               	btfsc	6,0	;volatile
   650  0029  282B               	goto	u4_21
   651  002A  282C               	goto	u4_20
   652  002B                     u4_21:
   653  002B  2838               	goto	i1l714
   654  002C                     u4_20:
   655  002C                     i1l706:
   656  002C  0371               	decf	_debouncing1,w
   657  002D  1D03               	btfss	3,2
   658  002E  2830               	goto	u5_21
   659  002F  2831               	goto	u5_20
   660  0030                     u5_21:
   661  0030  2838               	goto	i1l714
   662  0031                     u5_20:
   663  0031                     i1l708:
   664                           
   665                           ;main_pruebas_mini2.c: 73:                 contador++;
   666  0031  3001               	movlw	1
   667  0032  00F3               	movwf	??_ISR
   668  0033  0873               	movf	??_ISR,w
   669  0034  07F2               	addwf	_contador,f
   670  0035                     i1l710:
   671                           
   672                           ;main_pruebas_mini2.c: 74:                 PORTD = contador;
   673  0035  0872               	movf	_contador,w
   674  0036  0088               	movwf	8	;volatile
   675  0037                     i1l712:
   676                           
   677                           ;main_pruebas_mini2.c: 75:                 debouncing1 = 0;
   678  0037  01F1               	clrf	_debouncing1
   679  0038                     i1l714:
   680                           
   681                           ;main_pruebas_mini2.c: 77:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
   682  0038  1886               	btfsc	6,1	;volatile
   683  0039  283B               	goto	u6_21
   684  003A  283C               	goto	u6_20
   685  003B                     u6_21:
   686  003B  2846               	goto	i1l724
   687  003C                     u6_20:
   688  003C                     i1l716:
   689  003C  0370               	decf	_debouncing2,w
   690  003D  1D03               	btfss	3,2
   691  003E  2840               	goto	u7_21
   692  003F  2841               	goto	u7_20
   693  0040                     u7_21:
   694  0040  2846               	goto	i1l724
   695  0041                     u7_20:
   696  0041                     i1l718:
   697                           
   698                           ;main_pruebas_mini2.c: 78:                 contador--;
   699  0041  3001               	movlw	1
   700  0042  02F2               	subwf	_contador,f
   701  0043                     i1l720:
   702                           
   703                           ;main_pruebas_mini2.c: 79:                 PORTD = contador;
   704  0043  0872               	movf	_contador,w
   705  0044  0088               	movwf	8	;volatile
   706  0045                     i1l722:
   707                           
   708                           ;main_pruebas_mini2.c: 80:                 debouncing2 = 0;
   709  0045  01F0               	clrf	_debouncing2
   710  0046                     i1l724:
   711                           
   712                           ;main_pruebas_mini2.c: 82:             INTCONbits.RBIF = 0;
   713  0046  100B               	bcf	11,0	;volatile
   714  0047                     i1l50:
   715  0047  0875               	movf	??_ISR+2,w
   716  0048  008A               	movwf	10
   717  0049  0E74               	swapf	??_ISR+1,w
   718  004A  0083               	movwf	3
   719  004B  0EFE               	swapf	btemp,f
   720  004C  0E7E               	swapf	btemp,w
   721  004D  0009               	retfie
   722  004E                     __end_of_ISR:
   723  007E                     btemp	set	126	;btemp
   724  007E                     wtemp0	set	126
   725                           
   726                           	psect	intentry
   727  0004                     __pintentry:	
   728                           ;incstack = 0
   729                           ; Regs used in _ISR: [wreg+status,2+status,0]
   730                           
   731  0004                     interrupt_function:
   732  007E                     saved_w	set	btemp
   733  0004  00FE               	movwf	btemp
   734  0005  0E03               	swapf	3,w
   735  0006  00F4               	movwf	??_ISR+1
   736  0007  080A               	movf	10,w
   737  0008  00F5               	movwf	??_ISR+2
   738  0009  120A  118A  2816   	ljmp	_ISR
   739                           
   740                           	psect	config
   741                           
   742                           ;Config register CONFIG1 @ 0x2007
   743                           ;	Oscillator Selection bits
   744                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   745                           ;	Watchdog Timer Enable bit
   746                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   747                           ;	Power-up Timer Enable bit
   748                           ;	PWRTE = OFF, PWRT disabled
   749                           ;	RE3/MCLR pin function select bit
   750                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   751                           ;	Code Protection bit
   752                           ;	CP = OFF, Program memory code protection is disabled
   753                           ;	Data Code Protection bit
   754                           ;	CPD = OFF, Data memory code protection is disabled
   755                           ;	Brown Out Reset Selection bits
   756                           ;	BOREN = OFF, BOR disabled
   757                           ;	Internal External Switchover bit
   758                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   759                           ;	Fail-Safe Clock Monitor Enabled bit
   760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   761                           ;	Low Voltage Programming Enable bit
   762                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   763                           ;	In-Circuit Debugger Mode bit
   764                           ;	DEBUG = 0x1, unprogrammed default
   765  2007                     	org	8199
   766  2007  20D4               	dw	8404
   767                           
   768                           ;Config register CONFIG2 @ 0x2008
   769                           ;	Brown-out Reset Selection bit
   770                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   771                           ;	Flash Program Memory Self Write Enable bits
   772                           ;	WRT = OFF, Write protection off
   773  2008                     	org	8200
   774  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                   _Config_INTERRUPT
 ---------------------------------------------------------------------------------
 (2) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _Config_INTERRUPT

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 01 09:20:21 2021

                       l61 0066                         l55 006D                         l64 0078  
                       l56 006D                        l726 0067                        l672 0071  
                      l680 0057                        l728 0068                        l674 0074  
                      l690 005E                        l682 0058                        l692 005F  
                      l684 0059                        l676 004E                        l694 0060  
                      l686 005A                        l678 0055                        l696 0061  
                      l688 005D                        _ISR 0016                       ?_ISR 0073  
                     _IOCB 0096                       i1l50 0047                       i1l46 0022  
                     i1l47 0028                       u1_20 001A                       u1_21 0019  
                     u2_20 0020                       u2_21 001F                       u3_20 0026  
                     u3_21 0025                       u4_20 002C                       u4_21 002B  
                     u5_20 0031                       u5_21 0030                       u6_20 003C  
                     u6_21 003B                       u7_20 0041                       u7_21 0040  
                     _main 0067                       btemp 007E   __end_of_Config_INTERRUPT 0079  
                     start 000C                      ??_ISR 0073                      ?_main 0073  
                    _ANSEL 0188                      i1l700 001A                      i1l710 0035  
                    i1l702 0020                      i1l720 0043                      i1l712 0037  
                    i1l704 0026                      i1l722 0045                      i1l706 002C  
                    i1l714 0038                      i1l716 003C                      i1l724 0046  
                    i1l708 0031                      i1l718 0041                      i1l698 0016  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _setup 004E                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 0071                     ??_main 0076                     ?_setup 0073  
                   _ANSELH 0189                     saved_w 007E    __end_of__initialization 0012  
           __pcstackCOMMON 0073              __end_of_setup 0067                    ??_setup 0076  
        ?_Config_INTERRUPT 0073                 __pmaintext 0067         ??_Config_INTERRUPT 0076  
               __pintentry 0004                    __ptext1 004E                    __ptext2 0071  
                  __ptext3 0016               __size_of_ISR 0038       end_of_initialization 0012  
                _PORTBbits 0006        start_initialization 000F                __end_of_ISR 004E  
__size_of_Config_INTERRUPT 0008                __pbssCOMMON 0070                  ___latbits 0002  
              _debouncing1 0071                _debouncing2 0070             __size_of_setup 0019  
        interrupt_function 0004           _Config_INTERRUPT 0071                   _contador 0072  
            __size_of_main 000A                 _INTCONbits 000B                   intlevel1 0000  
               _OSCCONbits 008F  
